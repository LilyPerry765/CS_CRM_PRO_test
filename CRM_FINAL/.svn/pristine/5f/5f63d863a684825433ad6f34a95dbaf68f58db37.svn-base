//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace CRMConvertApplication.CRMWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CRMWebServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[][]))]
    public partial class CRMWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SaveFailure117OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFailure117KermanshahOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFailureRequestStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCabinetAccuracyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFailure117fromHelpDeskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveADSLChangeServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmADSLChangeServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveADSLSaleTrafficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmADSLSaleTrafficOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRequestPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PaidRequestPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateBillIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePaymentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADSLPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADSLInstalmentforBillingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmADSLInstalmentforBillingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAttrsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPAPInstallRequestCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPAPDischargeRequestCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPAPExchangeRequestCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CRMWebService() {
            this.Url = global::CRMConvertApplication.Properties.Settings.Default.CRMConvertApplication_CRMWebService_CRMWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveFailure117CompletedEventHandler SaveFailure117Completed;
        
        /// <remarks/>
        public event SaveFailure117KermanshahCompletedEventHandler SaveFailure117KermanshahCompleted;
        
        /// <remarks/>
        public event GetFailureRequestStateCompletedEventHandler GetFailureRequestStateCompleted;
        
        /// <remarks/>
        public event CheckCabinetAccuracyCompletedEventHandler CheckCabinetAccuracyCompleted;
        
        /// <remarks/>
        public event SaveFailure117fromHelpDeskCompletedEventHandler SaveFailure117fromHelpDeskCompleted;
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event SaveADSLChangeServiceCompletedEventHandler SaveADSLChangeServiceCompleted;
        
        /// <remarks/>
        public event ConfirmADSLChangeServiceCompletedEventHandler ConfirmADSLChangeServiceCompleted;
        
        /// <remarks/>
        public event SaveADSLSaleTrafficeCompletedEventHandler SaveADSLSaleTrafficeCompleted;
        
        /// <remarks/>
        public event ConfirmADSLSaleTrafficCompletedEventHandler ConfirmADSLSaleTrafficCompleted;
        
        /// <remarks/>
        public event SaveRequestPaymentCompletedEventHandler SaveRequestPaymentCompleted;
        
        /// <remarks/>
        public event PaidRequestPaymentCompletedEventHandler PaidRequestPaymentCompleted;
        
        /// <remarks/>
        public event GenerateBillIDCompletedEventHandler GenerateBillIDCompleted;
        
        /// <remarks/>
        public event GeneratePaymentIDCompletedEventHandler GeneratePaymentIDCompleted;
        
        /// <remarks/>
        public event GetADSLPaymentCompletedEventHandler GetADSLPaymentCompleted;
        
        /// <remarks/>
        public event GetADSLInstalmentforBillingCompletedEventHandler GetADSLInstalmentforBillingCompleted;
        
        /// <remarks/>
        public event ConfirmADSLInstalmentforBillingCompletedEventHandler ConfirmADSLInstalmentforBillingCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event changeDepositCompletedEventHandler changeDepositCompleted;
        
        /// <remarks/>
        public event UpdateUserAttrsCompletedEventHandler UpdateUserAttrsCompleted;
        
        /// <remarks/>
        public event GetPAPInstallRequestCountCompletedEventHandler GetPAPInstallRequestCountCompleted;
        
        /// <remarks/>
        public event GetPAPDischargeRequestCountCompletedEventHandler GetPAPDischargeRequestCountCompleted;
        
        /// <remarks/>
        public event GetPAPExchangeRequestCountCompletedEventHandler GetPAPExchangeRequestCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFailure117", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveFailure117(long telephoneNo, long callingNo, int centercode, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] recordeSound, out bool result, out bool isConfirmed) {
            object[] results = this.Invoke("SaveFailure117", new object[] {
                        telephoneNo,
                        callingNo,
                        centercode,
                        recordeSound});
            result = ((bool)(results[1]));
            isConfirmed = ((bool)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFailure117Async(long telephoneNo, long callingNo, int centercode, byte[] recordeSound) {
            this.SaveFailure117Async(telephoneNo, callingNo, centercode, recordeSound, null);
        }
        
        /// <remarks/>
        public void SaveFailure117Async(long telephoneNo, long callingNo, int centercode, byte[] recordeSound, object userState) {
            if ((this.SaveFailure117OperationCompleted == null)) {
                this.SaveFailure117OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFailure117OperationCompleted);
            }
            this.InvokeAsync("SaveFailure117", new object[] {
                        telephoneNo,
                        callingNo,
                        centercode,
                        recordeSound}, this.SaveFailure117OperationCompleted, userState);
        }
        
        private void OnSaveFailure117OperationCompleted(object arg) {
            if ((this.SaveFailure117Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFailure117Completed(this, new SaveFailure117CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFailure117Kermanshah", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveFailure117Kermanshah(long telephoneNo, long callingNo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] recordeSound, out bool result, out bool isConfirmed, out bool isDischarge, out bool isTechnicalFailed, out bool isUnkown) {
            object[] results = this.Invoke("SaveFailure117Kermanshah", new object[] {
                        telephoneNo,
                        callingNo,
                        recordeSound});
            result = ((bool)(results[1]));
            isConfirmed = ((bool)(results[2]));
            isDischarge = ((bool)(results[3]));
            isTechnicalFailed = ((bool)(results[4]));
            isUnkown = ((bool)(results[5]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFailure117KermanshahAsync(long telephoneNo, long callingNo, byte[] recordeSound) {
            this.SaveFailure117KermanshahAsync(telephoneNo, callingNo, recordeSound, null);
        }
        
        /// <remarks/>
        public void SaveFailure117KermanshahAsync(long telephoneNo, long callingNo, byte[] recordeSound, object userState) {
            if ((this.SaveFailure117KermanshahOperationCompleted == null)) {
                this.SaveFailure117KermanshahOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFailure117KermanshahOperationCompleted);
            }
            this.InvokeAsync("SaveFailure117Kermanshah", new object[] {
                        telephoneNo,
                        callingNo,
                        recordeSound}, this.SaveFailure117KermanshahOperationCompleted, userState);
        }
        
        private void OnSaveFailure117KermanshahOperationCompleted(object arg) {
            if ((this.SaveFailure117KermanshahCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFailure117KermanshahCompleted(this, new SaveFailure117KermanshahCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFailureRequestState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFailureRequestState(long telephoneNo, out bool isFinished, out int resultFailure, out int color1, out int color2, out int cableType) {
            object[] results = this.Invoke("GetFailureRequestState", new object[] {
                        telephoneNo});
            isFinished = ((bool)(results[1]));
            resultFailure = ((int)(results[2]));
            color1 = ((int)(results[3]));
            color2 = ((int)(results[4]));
            cableType = ((int)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFailureRequestStateAsync(long telephoneNo) {
            this.GetFailureRequestStateAsync(telephoneNo, null);
        }
        
        /// <remarks/>
        public void GetFailureRequestStateAsync(long telephoneNo, object userState) {
            if ((this.GetFailureRequestStateOperationCompleted == null)) {
                this.GetFailureRequestStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFailureRequestStateOperationCompleted);
            }
            this.InvokeAsync("GetFailureRequestState", new object[] {
                        telephoneNo}, this.GetFailureRequestStateOperationCompleted, userState);
        }
        
        private void OnGetFailureRequestStateOperationCompleted(object arg) {
            if ((this.GetFailureRequestStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFailureRequestStateCompleted(this, new GetFailureRequestStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCabinetAccuracy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckCabinetAccuracy(int cabinetNo, int postNo, long teleophoneNo, int centercode) {
            object[] results = this.Invoke("CheckCabinetAccuracy", new object[] {
                        cabinetNo,
                        postNo,
                        teleophoneNo,
                        centercode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCabinetAccuracyAsync(int cabinetNo, int postNo, long teleophoneNo, int centercode) {
            this.CheckCabinetAccuracyAsync(cabinetNo, postNo, teleophoneNo, centercode, null);
        }
        
        /// <remarks/>
        public void CheckCabinetAccuracyAsync(int cabinetNo, int postNo, long teleophoneNo, int centercode, object userState) {
            if ((this.CheckCabinetAccuracyOperationCompleted == null)) {
                this.CheckCabinetAccuracyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCabinetAccuracyOperationCompleted);
            }
            this.InvokeAsync("CheckCabinetAccuracy", new object[] {
                        cabinetNo,
                        postNo,
                        teleophoneNo,
                        centercode}, this.CheckCabinetAccuracyOperationCompleted, userState);
        }
        
        private void OnCheckCabinetAccuracyOperationCompleted(object arg) {
            if ((this.CheckCabinetAccuracyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCabinetAccuracyCompleted(this, new CheckCabinetAccuracyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFailure117fromHelpDesk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFailure117fromHelpDesk(long telephoneNo, long ticketID, string description, out long requestID) {
            object[] results = this.Invoke("SaveFailure117fromHelpDesk", new object[] {
                        telephoneNo,
                        ticketID,
                        description});
            requestID = ((long)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFailure117fromHelpDeskAsync(long telephoneNo, long ticketID, string description) {
            this.SaveFailure117fromHelpDeskAsync(telephoneNo, ticketID, description, null);
        }
        
        /// <remarks/>
        public void SaveFailure117fromHelpDeskAsync(long telephoneNo, long ticketID, string description, object userState) {
            if ((this.SaveFailure117fromHelpDeskOperationCompleted == null)) {
                this.SaveFailure117fromHelpDeskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFailure117fromHelpDeskOperationCompleted);
            }
            this.InvokeAsync("SaveFailure117fromHelpDesk", new object[] {
                        telephoneNo,
                        ticketID,
                        description}, this.SaveFailure117fromHelpDeskOperationCompleted, userState);
        }
        
        private void OnSaveFailure117fromHelpDeskOperationCompleted(object arg) {
            if ((this.SaveFailure117fromHelpDeskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFailure117fromHelpDeskCompleted(this, new SaveFailure117fromHelpDeskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMessage(string telephoneNos, string message) {
            this.Invoke("SendMessage", new object[] {
                        telephoneNos,
                        message});
        }
        
        /// <remarks/>
        public void SendMessageAsync(string telephoneNos, string message) {
            this.SendMessageAsync(telephoneNos, message, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(string telephoneNos, string message, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        telephoneNos,
                        message}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveADSLChangeService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SaveADSLChangeService(long telephoneNo, int oldServiceID, int newServiceID, out bool result) {
            object[] results = this.Invoke("SaveADSLChangeService", new object[] {
                        telephoneNo,
                        oldServiceID,
                        newServiceID});
            result = ((bool)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveADSLChangeServiceAsync(long telephoneNo, int oldServiceID, int newServiceID) {
            this.SaveADSLChangeServiceAsync(telephoneNo, oldServiceID, newServiceID, null);
        }
        
        /// <remarks/>
        public void SaveADSLChangeServiceAsync(long telephoneNo, int oldServiceID, int newServiceID, object userState) {
            if ((this.SaveADSLChangeServiceOperationCompleted == null)) {
                this.SaveADSLChangeServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveADSLChangeServiceOperationCompleted);
            }
            this.InvokeAsync("SaveADSLChangeService", new object[] {
                        telephoneNo,
                        oldServiceID,
                        newServiceID}, this.SaveADSLChangeServiceOperationCompleted, userState);
        }
        
        private void OnSaveADSLChangeServiceOperationCompleted(object arg) {
            if ((this.SaveADSLChangeServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveADSLChangeServiceCompleted(this, new SaveADSLChangeServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmADSLChangeService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmADSLChangeService(long requestID, int newServiceID, bool isIBSngUpdated) {
            object[] results = this.Invoke("ConfirmADSLChangeService", new object[] {
                        requestID,
                        newServiceID,
                        isIBSngUpdated});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmADSLChangeServiceAsync(long requestID, int newServiceID, bool isIBSngUpdated) {
            this.ConfirmADSLChangeServiceAsync(requestID, newServiceID, isIBSngUpdated, null);
        }
        
        /// <remarks/>
        public void ConfirmADSLChangeServiceAsync(long requestID, int newServiceID, bool isIBSngUpdated, object userState) {
            if ((this.ConfirmADSLChangeServiceOperationCompleted == null)) {
                this.ConfirmADSLChangeServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmADSLChangeServiceOperationCompleted);
            }
            this.InvokeAsync("ConfirmADSLChangeService", new object[] {
                        requestID,
                        newServiceID,
                        isIBSngUpdated}, this.ConfirmADSLChangeServiceOperationCompleted, userState);
        }
        
        private void OnConfirmADSLChangeServiceOperationCompleted(object arg) {
            if ((this.ConfirmADSLChangeServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmADSLChangeServiceCompleted(this, new ConfirmADSLChangeServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveADSLSaleTraffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SaveADSLSaleTraffice(long telephoneNo, int trafficeID, out bool result) {
            object[] results = this.Invoke("SaveADSLSaleTraffice", new object[] {
                        telephoneNo,
                        trafficeID});
            result = ((bool)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveADSLSaleTrafficeAsync(long telephoneNo, int trafficeID) {
            this.SaveADSLSaleTrafficeAsync(telephoneNo, trafficeID, null);
        }
        
        /// <remarks/>
        public void SaveADSLSaleTrafficeAsync(long telephoneNo, int trafficeID, object userState) {
            if ((this.SaveADSLSaleTrafficeOperationCompleted == null)) {
                this.SaveADSLSaleTrafficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveADSLSaleTrafficeOperationCompleted);
            }
            this.InvokeAsync("SaveADSLSaleTraffice", new object[] {
                        telephoneNo,
                        trafficeID}, this.SaveADSLSaleTrafficeOperationCompleted, userState);
        }
        
        private void OnSaveADSLSaleTrafficeOperationCompleted(object arg) {
            if ((this.SaveADSLSaleTrafficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveADSLSaleTrafficeCompleted(this, new SaveADSLSaleTrafficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmADSLSaleTraffic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmADSLSaleTraffic(long requestID, bool isIBSngUpdated) {
            object[] results = this.Invoke("ConfirmADSLSaleTraffic", new object[] {
                        requestID,
                        isIBSngUpdated});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmADSLSaleTrafficAsync(long requestID, bool isIBSngUpdated) {
            this.ConfirmADSLSaleTrafficAsync(requestID, isIBSngUpdated, null);
        }
        
        /// <remarks/>
        public void ConfirmADSLSaleTrafficAsync(long requestID, bool isIBSngUpdated, object userState) {
            if ((this.ConfirmADSLSaleTrafficOperationCompleted == null)) {
                this.ConfirmADSLSaleTrafficOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmADSLSaleTrafficOperationCompleted);
            }
            this.InvokeAsync("ConfirmADSLSaleTraffic", new object[] {
                        requestID,
                        isIBSngUpdated}, this.ConfirmADSLSaleTrafficOperationCompleted, userState);
        }
        
        private void OnConfirmADSLSaleTrafficOperationCompleted(object arg) {
            if ((this.ConfirmADSLSaleTrafficCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmADSLSaleTrafficCompleted(this, new ConfirmADSLSaleTrafficCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveRequestPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SaveRequestPayment(long requestID, string orderID) {
            object[] results = this.Invoke("SaveRequestPayment", new object[] {
                        requestID,
                        orderID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRequestPaymentAsync(long requestID, string orderID) {
            this.SaveRequestPaymentAsync(requestID, orderID, null);
        }
        
        /// <remarks/>
        public void SaveRequestPaymentAsync(long requestID, string orderID, object userState) {
            if ((this.SaveRequestPaymentOperationCompleted == null)) {
                this.SaveRequestPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRequestPaymentOperationCompleted);
            }
            this.InvokeAsync("SaveRequestPayment", new object[] {
                        requestID,
                        orderID}, this.SaveRequestPaymentOperationCompleted, userState);
        }
        
        private void OnSaveRequestPaymentOperationCompleted(object arg) {
            if ((this.SaveRequestPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRequestPaymentCompleted(this, new SaveRequestPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PaidRequestPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PaidRequestPayment(long requestPaymentID, int bankCode, string traceNo) {
            this.Invoke("PaidRequestPayment", new object[] {
                        requestPaymentID,
                        bankCode,
                        traceNo});
        }
        
        /// <remarks/>
        public void PaidRequestPaymentAsync(long requestPaymentID, int bankCode, string traceNo) {
            this.PaidRequestPaymentAsync(requestPaymentID, bankCode, traceNo, null);
        }
        
        /// <remarks/>
        public void PaidRequestPaymentAsync(long requestPaymentID, int bankCode, string traceNo, object userState) {
            if ((this.PaidRequestPaymentOperationCompleted == null)) {
                this.PaidRequestPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaidRequestPaymentOperationCompleted);
            }
            this.InvokeAsync("PaidRequestPayment", new object[] {
                        requestPaymentID,
                        bankCode,
                        traceNo}, this.PaidRequestPaymentOperationCompleted, userState);
        }
        
        private void OnPaidRequestPaymentOperationCompleted(object arg) {
            if ((this.PaidRequestPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaidRequestPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateBillID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateBillID(long telephoneNo, int centerID, byte subsidiaryCodeType) {
            object[] results = this.Invoke("GenerateBillID", new object[] {
                        telephoneNo,
                        centerID,
                        subsidiaryCodeType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateBillIDAsync(long telephoneNo, int centerID, byte subsidiaryCodeType) {
            this.GenerateBillIDAsync(telephoneNo, centerID, subsidiaryCodeType, null);
        }
        
        /// <remarks/>
        public void GenerateBillIDAsync(long telephoneNo, int centerID, byte subsidiaryCodeType, object userState) {
            if ((this.GenerateBillIDOperationCompleted == null)) {
                this.GenerateBillIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateBillIDOperationCompleted);
            }
            this.InvokeAsync("GenerateBillID", new object[] {
                        telephoneNo,
                        centerID,
                        subsidiaryCodeType}, this.GenerateBillIDOperationCompleted, userState);
        }
        
        private void OnGenerateBillIDOperationCompleted(object arg) {
            if ((this.GenerateBillIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateBillIDCompleted(this, new GenerateBillIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GeneratePaymentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GeneratePaymentID(long amount, long telephoneNo, string billID, byte subsidiaryCodeType, bool isAddCycle) {
            object[] results = this.Invoke("GeneratePaymentID", new object[] {
                        amount,
                        telephoneNo,
                        billID,
                        subsidiaryCodeType,
                        isAddCycle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePaymentIDAsync(long amount, long telephoneNo, string billID, byte subsidiaryCodeType, bool isAddCycle) {
            this.GeneratePaymentIDAsync(amount, telephoneNo, billID, subsidiaryCodeType, isAddCycle, null);
        }
        
        /// <remarks/>
        public void GeneratePaymentIDAsync(long amount, long telephoneNo, string billID, byte subsidiaryCodeType, bool isAddCycle, object userState) {
            if ((this.GeneratePaymentIDOperationCompleted == null)) {
                this.GeneratePaymentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePaymentIDOperationCompleted);
            }
            this.InvokeAsync("GeneratePaymentID", new object[] {
                        amount,
                        telephoneNo,
                        billID,
                        subsidiaryCodeType,
                        isAddCycle}, this.GeneratePaymentIDOperationCompleted, userState);
        }
        
        private void OnGeneratePaymentIDOperationCompleted(object arg) {
            if ((this.GeneratePaymentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePaymentIDCompleted(this, new GeneratePaymentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADSLPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetADSLPayment(long telephoneNo) {
            object[] results = this.Invoke("GetADSLPayment", new object[] {
                        telephoneNo});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetADSLPaymentAsync(long telephoneNo) {
            this.GetADSLPaymentAsync(telephoneNo, null);
        }
        
        /// <remarks/>
        public void GetADSLPaymentAsync(long telephoneNo, object userState) {
            if ((this.GetADSLPaymentOperationCompleted == null)) {
                this.GetADSLPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADSLPaymentOperationCompleted);
            }
            this.InvokeAsync("GetADSLPayment", new object[] {
                        telephoneNo}, this.GetADSLPaymentOperationCompleted, userState);
        }
        
        private void OnGetADSLPaymentOperationCompleted(object arg) {
            if ((this.GetADSLPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADSLPaymentCompleted(this, new GetADSLPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADSLInstalmentforBilling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InstalmentBillingInfo[] GetADSLInstalmentforBilling(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetADSLInstalmentforBilling", new object[] {
                        startDate,
                        endDate});
            return ((InstalmentBillingInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetADSLInstalmentforBillingAsync(System.DateTime startDate, System.DateTime endDate) {
            this.GetADSLInstalmentforBillingAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetADSLInstalmentforBillingAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetADSLInstalmentforBillingOperationCompleted == null)) {
                this.GetADSLInstalmentforBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADSLInstalmentforBillingOperationCompleted);
            }
            this.InvokeAsync("GetADSLInstalmentforBilling", new object[] {
                        startDate,
                        endDate}, this.GetADSLInstalmentforBillingOperationCompleted, userState);
        }
        
        private void OnGetADSLInstalmentforBillingOperationCompleted(object arg) {
            if ((this.GetADSLInstalmentforBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADSLInstalmentforBillingCompleted(this, new GetADSLInstalmentforBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmADSLInstalmentforBilling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmADSLInstalmentforBilling(System.DateTime startDate, System.DateTime endDate) {
            this.Invoke("ConfirmADSLInstalmentforBilling", new object[] {
                        startDate,
                        endDate});
        }
        
        /// <remarks/>
        public void ConfirmADSLInstalmentforBillingAsync(System.DateTime startDate, System.DateTime endDate) {
            this.ConfirmADSLInstalmentforBillingAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void ConfirmADSLInstalmentforBillingAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.ConfirmADSLInstalmentforBillingOperationCompleted == null)) {
                this.ConfirmADSLInstalmentforBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmADSLInstalmentforBillingOperationCompleted);
            }
            this.InvokeAsync("ConfirmADSLInstalmentforBilling", new object[] {
                        startDate,
                        endDate}, this.ConfirmADSLInstalmentforBillingOperationCompleted, userState);
        }
        
        private void OnConfirmADSLInstalmentforBillingOperationCompleted(object arg) {
            if ((this.ConfirmADSLInstalmentforBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmADSLInstalmentforBillingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IBSngUserInfo GetUserInfo(IbsngInputInfo ibsngInputInfo) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        ibsngInputInfo});
            return ((IBSngUserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(IbsngInputInfo ibsngInputInfo) {
            this.GetUserInfoAsync(ibsngInputInfo, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(IbsngInputInfo ibsngInputInfo, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        ibsngInputInfo}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/changeDeposit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void changeDeposit(ChangeIBSngInfo ibsngInfo) {
            this.Invoke("changeDeposit", new object[] {
                        ibsngInfo});
        }
        
        /// <remarks/>
        public void changeDepositAsync(ChangeIBSngInfo ibsngInfo) {
            this.changeDepositAsync(ibsngInfo, null);
        }
        
        /// <remarks/>
        public void changeDepositAsync(ChangeIBSngInfo ibsngInfo, object userState) {
            if ((this.changeDepositOperationCompleted == null)) {
                this.changeDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeDepositOperationCompleted);
            }
            this.InvokeAsync("changeDeposit", new object[] {
                        ibsngInfo}, this.changeDepositOperationCompleted, userState);
        }
        
        private void OnchangeDepositOperationCompleted(object arg) {
            if ((this.changeDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeDepositCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserAttrs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserAttrs(ChangeIBSngInfo ibsngInfo) {
            this.Invoke("UpdateUserAttrs", new object[] {
                        ibsngInfo});
        }
        
        /// <remarks/>
        public void UpdateUserAttrsAsync(ChangeIBSngInfo ibsngInfo) {
            this.UpdateUserAttrsAsync(ibsngInfo, null);
        }
        
        /// <remarks/>
        public void UpdateUserAttrsAsync(ChangeIBSngInfo ibsngInfo, object userState) {
            if ((this.UpdateUserAttrsOperationCompleted == null)) {
                this.UpdateUserAttrsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAttrsOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAttrs", new object[] {
                        ibsngInfo}, this.UpdateUserAttrsOperationCompleted, userState);
        }
        
        private void OnUpdateUserAttrsOperationCompleted(object arg) {
            if ((this.UpdateUserAttrsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAttrsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPAPInstallRequestCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PAPBillingInfo[] GetPAPInstallRequestCount(System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("GetPAPInstallRequestCount", new object[] {
                        fromDate,
                        toDate});
            return ((PAPBillingInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPAPInstallRequestCountAsync(System.DateTime fromDate, System.DateTime toDate) {
            this.GetPAPInstallRequestCountAsync(fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetPAPInstallRequestCountAsync(System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.GetPAPInstallRequestCountOperationCompleted == null)) {
                this.GetPAPInstallRequestCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPAPInstallRequestCountOperationCompleted);
            }
            this.InvokeAsync("GetPAPInstallRequestCount", new object[] {
                        fromDate,
                        toDate}, this.GetPAPInstallRequestCountOperationCompleted, userState);
        }
        
        private void OnGetPAPInstallRequestCountOperationCompleted(object arg) {
            if ((this.GetPAPInstallRequestCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPAPInstallRequestCountCompleted(this, new GetPAPInstallRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPAPDischargeRequestCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PAPBillingInfo[] GetPAPDischargeRequestCount(System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("GetPAPDischargeRequestCount", new object[] {
                        fromDate,
                        toDate});
            return ((PAPBillingInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPAPDischargeRequestCountAsync(System.DateTime fromDate, System.DateTime toDate) {
            this.GetPAPDischargeRequestCountAsync(fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetPAPDischargeRequestCountAsync(System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.GetPAPDischargeRequestCountOperationCompleted == null)) {
                this.GetPAPDischargeRequestCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPAPDischargeRequestCountOperationCompleted);
            }
            this.InvokeAsync("GetPAPDischargeRequestCount", new object[] {
                        fromDate,
                        toDate}, this.GetPAPDischargeRequestCountOperationCompleted, userState);
        }
        
        private void OnGetPAPDischargeRequestCountOperationCompleted(object arg) {
            if ((this.GetPAPDischargeRequestCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPAPDischargeRequestCountCompleted(this, new GetPAPDischargeRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPAPExchangeRequestCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PAPBillingInfo[] GetPAPExchangeRequestCount(System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("GetPAPExchangeRequestCount", new object[] {
                        fromDate,
                        toDate});
            return ((PAPBillingInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPAPExchangeRequestCountAsync(System.DateTime fromDate, System.DateTime toDate) {
            this.GetPAPExchangeRequestCountAsync(fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetPAPExchangeRequestCountAsync(System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.GetPAPExchangeRequestCountOperationCompleted == null)) {
                this.GetPAPExchangeRequestCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPAPExchangeRequestCountOperationCompleted);
            }
            this.InvokeAsync("GetPAPExchangeRequestCount", new object[] {
                        fromDate,
                        toDate}, this.GetPAPExchangeRequestCountOperationCompleted, userState);
        }
        
        private void OnGetPAPExchangeRequestCountOperationCompleted(object arg) {
            if ((this.GetPAPExchangeRequestCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPAPExchangeRequestCountCompleted(this, new GetPAPExchangeRequestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InstalmentBillingInfo {
        
        private long telephoneNoField;
        
        private long costField;
        
        /// <remarks/>
        public long TelephoneNo {
            get {
                return this.telephoneNoField;
            }
            set {
                this.telephoneNoField = value;
            }
        }
        
        /// <remarks/>
        public long Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PAPBillingInfo {
        
        private string pAPCodeField;
        
        private string pAPNameField;
        
        private string count24Field;
        
        private string count48Field;
        
        private string count72Field;
        
        private string countAllField;
        
        /// <remarks/>
        public string PAPCode {
            get {
                return this.pAPCodeField;
            }
            set {
                this.pAPCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PAPName {
            get {
                return this.pAPNameField;
            }
            set {
                this.pAPNameField = value;
            }
        }
        
        /// <remarks/>
        public string Count24 {
            get {
                return this.count24Field;
            }
            set {
                this.count24Field = value;
            }
        }
        
        /// <remarks/>
        public string Count48 {
            get {
                return this.count48Field;
            }
            set {
                this.count48Field = value;
            }
        }
        
        /// <remarks/>
        public string Count72 {
            get {
                return this.count72Field;
            }
            set {
                this.count72Field = value;
            }
        }
        
        /// <remarks/>
        public string CountAll {
            get {
                return this.countAllField;
            }
            set {
                this.countAllField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ChangeIBSngInfo {
        
        private string userIDField;
        
        private string depositField;
        
        private bool isAbsoluteChangeField;
        
        private string depositTypeField;
        
        private string depositCommentField;
        
        private string customFieldFreeCounterField;
        
        private string renewNextGroupField;
        
        private string renewRemoveUserExpDatesField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Deposit {
            get {
                return this.depositField;
            }
            set {
                this.depositField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAbsoluteChange {
            get {
                return this.isAbsoluteChangeField;
            }
            set {
                this.isAbsoluteChangeField = value;
            }
        }
        
        /// <remarks/>
        public string DepositType {
            get {
                return this.depositTypeField;
            }
            set {
                this.depositTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DepositComment {
            get {
                return this.depositCommentField;
            }
            set {
                this.depositCommentField = value;
            }
        }
        
        /// <remarks/>
        public string CustomFieldFreeCounter {
            get {
                return this.customFieldFreeCounterField;
            }
            set {
                this.customFieldFreeCounterField = value;
            }
        }
        
        /// <remarks/>
        public string RenewNextGroup {
            get {
                return this.renewNextGroupField;
            }
            set {
                this.renewNextGroupField = value;
            }
        }
        
        /// <remarks/>
        public string RenewRemoveUserExpDates {
            get {
                return this.renewRemoveUserExpDatesField;
            }
            set {
                this.renewRemoveUserExpDatesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IBSngUserInfo {
        
        private string nameField;
        
        private string normalUsernameField;
        
        private string normalPasswordField;
        
        private object[][] internetOnlinesField;
        
        private string userIDField;
        
        private string cellPhoneField;
        
        private string emailField;
        
        private string postalCodeField;
        
        private string addressField;
        
        private string realFirstLoginField;
        
        private string firstLoginField;
        
        private string nearestExpDateField;
        
        private string rechargeDepositField;
        
        private string creditField;
        
        private bool onlineStatusField;
        
        private string limitMacField;
        
        private string renewNextGroupField;
        
        private string lockField;
        
        private string multiLoginField;
        
        private string creationDateField;
        
        private double customFieldFreeCounterField;
        
        private string iBSngGroupNameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string NormalUsername {
            get {
                return this.normalUsernameField;
            }
            set {
                this.normalUsernameField = value;
            }
        }
        
        /// <remarks/>
        public string NormalPassword {
            get {
                return this.normalPasswordField;
            }
            set {
                this.normalPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public object[][] InternetOnlines {
            get {
                return this.internetOnlinesField;
            }
            set {
                this.internetOnlinesField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string CellPhone {
            get {
                return this.cellPhoneField;
            }
            set {
                this.cellPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string RealFirstLogin {
            get {
                return this.realFirstLoginField;
            }
            set {
                this.realFirstLoginField = value;
            }
        }
        
        /// <remarks/>
        public string FirstLogin {
            get {
                return this.firstLoginField;
            }
            set {
                this.firstLoginField = value;
            }
        }
        
        /// <remarks/>
        public string NearestExpDate {
            get {
                return this.nearestExpDateField;
            }
            set {
                this.nearestExpDateField = value;
            }
        }
        
        /// <remarks/>
        public string RechargeDeposit {
            get {
                return this.rechargeDepositField;
            }
            set {
                this.rechargeDepositField = value;
            }
        }
        
        /// <remarks/>
        public string Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public bool OnlineStatus {
            get {
                return this.onlineStatusField;
            }
            set {
                this.onlineStatusField = value;
            }
        }
        
        /// <remarks/>
        public string LimitMac {
            get {
                return this.limitMacField;
            }
            set {
                this.limitMacField = value;
            }
        }
        
        /// <remarks/>
        public string RenewNextGroup {
            get {
                return this.renewNextGroupField;
            }
            set {
                this.renewNextGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Lock {
            get {
                return this.lockField;
            }
            set {
                this.lockField = value;
            }
        }
        
        /// <remarks/>
        public string MultiLogin {
            get {
                return this.multiLoginField;
            }
            set {
                this.multiLoginField = value;
            }
        }
        
        /// <remarks/>
        public string CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public double CustomFieldFreeCounter {
            get {
                return this.customFieldFreeCounterField;
            }
            set {
                this.customFieldFreeCounterField = value;
            }
        }
        
        /// <remarks/>
        public string IBSngGroupName {
            get {
                return this.iBSngGroupNameField;
            }
            set {
                this.iBSngGroupNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IbsngInputInfo {
        
        private string normalUsernameField;
        
        /// <remarks/>
        public string NormalUsername {
            get {
                return this.normalUsernameField;
            }
            set {
                this.normalUsernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveFailure117CompletedEventHandler(object sender, SaveFailure117CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFailure117CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFailure117CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool isConfirmed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveFailure117KermanshahCompletedEventHandler(object sender, SaveFailure117KermanshahCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFailure117KermanshahCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFailure117KermanshahCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool isConfirmed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool isDischarge {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool isTechnicalFailed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public bool isUnkown {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFailureRequestStateCompletedEventHandler(object sender, GetFailureRequestStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFailureRequestStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFailureRequestStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isFinished {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int resultFailure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int color1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int color2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int cableType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckCabinetAccuracyCompletedEventHandler(object sender, CheckCabinetAccuracyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCabinetAccuracyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCabinetAccuracyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveFailure117fromHelpDeskCompletedEventHandler(object sender, SaveFailure117fromHelpDeskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFailure117fromHelpDeskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFailure117fromHelpDeskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long requestID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveADSLChangeServiceCompletedEventHandler(object sender, SaveADSLChangeServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveADSLChangeServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveADSLChangeServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ConfirmADSLChangeServiceCompletedEventHandler(object sender, ConfirmADSLChangeServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmADSLChangeServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmADSLChangeServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveADSLSaleTrafficeCompletedEventHandler(object sender, SaveADSLSaleTrafficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveADSLSaleTrafficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveADSLSaleTrafficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ConfirmADSLSaleTrafficCompletedEventHandler(object sender, ConfirmADSLSaleTrafficCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmADSLSaleTrafficCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmADSLSaleTrafficCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveRequestPaymentCompletedEventHandler(object sender, SaveRequestPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRequestPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRequestPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PaidRequestPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateBillIDCompletedEventHandler(object sender, GenerateBillIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateBillIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateBillIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GeneratePaymentIDCompletedEventHandler(object sender, GeneratePaymentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePaymentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePaymentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetADSLPaymentCompletedEventHandler(object sender, GetADSLPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADSLPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADSLPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetADSLInstalmentforBillingCompletedEventHandler(object sender, GetADSLInstalmentforBillingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADSLInstalmentforBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADSLInstalmentforBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InstalmentBillingInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstalmentBillingInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ConfirmADSLInstalmentforBillingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IBSngUserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IBSngUserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void changeDepositCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateUserAttrsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPAPInstallRequestCountCompletedEventHandler(object sender, GetPAPInstallRequestCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPAPInstallRequestCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPAPInstallRequestCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PAPBillingInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PAPBillingInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPAPDischargeRequestCountCompletedEventHandler(object sender, GetPAPDischargeRequestCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPAPDischargeRequestCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPAPDischargeRequestCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PAPBillingInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PAPBillingInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPAPExchangeRequestCountCompletedEventHandler(object sender, GetPAPExchangeRequestCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPAPExchangeRequestCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPAPExchangeRequestCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PAPBillingInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PAPBillingInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591