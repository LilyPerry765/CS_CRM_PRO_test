<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <script src="~/scripts/persian-date-0.1.8.js"></script>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>IncomeFlowReport</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!--<link rel="stylesheet" href="~/Content/bootstrap.css">
    <link rel="stylesheet" href="~/Content/site/site.css">-->
</head>
<body onload="window.print();">
    <div class="wrapper">
        <!-- Main content -->
        <section class="invoice">
            <!-- Table row -->
            <div class="row">
                <div class="col-xs-12 table-responsive">

                    <div style="text-align:center;">
                        <img style="margin-bottom:4px;float:right;" src="/Modules/Common/Reporting/mokhaberat_40.png" />

                        <th3 style="font-size:16px;font-family:Tahoma;font-weight:bold;">گزارش تجمیعی استان ها</th3>
                        <th3 style="float:left;margin-top:15px;font-size:9px;" id="date"></th3>
                    </div>
                    <br />
                    <table cellspacing="0" border="1" class="table" id="Province_Program_Table" style="font-family: Tahoma; font-size: 11px; border: 1px solid black; border-collapse: collapse; ">
                        <thead style="background-color: #0090D9; color: #eee; font-weight: 600; ">
                            <tr>
                                <th style="text-align: center; border: 1px solid black;">استان</th>
                                <th style="text-align: center; border: 1px solid black;">تعداد تایید فنی</th>
                                <th style="text-align: center; border: 1px solid black;">تعداد تایید مالی</th>
                                <th style="text-align: center; border: 1px solid black;">مبلغ سیکل</th>
                                <th style="text-align: center; border: 1px solid black;">مبلغ معوق</th>
                                <th style="text-align: center; border: 1px solid black;">نشتی شناسایی شده کل</th>
                                <th style="text-align: center; border: 1px solid black;">نشتی قابل وصول</th>
                                <th style="text-align: center; border: 1px solid black;">مبلغ مصوب</th>
                            </tr>
                        </thead>
                        <tbody style="text-align: center; line-height: 1; "></tbody>
                    </table>
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
            <div class="row">
                <!-- accepted payments column -->
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>
    <!-- ./wrapper -->
    </bodyonload>

</html>
<script type="text/javascript">

    var now = persianDate();
    /*  y = n.getFullYear();
      m = n.getMonth() + 1;
      d = n.getDate();*/
    //console.log(now);
    document.getElementById("date").innerHTML = "تاریخ : " + PersiaNumber(now.date().toString()) + "-" + PersiaNumber(now.month().toString()) + "-" + PersiaNumber(now.year().toString());


    var tableRef = document.getElementById('Province_Program_Table').getElementsByTagName('tbody')[0];
    tableRef.innerHTML = " ";


    function getParameterByName(name, url) {
        if (!url) {
            url = window.location.href;
        }
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    function reverse(s) {
        var Numbers = s.split('-');

        var CycleName_Value = Numbers[1] + '-' + Numbers[0];
        return CycleName_Value;
    }

    function CostSeperator(value) {
        if (value != null) {
            var persianNumbers = ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'];
            value = value.toString();
            value = value.replace(/\,/g, '');
            var objRegex = new RegExp('(-?[0-9]+)([0-9]{3})');
            while (objRegex.test(value))
                value = value.replace(objRegex, '$1,$2');

            value = value.replace(/[0-9]/g, function (w) { return persianNumbers[+w] });
        }
        return value;
    }

    function PersiaNumber(value) {
        var arabicNumbers = ['۰', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];

        var chars = value.split('');

        for (var i = 0; i < chars.length; i++) {
            if (/\d/.test(chars[i])) {
                chars[i] = arabicNumbers[chars[i]];
            }
        }

        return chars.join('');

    }

    var today = new Date();
    var dd = today.getDate();

    var mm = today.getMonth() + 1;
    var yyyy = today.getFullYear();
    if (dd < 10) {
        dd = '0' + dd;
    }

    if (mm < 10) {
        mm = '0' + mm;
    }
    today = yyyy + '-' + mm + '-' + dd;
    //console.log( "Today is : " + today);


    var selectedActivity = getParameterByName('activityID');
    var selectedCycle = getParameterByName('cycleID');
    var selectedIncomeFlow = getParameterByName('IncomeFlowID');
    var DateTimeFilter_Start = getParameterByName('fromDate');
    var DateTimeFilter_End = getParameterByName('toDate');



    /*   var url = "http://" + window.location.hostname + ":" + window.location.port + "/Services/Case/IncomeFlow/List";
       // alert("URL : " + url);
       //var ProvID = '';
       var IncomeFlow = new Array(9);

       $.ajaxSetup({ async: false });
       $.getJSON(url, function (data) {

           for (var i = 0; i < data.TotalCount; i++) {
               IncomeFlow[data.Entities[i].Id] = data.Entities[i].Name;
               //console.log(data.Entities[i].Name);
           }
       });*/

    var url = "http://" + window.location.hostname + ":" + window.location.port + "/Services/Case/Province/List";
    // alert("URL : " + url);

    var ProvID = '';
    var Province = new Array(30);


    //FIXME
    $.ajaxSetup({ async: false });
    $.getJSON(url, function (data) {

        for (var k = 0; k < data.TotalCount; k++) {

            if (data.Entities[k].Id == 32) {
                Province[31] = data.Entities[k].Name;
            } else Province[data.Entities[k].Id] = data.Entities[k].Name;

        }
    });


    var url1 = "GetProvinceReportInfo?incomFlowID=" + selectedIncomeFlow + "&cycleID=" + selectedCycle + "&activityID=" + selectedActivity + "&fromDate=" + DateTimeFilter_Start + "&toDate=" + DateTimeFilter_End;


    $.ajax({
        type: "GET",
        async: false,
        // data: obj,
        url: url1,
        success: function (data) {

            var Total_TechnicalConfirmCount = 0;
            var Total_FinancialConfirmCount = 0;
            var Total_CycleCost = 0;
            var Total_DelayedCost = 0;
            var Total_TotalLeakage = 0;
            var Total_RecoverableLeakage = 0;
            var Total_Recovered = 0;

            for (var ProvinceCount = 1 ; ProvinceCount < Province.length ; ProvinceCount++) {
                var flag = false;
                var ArrayIndex = -1;

                for (var counter = 0; counter < data.length; counter++) {
                    if (data[counter].ProvinceID == ProvinceCount) {
                        flag = true;
                        ArrayIndex = counter;
                    }
					if ((data[counter].ProvinceID == 32) && (ProvinceCount==31)) {
                            flag = true;
                            ArrayIndex = counter;
							
                        }
                    //console.log(data[counter].ProvinceID);
                }

                var newRow = tableRef.insertRow(tableRef.rows.length);

                // Insert a cell in the row at index 0
                if (flag) {
                    //console.log("true");
                    var newCell = newRow.insertCell(0);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode(Province[ProvinceCount]);
                    newCell.appendChild(newText);


                    var newCell = newRow.insertCell(1);
                    newCell.style.border = ' 1px solid black';
                    if (data[ArrayIndex].TechnicalConfirmCount) {
                        var newText = document.createTextNode(PersiaNumber(data[ArrayIndex].TechnicalConfirmCount.toString()));
                        newCell.appendChild(newText);
                        Total_TechnicalConfirmCount += data[ArrayIndex].TechnicalConfirmCount;
                    } else {
                        var newText = document.createTextNode("۰");
                        newCell.appendChild(newText);
                    }

                    var newCell = newRow.insertCell(2);
                    newCell.style.border = ' 1px solid black';
                    if (data[ArrayIndex].FinancialConfirmCount) {
                        var newText = document.createTextNode(PersiaNumber(data[ArrayIndex].FinancialConfirmCount.toString()));
                        newCell.appendChild(newText);
                        Total_FinancialConfirmCount += data[ArrayIndex].FinancialConfirmCount;
                    } else {
                        var newText = document.createTextNode("۰");
                        newCell.appendChild(newText);
                    }

                    var newCell = newRow.insertCell(3);
                    newCell.style.border = ' 1px solid black';
                    if (data[ArrayIndex].SumCycleCost) {
                        var newText = document.createTextNode(CostSeperator(data[ArrayIndex].SumCycleCost));
                        newCell.appendChild(newText);
                        Total_CycleCost += data[ArrayIndex].SumCycleCost;
                    } else {
                        var newText = document.createTextNode("۰");
                        newCell.appendChild(newText);
                    }


                    var newCell = newRow.insertCell(4);
                    newCell.style.border = ' 1px solid black';
                    if (data[ArrayIndex].SumDelayedCost) {
                        var newText = document.createTextNode(CostSeperator(data[ArrayIndex].SumDelayedCost));
                        newCell.appendChild(newText);
                        Total_DelayedCost += data[ArrayIndex].SumDelayedCost;
                    } else {
                        var newText = document.createTextNode("۰");
                        newCell.appendChild(newText);
                    }


                    var newCell = newRow.insertCell(5);
                    newCell.style.border = ' 1px solid black';
                    if (data[ArrayIndex].SumTotalLeakage) {
                        var newText = document.createTextNode(CostSeperator(data[ArrayIndex].SumTotalLeakage));
                        newCell.appendChild(newText);
                        Total_TotalLeakage += data[ArrayIndex].SumTotalLeakage;
                    } else {
                        var newText = document.createTextNode("۰");
                        newCell.appendChild(newText);
                    }


                    var newCell = newRow.insertCell(6);
                    newCell.style.border = ' 1px solid black';
                    if (data[ArrayIndex].SumRecoverableLeakage) {
                        var newText = document.createTextNode(CostSeperator(data[ArrayIndex].SumRecoverableLeakage));
                        newCell.appendChild(newText);
                        Total_RecoverableLeakage += data[ArrayIndex].SumRecoverableLeakage;
                    } else {
                        var newText = document.createTextNode("۰");
                        newCell.appendChild(newText);
                    }


                    var newCell = newRow.insertCell(7);
                    newCell.style.border = ' 1px solid black';
                    if (data[ArrayIndex].SumRecovered) {
                        var newText = document.createTextNode(CostSeperator(data[ArrayIndex].SumRecovered));
                        newCell.appendChild(newText);
                        Total_Recovered += data[ArrayIndex].SumRecovered;
                    } else {
                        var newText = document.createTextNode("۰");
                        newCell.appendChild(newText);
                    }

                } else {
                    // console.log("false");

                    var newCell = newRow.insertCell(0);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode(Province[ProvinceCount]);
                    newCell.appendChild(newText);


                    var newCell = newRow.insertCell(1);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode("");
                    newCell.appendChild(newText);

                    var newCell = newRow.insertCell(2);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode("");
                    newCell.appendChild(newText);

                    var newCell = newRow.insertCell(3);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode("");
                    newCell.appendChild(newText);

                    var newCell = newRow.insertCell(4);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode("");
                    newCell.appendChild(newText);

                    var newCell = newRow.insertCell(5);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode("");
                    newCell.appendChild(newText);

                    var newCell = newRow.insertCell(6);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode("");
                    newCell.appendChild(newText);

                    var newCell = newRow.insertCell(7);
                    newCell.style.border = ' 1px solid black';
                    var newText = document.createTextNode("");
                    newCell.appendChild(newText);


                }
            }
            var newRow = tableRef.insertRow(tableRef.rows.length);

            var newCell = newRow.insertCell(0);
            newCell.style.border = ' 1px solid black';
            newCell.style = 'font-weight: bold;font-size:11px';
            // Append a text node to the cell
            var newText = document.createTextNode('مجموع');
            newCell.appendChild(newText);

            var newCell = newRow.insertCell(1);
            newCell.style.border = ' 1px solid black';
            newCell.style = 'font-weight: bold;font-size:11px';
            var newText = document.createTextNode(PersiaNumber(Total_TechnicalConfirmCount.toString()));
            newCell.appendChild(newText);

            var newCell = newRow.insertCell(2);
            newCell.style.border = ' 1px solid black';
            newCell.style = 'font-weight: bold;font-size:11px';
            var newText = document.createTextNode(PersiaNumber(Total_FinancialConfirmCount.toString()));
            newCell.appendChild(newText);

            var newCell = newRow.insertCell(3);
            newCell.style.border = ' 1px solid black';
            newCell.style = 'font-weight: bold;font-size:11px';
            var newText = document.createTextNode(CostSeperator(Total_CycleCost));
            newCell.appendChild(newText);

            var newCell = newRow.insertCell(4);
            newCell.style.border = ' 1px solid black';
            newCell.style = 'font-weight: bold;font-size:11px';
            var newText = document.createTextNode(CostSeperator(Total_DelayedCost));
            newCell.appendChild(newText);

            var newCell = newRow.insertCell(5);
            newCell.style.border = ' 1px solid black';
            newCell.style = 'font-weight: bold;font-size:11px';
            var newText = document.createTextNode(CostSeperator(Total_TotalLeakage));
            newCell.appendChild(newText);

            var newCell = newRow.insertCell(6);
            newCell.style.border = ' 1px solid black';
            newCell.style = 'font-weight: bold;font-size:11px';
            var newText = document.createTextNode(CostSeperator(Total_RecoverableLeakage));
            newCell.appendChild(newText);

            var newCell = newRow.insertCell(7);
            newCell.style.border = ' 1px solid black';
            newCell.style = 'font-weight: bold;font-size:11px';
            var newText = document.createTextNode(CostSeperator(Total_Recovered));
            newCell.appendChild(newText);

        }

    });


    // var footer = document.getElementById("main-wrapper");
    // footer[0].textContent = "";
    //console.log(footer.length);

</script>