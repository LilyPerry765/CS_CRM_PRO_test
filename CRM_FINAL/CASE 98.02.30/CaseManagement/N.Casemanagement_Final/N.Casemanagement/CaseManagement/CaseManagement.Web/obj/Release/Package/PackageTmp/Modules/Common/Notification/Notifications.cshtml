 
<!DOCTYPE html>
<script src="~/scripts/tinymce/tinymce.min.js"></script>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>
    <div class="row">
        <div class="col-md-11" style="margin-left:7%;">
            <!-- DIRECT CHAT -->
            <div class="box box-group direct-chat-success direct-chat-success">
                <div class="box-header with-border">

                </div><!-- /.box-header -->
                <div class="box-body" style="align-content:center;">

                    <div class="direct-chat-messages" id="direct-chat-msg" style="height:500px;"> </div>

                </div><!-- /.box-body -->

                <div class="box-footer">
                    <form action="#" method="post">
                        <div class="input-group" style="width:100%;" >
                            <div>
                            <textarea id="message" name="message" style="height:200px;" ></textarea>
                                <!--<input type="text" id="message" name="message" placeholder="پیغام خود را در اینجا بنویسید ..." class="form-control">-->
                            </div>
                            <br />
                            <div style="float:left;">
                                <span class="input-group-btn">
                                    <button type="button" id="sendmessage" class="btn btn-info btn-flat" style="font-size:14px;">ارسال</button>
                                </span>
                           </div>
                        </div>
                    </form>
                </div><!-- /.box-footer-->
            </div><!--/.direct-chat -->
        </div><!-- /.col -->
    </div>
</body>
</html>
<script>
    tinymce.init({
        selector: 'textarea',
        height: 100,
        menubar: false,
        directionality : "rtl",
        plugins: [
          'advlist autolink lists link image charmap print preview anchor',
          'searchreplace visualblocks code fullscreen','directionality',
          'insertdatetime media table contextmenu paste code','emoticons'
        ],
        toolbar: 'undo redo | bold italic | alignleft aligncenter alignright alignjustify | rtl ltr | emoticons',
       
       // content_css: '//www.tinymce.com/css/codepen.min.css'
    });
</script>

<!--<img class="direct-chat-img" src="~/Content/adminlte/img/avatar2.png" alt="message user image">-->
<script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<!--SignalR script to update the chat page and send messages.--> 

<script>

    function PersiaNumber(value) {
        var arabicNumbers = ['۰', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];

        var chars = value.split('');

        for (var i = 0; i < chars.length; i++) {
            if (/\d/.test(chars[i])) {
                chars[i] = arabicNumbers[chars[i]];
            }
        }

        return chars.join('');

    }

    function getParameterByName(name, url) {
        if (!url) {
            url = window.location.href;
        }
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    var group = getParameterByName('group');

    $(function () {
        var hub = $.connection.notificationHub;

        $.connection.hub.start().done(function () {
           // console.log("Hub Started");
            hub.server.addToRoom(group);
        });

        hub.client.globalNotification = function (notification) {
            var to = {};
            to.timeOut = 60000;
            to.closeButton = true;
            Q.notifySuccess(notification, '', to);
        };

        window.onbeforeunload = function () {
        
                hub.server.removeFromRoom(group);            
        }
    });

    $(function () {

//        var group = getParameterByName('group');

        var chat = $.connection.notificationHub;
        // Create a function that the hub can call back to display messages.
        $.ajax({
            type: "GET",
            async: false,
            data: { 'GroupId': group },
            url: "NotificationList",
            success: function (data) {
                //console.log(data[1].Id);
                for (var counter = 0; counter < data.length; counter++)
                {
                    
                    var ChatInfo = document.createElement('div');
                    ChatInfo.className = 'direct-chat-info clearfix';

                    var Username  = document.createElement('span');
                    Username.className = 'direct-chat-name pull-left';
                    if (data[counter].ProvinceName != " ") {
                        Username.innerHTML = htmlEncode(data[counter].ProvinceName + " : " + data[counter].UserName);
                    } else { Username.innerHTML = htmlEncode(data[counter].UserName); }

                    ChatInfo.appendChild(Username);

                    var ChatDate = document.createElement('span');
                    ChatDate.className = 'direct-chat-timestamp pull-right';

                    ////////////////////////////////////////////////////////

                    ChatDate.innerHTML = htmlEncode(data[counter].InsertDate);
                    ChatInfo.appendChild(ChatDate);

                    document.getElementById('direct-chat-msg').appendChild(ChatInfo);

                    var img = document.createElement('img');
                    img.className = 'direct-chat-img';
                    var path = '';
                    if (data[counter].ImagePath == null) {
                         path = '../../upload/UserImage/00000/empty.jpg';
                    } else {
                         path = '../../upload/' + data[counter].ImagePath;
                    }
                    img.src = path;
                    img.alt = 'message user image';
                    document.getElementById('direct-chat-msg').appendChild(img);

                    var ChatBody = document.createElement('div');
                    ChatBody.className = 'direct-chat-text';
                    ChatBody.innerHTML = data[counter].Message;

                    var BreakBetweenElements = document.createElement('br');

                    document.getElementById('direct-chat-msg').appendChild(ChatBody);
                    document.getElementById('direct-chat-msg').appendChild(BreakBetweenElements);
                }     
            },
            dataType: "json"
        });
       
        chat.client.addNewMessageToPage = function (name, message,dbimagepath,ProvinceName) {

           
            // Add the message to the page.
            var ChatInfo = document.createElement('div');
            ChatInfo.className = 'direct-chat-info clearfix';

            var Username = document.createElement('span');
            Username.className = 'direct-chat-name pull-left';
            if (ProvinceName  != " ") {
                Username.innerHTML = htmlEncode(ProvinceName + " : " + name);
            } else { Username.innerHTML = htmlEncode(name); }
            ChatInfo.appendChild(Username);

            var ChatDate = document.createElement('span');
            ChatDate.className = 'direct-chat-timestamp pull-right';


            week= new Array("يكشنبه","دوشنبه","سه شنبه","چهارشنبه","پنج شنبه","جمعه","شنبه") 
            months = new Array("فروردين","ارديبهشت","خرداد","تير","مرداد","شهريور","مهر","آبان","آذر","دي","بهمن","اسفند"); 
            var timeInMs = new Date();
            d= timeInMs.getDay(); 
            day= timeInMs.getDate(); 
            month = timeInMs.getMonth()+1; 
            year= timeInMs.getYear(); 
            if (year== 0){year=2000;} 
            if (year<100){year +=1900;} 
            y=1; 
            for(i=0;i<3000;i+=4) { 
                if (year==i) {y=2;} 
            } 
            for(i=1;i<3000;i+=4) { 
                if (year==i) {y=3;} 
            } 
            if (y==1) { 
                year -= ( (month < 3) || ((month == 3) && (day < 21)) )? 622:621; 
                switch (month) { 
                    case 1: (day<21)? (month=10, day+=10):(month=11, day-=20); break; 
                    case 2: (day<20)? (month=11, day+=11):(month=12, day-=19); break; 
                    case 3: (day<21)? (month=12, day+=9):(month=1, day-=20);   break; 
                    case 4: (day<21)? (month=1, day+=11):(month=2, day-=20);   break; 
                    case 5: 
                    case 6: (day<22)? (month-=3, day+=10):(month-=2, day-=21); break; 
                    case 7: 
                    case 8: 
                    case 9: (day<23)? (month-=3, day+=9):(month-=2, day-=22);  break; 
                    case 10:(day<23)? (month=7, day+=8):(month=8, day-=22);    break; 
                    case 11: 
                    case 12:(day<22)? (month-=3, day+=9):(month-=2, day-=21);  break; 
                    default:          break; 
                } 
            } 
            if (y==2) { 
                year -= ( (month < 3) || ((month == 3) && (day < 20)) )? 622:621; 
                switch (month) { 
                    case 1: (day<21)? (month=10, day+=10):(month=11, day-=20); break; 
                    case 2: (day<20)? (month=11, day+=11):(month=12, day-=19); break; 
                    case 3: (day<20)? (month=12, day+=10):(month=1, day-=19);   break; 
                    case 4: (day<20)? (month=1, day+=12):(month=2, day-=19);   break; 
                    case 5: (day<21)? (month=2, day+=11):(month=3, day-=20);   break; 
                    case 6: (day<21)? (month=3, day+=11):(month=4, day-=20); break; 
                    case 7: (day<22)? (month=4, day+=10):(month=5, day-=21);   break; 
                    case 8: (day<22)? (month=5, day+=10):(month=6, day-=21);   break; 
                    case 9: (day<22)? (month=6, day+=10):(month=7, day-=21);  break; 
                    case 10:(day<22)? (month=7, day+=9):(month=8, day-=21);    break; 
                    case 11:(day<21)? (month=8, day+=10):(month=9, day-=20);   break; 
                    case 12:(day<21)? (month=9, day+=10):(month=10, day-=20);  break; 
                    default:          break; 
                } 
            } 
            if (y==3) { 
                year -= ( (month < 3) || ((month == 3) && (day < 21)) )? 622:621; 
                switch (month) { 
                    case 1: (day<20)? (month=10, day+=11):(month=11, day-=19); break; 
                    case 2: (day<19)? (month=11, day+=12):(month=12, day-=18); break; 
                    case 3: (day<21)? (month=12, day+=10):(month=1, day-=20);   break; 
                    case 4: (day<21)? (month=1, day+=11):(month=2, day-=20);   break; 
                    case 5: 
                    case 6: (day<22)? (month-=3, day+=10):(month-=2, day-=21); break; 
                    case 7: 
                    case 8: 
                    case 9: (day<23)? (month-=3, day+=9):(month-=2, day-=22);  break; 
                    case 10:(day<23)? (month=7, day+=8):(month=8, day-=22);    break; 
                    case 11: 
                    case 12:(day<22)? (month-=3, day+=9):(month-=2, day-=21);  break; 
                    default:          break; 
                } 
            } 
            

            function pad(n) {
                return (n < 10) ? ("0" + n) : n;
            }

            
            var hour = (timeInMs.getHours() < 10) ? ('۰' + timeInMs.getHours().toString()) : timeInMs.getHours().toString();
            var minute = (timeInMs.getMinutes() < 10) ? ('۰' + timeInMs.getMinutes().toString()) :  timeInMs.getMinutes().toString();
            var second = (timeInMs.getSeconds() < 10) ? ('۰' + timeInMs.getSeconds().toString()) : timeInMs.getSeconds().toString();
            
           
            var FormattedDate = hour + ":" + minute + ":" + second +" - "+ week[d] + "، " + day.toString() + " " + months[month - 1] + " ";
            ChatDate.innerHTML = htmlEncode(FormattedDate);

            ChatInfo.appendChild(ChatDate);

            document.getElementById('direct-chat-msg').appendChild(ChatInfo);

            var img = document.createElement('img');
            img.className = 'direct-chat-img';
            var path = '';
            if (dbimagepath == null) {
                path = '../../upload/UserImage/00000/empty.jpg';
            } else {
                path = '../../upload/' + dbimagepath;
            }
            img.src = path;

            img.alt = 'message user image';
            document.getElementById('direct-chat-msg').appendChild(img);

            var ChatBody = document.createElement('div');
            ChatBody.className = 'direct-chat-text';
            ChatBody.innerHTML = message;

            var BreakBetweenElements = document.createElement('br');

            document.getElementById('direct-chat-msg').appendChild(ChatBody);
            document.getElementById('direct-chat-msg').appendChild(BreakBetweenElements);
        };
       
        // Set initial focus to message input box.
        $('#message').focus();

        // Start the connection.
        $.connection.hub.start().done(function () {

            $('#sendmessage').click(function () {
               var DisplayName = '';
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "UserAttributes",
                    success: function (data) {
                       
                        name = data.Name;
                        provincename = data.ProvinceName;
                    },
                    dataType: "json"
                });

                chat.server.send(name, tinymce.get('message').getContent(), group);
                // Clear text box and reset focus for next comment.
                tinymce.get('message').setContent('');
                $('#message').val('').focus();
            });
        });

    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
   
</script>