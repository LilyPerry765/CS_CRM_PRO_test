#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CRM")]
	public partial class MainDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActionLog(ActionLog instance);
    partial void UpdateActionLog(ActionLog instance);
    partial void DeleteActionLog(ActionLog instance);
    partial void InsertAdameEmkanat(AdameEmkanat instance);
    partial void UpdateAdameEmkanat(AdameEmkanat instance);
    partial void DeleteAdameEmkanat(AdameEmkanat instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertAdjacentPost(AdjacentPost instance);
    partial void UpdateAdjacentPost(AdjacentPost instance);
    partial void DeleteAdjacentPost(AdjacentPost instance);
    partial void InsertADSL(ADSL instance);
    partial void UpdateADSL(ADSL instance);
    partial void DeleteADSL(ADSL instance);
    partial void InsertADSL1(ADSL1 instance);
    partial void UpdateADSL1(ADSL1 instance);
    partial void DeleteADSL1(ADSL1 instance);
    partial void InsertADSLAAAActionLog(ADSLAAAActionLog instance);
    partial void UpdateADSLAAAActionLog(ADSLAAAActionLog instance);
    partial void DeleteADSLAAAActionLog(ADSLAAAActionLog instance);
    partial void InsertADSLAAAType(ADSLAAAType instance);
    partial void UpdateADSLAAAType(ADSLAAAType instance);
    partial void DeleteADSLAAAType(ADSLAAAType instance);
    partial void InsertADSLAgentLog(ADSLAgentLog instance);
    partial void UpdateADSLAgentLog(ADSLAgentLog instance);
    partial void DeleteADSLAgentLog(ADSLAgentLog instance);
    partial void InsertADSLChangeCustomerOwnerCharacteristic(ADSLChangeCustomerOwnerCharacteristic instance);
    partial void UpdateADSLChangeCustomerOwnerCharacteristic(ADSLChangeCustomerOwnerCharacteristic instance);
    partial void DeleteADSLChangeCustomerOwnerCharacteristic(ADSLChangeCustomerOwnerCharacteristic instance);
    partial void InsertADSLChangeIPRequest(ADSLChangeIPRequest instance);
    partial void UpdateADSLChangeIPRequest(ADSLChangeIPRequest instance);
    partial void DeleteADSLChangeIPRequest(ADSLChangeIPRequest instance);
    partial void InsertADSLChangePlace(ADSLChangePlace instance);
    partial void UpdateADSLChangePlace(ADSLChangePlace instance);
    partial void DeleteADSLChangePlace(ADSLChangePlace instance);
    partial void InsertADSLChangePort1(ADSLChangePort1 instance);
    partial void UpdateADSLChangePort1(ADSLChangePort1 instance);
    partial void DeleteADSLChangePort1(ADSLChangePort1 instance);
    partial void InsertADSLChangePortReason(ADSLChangePortReason instance);
    partial void UpdateADSLChangePortReason(ADSLChangePortReason instance);
    partial void DeleteADSLChangePortReason(ADSLChangePortReason instance);
    partial void InsertADSLChangeService(ADSLChangeService instance);
    partial void UpdateADSLChangeService(ADSLChangeService instance);
    partial void DeleteADSLChangeService(ADSLChangeService instance);
    partial void InsertADSLCustomerGroup(ADSLCustomerGroup instance);
    partial void UpdateADSLCustomerGroup(ADSLCustomerGroup instance);
    partial void DeleteADSLCustomerGroup(ADSLCustomerGroup instance);
    partial void InsertADSLCustomerType(ADSLCustomerType instance);
    partial void UpdateADSLCustomerType(ADSLCustomerType instance);
    partial void DeleteADSLCustomerType(ADSLCustomerType instance);
    partial void InsertADSLCutTemporary(ADSLCutTemporary instance);
    partial void UpdateADSLCutTemporary(ADSLCutTemporary instance);
    partial void DeleteADSLCutTemporary(ADSLCutTemporary instance);
    partial void InsertADSLDischarge(ADSLDischarge instance);
    partial void UpdateADSLDischarge(ADSLDischarge instance);
    partial void DeleteADSLDischarge(ADSLDischarge instance);
    partial void InsertADSLDischargeReason(ADSLDischargeReason instance);
    partial void UpdateADSLDischargeReason(ADSLDischargeReason instance);
    partial void DeleteADSLDischargeReason(ADSLDischargeReason instance);
    partial void InsertADSLEquipment(ADSLEquipment instance);
    partial void UpdateADSLEquipment(ADSLEquipment instance);
    partial void DeleteADSLEquipment(ADSLEquipment instance);
    partial void InsertADSLGroupIP(ADSLGroupIP instance);
    partial void UpdateADSLGroupIP(ADSLGroupIP instance);
    partial void DeleteADSLGroupIP(ADSLGroupIP instance);
    partial void InsertADSLHistory(ADSLHistory instance);
    partial void UpdateADSLHistory(ADSLHistory instance);
    partial void DeleteADSLHistory(ADSLHistory instance);
    partial void InsertADSLInstalCostCenter(ADSLInstalCostCenter instance);
    partial void UpdateADSLInstalCostCenter(ADSLInstalCostCenter instance);
    partial void DeleteADSLInstalCostCenter(ADSLInstalCostCenter instance);
    partial void InsertADSLInstallRequest(ADSLInstallRequest instance);
    partial void UpdateADSLInstallRequest(ADSLInstallRequest instance);
    partial void DeleteADSLInstallRequest(ADSLInstallRequest instance);
    partial void InsertADSLIP(ADSLIP instance);
    partial void UpdateADSLIP(ADSLIP instance);
    partial void DeleteADSLIP(ADSLIP instance);
    partial void InsertADSLIPHistory(ADSLIPHistory instance);
    partial void UpdateADSLIPHistory(ADSLIPHistory instance);
    partial void DeleteADSLIPHistory(ADSLIPHistory instance);
    partial void InsertADSLIPType(ADSLIPType instance);
    partial void UpdateADSLIPType(ADSLIPType instance);
    partial void DeleteADSLIPType(ADSLIPType instance);
    partial void InsertADSLIRANRequest(ADSLIRANRequest instance);
    partial void UpdateADSLIRANRequest(ADSLIRANRequest instance);
    partial void DeleteADSLIRANRequest(ADSLIRANRequest instance);
    partial void InsertADSLMDFRange(ADSLMDFRange instance);
    partial void UpdateADSLMDFRange(ADSLMDFRange instance);
    partial void DeleteADSLMDFRange(ADSLMDFRange instance);
    partial void InsertADSLModem(ADSLModem instance);
    partial void UpdateADSLModem(ADSLModem instance);
    partial void DeleteADSLModem(ADSLModem instance);
    partial void InsertADSLModemProperty(ADSLModemProperty instance);
    partial void UpdateADSLModemProperty(ADSLModemProperty instance);
    partial void DeleteADSLModemProperty(ADSLModemProperty instance);
    partial void InsertADSLPAPCabinetAccuracy(ADSLPAPCabinetAccuracy instance);
    partial void UpdateADSLPAPCabinetAccuracy(ADSLPAPCabinetAccuracy instance);
    partial void DeleteADSLPAPCabinetAccuracy(ADSLPAPCabinetAccuracy instance);
    partial void InsertADSLPAPFeasibility(ADSLPAPFeasibility instance);
    partial void UpdateADSLPAPFeasibility(ADSLPAPFeasibility instance);
    partial void DeleteADSLPAPFeasibility(ADSLPAPFeasibility instance);
    partial void InsertADSLPAPPort(ADSLPAPPort instance);
    partial void UpdateADSLPAPPort(ADSLPAPPort instance);
    partial void DeleteADSLPAPPort(ADSLPAPPort instance);
    partial void InsertADSLPAPRequest(ADSLPAPRequest instance);
    partial void UpdateADSLPAPRequest(ADSLPAPRequest instance);
    partial void DeleteADSLPAPRequest(ADSLPAPRequest instance);
    partial void InsertADSLPort(ADSLPort instance);
    partial void UpdateADSLPort(ADSLPort instance);
    partial void DeleteADSLPort(ADSLPort instance);
    partial void InsertADSLPortType(ADSLPortType instance);
    partial void UpdateADSLPortType(ADSLPortType instance);
    partial void DeleteADSLPortType(ADSLPortType instance);
    partial void InsertADSLRequest(ADSLRequest instance);
    partial void UpdateADSLRequest(ADSLRequest instance);
    partial void DeleteADSLRequest(ADSLRequest instance);
    partial void InsertADSLSellerAgent(ADSLSellerAgent instance);
    partial void UpdateADSLSellerAgent(ADSLSellerAgent instance);
    partial void DeleteADSLSellerAgent(ADSLSellerAgent instance);
    partial void InsertADSLSellerAgentRecharge(ADSLSellerAgentRecharge instance);
    partial void UpdateADSLSellerAgentRecharge(ADSLSellerAgentRecharge instance);
    partial void DeleteADSLSellerAgentRecharge(ADSLSellerAgentRecharge instance);
    partial void InsertADSLSellerAgentUser(ADSLSellerAgentUser instance);
    partial void UpdateADSLSellerAgentUser(ADSLSellerAgentUser instance);
    partial void DeleteADSLSellerAgentUser(ADSLSellerAgentUser instance);
    partial void InsertADSLSellerAgentUserCredit(ADSLSellerAgentUserCredit instance);
    partial void UpdateADSLSellerAgentUserCredit(ADSLSellerAgentUserCredit instance);
    partial void DeleteADSLSellerAgentUserCredit(ADSLSellerAgentUserCredit instance);
    partial void InsertADSLSellerAgentUserRecharge(ADSLSellerAgentUserRecharge instance);
    partial void UpdateADSLSellerAgentUserRecharge(ADSLSellerAgentUserRecharge instance);
    partial void DeleteADSLSellerAgentUserRecharge(ADSLSellerAgentUserRecharge instance);
    partial void InsertADSLSellerGroup(ADSLSellerGroup instance);
    partial void UpdateADSLSellerGroup(ADSLSellerGroup instance);
    partial void DeleteADSLSellerGroup(ADSLSellerGroup instance);
    partial void InsertADSLSellTraffic(ADSLSellTraffic instance);
    partial void UpdateADSLSellTraffic(ADSLSellTraffic instance);
    partial void DeleteADSLSellTraffic(ADSLSellTraffic instance);
    partial void InsertADSLService(ADSLService instance);
    partial void UpdateADSLService(ADSLService instance);
    partial void DeleteADSLService(ADSLService instance);
    partial void InsertADSLService1(ADSLService1 instance);
    partial void UpdateADSLService1(ADSLService1 instance);
    partial void DeleteADSLService1(ADSLService1 instance);
    partial void InsertADSLServiceBandWidth(ADSLServiceBandWidth instance);
    partial void UpdateADSLServiceBandWidth(ADSLServiceBandWidth instance);
    partial void DeleteADSLServiceBandWidth(ADSLServiceBandWidth instance);
    partial void InsertADSLServiceCenter(ADSLServiceCenter instance);
    partial void UpdateADSLServiceCenter(ADSLServiceCenter instance);
    partial void DeleteADSLServiceCenter(ADSLServiceCenter instance);
    partial void InsertADSLServiceDuration(ADSLServiceDuration instance);
    partial void UpdateADSLServiceDuration(ADSLServiceDuration instance);
    partial void DeleteADSLServiceDuration(ADSLServiceDuration instance);
    partial void InsertADSLServiceGiftProfile(ADSLServiceGiftProfile instance);
    partial void UpdateADSLServiceGiftProfile(ADSLServiceGiftProfile instance);
    partial void DeleteADSLServiceGiftProfile(ADSLServiceGiftProfile instance);
    partial void InsertADSLServiceGroup(ADSLServiceGroup instance);
    partial void UpdateADSLServiceGroup(ADSLServiceGroup instance);
    partial void DeleteADSLServiceGroup(ADSLServiceGroup instance);
    partial void InsertADSLServiceGroupCenter(ADSLServiceGroupCenter instance);
    partial void UpdateADSLServiceGroupCenter(ADSLServiceGroupCenter instance);
    partial void DeleteADSLServiceGroupCenter(ADSLServiceGroupCenter instance);
    partial void InsertADSLServiceGroupSeller(ADSLServiceGroupSeller instance);
    partial void UpdateADSLServiceGroupSeller(ADSLServiceGroupSeller instance);
    partial void DeleteADSLServiceGroupSeller(ADSLServiceGroupSeller instance);
    partial void InsertADSLServiceNetwork(ADSLServiceNetwork instance);
    partial void UpdateADSLServiceNetwork(ADSLServiceNetwork instance);
    partial void DeleteADSLServiceNetwork(ADSLServiceNetwork instance);
    partial void InsertADSLServiceSeller(ADSLServiceSeller instance);
    partial void UpdateADSLServiceSeller(ADSLServiceSeller instance);
    partial void DeleteADSLServiceSeller(ADSLServiceSeller instance);
    partial void InsertADSLServiceTraffic(ADSLServiceTraffic instance);
    partial void UpdateADSLServiceTraffic(ADSLServiceTraffic instance);
    partial void DeleteADSLServiceTraffic(ADSLServiceTraffic instance);
    partial void InsertADSLSetupContactInformation(ADSLSetupContactInformation instance);
    partial void UpdateADSLSetupContactInformation(ADSLSetupContactInformation instance);
    partial void DeleteADSLSetupContactInformation(ADSLSetupContactInformation instance);
    partial void InsertADSLSupportCommnet(ADSLSupportCommnet instance);
    partial void UpdateADSLSupportCommnet(ADSLSupportCommnet instance);
    partial void DeleteADSLSupportCommnet(ADSLSupportCommnet instance);
    partial void InsertADSLSupportRequest(ADSLSupportRequest instance);
    partial void UpdateADSLSupportRequest(ADSLSupportRequest instance);
    partial void DeleteADSLSupportRequest(ADSLSupportRequest instance);
    partial void InsertADSLTelephoneAccuracy(ADSLTelephoneAccuracy instance);
    partial void UpdateADSLTelephoneAccuracy(ADSLTelephoneAccuracy instance);
    partial void DeleteADSLTelephoneAccuracy(ADSLTelephoneAccuracy instance);
    partial void InsertADSLTelephoneNoHistory(ADSLTelephoneNoHistory instance);
    partial void UpdateADSLTelephoneNoHistory(ADSLTelephoneNoHistory instance);
    partial void DeleteADSLTelephoneNoHistory(ADSLTelephoneNoHistory instance);
    partial void InsertADSLTrafficBaseCost(ADSLTrafficBaseCost instance);
    partial void UpdateADSLTrafficBaseCost(ADSLTrafficBaseCost instance);
    partial void DeleteADSLTrafficBaseCost(ADSLTrafficBaseCost instance);
    partial void InsertAnnounce(Announce instance);
    partial void UpdateAnnounce(Announce instance);
    partial void DeleteAnnounce(Announce instance);
    partial void InsertAnnounceTo118(AnnounceTo118 instance);
    partial void UpdateAnnounceTo118(AnnounceTo118 instance);
    partial void DeleteAnnounceTo118(AnnounceTo118 instance);
    partial void InsertAORBPostAndCabinet(AORBPostAndCabinet instance);
    partial void UpdateAORBPostAndCabinet(AORBPostAndCabinet instance);
    partial void DeleteAORBPostAndCabinet(AORBPostAndCabinet instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertBankBranch(BankBranch instance);
    partial void UpdateBankBranch(BankBranch instance);
    partial void DeleteBankBranch(BankBranch instance);
    partial void InsertBaseCost(BaseCost instance);
    partial void UpdateBaseCost(BaseCost instance);
    partial void DeleteBaseCost(BaseCost instance);
    partial void InsertBlackList(BlackList instance);
    partial void UpdateBlackList(BlackList instance);
    partial void DeleteBlackList(BlackList instance);
    partial void InsertBlackListReason(BlackListReason instance);
    partial void UpdateBlackListReason(BlackListReason instance);
    partial void DeleteBlackListReason(BlackListReason instance);
    partial void InsertBucht(Bucht instance);
    partial void UpdateBucht(Bucht instance);
    partial void DeleteBucht(Bucht instance);
    partial void InsertBuchtSwitching(BuchtSwitching instance);
    partial void UpdateBuchtSwitching(BuchtSwitching instance);
    partial void DeleteBuchtSwitching(BuchtSwitching instance);
    partial void InsertBuchtType(BuchtType instance);
    partial void UpdateBuchtType(BuchtType instance);
    partial void DeleteBuchtType(BuchtType instance);
    partial void InsertBuchtTypeNumberChange(BuchtTypeNumberChange instance);
    partial void UpdateBuchtTypeNumberChange(BuchtTypeNumberChange instance);
    partial void DeleteBuchtTypeNumberChange(BuchtTypeNumberChange instance);
    partial void InsertCabinet(Cabinet instance);
    partial void UpdateCabinet(Cabinet instance);
    partial void DeleteCabinet(Cabinet instance);
    partial void InsertCabinetInput(CabinetInput instance);
    partial void UpdateCabinetInput(CabinetInput instance);
    partial void DeleteCabinetInput(CabinetInput instance);
    partial void InsertCabinetInputDirection(CabinetInputDirection instance);
    partial void UpdateCabinetInputDirection(CabinetInputDirection instance);
    partial void DeleteCabinetInputDirection(CabinetInputDirection instance);
    partial void InsertCabinetInputStatus(CabinetInputStatus instance);
    partial void UpdateCabinetInputStatus(CabinetInputStatus instance);
    partial void DeleteCabinetInputStatus(CabinetInputStatus instance);
    partial void InsertCabinetStatus(CabinetStatus instance);
    partial void UpdateCabinetStatus(CabinetStatus instance);
    partial void DeleteCabinetStatus(CabinetStatus instance);
    partial void InsertCabinetType(CabinetType instance);
    partial void UpdateCabinetType(CabinetType instance);
    partial void DeleteCabinetType(CabinetType instance);
    partial void InsertCabinetUsageType(CabinetUsageType instance);
    partial void UpdateCabinetUsageType(CabinetUsageType instance);
    partial void DeleteCabinetUsageType(CabinetUsageType instance);
    partial void InsertCable(Cable instance);
    partial void UpdateCable(Cable instance);
    partial void DeleteCable(Cable instance);
    partial void InsertCableColor(CableColor instance);
    partial void UpdateCableColor(CableColor instance);
    partial void DeleteCableColor(CableColor instance);
    partial void InsertCableDesignOffice(CableDesignOffice instance);
    partial void UpdateCableDesignOffice(CableDesignOffice instance);
    partial void DeleteCableDesignOffice(CableDesignOffice instance);
    partial void InsertCablePair(CablePair instance);
    partial void UpdateCablePair(CablePair instance);
    partial void DeleteCablePair(CablePair instance);
    partial void InsertCableType(CableType instance);
    partial void UpdateCableType(CableType instance);
    partial void DeleteCableType(CableType instance);
    partial void InsertCableUsedChannel(CableUsedChannel instance);
    partial void UpdateCableUsedChannel(CableUsedChannel instance);
    partial void DeleteCableUsedChannel(CableUsedChannel instance);
    partial void InsertCancelationRequestList(CancelationRequestList instance);
    partial void UpdateCancelationRequestList(CancelationRequestList instance);
    partial void DeleteCancelationRequestList(CancelationRequestList instance);
    partial void InsertCauseBuchtSwitching(CauseBuchtSwitching instance);
    partial void UpdateCauseBuchtSwitching(CauseBuchtSwitching instance);
    partial void DeleteCauseBuchtSwitching(CauseBuchtSwitching instance);
    partial void InsertCauseOfChangeNo(CauseOfChangeNo instance);
    partial void UpdateCauseOfChangeNo(CauseOfChangeNo instance);
    partial void DeleteCauseOfChangeNo(CauseOfChangeNo instance);
    partial void InsertCauseOfCut(CauseOfCut instance);
    partial void UpdateCauseOfCut(CauseOfCut instance);
    partial void DeleteCauseOfCut(CauseOfCut instance);
    partial void InsertCauseOfRefundDeposit(CauseOfRefundDeposit instance);
    partial void UpdateCauseOfRefundDeposit(CauseOfRefundDeposit instance);
    partial void DeleteCauseOfRefundDeposit(CauseOfRefundDeposit instance);
    partial void InsertCauseOfTakePossession(CauseOfTakePossession instance);
    partial void UpdateCauseOfTakePossession(CauseOfTakePossession instance);
    partial void DeleteCauseOfTakePossession(CauseOfTakePossession instance);
    partial void InsertCenter(Center instance);
    partial void UpdateCenter(Center instance);
    partial void DeleteCenter(Center instance);
    partial void InsertCenterToCenterTranslation(CenterToCenterTranslation instance);
    partial void UpdateCenterToCenterTranslation(CenterToCenterTranslation instance);
    partial void DeleteCenterToCenterTranslation(CenterToCenterTranslation instance);
    partial void InsertCenterToCenterTranslationPCM(CenterToCenterTranslationPCM instance);
    partial void UpdateCenterToCenterTranslationPCM(CenterToCenterTranslationPCM instance);
    partial void DeleteCenterToCenterTranslationPCM(CenterToCenterTranslationPCM instance);
    partial void InsertCenterToCenterTranslationTelephone(CenterToCenterTranslationTelephone instance);
    partial void UpdateCenterToCenterTranslationTelephone(CenterToCenterTranslationTelephone instance);
    partial void DeleteCenterToCenterTranslationTelephone(CenterToCenterTranslationTelephone instance);
    partial void InsertCentralTelType(CentralTelType instance);
    partial void UpdateCentralTelType(CentralTelType instance);
    partial void DeleteCentralTelType(CentralTelType instance);
    partial void InsertChangeAddress(ChangeAddress instance);
    partial void UpdateChangeAddress(ChangeAddress instance);
    partial void DeleteChangeAddress(ChangeAddress instance);
    partial void InsertChangeLocation(ChangeLocation instance);
    partial void UpdateChangeLocation(ChangeLocation instance);
    partial void DeleteChangeLocation(ChangeLocation instance);
    partial void InsertChangeLocationSpecialWire(ChangeLocationSpecialWire instance);
    partial void UpdateChangeLocationSpecialWire(ChangeLocationSpecialWire instance);
    partial void DeleteChangeLocationSpecialWire(ChangeLocationSpecialWire instance);
    partial void InsertChangeLocationSpecialWirePoint(ChangeLocationSpecialWirePoint instance);
    partial void UpdateChangeLocationSpecialWirePoint(ChangeLocationSpecialWirePoint instance);
    partial void DeleteChangeLocationSpecialWirePoint(ChangeLocationSpecialWirePoint instance);
    partial void InsertChangeName(ChangeName instance);
    partial void UpdateChangeName(ChangeName instance);
    partial void DeleteChangeName(ChangeName instance);
    partial void InsertChangeNo(ChangeNo instance);
    partial void UpdateChangeNo(ChangeNo instance);
    partial void DeleteChangeNo(ChangeNo instance);
    partial void InsertChangeNoInstallLine(ChangeNoInstallLine instance);
    partial void UpdateChangeNoInstallLine(ChangeNoInstallLine instance);
    partial void DeleteChangeNoInstallLine(ChangeNoInstallLine instance);
    partial void InsertChangePreCode(ChangePreCode instance);
    partial void UpdateChangePreCode(ChangePreCode instance);
    partial void DeleteChangePreCode(ChangePreCode instance);
    partial void InsertChangeTelephoneType(ChangeTelephoneType instance);
    partial void UpdateChangeTelephoneType(ChangeTelephoneType instance);
    partial void DeleteChangeTelephoneType(ChangeTelephoneType instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertContractor(Contractor instance);
    partial void UpdateContractor(Contractor instance);
    partial void DeleteContractor(Contractor instance);
    partial void InsertControl(Control instance);
    partial void UpdateControl(Control instance);
    partial void DeleteControl(Control instance);
    partial void InsertCounter(Counter instance);
    partial void UpdateCounter(Counter instance);
    partial void DeleteCounter(Counter instance);
    partial void InsertCustomerGroup(CustomerGroup instance);
    partial void UpdateCustomerGroup(CustomerGroup instance);
    partial void DeleteCustomerGroup(CustomerGroup instance);
    partial void InsertCustomerType(CustomerType instance);
    partial void UpdateCustomerType(CustomerType instance);
    partial void DeleteCustomerType(CustomerType instance);
    partial void InsertCutAndEstablish(CutAndEstablish instance);
    partial void UpdateCutAndEstablish(CutAndEstablish instance);
    partial void DeleteCutAndEstablish(CutAndEstablish instance);
    partial void InsertCycle(Cycle instance);
    partial void UpdateCycle(Cycle instance);
    partial void DeleteCycle(Cycle instance);
    partial void InsertDamageLine(DamageLine instance);
    partial void UpdateDamageLine(DamageLine instance);
    partial void DeleteDamageLine(DamageLine instance);
    partial void InsertDataGridColumnConfig(DataGridColumnConfig instance);
    partial void UpdateDataGridColumnConfig(DataGridColumnConfig instance);
    partial void DeleteDataGridColumnConfig(DataGridColumnConfig instance);
    partial void InsertDocumentRequestType(DocumentRequestType instance);
    partial void UpdateDocumentRequestType(DocumentRequestType instance);
    partial void DeleteDocumentRequestType(DocumentRequestType instance);
    partial void InsertDocumentsFile(DocumentsFile instance);
    partial void UpdateDocumentsFile(DocumentsFile instance);
    partial void DeleteDocumentsFile(DocumentsFile instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertE1(E1 instance);
    partial void UpdateE1(E1 instance);
    partial void DeleteE1(E1 instance);
    partial void InsertE1Bay(E1Bay instance);
    partial void UpdateE1Bay(E1Bay instance);
    partial void DeleteE1Bay(E1Bay instance);
    partial void InsertE1CodeType(E1CodeType instance);
    partial void UpdateE1CodeType(E1CodeType instance);
    partial void DeleteE1CodeType(E1CodeType instance);
    partial void InsertE1DDF(E1DDF instance);
    partial void UpdateE1DDF(E1DDF instance);
    partial void DeleteE1DDF(E1DDF instance);
    partial void InsertE1Link(E1Link instance);
    partial void UpdateE1Link(E1Link instance);
    partial void DeleteE1Link(E1Link instance);
    partial void InsertE1LinkType(E1LinkType instance);
    partial void UpdateE1LinkType(E1LinkType instance);
    partial void DeleteE1LinkType(E1LinkType instance);
    partial void InsertE1Modem(E1Modem instance);
    partial void UpdateE1Modem(E1Modem instance);
    partial void DeleteE1Modem(E1Modem instance);
    partial void InsertE1Number(E1Number instance);
    partial void UpdateE1Number(E1Number instance);
    partial void DeleteE1Number(E1Number instance);
    partial void InsertE1Position(E1Position instance);
    partial void UpdateE1Position(E1Position instance);
    partial void DeleteE1Position(E1Position instance);
    partial void InsertEquipment(Equipment instance);
    partial void UpdateEquipment(Equipment instance);
    partial void DeleteEquipment(Equipment instance);
    partial void InsertErrorLog(ErrorLog instance);
    partial void UpdateErrorLog(ErrorLog instance);
    partial void DeleteErrorLog(ErrorLog instance);
    partial void InsertExchangeBrokenPCM(ExchangeBrokenPCM instance);
    partial void UpdateExchangeBrokenPCM(ExchangeBrokenPCM instance);
    partial void DeleteExchangeBrokenPCM(ExchangeBrokenPCM instance);
    partial void InsertExchangeCabinetInput(ExchangeCabinetInput instance);
    partial void UpdateExchangeCabinetInput(ExchangeCabinetInput instance);
    partial void DeleteExchangeCabinetInput(ExchangeCabinetInput instance);
    partial void InsertExchangeCabinetInputConncetion(ExchangeCabinetInputConncetion instance);
    partial void UpdateExchangeCabinetInputConncetion(ExchangeCabinetInputConncetion instance);
    partial void DeleteExchangeCabinetInputConncetion(ExchangeCabinetInputConncetion instance);
    partial void InsertExchangeCentralCableMDF(ExchangeCentralCableMDF instance);
    partial void UpdateExchangeCentralCableMDF(ExchangeCentralCableMDF instance);
    partial void DeleteExchangeCentralCableMDF(ExchangeCentralCableMDF instance);
    partial void InsertExchangeCentralCableMDFConncetion(ExchangeCentralCableMDFConncetion instance);
    partial void UpdateExchangeCentralCableMDFConncetion(ExchangeCentralCableMDFConncetion instance);
    partial void DeleteExchangeCentralCableMDFConncetion(ExchangeCentralCableMDFConncetion instance);
    partial void InsertExchangePost(ExchangePost instance);
    partial void UpdateExchangePost(ExchangePost instance);
    partial void DeleteExchangePost(ExchangePost instance);
    partial void InsertExchangeTelephoneNo(ExchangeTelephoneNo instance);
    partial void UpdateExchangeTelephoneNo(ExchangeTelephoneNo instance);
    partial void DeleteExchangeTelephoneNo(ExchangeTelephoneNo instance);
    partial void InsertFailure117(Failure117 instance);
    partial void UpdateFailure117(Failure117 instance);
    partial void DeleteFailure117(Failure117 instance);
    partial void InsertFailure117CabenitAccuracy(Failure117CabenitAccuracy instance);
    partial void UpdateFailure117CabenitAccuracy(Failure117CabenitAccuracy instance);
    partial void DeleteFailure117CabenitAccuracy(Failure117CabenitAccuracy instance);
    partial void InsertFailure117CableType(Failure117CableType instance);
    partial void UpdateFailure117CableType(Failure117CableType instance);
    partial void DeleteFailure117CableType(Failure117CableType instance);
    partial void InsertFailure117FailureStatus(Failure117FailureStatus instance);
    partial void UpdateFailure117FailureStatus(Failure117FailureStatus instance);
    partial void DeleteFailure117FailureStatus(Failure117FailureStatus instance);
    partial void InsertFailure117LineStatus(Failure117LineStatus instance);
    partial void UpdateFailure117LineStatus(Failure117LineStatus instance);
    partial void DeleteFailure117LineStatus(Failure117LineStatus instance);
    partial void InsertFailure117NetworkContractor(Failure117NetworkContractor instance);
    partial void UpdateFailure117NetworkContractor(Failure117NetworkContractor instance);
    partial void DeleteFailure117NetworkContractor(Failure117NetworkContractor instance);
    partial void InsertFailure117NetworkContractorCenter(Failure117NetworkContractorCenter instance);
    partial void UpdateFailure117NetworkContractorCenter(Failure117NetworkContractorCenter instance);
    partial void DeleteFailure117NetworkContractorCenter(Failure117NetworkContractorCenter instance);
    partial void InsertFailure117NetworkContractorOfficer(Failure117NetworkContractorOfficer instance);
    partial void UpdateFailure117NetworkContractorOfficer(Failure117NetworkContractorOfficer instance);
    partial void DeleteFailure117NetworkContractorOfficer(Failure117NetworkContractorOfficer instance);
    partial void InsertFailure117PostAccuracy(Failure117PostAccuracy instance);
    partial void UpdateFailure117PostAccuracy(Failure117PostAccuracy instance);
    partial void DeleteFailure117PostAccuracy(Failure117PostAccuracy instance);
    partial void InsertFailure117TelephoneAccuracy(Failure117TelephoneAccuracy instance);
    partial void UpdateFailure117TelephoneAccuracy(Failure117TelephoneAccuracy instance);
    partial void DeleteFailure117TelephoneAccuracy(Failure117TelephoneAccuracy instance);
    partial void InsertFailureForm(FailureForm instance);
    partial void UpdateFailureForm(FailureForm instance);
    partial void DeleteFailureForm(FailureForm instance);
    partial void InsertFiche(Fiche instance);
    partial void UpdateFiche(Fiche instance);
    partial void DeleteFiche(Fiche instance);
    partial void InsertFilter(Filter instance);
    partial void UpdateFilter(Filter instance);
    partial void DeleteFilter(Filter instance);
    partial void InsertFilterColumn(FilterColumn instance);
    partial void UpdateFilterColumn(FilterColumn instance);
    partial void DeleteFilterColumn(FilterColumn instance);
    partial void InsertFilterRule(FilterRule instance);
    partial void UpdateFilterRule(FilterRule instance);
    partial void DeleteFilterRule(FilterRule instance);
    partial void InsertFormTemplate(FormTemplate instance);
    partial void UpdateFormTemplate(FormTemplate instance);
    partial void DeleteFormTemplate(FormTemplate instance);
    partial void InsertInquiry(Inquiry instance);
    partial void UpdateInquiry(Inquiry instance);
    partial void DeleteInquiry(Inquiry instance);
    partial void InsertInquiryType(InquiryType instance);
    partial void UpdateInquiryType(InquiryType instance);
    partial void DeleteInquiryType(InquiryType instance);
    partial void InsertInquiryType1(InquiryType1 instance);
    partial void UpdateInquiryType1(InquiryType1 instance);
    partial void DeleteInquiryType1(InquiryType1 instance);
    partial void InsertInstallLine(InstallLine instance);
    partial void UpdateInstallLine(InstallLine instance);
    partial void DeleteInstallLine(InstallLine instance);
    partial void InsertInstallment(Installment instance);
    partial void UpdateInstallment(Installment instance);
    partial void DeleteInstallment(Installment instance);
    partial void InsertInstallmentRequestPayment(InstallmentRequestPayment instance);
    partial void UpdateInstallmentRequestPayment(InstallmentRequestPayment instance);
    partial void DeleteInstallmentRequestPayment(InstallmentRequestPayment instance);
    partial void InsertInstallmentRequestPaymentCorrection(InstallmentRequestPaymentCorrection instance);
    partial void UpdateInstallmentRequestPaymentCorrection(InstallmentRequestPaymentCorrection instance);
    partial void DeleteInstallmentRequestPaymentCorrection(InstallmentRequestPaymentCorrection instance);
    partial void InsertInvestigatePossibility(InvestigatePossibility instance);
    partial void UpdateInvestigatePossibility(InvestigatePossibility instance);
    partial void DeleteInvestigatePossibility(InvestigatePossibility instance);
    partial void InsertInvestigatePossibilityWaitinglist(InvestigatePossibilityWaitinglist instance);
    partial void UpdateInvestigatePossibilityWaitinglist(InvestigatePossibilityWaitinglist instance);
    partial void DeleteInvestigatePossibilityWaitinglist(InvestigatePossibilityWaitinglist instance);
    partial void InsertIssueWiring(IssueWiring instance);
    partial void UpdateIssueWiring(IssueWiring instance);
    partial void DeleteIssueWiring(IssueWiring instance);
    partial void InsertJobGroup(JobGroup instance);
    partial void UpdateJobGroup(JobGroup instance);
    partial void DeleteJobGroup(JobGroup instance);
    partial void InsertLinesman(Linesman instance);
    partial void UpdateLinesman(Linesman instance);
    partial void DeleteLinesman(Linesman instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertLogicalOperator(LogicalOperator instance);
    partial void UpdateLogicalOperator(LogicalOperator instance);
    partial void DeleteLogicalOperator(LogicalOperator instance);
    partial void InsertMalfuction(Malfuction instance);
    partial void UpdateMalfuction(Malfuction instance);
    partial void DeleteMalfuction(Malfuction instance);
    partial void InsertMatchPossibility(MatchPossibility instance);
    partial void UpdateMatchPossibility(MatchPossibility instance);
    partial void DeleteMatchPossibility(MatchPossibility instance);
    partial void InsertMDF(MDF instance);
    partial void UpdateMDF(MDF instance);
    partial void DeleteMDF(MDF instance);
    partial void InsertMDF1(MDF1 instance);
    partial void UpdateMDF1(MDF1 instance);
    partial void DeleteMDF1(MDF1 instance);
    partial void InsertMDFFrame(MDFFrame instance);
    partial void UpdateMDFFrame(MDFFrame instance);
    partial void DeleteMDFFrame(MDFFrame instance);
    partial void InsertMDFPersonnel(MDFPersonnel instance);
    partial void UpdateMDFPersonnel(MDFPersonnel instance);
    partial void DeleteMDFPersonnel(MDFPersonnel instance);
    partial void InsertMDFWiring(MDFWiring instance);
    partial void UpdateMDFWiring(MDFWiring instance);
    partial void DeleteMDFWiring(MDFWiring instance);
    partial void InsertMDFWorkingHour(MDFWorkingHour instance);
    partial void UpdateMDFWorkingHour(MDFWorkingHour instance);
    partial void DeleteMDFWorkingHour(MDFWorkingHour instance);
    partial void InsertModifyProfile(ModifyProfile instance);
    partial void UpdateModifyProfile(ModifyProfile instance);
    partial void DeleteModifyProfile(ModifyProfile instance);
    partial void InsertMortgage(Mortgage instance);
    partial void UpdateMortgage(Mortgage instance);
    partial void DeleteMortgage(Mortgage instance);
    partial void InsertNetworkWiring(NetworkWiring instance);
    partial void UpdateNetworkWiring(NetworkWiring instance);
    partial void DeleteNetworkWiring(NetworkWiring instance);
    partial void InsertNotice(Notice instance);
    partial void UpdateNotice(Notice instance);
    partial void DeleteNotice(Notice instance);
    partial void InsertOffice(Office instance);
    partial void UpdateOffice(Office instance);
    partial void DeleteOffice(Office instance);
    partial void InsertOfficeEmployee(OfficeEmployee instance);
    partial void UpdateOfficeEmployee(OfficeEmployee instance);
    partial void DeleteOfficeEmployee(OfficeEmployee instance);
    partial void InsertONULink(ONULink instance);
    partial void UpdateONULink(ONULink instance);
    partial void DeleteONULink(ONULink instance);
    partial void InsertOtherCost(OtherCost instance);
    partial void UpdateOtherCost(OtherCost instance);
    partial void DeleteOtherCost(OtherCost instance);
    partial void InsertPAPInfo(PAPInfo instance);
    partial void UpdatePAPInfo(PAPInfo instance);
    partial void DeletePAPInfo(PAPInfo instance);
    partial void InsertPAPInfoCost(PAPInfoCost instance);
    partial void UpdatePAPInfoCost(PAPInfoCost instance);
    partial void DeletePAPInfoCost(PAPInfoCost instance);
    partial void InsertPAPInfoCostHistory(PAPInfoCostHistory instance);
    partial void UpdatePAPInfoCostHistory(PAPInfoCostHistory instance);
    partial void DeletePAPInfoCostHistory(PAPInfoCostHistory instance);
    partial void InsertPAPInfoLimitation(PAPInfoLimitation instance);
    partial void UpdatePAPInfoLimitation(PAPInfoLimitation instance);
    partial void DeletePAPInfoLimitation(PAPInfoLimitation instance);
    partial void InsertPAPInfoOperatingStatus(PAPInfoOperatingStatus instance);
    partial void UpdatePAPInfoOperatingStatus(PAPInfoOperatingStatus instance);
    partial void DeletePAPInfoOperatingStatus(PAPInfoOperatingStatus instance);
    partial void InsertPAPInfoSpaceandPower(PAPInfoSpaceandPower instance);
    partial void UpdatePAPInfoSpaceandPower(PAPInfoSpaceandPower instance);
    partial void DeletePAPInfoSpaceandPower(PAPInfoSpaceandPower instance);
    partial void InsertPAPInfoUser(PAPInfoUser instance);
    partial void UpdatePAPInfoUser(PAPInfoUser instance);
    partial void DeletePAPInfoUser(PAPInfoUser instance);
    partial void InsertParazitControl(ParazitControl instance);
    partial void UpdateParazitControl(ParazitControl instance);
    partial void DeleteParazitControl(ParazitControl instance);
    partial void InsertPaymentFiche(PaymentFiche instance);
    partial void UpdatePaymentFiche(PaymentFiche instance);
    partial void DeletePaymentFiche(PaymentFiche instance);
    partial void InsertPCM(PCM instance);
    partial void UpdatePCM(PCM instance);
    partial void DeletePCM(PCM instance);
    partial void InsertPCMBrand(PCMBrand instance);
    partial void UpdatePCMBrand(PCMBrand instance);
    partial void DeletePCMBrand(PCMBrand instance);
    partial void InsertPCMDevice(PCMDevice instance);
    partial void UpdatePCMDevice(PCMDevice instance);
    partial void DeletePCMDevice(PCMDevice instance);
    partial void InsertPCMPort(PCMPort instance);
    partial void UpdatePCMPort(PCMPort instance);
    partial void DeletePCMPort(PCMPort instance);
    partial void InsertPCMRock(PCMRock instance);
    partial void UpdatePCMRock(PCMRock instance);
    partial void DeletePCMRock(PCMRock instance);
    partial void InsertPCMShelf(PCMShelf instance);
    partial void UpdatePCMShelf(PCMShelf instance);
    partial void DeletePCMShelf(PCMShelf instance);
    partial void InsertPCMType(PCMType instance);
    partial void UpdatePCMType(PCMType instance);
    partial void DeletePCMType(PCMType instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertPostContact(PostContact instance);
    partial void UpdatePostContact(PostContact instance);
    partial void DeletePostContact(PostContact instance);
    partial void InsertPostContactConnectionType(PostContactConnectionType instance);
    partial void UpdatePostContactConnectionType(PostContactConnectionType instance);
    partial void DeletePostContactConnectionType(PostContactConnectionType instance);
    partial void InsertPostContactEquipment(PostContactEquipment instance);
    partial void UpdatePostContactEquipment(PostContactEquipment instance);
    partial void DeletePostContactEquipment(PostContactEquipment instance);
    partial void InsertPostContactStatus(PostContactStatus instance);
    partial void UpdatePostContactStatus(PostContactStatus instance);
    partial void DeletePostContactStatus(PostContactStatus instance);
    partial void InsertPostGroup(PostGroup instance);
    partial void UpdatePostGroup(PostGroup instance);
    partial void DeletePostGroup(PostGroup instance);
    partial void InsertPostStatus(PostStatus instance);
    partial void UpdatePostStatus(PostStatus instance);
    partial void DeletePostStatus(PostStatus instance);
    partial void InsertPostType(PostType instance);
    partial void UpdatePostType(PostType instance);
    partial void DeletePostType(PostType instance);
    partial void InsertPowerOffice(PowerOffice instance);
    partial void UpdatePowerOffice(PowerOffice instance);
    partial void DeletePowerOffice(PowerOffice instance);
    partial void InsertPowerType(PowerType instance);
    partial void UpdatePowerType(PowerType instance);
    partial void DeletePowerType(PowerType instance);
    partial void InsertProvince(Province instance);
    partial void UpdateProvince(Province instance);
    partial void DeleteProvince(Province instance);
    partial void InsertQuotaDiscount(QuotaDiscount instance);
    partial void UpdateQuotaDiscount(QuotaDiscount instance);
    partial void DeleteQuotaDiscount(QuotaDiscount instance);
    partial void InsertQuotaJobTitle(QuotaJobTitle instance);
    partial void UpdateQuotaJobTitle(QuotaJobTitle instance);
    partial void DeleteQuotaJobTitle(QuotaJobTitle instance);
    partial void InsertReferenceDocument(ReferenceDocument instance);
    partial void UpdateReferenceDocument(ReferenceDocument instance);
    partial void DeleteReferenceDocument(ReferenceDocument instance);
    partial void InsertRefundDeposit(RefundDeposit instance);
    partial void UpdateRefundDeposit(RefundDeposit instance);
    partial void DeleteRefundDeposit(RefundDeposit instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertRegularExpression(RegularExpression instance);
    partial void UpdateRegularExpression(RegularExpression instance);
    partial void DeleteRegularExpression(RegularExpression instance);
    partial void InsertRelationalOperator(RelationalOperator instance);
    partial void UpdateRelationalOperator(RelationalOperator instance);
    partial void DeleteRelationalOperator(RelationalOperator instance);
    partial void InsertReportAndAnnouncement(ReportAndAnnouncement instance);
    partial void UpdateReportAndAnnouncement(ReportAndAnnouncement instance);
    partial void DeleteReportAndAnnouncement(ReportAndAnnouncement instance);
    partial void InsertReportTemplate(ReportTemplate instance);
    partial void UpdateReportTemplate(ReportTemplate instance);
    partial void DeleteReportTemplate(ReportTemplate instance);
    partial void InsertReportType(ReportType instance);
    partial void UpdateReportType(ReportType instance);
    partial void DeleteReportType(ReportType instance);
    partial void InsertRequest(Request instance);
    partial void UpdateRequest(Request instance);
    partial void DeleteRequest(Request instance);
    partial void InsertRequestActionLog(RequestActionLog instance);
    partial void UpdateRequestActionLog(RequestActionLog instance);
    partial void DeleteRequestActionLog(RequestActionLog instance);
    partial void InsertRequestDocument(RequestDocument instance);
    partial void UpdateRequestDocument(RequestDocument instance);
    partial void DeleteRequestDocument(RequestDocument instance);
    partial void InsertRequestForm(RequestForm instance);
    partial void UpdateRequestForm(RequestForm instance);
    partial void DeleteRequestForm(RequestForm instance);
    partial void InsertRequestLog(RequestLog instance);
    partial void UpdateRequestLog(RequestLog instance);
    partial void DeleteRequestLog(RequestLog instance);
    partial void InsertRequestPayment(RequestPayment instance);
    partial void UpdateRequestPayment(RequestPayment instance);
    partial void DeleteRequestPayment(RequestPayment instance);
    partial void InsertRequestRejectReason(RequestRejectReason instance);
    partial void UpdateRequestRejectReason(RequestRejectReason instance);
    partial void DeleteRequestRejectReason(RequestRejectReason instance);
    partial void InsertRequestStep(RequestStep instance);
    partial void UpdateRequestStep(RequestStep instance);
    partial void DeleteRequestStep(RequestStep instance);
    partial void InsertRequestType(RequestType instance);
    partial void UpdateRequestType(RequestType instance);
    partial void DeleteRequestType(RequestType instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertRock(Rock instance);
    partial void UpdateRock(Rock instance);
    partial void DeleteRock(Rock instance);
    partial void InsertRoleReportTemplate(RoleReportTemplate instance);
    partial void UpdateRoleReportTemplate(RoleReportTemplate instance);
    partial void DeleteRoleReportTemplate(RoleReportTemplate instance);
    partial void InsertRoleRequestStep(RoleRequestStep instance);
    partial void UpdateRoleRequestStep(RoleRequestStep instance);
    partial void DeleteRoleRequestStep(RoleRequestStep instance);
    partial void InsertRoleResource(RoleResource instance);
    partial void UpdateRoleResource(RoleResource instance);
    partial void DeleteRoleResource(RoleResource instance);
    partial void InsertRoundSaleInfo(RoundSaleInfo instance);
    partial void UpdateRoundSaleInfo(RoundSaleInfo instance);
    partial void DeleteRoundSaleInfo(RoundSaleInfo instance);
    partial void InsertSavedLog(SavedLog instance);
    partial void UpdateSavedLog(SavedLog instance);
    partial void DeleteSavedLog(SavedLog instance);
    partial void InsertSelectTelephone(SelectTelephone instance);
    partial void UpdateSelectTelephone(SelectTelephone instance);
    partial void DeleteSelectTelephone(SelectTelephone instance);
    partial void InsertServiceMethod(ServiceMethod instance);
    partial void UpdateServiceMethod(ServiceMethod instance);
    partial void DeleteServiceMethod(ServiceMethod instance);
    partial void InsertServiceUser(ServiceUser instance);
    partial void UpdateServiceUser(ServiceUser instance);
    partial void DeleteServiceUser(ServiceUser instance);
    partial void InsertServiceUserMethod(ServiceUserMethod instance);
    partial void UpdateServiceUserMethod(ServiceUserMethod instance);
    partial void DeleteServiceUserMethod(ServiceUserMethod instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertShelf(Shelf instance);
    partial void UpdateShelf(Shelf instance);
    partial void DeleteShelf(Shelf instance);
    partial void InsertSMSService(SMSService instance);
    partial void UpdateSMSService(SMSService instance);
    partial void DeleteSMSService(SMSService instance);
    partial void InsertSpaceAndPower(SpaceAndPower instance);
    partial void UpdateSpaceAndPower(SpaceAndPower instance);
    partial void DeleteSpaceAndPower(SpaceAndPower instance);
    partial void InsertSpaceAndPowerCustomer(SpaceAndPowerCustomer instance);
    partial void UpdateSpaceAndPowerCustomer(SpaceAndPowerCustomer instance);
    partial void DeleteSpaceAndPowerCustomer(SpaceAndPowerCustomer instance);
    partial void InsertSpaceAndPowerPowerType(SpaceAndPowerPowerType instance);
    partial void UpdateSpaceAndPowerPowerType(SpaceAndPowerPowerType instance);
    partial void DeleteSpaceAndPowerPowerType(SpaceAndPowerPowerType instance);
    partial void InsertSpecialConditionPrioritize(SpecialConditionPrioritize instance);
    partial void UpdateSpecialConditionPrioritize(SpecialConditionPrioritize instance);
    partial void DeleteSpecialConditionPrioritize(SpecialConditionPrioritize instance);
    partial void InsertSpecialCondition(SpecialCondition instance);
    partial void UpdateSpecialCondition(SpecialCondition instance);
    partial void DeleteSpecialCondition(SpecialCondition instance);
    partial void InsertSpecialPrivateCable(SpecialPrivateCable instance);
    partial void UpdateSpecialPrivateCable(SpecialPrivateCable instance);
    partial void DeleteSpecialPrivateCable(SpecialPrivateCable instance);
    partial void InsertSpecialService(SpecialService instance);
    partial void UpdateSpecialService(SpecialService instance);
    partial void DeleteSpecialService(SpecialService instance);
    partial void InsertSpecialServiceType(SpecialServiceType instance);
    partial void UpdateSpecialServiceType(SpecialServiceType instance);
    partial void DeleteSpecialServiceType(SpecialServiceType instance);
    partial void InsertSpecialWire(SpecialWire instance);
    partial void UpdateSpecialWire(SpecialWire instance);
    partial void DeleteSpecialWire(SpecialWire instance);
    partial void InsertSpecialWireAddress(SpecialWireAddress instance);
    partial void UpdateSpecialWireAddress(SpecialWireAddress instance);
    partial void DeleteSpecialWireAddress(SpecialWireAddress instance);
    partial void InsertSpecialWirePoint(SpecialWirePoint instance);
    partial void UpdateSpecialWirePoint(SpecialWirePoint instance);
    partial void DeleteSpecialWirePoint(SpecialWirePoint instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertStatusLog(StatusLog instance);
    partial void UpdateStatusLog(StatusLog instance);
    partial void DeleteStatusLog(StatusLog instance);
    partial void InsertSubFlowStatus(SubFlowStatus instance);
    partial void UpdateSubFlowStatus(SubFlowStatus instance);
    partial void DeleteSubFlowStatus(SubFlowStatus instance);
    partial void InsertSubsidiaryCode(SubsidiaryCode instance);
    partial void UpdateSubsidiaryCode(SubsidiaryCode instance);
    partial void DeleteSubsidiaryCode(SubsidiaryCode instance);
    partial void InsertSugesstionPossibility(SugesstionPossibility instance);
    partial void UpdateSugesstionPossibility(SugesstionPossibility instance);
    partial void DeleteSugesstionPossibility(SugesstionPossibility instance);
    partial void InsertSwapPCM(SwapPCM instance);
    partial void UpdateSwapPCM(SwapPCM instance);
    partial void DeleteSwapPCM(SwapPCM instance);
    partial void InsertSwapTelephone(SwapTelephone instance);
    partial void UpdateSwapTelephone(SwapTelephone instance);
    partial void DeleteSwapTelephone(SwapTelephone instance);
    partial void InsertSwitch(Switch instance);
    partial void UpdateSwitch(Switch instance);
    partial void DeleteSwitch(Switch instance);
    partial void InsertSwitchOffice(SwitchOffice instance);
    partial void UpdateSwitchOffice(SwitchOffice instance);
    partial void DeleteSwitchOffice(SwitchOffice instance);
    partial void InsertSwitchPort(SwitchPort instance);
    partial void UpdateSwitchPort(SwitchPort instance);
    partial void DeleteSwitchPort(SwitchPort instance);
    partial void InsertSwitchPrecode(SwitchPrecode instance);
    partial void UpdateSwitchPrecode(SwitchPrecode instance);
    partial void DeleteSwitchPrecode(SwitchPrecode instance);
    partial void InsertSwitchSpecialService(SwitchSpecialService instance);
    partial void UpdateSwitchSpecialService(SwitchSpecialService instance);
    partial void DeleteSwitchSpecialService(SwitchSpecialService instance);
    partial void InsertSwitchTransition(SwitchTransition instance);
    partial void UpdateSwitchTransition(SwitchTransition instance);
    partial void DeleteSwitchTransition(SwitchTransition instance);
    partial void InsertSwitchType(SwitchType instance);
    partial void UpdateSwitchType(SwitchType instance);
    partial void DeleteSwitchType(SwitchType instance);
    partial void InsertSystemChange(SystemChange instance);
    partial void UpdateSystemChange(SystemChange instance);
    partial void DeleteSystemChange(SystemChange instance);
    partial void InsertTakePossession(TakePossession instance);
    partial void UpdateTakePossession(TakePossession instance);
    partial void DeleteTakePossession(TakePossession instance);
    partial void InsertTelecomminucationService(TelecomminucationService instance);
    partial void UpdateTelecomminucationService(TelecomminucationService instance);
    partial void DeleteTelecomminucationService(TelecomminucationService instance);
    partial void InsertTelephone(Telephone instance);
    partial void UpdateTelephone(Telephone instance);
    partial void DeleteTelephone(Telephone instance);
    partial void InsertTelephoneCycleFiche(TelephoneCycleFiche instance);
    partial void UpdateTelephoneCycleFiche(TelephoneCycleFiche instance);
    partial void DeleteTelephoneCycleFiche(TelephoneCycleFiche instance);
    partial void InsertTelephonePBX(TelephonePBX instance);
    partial void UpdateTelephonePBX(TelephonePBX instance);
    partial void DeleteTelephonePBX(TelephonePBX instance);
    partial void InsertTelephoneSpecialServiceType(TelephoneSpecialServiceType instance);
    partial void UpdateTelephoneSpecialServiceType(TelephoneSpecialServiceType instance);
    partial void DeleteTelephoneSpecialServiceType(TelephoneSpecialServiceType instance);
    partial void InsertTelephoneStatusLog(TelephoneStatusLog instance);
    partial void UpdateTelephoneStatusLog(TelephoneStatusLog instance);
    partial void DeleteTelephoneStatusLog(TelephoneStatusLog instance);
    partial void InsertTelephoneTemp(TelephoneTemp instance);
    partial void UpdateTelephoneTemp(TelephoneTemp instance);
    partial void DeleteTelephoneTemp(TelephoneTemp instance);
    partial void InsertTelRoundSale(TelRoundSale instance);
    partial void UpdateTelRoundSale(TelRoundSale instance);
    partial void DeleteTelRoundSale(TelRoundSale instance);
    partial void InsertTitleIn118(TitleIn118 instance);
    partial void UpdateTitleIn118(TitleIn118 instance);
    partial void DeleteTitleIn118(TitleIn118 instance);
    partial void InsertTransferDepartmentOffice(TransferDepartmentOffice instance);
    partial void UpdateTransferDepartmentOffice(TransferDepartmentOffice instance);
    partial void DeleteTransferDepartmentOffice(TransferDepartmentOffice instance);
    partial void InsertTransferFileInfo(TransferFileInfo instance);
    partial void UpdateTransferFileInfo(TransferFileInfo instance);
    partial void DeleteTransferFileInfo(TransferFileInfo instance);
    partial void InsertTranslationOpticalCabinetToNormal(TranslationOpticalCabinetToNormal instance);
    partial void UpdateTranslationOpticalCabinetToNormal(TranslationOpticalCabinetToNormal instance);
    partial void DeleteTranslationOpticalCabinetToNormal(TranslationOpticalCabinetToNormal instance);
    partial void InsertTranslationOpticalCabinetToNormalConncetion(TranslationOpticalCabinetToNormalConncetion instance);
    partial void UpdateTranslationOpticalCabinetToNormalConncetion(TranslationOpticalCabinetToNormalConncetion instance);
    partial void DeleteTranslationOpticalCabinetToNormalConncetion(TranslationOpticalCabinetToNormalConncetion instance);
    partial void InsertTranslationOpticalCabinetToNormalTelephone(TranslationOpticalCabinetToNormalTelephone instance);
    partial void UpdateTranslationOpticalCabinetToNormalTelephone(TranslationOpticalCabinetToNormalTelephone instance);
    partial void DeleteTranslationOpticalCabinetToNormalTelephone(TranslationOpticalCabinetToNormalTelephone instance);
    partial void InsertTranslationPCMToNormal(TranslationPCMToNormal instance);
    partial void UpdateTranslationPCMToNormal(TranslationPCMToNormal instance);
    partial void DeleteTranslationPCMToNormal(TranslationPCMToNormal instance);
    partial void InsertTranslationPost(TranslationPost instance);
    partial void UpdateTranslationPost(TranslationPost instance);
    partial void DeleteTranslationPost(TranslationPost instance);
    partial void InsertTranslationPostInput(TranslationPostInput instance);
    partial void UpdateTranslationPostInput(TranslationPostInput instance);
    partial void DeleteTranslationPostInput(TranslationPostInput instance);
    partial void InsertTranslationPostInputConnection(TranslationPostInputConnection instance);
    partial void UpdateTranslationPostInputConnection(TranslationPostInputConnection instance);
    partial void DeleteTranslationPostInputConnection(TranslationPostInputConnection instance);
    partial void InsertUnitMeasure(UnitMeasure instance);
    partial void UpdateUnitMeasure(UnitMeasure instance);
    partial void DeleteUnitMeasure(UnitMeasure instance);
    partial void InsertUsedProduct(UsedProduct instance);
    partial void UpdateUsedProduct(UsedProduct instance);
    partial void DeleteUsedProduct(UsedProduct instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserCenter(UserCenter instance);
    partial void UpdateUserCenter(UserCenter instance);
    partial void DeleteUserCenter(UserCenter instance);
    partial void InsertVacateE1(VacateE1 instance);
    partial void UpdateVacateE1(VacateE1 instance);
    partial void DeleteVacateE1(VacateE1 instance);
    partial void InsertVacateSpecialWire(VacateSpecialWire instance);
    partial void UpdateVacateSpecialWire(VacateSpecialWire instance);
    partial void DeleteVacateSpecialWire(VacateSpecialWire instance);
    partial void InsertVacateSpecialWirePoint(VacateSpecialWirePoint instance);
    partial void UpdateVacateSpecialWirePoint(VacateSpecialWirePoint instance);
    partial void DeleteVacateSpecialWirePoint(VacateSpecialWirePoint instance);
    partial void InsertVerticalMDFColumn(VerticalMDFColumn instance);
    partial void UpdateVerticalMDFColumn(VerticalMDFColumn instance);
    partial void DeleteVerticalMDFColumn(VerticalMDFColumn instance);
    partial void InsertVerticalMDFRow(VerticalMDFRow instance);
    partial void UpdateVerticalMDFRow(VerticalMDFRow instance);
    partial void DeleteVerticalMDFRow(VerticalMDFRow instance);
    partial void InsertVisitAddress(VisitAddress instance);
    partial void UpdateVisitAddress(VisitAddress instance);
    partial void DeleteVisitAddress(VisitAddress instance);
    partial void InsertVisitPlacesCabinetAndPost(VisitPlacesCabinetAndPost instance);
    partial void UpdateVisitPlacesCabinetAndPost(VisitPlacesCabinetAndPost instance);
    partial void DeleteVisitPlacesCabinetAndPost(VisitPlacesCabinetAndPost instance);
    partial void InsertWaitingList(WaitingList instance);
    partial void UpdateWaitingList(WaitingList instance);
    partial void DeleteWaitingList(WaitingList instance);
    partial void InsertWaitingListReason(WaitingListReason instance);
    partial void UpdateWaitingListReason(WaitingListReason instance);
    partial void DeleteWaitingListReason(WaitingListReason instance);
    partial void InsertWarningHistory(WarningHistory instance);
    partial void UpdateWarningHistory(WarningHistory instance);
    partial void DeleteWarningHistory(WarningHistory instance);
    partial void InsertWarningMessage(WarningMessage instance);
    partial void UpdateWarningMessage(WarningMessage instance);
    partial void DeleteWarningMessage(WarningMessage instance);
    partial void InsertWireless(Wireless instance);
    partial void UpdateWireless(Wireless instance);
    partial void DeleteWireless(Wireless instance);
    partial void InsertWirelessChangeService(WirelessChangeService instance);
    partial void UpdateWirelessChangeService(WirelessChangeService instance);
    partial void DeleteWirelessChangeService(WirelessChangeService instance);
    partial void InsertWirelessRequest(WirelessRequest instance);
    partial void UpdateWirelessRequest(WirelessRequest instance);
    partial void DeleteWirelessRequest(WirelessRequest instance);
    partial void InsertWirelessSellTraffic(WirelessSellTraffic instance);
    partial void UpdateWirelessSellTraffic(WirelessSellTraffic instance);
    partial void DeleteWirelessSellTraffic(WirelessSellTraffic instance);
    partial void InsertWiring(Wiring instance);
    partial void UpdateWiring(Wiring instance);
    partial void DeleteWiring(Wiring instance);
    partial void InsertWorkFlowLog(WorkFlowLog instance);
    partial void UpdateWorkFlowLog(WorkFlowLog instance);
    partial void DeleteWorkFlowLog(WorkFlowLog instance);
    partial void InsertWorkFlowRule(WorkFlowRule instance);
    partial void UpdateWorkFlowRule(WorkFlowRule instance);
    partial void DeleteWorkFlowRule(WorkFlowRule instance);
    partial void InsertWorkFlowVersion(WorkFlowVersion instance);
    partial void UpdateWorkFlowVersion(WorkFlowVersion instance);
    partial void DeleteWorkFlowVersion(WorkFlowVersion instance);
    partial void InsertWorkUnit(WorkUnit instance);
    partial void UpdateWorkUnit(WorkUnit instance);
    partial void DeleteWorkUnit(WorkUnit instance);
    partial void InsertWorkUnitAction(WorkUnitAction instance);
    partial void UpdateWorkUnitAction(WorkUnitAction instance);
    partial void DeleteWorkUnitAction(WorkUnitAction instance);
    partial void InsertExchangeGSM(ExchangeGSM instance);
    partial void UpdateExchangeGSM(ExchangeGSM instance);
    partial void DeleteExchangeGSM(ExchangeGSM instance);
    partial void InsertExchangeGSMConnection(ExchangeGSMConnection instance);
    partial void UpdateExchangeGSMConnection(ExchangeGSMConnection instance);
    partial void DeleteExchangeGSMConnection(ExchangeGSMConnection instance);
    partial void InsertTelecomminucationServicePayment(TelecomminucationServicePayment instance);
    partial void UpdateTelecomminucationServicePayment(TelecomminucationServicePayment instance);
    partial void DeleteTelecomminucationServicePayment(TelecomminucationServicePayment instance);
    partial void InsertAntenna(Antenna instance);
    partial void UpdateAntenna(Antenna instance);
    partial void DeleteAntenna(Antenna instance);
    partial void InsertZeroStatus(ZeroStatus instance);
    partial void UpdateZeroStatus(ZeroStatus instance);
    partial void DeleteZeroStatus(ZeroStatus instance);
    partial void InsertFailure117UB(Failure117UB instance);
    partial void UpdateFailure117UB(Failure117UB instance);
    partial void DeleteFailure117UB(Failure117UB instance);
    partial void InsertGSMSimCard(GSMSimCard instance);
    partial void UpdateGSMSimCard(GSMSimCard instance);
    partial void DeleteGSMSimCard(GSMSimCard instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleWebService(RoleWebService instance);
    partial void UpdateRoleWebService(RoleWebService instance);
    partial void DeleteRoleWebService(RoleWebService instance);
    partial void InsertWebService(WebService instance);
    partial void UpdateWebService(WebService instance);
    partial void DeleteWebService(WebService instance);
    partial void InsertInstallRequest(InstallRequest instance);
    partial void UpdateInstallRequest(InstallRequest instance);
    partial void DeleteInstallRequest(InstallRequest instance);
    partial void InsertTelephoneConnectionInstallment(TelephoneConnectionInstallment instance);
    partial void UpdateTelephoneConnectionInstallment(TelephoneConnectionInstallment instance);
    partial void DeleteTelephoneConnectionInstallment(TelephoneConnectionInstallment instance);
    partial void InsertAgent(Agent instance);
    partial void UpdateAgent(Agent instance);
    partial void DeleteAgent(Agent instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertShaskamLog(ShaskamLog instance);
    partial void UpdateShaskamLog(ShaskamLog instance);
    partial void DeleteShaskamLog(ShaskamLog instance);
    partial void InsertShahkarWebApiLog(ShahkarWebApiLog instance);
    partial void UpdateShahkarWebApiLog(ShahkarWebApiLog instance);
    partial void DeleteShahkarWebApiLog(ShahkarWebApiLog instance);
    #endregion
		
		public MainDataContext() : 
				base(global::CRM.Data.Properties.Settings.Default.CRMConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MainDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActionLog> ActionLogs
		{
			get
			{
				return this.GetTable<ActionLog>();
			}
		}
		
		public System.Data.Linq.Table<AdameEmkanat> AdameEmkanats
		{
			get
			{
				return this.GetTable<AdameEmkanat>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<AdjacentPost> AdjacentPosts
		{
			get
			{
				return this.GetTable<AdjacentPost>();
			}
		}
		
		public System.Data.Linq.Table<ADSL> ADSLs
		{
			get
			{
				return this.GetTable<ADSL>();
			}
		}
		
		public System.Data.Linq.Table<ADSL1> ADSL1s
		{
			get
			{
				return this.GetTable<ADSL1>();
			}
		}
		
		public System.Data.Linq.Table<ADSLAAAActionLog> ADSLAAAActionLogs
		{
			get
			{
				return this.GetTable<ADSLAAAActionLog>();
			}
		}
		
		public System.Data.Linq.Table<ADSLAAAType> ADSLAAATypes
		{
			get
			{
				return this.GetTable<ADSLAAAType>();
			}
		}
		
		public System.Data.Linq.Table<ADSLAgentLog> ADSLAgentLogs
		{
			get
			{
				return this.GetTable<ADSLAgentLog>();
			}
		}
		
		public System.Data.Linq.Table<ADSLChangeCustomerOwnerCharacteristic> ADSLChangeCustomerOwnerCharacteristics
		{
			get
			{
				return this.GetTable<ADSLChangeCustomerOwnerCharacteristic>();
			}
		}
		
		public System.Data.Linq.Table<ADSLChangeIPRequest> ADSLChangeIPRequests
		{
			get
			{
				return this.GetTable<ADSLChangeIPRequest>();
			}
		}
		
		public System.Data.Linq.Table<ADSLChangePlace> ADSLChangePlaces
		{
			get
			{
				return this.GetTable<ADSLChangePlace>();
			}
		}
		
		public System.Data.Linq.Table<ADSLChangePort1> ADSLChangePort1s
		{
			get
			{
				return this.GetTable<ADSLChangePort1>();
			}
		}
		
		public System.Data.Linq.Table<ADSLChangePortReason> ADSLChangePortReasons
		{
			get
			{
				return this.GetTable<ADSLChangePortReason>();
			}
		}
		
		public System.Data.Linq.Table<ADSLChangeService> ADSLChangeServices
		{
			get
			{
				return this.GetTable<ADSLChangeService>();
			}
		}
		
		public System.Data.Linq.Table<ADSLCustomerGroup> ADSLCustomerGroups
		{
			get
			{
				return this.GetTable<ADSLCustomerGroup>();
			}
		}
		
		public System.Data.Linq.Table<ADSLCustomerType> ADSLCustomerTypes
		{
			get
			{
				return this.GetTable<ADSLCustomerType>();
			}
		}
		
		public System.Data.Linq.Table<ADSLCutTemporary> ADSLCutTemporaries
		{
			get
			{
				return this.GetTable<ADSLCutTemporary>();
			}
		}
		
		public System.Data.Linq.Table<ADSLDischarge> ADSLDischarges
		{
			get
			{
				return this.GetTable<ADSLDischarge>();
			}
		}
		
		public System.Data.Linq.Table<ADSLDischargeReason> ADSLDischargeReasons
		{
			get
			{
				return this.GetTable<ADSLDischargeReason>();
			}
		}
		
		public System.Data.Linq.Table<ADSLEquipment> ADSLEquipments
		{
			get
			{
				return this.GetTable<ADSLEquipment>();
			}
		}
		
		public System.Data.Linq.Table<ADSLGroupIP> ADSLGroupIPs
		{
			get
			{
				return this.GetTable<ADSLGroupIP>();
			}
		}
		
		public System.Data.Linq.Table<ADSLHistory> ADSLHistories
		{
			get
			{
				return this.GetTable<ADSLHistory>();
			}
		}
		
		public System.Data.Linq.Table<ADSLInstalCostCenter> ADSLInstalCostCenters
		{
			get
			{
				return this.GetTable<ADSLInstalCostCenter>();
			}
		}
		
		public System.Data.Linq.Table<ADSLInstallRequest> ADSLInstallRequests
		{
			get
			{
				return this.GetTable<ADSLInstallRequest>();
			}
		}
		
		public System.Data.Linq.Table<ADSLIntroductionWay> ADSLIntroductionWays
		{
			get
			{
				return this.GetTable<ADSLIntroductionWay>();
			}
		}
		
		public System.Data.Linq.Table<ADSLIP> ADSLIPs
		{
			get
			{
				return this.GetTable<ADSLIP>();
			}
		}
		
		public System.Data.Linq.Table<ADSLIPHistory> ADSLIPHistories
		{
			get
			{
				return this.GetTable<ADSLIPHistory>();
			}
		}
		
		public System.Data.Linq.Table<ADSLIPType> ADSLIPTypes
		{
			get
			{
				return this.GetTable<ADSLIPType>();
			}
		}
		
		public System.Data.Linq.Table<ADSLIRANRequest> ADSLIRANRequests
		{
			get
			{
				return this.GetTable<ADSLIRANRequest>();
			}
		}
		
		public System.Data.Linq.Table<ADSLMDFRange> ADSLMDFRanges
		{
			get
			{
				return this.GetTable<ADSLMDFRange>();
			}
		}
		
		public System.Data.Linq.Table<ADSLModem> ADSLModems
		{
			get
			{
				return this.GetTable<ADSLModem>();
			}
		}
		
		public System.Data.Linq.Table<ADSLModemProperty> ADSLModemProperties
		{
			get
			{
				return this.GetTable<ADSLModemProperty>();
			}
		}
		
		public System.Data.Linq.Table<ADSLPAPCabinetAccuracy> ADSLPAPCabinetAccuracies
		{
			get
			{
				return this.GetTable<ADSLPAPCabinetAccuracy>();
			}
		}
		
		public System.Data.Linq.Table<ADSLPAPFeasibility> ADSLPAPFeasibilities
		{
			get
			{
				return this.GetTable<ADSLPAPFeasibility>();
			}
		}
		
		public System.Data.Linq.Table<ADSLPAPPort> ADSLPAPPorts
		{
			get
			{
				return this.GetTable<ADSLPAPPort>();
			}
		}
		
		public System.Data.Linq.Table<ADSLPAPRequest> ADSLPAPRequests
		{
			get
			{
				return this.GetTable<ADSLPAPRequest>();
			}
		}
		
		public System.Data.Linq.Table<ADSLPort> ADSLPorts
		{
			get
			{
				return this.GetTable<ADSLPort>();
			}
		}
		
		public System.Data.Linq.Table<ADSLPortType> ADSLPortTypes
		{
			get
			{
				return this.GetTable<ADSLPortType>();
			}
		}
		
		public System.Data.Linq.Table<ADSLRequest> ADSLRequests
		{
			get
			{
				return this.GetTable<ADSLRequest>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSellerAgent> ADSLSellerAgents
		{
			get
			{
				return this.GetTable<ADSLSellerAgent>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSellerAgentRecharge> ADSLSellerAgentRecharges
		{
			get
			{
				return this.GetTable<ADSLSellerAgentRecharge>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSellerAgentUser> ADSLSellerAgentUsers
		{
			get
			{
				return this.GetTable<ADSLSellerAgentUser>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSellerAgentUserCredit> ADSLSellerAgentUserCredits
		{
			get
			{
				return this.GetTable<ADSLSellerAgentUserCredit>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSellerAgentUserRecharge> ADSLSellerAgentUserRecharges
		{
			get
			{
				return this.GetTable<ADSLSellerAgentUserRecharge>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSellerGroup> ADSLSellerGroups
		{
			get
			{
				return this.GetTable<ADSLSellerGroup>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSellTraffic> ADSLSellTraffics
		{
			get
			{
				return this.GetTable<ADSLSellTraffic>();
			}
		}
		
		public System.Data.Linq.Table<ADSLService> ADSLServices
		{
			get
			{
				return this.GetTable<ADSLService>();
			}
		}
		
		public System.Data.Linq.Table<ADSLService1> ADSLService1s
		{
			get
			{
				return this.GetTable<ADSLService1>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceBandWidth> ADSLServiceBandWidths
		{
			get
			{
				return this.GetTable<ADSLServiceBandWidth>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceCenter> ADSLServiceCenters
		{
			get
			{
				return this.GetTable<ADSLServiceCenter>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceDuration> ADSLServiceDurations
		{
			get
			{
				return this.GetTable<ADSLServiceDuration>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceGiftProfile> ADSLServiceGiftProfiles
		{
			get
			{
				return this.GetTable<ADSLServiceGiftProfile>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceGroup> ADSLServiceGroups
		{
			get
			{
				return this.GetTable<ADSLServiceGroup>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceGroupCenter> ADSLServiceGroupCenters
		{
			get
			{
				return this.GetTable<ADSLServiceGroupCenter>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceGroupSeller> ADSLServiceGroupSellers
		{
			get
			{
				return this.GetTable<ADSLServiceGroupSeller>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceNetwork> ADSLServiceNetworks
		{
			get
			{
				return this.GetTable<ADSLServiceNetwork>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceSeller> ADSLServiceSellers
		{
			get
			{
				return this.GetTable<ADSLServiceSeller>();
			}
		}
		
		public System.Data.Linq.Table<ADSLServiceTraffic> ADSLServiceTraffics
		{
			get
			{
				return this.GetTable<ADSLServiceTraffic>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSetupContactInformation> ADSLSetupContactInformations
		{
			get
			{
				return this.GetTable<ADSLSetupContactInformation>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSupportCommnet> ADSLSupportCommnets
		{
			get
			{
				return this.GetTable<ADSLSupportCommnet>();
			}
		}
		
		public System.Data.Linq.Table<ADSLSupportRequest> ADSLSupportRequests
		{
			get
			{
				return this.GetTable<ADSLSupportRequest>();
			}
		}
		
		public System.Data.Linq.Table<ADSLTelephoneAccuracy> ADSLTelephoneAccuracies
		{
			get
			{
				return this.GetTable<ADSLTelephoneAccuracy>();
			}
		}
		
		public System.Data.Linq.Table<ADSLTelephoneNoHistory> ADSLTelephoneNoHistories
		{
			get
			{
				return this.GetTable<ADSLTelephoneNoHistory>();
			}
		}
		
		public System.Data.Linq.Table<ADSLTrafficBaseCost> ADSLTrafficBaseCosts
		{
			get
			{
				return this.GetTable<ADSLTrafficBaseCost>();
			}
		}
		
		public System.Data.Linq.Table<Announce> Announces
		{
			get
			{
				return this.GetTable<Announce>();
			}
		}
		
		public System.Data.Linq.Table<AnnounceTo118> AnnounceTo118s
		{
			get
			{
				return this.GetTable<AnnounceTo118>();
			}
		}
		
		public System.Data.Linq.Table<AORBPostAndCabinet> AORBPostAndCabinets
		{
			get
			{
				return this.GetTable<AORBPostAndCabinet>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Banks
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<BankBranch> BankBranches
		{
			get
			{
				return this.GetTable<BankBranch>();
			}
		}
		
		public System.Data.Linq.Table<BaseCost> BaseCosts
		{
			get
			{
				return this.GetTable<BaseCost>();
			}
		}
		
		public System.Data.Linq.Table<BlackList> BlackLists
		{
			get
			{
				return this.GetTable<BlackList>();
			}
		}
		
		public System.Data.Linq.Table<BlackListReason> BlackListReasons
		{
			get
			{
				return this.GetTable<BlackListReason>();
			}
		}
		
		public System.Data.Linq.Table<Bucht> Buchts
		{
			get
			{
				return this.GetTable<Bucht>();
			}
		}
		
		public System.Data.Linq.Table<BuchtSwitching> BuchtSwitchings
		{
			get
			{
				return this.GetTable<BuchtSwitching>();
			}
		}
		
		public System.Data.Linq.Table<BuchtType> BuchtTypes
		{
			get
			{
				return this.GetTable<BuchtType>();
			}
		}
		
		public System.Data.Linq.Table<BuchtTypeNumberChange> BuchtTypeNumberChanges
		{
			get
			{
				return this.GetTable<BuchtTypeNumberChange>();
			}
		}
		
		public System.Data.Linq.Table<Cabinet> Cabinets
		{
			get
			{
				return this.GetTable<Cabinet>();
			}
		}
		
		public System.Data.Linq.Table<CabinetInput> CabinetInputs
		{
			get
			{
				return this.GetTable<CabinetInput>();
			}
		}
		
		public System.Data.Linq.Table<CabinetInputDirection> CabinetInputDirections
		{
			get
			{
				return this.GetTable<CabinetInputDirection>();
			}
		}
		
		public System.Data.Linq.Table<CabinetInputStatus> CabinetInputStatus
		{
			get
			{
				return this.GetTable<CabinetInputStatus>();
			}
		}
		
		public System.Data.Linq.Table<CabinetStatus> CabinetStatus
		{
			get
			{
				return this.GetTable<CabinetStatus>();
			}
		}
		
		public System.Data.Linq.Table<CabinetType> CabinetTypes
		{
			get
			{
				return this.GetTable<CabinetType>();
			}
		}
		
		public System.Data.Linq.Table<CabinetUsageType> CabinetUsageTypes
		{
			get
			{
				return this.GetTable<CabinetUsageType>();
			}
		}
		
		public System.Data.Linq.Table<Cable> Cables
		{
			get
			{
				return this.GetTable<Cable>();
			}
		}
		
		public System.Data.Linq.Table<CableColor> CableColors
		{
			get
			{
				return this.GetTable<CableColor>();
			}
		}
		
		public System.Data.Linq.Table<CableDesignOffice> CableDesignOffices
		{
			get
			{
				return this.GetTable<CableDesignOffice>();
			}
		}
		
		public System.Data.Linq.Table<CablePair> CablePairs
		{
			get
			{
				return this.GetTable<CablePair>();
			}
		}
		
		public System.Data.Linq.Table<CableType> CableTypes
		{
			get
			{
				return this.GetTable<CableType>();
			}
		}
		
		public System.Data.Linq.Table<CableUsedChannel> CableUsedChannels
		{
			get
			{
				return this.GetTable<CableUsedChannel>();
			}
		}
		
		public System.Data.Linq.Table<CancelationRequestList> CancelationRequestLists
		{
			get
			{
				return this.GetTable<CancelationRequestList>();
			}
		}
		
		public System.Data.Linq.Table<CauseBuchtSwitching> CauseBuchtSwitchings
		{
			get
			{
				return this.GetTable<CauseBuchtSwitching>();
			}
		}
		
		public System.Data.Linq.Table<CauseOfChangeNo> CauseOfChangeNos
		{
			get
			{
				return this.GetTable<CauseOfChangeNo>();
			}
		}
		
		public System.Data.Linq.Table<CauseOfCut> CauseOfCuts
		{
			get
			{
				return this.GetTable<CauseOfCut>();
			}
		}
		
		public System.Data.Linq.Table<CauseOfRefundDeposit> CauseOfRefundDeposits
		{
			get
			{
				return this.GetTable<CauseOfRefundDeposit>();
			}
		}
		
		public System.Data.Linq.Table<CauseOfTakePossession> CauseOfTakePossessions
		{
			get
			{
				return this.GetTable<CauseOfTakePossession>();
			}
		}
		
		public System.Data.Linq.Table<Center> Centers
		{
			get
			{
				return this.GetTable<Center>();
			}
		}
		
		public System.Data.Linq.Table<CenterToCenterTranslation> CenterToCenterTranslations
		{
			get
			{
				return this.GetTable<CenterToCenterTranslation>();
			}
		}
		
		public System.Data.Linq.Table<CenterToCenterTranslationPCM> CenterToCenterTranslationPCMs
		{
			get
			{
				return this.GetTable<CenterToCenterTranslationPCM>();
			}
		}
		
		public System.Data.Linq.Table<CenterToCenterTranslationTelephone> CenterToCenterTranslationTelephones
		{
			get
			{
				return this.GetTable<CenterToCenterTranslationTelephone>();
			}
		}
		
		public System.Data.Linq.Table<CentralTelType> CentralTelTypes
		{
			get
			{
				return this.GetTable<CentralTelType>();
			}
		}
		
		public System.Data.Linq.Table<ChangeAddress> ChangeAddresses
		{
			get
			{
				return this.GetTable<ChangeAddress>();
			}
		}
		
		public System.Data.Linq.Table<ChangeLocation> ChangeLocations
		{
			get
			{
				return this.GetTable<ChangeLocation>();
			}
		}
		
		public System.Data.Linq.Table<ChangeLocationSpecialWire> ChangeLocationSpecialWires
		{
			get
			{
				return this.GetTable<ChangeLocationSpecialWire>();
			}
		}
		
		public System.Data.Linq.Table<ChangeLocationSpecialWirePoint> ChangeLocationSpecialWirePoints
		{
			get
			{
				return this.GetTable<ChangeLocationSpecialWirePoint>();
			}
		}
		
		public System.Data.Linq.Table<ChangeName> ChangeNames
		{
			get
			{
				return this.GetTable<ChangeName>();
			}
		}
		
		public System.Data.Linq.Table<ChangeNo> ChangeNos
		{
			get
			{
				return this.GetTable<ChangeNo>();
			}
		}
		
		public System.Data.Linq.Table<ChangeNoInstallLine> ChangeNoInstallLines
		{
			get
			{
				return this.GetTable<ChangeNoInstallLine>();
			}
		}
		
		public System.Data.Linq.Table<ChangePreCode> ChangePreCodes
		{
			get
			{
				return this.GetTable<ChangePreCode>();
			}
		}
		
		public System.Data.Linq.Table<ChangeTelephoneType> ChangeTelephoneTypes
		{
			get
			{
				return this.GetTable<ChangeTelephoneType>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<Contractor> Contractors
		{
			get
			{
				return this.GetTable<Contractor>();
			}
		}
		
		public System.Data.Linq.Table<Control> Controls
		{
			get
			{
				return this.GetTable<Control>();
			}
		}
		
		public System.Data.Linq.Table<Counter> Counters
		{
			get
			{
				return this.GetTable<Counter>();
			}
		}
		
		public System.Data.Linq.Table<CustomerGroup> CustomerGroups
		{
			get
			{
				return this.GetTable<CustomerGroup>();
			}
		}
		
		public System.Data.Linq.Table<CustomerType> CustomerTypes
		{
			get
			{
				return this.GetTable<CustomerType>();
			}
		}
		
		public System.Data.Linq.Table<CutAndEstablish> CutAndEstablishes
		{
			get
			{
				return this.GetTable<CutAndEstablish>();
			}
		}
		
		public System.Data.Linq.Table<Cycle> Cycles
		{
			get
			{
				return this.GetTable<Cycle>();
			}
		}
		
		public System.Data.Linq.Table<DamageLine> DamageLines
		{
			get
			{
				return this.GetTable<DamageLine>();
			}
		}
		
		public System.Data.Linq.Table<DataChangesLog> DataChangesLogs
		{
			get
			{
				return this.GetTable<DataChangesLog>();
			}
		}
		
		public System.Data.Linq.Table<DataGridColumnConfig> DataGridColumnConfigs
		{
			get
			{
				return this.GetTable<DataGridColumnConfig>();
			}
		}
		
		public System.Data.Linq.Table<DocumentRequestType> DocumentRequestTypes
		{
			get
			{
				return this.GetTable<DocumentRequestType>();
			}
		}
		
		public System.Data.Linq.Table<DocumentsFile> DocumentsFiles
		{
			get
			{
				return this.GetTable<DocumentsFile>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<E1> E1s
		{
			get
			{
				return this.GetTable<E1>();
			}
		}
		
		public System.Data.Linq.Table<E1Bay> E1Bays
		{
			get
			{
				return this.GetTable<E1Bay>();
			}
		}
		
		public System.Data.Linq.Table<E1CodeType> E1CodeTypes
		{
			get
			{
				return this.GetTable<E1CodeType>();
			}
		}
		
		public System.Data.Linq.Table<E1DDF> E1DDFs
		{
			get
			{
				return this.GetTable<E1DDF>();
			}
		}
		
		public System.Data.Linq.Table<E1Link> E1Links
		{
			get
			{
				return this.GetTable<E1Link>();
			}
		}
		
		public System.Data.Linq.Table<E1LinkType> E1LinkTypes
		{
			get
			{
				return this.GetTable<E1LinkType>();
			}
		}
		
		public System.Data.Linq.Table<E1Modem> E1Modems
		{
			get
			{
				return this.GetTable<E1Modem>();
			}
		}
		
		public System.Data.Linq.Table<E1Number> E1Numbers
		{
			get
			{
				return this.GetTable<E1Number>();
			}
		}
		
		public System.Data.Linq.Table<E1Position> E1Positions
		{
			get
			{
				return this.GetTable<E1Position>();
			}
		}
		
		public System.Data.Linq.Table<Equipment> Equipments
		{
			get
			{
				return this.GetTable<Equipment>();
			}
		}
		
		public System.Data.Linq.Table<ErrorLog> ErrorLogs
		{
			get
			{
				return this.GetTable<ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeBrokenPCM> ExchangeBrokenPCMs
		{
			get
			{
				return this.GetTable<ExchangeBrokenPCM>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeCabinetInput> ExchangeCabinetInputs
		{
			get
			{
				return this.GetTable<ExchangeCabinetInput>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this.GetTable<ExchangeCabinetInputConncetion>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeCentralCableMDF> ExchangeCentralCableMDFs
		{
			get
			{
				return this.GetTable<ExchangeCentralCableMDF>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeCentralCableMDFConncetion> ExchangeCentralCableMDFConncetions
		{
			get
			{
				return this.GetTable<ExchangeCentralCableMDFConncetion>();
			}
		}
		
		public System.Data.Linq.Table<ExchangePost> ExchangePosts
		{
			get
			{
				return this.GetTable<ExchangePost>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeTelephoneNo> ExchangeTelephoneNos
		{
			get
			{
				return this.GetTable<ExchangeTelephoneNo>();
			}
		}
		
		public System.Data.Linq.Table<Failure117> Failure117s
		{
			get
			{
				return this.GetTable<Failure117>();
			}
		}
		
		public System.Data.Linq.Table<Failure117CabenitAccuracy> Failure117CabenitAccuracies
		{
			get
			{
				return this.GetTable<Failure117CabenitAccuracy>();
			}
		}
		
		public System.Data.Linq.Table<Failure117CableType> Failure117CableTypes
		{
			get
			{
				return this.GetTable<Failure117CableType>();
			}
		}
		
		public System.Data.Linq.Table<Failure117FailureStatus> Failure117FailureStatus
		{
			get
			{
				return this.GetTable<Failure117FailureStatus>();
			}
		}
		
		public System.Data.Linq.Table<Failure117LineStatus> Failure117LineStatus
		{
			get
			{
				return this.GetTable<Failure117LineStatus>();
			}
		}
		
		public System.Data.Linq.Table<Failure117NetworkContractor> Failure117NetworkContractors
		{
			get
			{
				return this.GetTable<Failure117NetworkContractor>();
			}
		}
		
		public System.Data.Linq.Table<Failure117NetworkContractorCenter> Failure117NetworkContractorCenters
		{
			get
			{
				return this.GetTable<Failure117NetworkContractorCenter>();
			}
		}
		
		public System.Data.Linq.Table<Failure117NetworkContractorOfficer> Failure117NetworkContractorOfficers
		{
			get
			{
				return this.GetTable<Failure117NetworkContractorOfficer>();
			}
		}
		
		public System.Data.Linq.Table<Failure117PostAccuracy> Failure117PostAccuracies
		{
			get
			{
				return this.GetTable<Failure117PostAccuracy>();
			}
		}
		
		public System.Data.Linq.Table<Failure117TelephoneAccuracy> Failure117TelephoneAccuracies
		{
			get
			{
				return this.GetTable<Failure117TelephoneAccuracy>();
			}
		}
		
		public System.Data.Linq.Table<FailureForm> FailureForms
		{
			get
			{
				return this.GetTable<FailureForm>();
			}
		}
		
		public System.Data.Linq.Table<Fiche> Fiches
		{
			get
			{
				return this.GetTable<Fiche>();
			}
		}
		
		public System.Data.Linq.Table<Filter> Filters
		{
			get
			{
				return this.GetTable<Filter>();
			}
		}
		
		public System.Data.Linq.Table<FilterColumn> FilterColumns
		{
			get
			{
				return this.GetTable<FilterColumn>();
			}
		}
		
		public System.Data.Linq.Table<FilterRule> FilterRules
		{
			get
			{
				return this.GetTable<FilterRule>();
			}
		}
		
		public System.Data.Linq.Table<FormTemplate> FormTemplates
		{
			get
			{
				return this.GetTable<FormTemplate>();
			}
		}
		
		public System.Data.Linq.Table<GH_TelephonePAPState> GH_TelephonePAPStates
		{
			get
			{
				return this.GetTable<GH_TelephonePAPState>();
			}
		}
		
		public System.Data.Linq.Table<ghandi_> ghandi_s
		{
			get
			{
				return this.GetTable<ghandi_>();
			}
		}
		
		public System.Data.Linq.Table<Inquiry> Inquiries
		{
			get
			{
				return this.GetTable<Inquiry>();
			}
		}
		
		public System.Data.Linq.Table<InquiryType> InquiryTypes
		{
			get
			{
				return this.GetTable<InquiryType>();
			}
		}
		
		public System.Data.Linq.Table<InquiryType1> InquiryType1s
		{
			get
			{
				return this.GetTable<InquiryType1>();
			}
		}
		
		public System.Data.Linq.Table<InstallLine> InstallLines
		{
			get
			{
				return this.GetTable<InstallLine>();
			}
		}
		
		public System.Data.Linq.Table<Installment> Installments
		{
			get
			{
				return this.GetTable<Installment>();
			}
		}
		
		public System.Data.Linq.Table<InstallmentRequestPayment> InstallmentRequestPayments
		{
			get
			{
				return this.GetTable<InstallmentRequestPayment>();
			}
		}
		
		public System.Data.Linq.Table<InstallmentRequestPayment_Temp> InstallmentRequestPayment_Temps
		{
			get
			{
				return this.GetTable<InstallmentRequestPayment_Temp>();
			}
		}
		
		public System.Data.Linq.Table<InstallmentRequestPaymentCorrection> InstallmentRequestPaymentCorrections
		{
			get
			{
				return this.GetTable<InstallmentRequestPaymentCorrection>();
			}
		}
		
		public System.Data.Linq.Table<InvestigatePossibility> InvestigatePossibilities
		{
			get
			{
				return this.GetTable<InvestigatePossibility>();
			}
		}
		
		public System.Data.Linq.Table<InvestigatePossibilityWaitinglist> InvestigatePossibilityWaitinglists
		{
			get
			{
				return this.GetTable<InvestigatePossibilityWaitinglist>();
			}
		}
		
		public System.Data.Linq.Table<IssueWiring> IssueWirings
		{
			get
			{
				return this.GetTable<IssueWiring>();
			}
		}
		
		public System.Data.Linq.Table<JobGroup> JobGroups
		{
			get
			{
				return this.GetTable<JobGroup>();
			}
		}
		
		public System.Data.Linq.Table<KermanshahReportTemplateBackup> KermanshahReportTemplateBackups
		{
			get
			{
				return this.GetTable<KermanshahReportTemplateBackup>();
			}
		}
		
		public System.Data.Linq.Table<Linesman> Linesmans
		{
			get
			{
				return this.GetTable<Linesman>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<LogicalOperator> LogicalOperators
		{
			get
			{
				return this.GetTable<LogicalOperator>();
			}
		}
		
		public System.Data.Linq.Table<Malfuction> Malfuctions
		{
			get
			{
				return this.GetTable<Malfuction>();
			}
		}
		
		public System.Data.Linq.Table<MatchPossibility> MatchPossibilities
		{
			get
			{
				return this.GetTable<MatchPossibility>();
			}
		}
		
		public System.Data.Linq.Table<MDF> MDFs
		{
			get
			{
				return this.GetTable<MDF>();
			}
		}
		
		public System.Data.Linq.Table<MDF1> MDF1s
		{
			get
			{
				return this.GetTable<MDF1>();
			}
		}
		
		public System.Data.Linq.Table<MDFFrame> MDFFrames
		{
			get
			{
				return this.GetTable<MDFFrame>();
			}
		}
		
		public System.Data.Linq.Table<MDFPersonnel> MDFPersonnels
		{
			get
			{
				return this.GetTable<MDFPersonnel>();
			}
		}
		
		public System.Data.Linq.Table<MDFWiring> MDFWirings
		{
			get
			{
				return this.GetTable<MDFWiring>();
			}
		}
		
		public System.Data.Linq.Table<MDFWorkingHour> MDFWorkingHours
		{
			get
			{
				return this.GetTable<MDFWorkingHour>();
			}
		}
		
		public System.Data.Linq.Table<ModifyProfile> ModifyProfiles
		{
			get
			{
				return this.GetTable<ModifyProfile>();
			}
		}
		
		public System.Data.Linq.Table<Mortgage> Mortgages
		{
			get
			{
				return this.GetTable<Mortgage>();
			}
		}
		
		public System.Data.Linq.Table<motahari_> motahari_s
		{
			get
			{
				return this.GetTable<motahari_>();
			}
		}
		
		public System.Data.Linq.Table<NetworkWiring> NetworkWirings
		{
			get
			{
				return this.GetTable<NetworkWiring>();
			}
		}
		
		public System.Data.Linq.Table<Notice> Notices
		{
			get
			{
				return this.GetTable<Notice>();
			}
		}
		
		public System.Data.Linq.Table<Office> Offices
		{
			get
			{
				return this.GetTable<Office>();
			}
		}
		
		public System.Data.Linq.Table<OfficeEmployee> OfficeEmployees
		{
			get
			{
				return this.GetTable<OfficeEmployee>();
			}
		}
		
		public System.Data.Linq.Table<ONULink> ONULinks
		{
			get
			{
				return this.GetTable<ONULink>();
			}
		}
		
		public System.Data.Linq.Table<OtherCost> OtherCosts
		{
			get
			{
				return this.GetTable<OtherCost>();
			}
		}
		
		public System.Data.Linq.Table<PAPInfo> PAPInfos
		{
			get
			{
				return this.GetTable<PAPInfo>();
			}
		}
		
		public System.Data.Linq.Table<PAPInfoCost> PAPInfoCosts
		{
			get
			{
				return this.GetTable<PAPInfoCost>();
			}
		}
		
		public System.Data.Linq.Table<PAPInfoCostHistory> PAPInfoCostHistories
		{
			get
			{
				return this.GetTable<PAPInfoCostHistory>();
			}
		}
		
		public System.Data.Linq.Table<PAPInfoLimitation> PAPInfoLimitations
		{
			get
			{
				return this.GetTable<PAPInfoLimitation>();
			}
		}
		
		public System.Data.Linq.Table<PAPInfoOperatingStatus> PAPInfoOperatingStatus
		{
			get
			{
				return this.GetTable<PAPInfoOperatingStatus>();
			}
		}
		
		public System.Data.Linq.Table<PAPInfoPort1> PAPInfoPort1s
		{
			get
			{
				return this.GetTable<PAPInfoPort1>();
			}
		}
		
		public System.Data.Linq.Table<PAPInfoSpaceandPower> PAPInfoSpaceandPowers
		{
			get
			{
				return this.GetTable<PAPInfoSpaceandPower>();
			}
		}
		
		public System.Data.Linq.Table<PAPInfoUser> PAPInfoUsers
		{
			get
			{
				return this.GetTable<PAPInfoUser>();
			}
		}
		
		public System.Data.Linq.Table<ParazitControl> ParazitControls
		{
			get
			{
				return this.GetTable<ParazitControl>();
			}
		}
		
		public System.Data.Linq.Table<PaymentFiche> PaymentFiches
		{
			get
			{
				return this.GetTable<PaymentFiche>();
			}
		}
		
		public System.Data.Linq.Table<PCM> PCMs
		{
			get
			{
				return this.GetTable<PCM>();
			}
		}
		
		public System.Data.Linq.Table<PCMBrand> PCMBrands
		{
			get
			{
				return this.GetTable<PCMBrand>();
			}
		}
		
		public System.Data.Linq.Table<PCMDevice> PCMDevices
		{
			get
			{
				return this.GetTable<PCMDevice>();
			}
		}
		
		public System.Data.Linq.Table<PCMPort> PCMPorts
		{
			get
			{
				return this.GetTable<PCMPort>();
			}
		}
		
		public System.Data.Linq.Table<PCMRock> PCMRocks
		{
			get
			{
				return this.GetTable<PCMRock>();
			}
		}
		
		public System.Data.Linq.Table<PCMShelf> PCMShelfs
		{
			get
			{
				return this.GetTable<PCMShelf>();
			}
		}
		
		public System.Data.Linq.Table<PCMType> PCMTypes
		{
			get
			{
				return this.GetTable<PCMType>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<PostContact> PostContacts
		{
			get
			{
				return this.GetTable<PostContact>();
			}
		}
		
		public System.Data.Linq.Table<PostContactConnectionType> PostContactConnectionTypes
		{
			get
			{
				return this.GetTable<PostContactConnectionType>();
			}
		}
		
		public System.Data.Linq.Table<PostContactEquipment> PostContactEquipments
		{
			get
			{
				return this.GetTable<PostContactEquipment>();
			}
		}
		
		public System.Data.Linq.Table<PostContactStatus> PostContactStatus
		{
			get
			{
				return this.GetTable<PostContactStatus>();
			}
		}
		
		public System.Data.Linq.Table<PostGroup> PostGroups
		{
			get
			{
				return this.GetTable<PostGroup>();
			}
		}
		
		public System.Data.Linq.Table<PostStatus> PostStatus
		{
			get
			{
				return this.GetTable<PostStatus>();
			}
		}
		
		public System.Data.Linq.Table<PostType> PostTypes
		{
			get
			{
				return this.GetTable<PostType>();
			}
		}
		
		public System.Data.Linq.Table<PowerOffice> PowerOffices
		{
			get
			{
				return this.GetTable<PowerOffice>();
			}
		}
		
		public System.Data.Linq.Table<PowerType> PowerTypes
		{
			get
			{
				return this.GetTable<PowerType>();
			}
		}
		
		public System.Data.Linq.Table<Province> Provinces
		{
			get
			{
				return this.GetTable<Province>();
			}
		}
		
		public System.Data.Linq.Table<Query> Queries
		{
			get
			{
				return this.GetTable<Query>();
			}
		}
		
		public System.Data.Linq.Table<QuotaDiscount> QuotaDiscounts
		{
			get
			{
				return this.GetTable<QuotaDiscount>();
			}
		}
		
		public System.Data.Linq.Table<QuotaJobTitle> QuotaJobTitles
		{
			get
			{
				return this.GetTable<QuotaJobTitle>();
			}
		}
		
		public System.Data.Linq.Table<ReferenceDocument> ReferenceDocuments
		{
			get
			{
				return this.GetTable<ReferenceDocument>();
			}
		}
		
		public System.Data.Linq.Table<RefundDeposit> RefundDeposits
		{
			get
			{
				return this.GetTable<RefundDeposit>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<RegularExpression> RegularExpressions
		{
			get
			{
				return this.GetTable<RegularExpression>();
			}
		}
		
		public System.Data.Linq.Table<RelationalOperator> RelationalOperators
		{
			get
			{
				return this.GetTable<RelationalOperator>();
			}
		}
		
		public System.Data.Linq.Table<ReportAndAnnouncement> ReportAndAnnouncements
		{
			get
			{
				return this.GetTable<ReportAndAnnouncement>();
			}
		}
		
		public System.Data.Linq.Table<ReportTemplate> ReportTemplates
		{
			get
			{
				return this.GetTable<ReportTemplate>();
			}
		}
		
		public System.Data.Linq.Table<ReportType> ReportTypes
		{
			get
			{
				return this.GetTable<ReportType>();
			}
		}
		
		public System.Data.Linq.Table<Request> Requests
		{
			get
			{
				return this.GetTable<Request>();
			}
		}
		
		public System.Data.Linq.Table<RequestActionLog> RequestActionLogs
		{
			get
			{
				return this.GetTable<RequestActionLog>();
			}
		}
		
		public System.Data.Linq.Table<RequestDocument> RequestDocuments
		{
			get
			{
				return this.GetTable<RequestDocument>();
			}
		}
		
		public System.Data.Linq.Table<RequestForm> RequestForms
		{
			get
			{
				return this.GetTable<RequestForm>();
			}
		}
		
		public System.Data.Linq.Table<RequestLog> RequestLogs
		{
			get
			{
				return this.GetTable<RequestLog>();
			}
		}
		
		public System.Data.Linq.Table<RequestPayment> RequestPayments
		{
			get
			{
				return this.GetTable<RequestPayment>();
			}
		}
		
		public System.Data.Linq.Table<RequestRefund> RequestRefunds
		{
			get
			{
				return this.GetTable<RequestRefund>();
			}
		}
		
		public System.Data.Linq.Table<RequestRejectReason> RequestRejectReasons
		{
			get
			{
				return this.GetTable<RequestRejectReason>();
			}
		}
		
		public System.Data.Linq.Table<RequestStep> RequestSteps
		{
			get
			{
				return this.GetTable<RequestStep>();
			}
		}
		
		public System.Data.Linq.Table<RequestType> RequestTypes
		{
			get
			{
				return this.GetTable<RequestType>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<Rock> Rocks
		{
			get
			{
				return this.GetTable<Rock>();
			}
		}
		
		public System.Data.Linq.Table<RoleReportTemplate> RoleReportTemplates
		{
			get
			{
				return this.GetTable<RoleReportTemplate>();
			}
		}
		
		public System.Data.Linq.Table<RoleRequestStep> RoleRequestSteps
		{
			get
			{
				return this.GetTable<RoleRequestStep>();
			}
		}
		
		public System.Data.Linq.Table<RoleResource> RoleResources
		{
			get
			{
				return this.GetTable<RoleResource>();
			}
		}
		
		public System.Data.Linq.Table<RoundSaleInfo> RoundSaleInfos
		{
			get
			{
				return this.GetTable<RoundSaleInfo>();
			}
		}
		
		public System.Data.Linq.Table<SavedLog> SavedLogs
		{
			get
			{
				return this.GetTable<SavedLog>();
			}
		}
		
		public System.Data.Linq.Table<SelectTelephone> SelectTelephones
		{
			get
			{
				return this.GetTable<SelectTelephone>();
			}
		}
		
		public System.Data.Linq.Table<ServiceMethod> ServiceMethods
		{
			get
			{
				return this.GetTable<ServiceMethod>();
			}
		}
		
		public System.Data.Linq.Table<ServiceUser> ServiceUsers
		{
			get
			{
				return this.GetTable<ServiceUser>();
			}
		}
		
		public System.Data.Linq.Table<ServiceUserMethod> ServiceUserMethods
		{
			get
			{
				return this.GetTable<ServiceUserMethod>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<Shelf> Shelfs
		{
			get
			{
				return this.GetTable<Shelf>();
			}
		}
		
		public System.Data.Linq.Table<SMSService> SMSServices
		{
			get
			{
				return this.GetTable<SMSService>();
			}
		}
		
		public System.Data.Linq.Table<SpaceAndPower> SpaceAndPowers
		{
			get
			{
				return this.GetTable<SpaceAndPower>();
			}
		}
		
		public System.Data.Linq.Table<SpaceAndPowerCustomer> SpaceAndPowerCustomers
		{
			get
			{
				return this.GetTable<SpaceAndPowerCustomer>();
			}
		}
		
		public System.Data.Linq.Table<SpaceAndPowerPowerType> SpaceAndPowerPowerTypes
		{
			get
			{
				return this.GetTable<SpaceAndPowerPowerType>();
			}
		}
		
		public System.Data.Linq.Table<SpecialConditionPrioritize> SpecialConditionPrioritizes
		{
			get
			{
				return this.GetTable<SpecialConditionPrioritize>();
			}
		}
		
		public System.Data.Linq.Table<SpecialCondition> SpecialConditions
		{
			get
			{
				return this.GetTable<SpecialCondition>();
			}
		}
		
		public System.Data.Linq.Table<SpecialPrivateCable> SpecialPrivateCables
		{
			get
			{
				return this.GetTable<SpecialPrivateCable>();
			}
		}
		
		public System.Data.Linq.Table<SpecialService> SpecialServices
		{
			get
			{
				return this.GetTable<SpecialService>();
			}
		}
		
		public System.Data.Linq.Table<SpecialServiceType> SpecialServiceTypes
		{
			get
			{
				return this.GetTable<SpecialServiceType>();
			}
		}
		
		public System.Data.Linq.Table<SpecialWire> SpecialWires
		{
			get
			{
				return this.GetTable<SpecialWire>();
			}
		}
		
		public System.Data.Linq.Table<SpecialWireAddress> SpecialWireAddresses
		{
			get
			{
				return this.GetTable<SpecialWireAddress>();
			}
		}
		
		public System.Data.Linq.Table<SpecialWirePoint> SpecialWirePoints
		{
			get
			{
				return this.GetTable<SpecialWirePoint>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<StatusLog> StatusLogs
		{
			get
			{
				return this.GetTable<StatusLog>();
			}
		}
		
		public System.Data.Linq.Table<SubFlowStatus> SubFlowStatus
		{
			get
			{
				return this.GetTable<SubFlowStatus>();
			}
		}
		
		public System.Data.Linq.Table<SubsidiaryCode> SubsidiaryCodes
		{
			get
			{
				return this.GetTable<SubsidiaryCode>();
			}
		}
		
		public System.Data.Linq.Table<SugesstionPossibility> SugesstionPossibilities
		{
			get
			{
				return this.GetTable<SugesstionPossibility>();
			}
		}
		
		public System.Data.Linq.Table<SwapPCM> SwapPCMs
		{
			get
			{
				return this.GetTable<SwapPCM>();
			}
		}
		
		public System.Data.Linq.Table<SwapTelephone> SwapTelephones
		{
			get
			{
				return this.GetTable<SwapTelephone>();
			}
		}
		
		public System.Data.Linq.Table<Switch> Switches
		{
			get
			{
				return this.GetTable<Switch>();
			}
		}
		
		public System.Data.Linq.Table<SwitchOffice> SwitchOffices
		{
			get
			{
				return this.GetTable<SwitchOffice>();
			}
		}
		
		public System.Data.Linq.Table<SwitchPort> SwitchPorts
		{
			get
			{
				return this.GetTable<SwitchPort>();
			}
		}
		
		public System.Data.Linq.Table<SwitchPrecode> SwitchPrecodes
		{
			get
			{
				return this.GetTable<SwitchPrecode>();
			}
		}
		
		public System.Data.Linq.Table<SwitchSpecialService> SwitchSpecialServices
		{
			get
			{
				return this.GetTable<SwitchSpecialService>();
			}
		}
		
		public System.Data.Linq.Table<SwitchTransition> SwitchTransitions
		{
			get
			{
				return this.GetTable<SwitchTransition>();
			}
		}
		
		public System.Data.Linq.Table<SwitchType> SwitchTypes
		{
			get
			{
				return this.GetTable<SwitchType>();
			}
		}
		
		public System.Data.Linq.Table<SystemChange> SystemChanges
		{
			get
			{
				return this.GetTable<SystemChange>();
			}
		}
		
		public System.Data.Linq.Table<TakePossession> TakePossessions
		{
			get
			{
				return this.GetTable<TakePossession>();
			}
		}
		
		public System.Data.Linq.Table<TelecomminucationService> TelecomminucationServices
		{
			get
			{
				return this.GetTable<TelecomminucationService>();
			}
		}
		
		public System.Data.Linq.Table<Telephone> Telephones
		{
			get
			{
				return this.GetTable<Telephone>();
			}
		}
		
		public System.Data.Linq.Table<TelephoneCycleFiche> TelephoneCycleFiches
		{
			get
			{
				return this.GetTable<TelephoneCycleFiche>();
			}
		}
		
		public System.Data.Linq.Table<TelephonePBX> TelephonePBXes
		{
			get
			{
				return this.GetTable<TelephonePBX>();
			}
		}
		
		public System.Data.Linq.Table<TelephoneSpecialServiceType> TelephoneSpecialServiceTypes
		{
			get
			{
				return this.GetTable<TelephoneSpecialServiceType>();
			}
		}
		
		public System.Data.Linq.Table<TelephoneStatusLog> TelephoneStatusLogs
		{
			get
			{
				return this.GetTable<TelephoneStatusLog>();
			}
		}
		
		public System.Data.Linq.Table<TelephoneTemp> TelephoneTemps
		{
			get
			{
				return this.GetTable<TelephoneTemp>();
			}
		}
		
		public System.Data.Linq.Table<TelRoundSale> TelRoundSales
		{
			get
			{
				return this.GetTable<TelRoundSale>();
			}
		}
		
		public System.Data.Linq.Table<temppap> temppaps
		{
			get
			{
				return this.GetTable<temppap>();
			}
		}
		
		public System.Data.Linq.Table<temppap1> temppap1s
		{
			get
			{
				return this.GetTable<temppap1>();
			}
		}
		
		public System.Data.Linq.Table<temppap2> temppap2s
		{
			get
			{
				return this.GetTable<temppap2>();
			}
		}
		
		public System.Data.Linq.Table<temppap3> temppap3s
		{
			get
			{
				return this.GetTable<temppap3>();
			}
		}
		
		public System.Data.Linq.Table<TitleIn118> TitleIn118s
		{
			get
			{
				return this.GetTable<TitleIn118>();
			}
		}
		
		public System.Data.Linq.Table<TransferDepartmentOffice> TransferDepartmentOffices
		{
			get
			{
				return this.GetTable<TransferDepartmentOffice>();
			}
		}
		
		public System.Data.Linq.Table<TransferFileInfo> TransferFileInfos
		{
			get
			{
				return this.GetTable<TransferFileInfo>();
			}
		}
		
		public System.Data.Linq.Table<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals
		{
			get
			{
				return this.GetTable<TranslationOpticalCabinetToNormal>();
			}
		}
		
		public System.Data.Linq.Table<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this.GetTable<TranslationOpticalCabinetToNormalConncetion>();
			}
		}
		
		public System.Data.Linq.Table<TranslationOpticalCabinetToNormalTelephone> TranslationOpticalCabinetToNormalTelephones
		{
			get
			{
				return this.GetTable<TranslationOpticalCabinetToNormalTelephone>();
			}
		}
		
		public System.Data.Linq.Table<TranslationPCMToNormal> TranslationPCMToNormals
		{
			get
			{
				return this.GetTable<TranslationPCMToNormal>();
			}
		}
		
		public System.Data.Linq.Table<TranslationPost> TranslationPosts
		{
			get
			{
				return this.GetTable<TranslationPost>();
			}
		}
		
		public System.Data.Linq.Table<TranslationPostInput> TranslationPostInputs
		{
			get
			{
				return this.GetTable<TranslationPostInput>();
			}
		}
		
		public System.Data.Linq.Table<TranslationPostInputConnection> TranslationPostInputConnections
		{
			get
			{
				return this.GetTable<TranslationPostInputConnection>();
			}
		}
		
		public System.Data.Linq.Table<UnitMeasure> UnitMeasures
		{
			get
			{
				return this.GetTable<UnitMeasure>();
			}
		}
		
		public System.Data.Linq.Table<UsedProduct> UsedProducts
		{
			get
			{
				return this.GetTable<UsedProduct>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserCenter> UserCenters
		{
			get
			{
				return this.GetTable<UserCenter>();
			}
		}
		
		public System.Data.Linq.Table<VacateE1> VacateE1s
		{
			get
			{
				return this.GetTable<VacateE1>();
			}
		}
		
		public System.Data.Linq.Table<VacateSpecialWire> VacateSpecialWires
		{
			get
			{
				return this.GetTable<VacateSpecialWire>();
			}
		}
		
		public System.Data.Linq.Table<VacateSpecialWirePoint> VacateSpecialWirePoints
		{
			get
			{
				return this.GetTable<VacateSpecialWirePoint>();
			}
		}
		
		public System.Data.Linq.Table<VerticalMDFColumn> VerticalMDFColumns
		{
			get
			{
				return this.GetTable<VerticalMDFColumn>();
			}
		}
		
		public System.Data.Linq.Table<VerticalMDFRow> VerticalMDFRows
		{
			get
			{
				return this.GetTable<VerticalMDFRow>();
			}
		}
		
		public System.Data.Linq.Table<VisitAddress> VisitAddresses
		{
			get
			{
				return this.GetTable<VisitAddress>();
			}
		}
		
		public System.Data.Linq.Table<VisitPlacesCabinetAndPost> VisitPlacesCabinetAndPosts
		{
			get
			{
				return this.GetTable<VisitPlacesCabinetAndPost>();
			}
		}
		
		public System.Data.Linq.Table<WaitingList> WaitingLists
		{
			get
			{
				return this.GetTable<WaitingList>();
			}
		}
		
		public System.Data.Linq.Table<WaitingListReason> WaitingListReasons
		{
			get
			{
				return this.GetTable<WaitingListReason>();
			}
		}
		
		public System.Data.Linq.Table<WarningHistory> WarningHistories
		{
			get
			{
				return this.GetTable<WarningHistory>();
			}
		}
		
		public System.Data.Linq.Table<WarningMessage> WarningMessages
		{
			get
			{
				return this.GetTable<WarningMessage>();
			}
		}
		
		public System.Data.Linq.Table<Wireless> Wirelesses
		{
			get
			{
				return this.GetTable<Wireless>();
			}
		}
		
		public System.Data.Linq.Table<WirelessChangeService> WirelessChangeServices
		{
			get
			{
				return this.GetTable<WirelessChangeService>();
			}
		}
		
		public System.Data.Linq.Table<WirelessRequest> WirelessRequests
		{
			get
			{
				return this.GetTable<WirelessRequest>();
			}
		}
		
		public System.Data.Linq.Table<WirelessSellTraffic> WirelessSellTraffics
		{
			get
			{
				return this.GetTable<WirelessSellTraffic>();
			}
		}
		
		public System.Data.Linq.Table<Wiring> Wirings
		{
			get
			{
				return this.GetTable<Wiring>();
			}
		}
		
		public System.Data.Linq.Table<WorkFlowLog> WorkFlowLogs
		{
			get
			{
				return this.GetTable<WorkFlowLog>();
			}
		}
		
		public System.Data.Linq.Table<WorkFlowRule> WorkFlowRules
		{
			get
			{
				return this.GetTable<WorkFlowRule>();
			}
		}
		
		public System.Data.Linq.Table<WorkFlowVersion> WorkFlowVersions
		{
			get
			{
				return this.GetTable<WorkFlowVersion>();
			}
		}
		
		public System.Data.Linq.Table<WorkUnit> WorkUnits
		{
			get
			{
				return this.GetTable<WorkUnit>();
			}
		}
		
		public System.Data.Linq.Table<WorkUnitAction> WorkUnitActions
		{
			get
			{
				return this.GetTable<WorkUnitAction>();
			}
		}
		
		public System.Data.Linq.Table<ViewReservBucht> ViewReservBuchts
		{
			get
			{
				return this.GetTable<ViewReservBucht>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeGSM> ExchangeGSMs
		{
			get
			{
				return this.GetTable<ExchangeGSM>();
			}
		}
		
		public System.Data.Linq.Table<ExchangeGSMConnection> ExchangeGSMConnections
		{
			get
			{
				return this.GetTable<ExchangeGSMConnection>();
			}
		}
		
		public System.Data.Linq.Table<TelecomminucationServicePayment> TelecomminucationServicePayments
		{
			get
			{
				return this.GetTable<TelecomminucationServicePayment>();
			}
		}
		
		public System.Data.Linq.Table<Antenna> Antennas
		{
			get
			{
				return this.GetTable<Antenna>();
			}
		}
		
		public System.Data.Linq.Table<ZeroStatus> ZeroStatus
		{
			get
			{
				return this.GetTable<ZeroStatus>();
			}
		}
		
		public System.Data.Linq.Table<Failure117UB> Failure117UBs
		{
			get
			{
				return this.GetTable<Failure117UB>();
			}
		}
		
		public System.Data.Linq.Table<GSMSimCard> GSMSimCards
		{
			get
			{
				return this.GetTable<GSMSimCard>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleWebService> RoleWebServices
		{
			get
			{
				return this.GetTable<RoleWebService>();
			}
		}
		
		public System.Data.Linq.Table<WebService> WebServices
		{
			get
			{
				return this.GetTable<WebService>();
			}
		}
		
		public System.Data.Linq.Table<InstallRequest> InstallRequests
		{
			get
			{
				return this.GetTable<InstallRequest>();
			}
		}
		
		public System.Data.Linq.Table<TelephoneConnectionInstallment> TelephoneConnectionInstallments
		{
			get
			{
				return this.GetTable<TelephoneConnectionInstallment>();
			}
		}
		
		public System.Data.Linq.Table<Agent> Agents
		{
			get
			{
				return this.GetTable<Agent>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<ShaskamLog> ShaskamLogs
		{
			get
			{
				return this.GetTable<ShaskamLog>();
			}
		}
		
		public System.Data.Linq.Table<ShahkarWebApiLog> ShahkarWebApiLogs
		{
			get
			{
				return this.GetTable<ShahkarWebApiLog>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDocsType")]
		public ISingleResult<GetAllDocsTypeResult> GetAllDocsType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallDateTime")] System.Nullable<System.DateTime> reqdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> reqtype, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> custID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reqdate, reqtype, custID);
			return ((ISingleResult<GetAllDocsTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Folder.GetAllRoles", IsComposable=true)]
		public object GetAllRoles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCenterVisitID", IsComposable=true)]
		public object GetCenterVisitID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VisitAddressID", DbType="Int")] System.Nullable<int> visitAddressID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), visitAddressID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDate")]
		public ISingleResult<GetDateResult> GetDate()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetReserveConnection", IsComposable=true)]
		public object GetReserveConnection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CenterID", DbType="Int")] System.Nullable<int> centerID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), centerID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRoundNoByCenterID", IsComposable=true)]
		public object GetRoundNoByCenterID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> centerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> roundType)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), centerID, roundType).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSuggessionSource", IsComposable=true)]
		public object GetSuggessionSource([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CenterID", DbType="Int")] System.Nullable<int> centerID)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), centerID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUsedDocs")]
		public ISingleResult<GetUsedDocsResult> GetUsedDocs()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetUsedDocsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertFiles", IsComposable=true)]
		public object InsertFiles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(255)")] string name)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NeededDocsForRequest")]
		public ISingleResult<NeededDocsForRequestResult> NeededDocsForRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestType", DbType="Int")] System.Nullable<int> requestType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestDate", DbType="SmallDateTime")] System.Nullable<System.DateTime> requestDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonType", DbType="Bit")] System.Nullable<bool> personType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestType, requestDate, personType);
			return ((ISingleResult<NeededDocsForRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RecursiveRequestStepsProcedure")]
		public ISingleResult<RecursiveRequestStepsProcedureResult> RecursiveRequestStepsProcedure([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionID", DbType="TinyInt")] System.Nullable<byte> actionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestTypeID", DbType="Int")] System.Nullable<int> requestTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StarterStatus", DbType="TinyInt")] System.Nullable<byte> starterStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionID, requestTypeID, starterStatus);
			return ((ISingleResult<RecursiveRequestStepsProcedureResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.ChangeLocationNetworkSpecialWire]")]
		public ISingleResult<Report_ChangeLocationNetworkSpecialWireResult> Report_ChangeLocationNetworkSpecialWire([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<Report_ChangeLocationNetworkSpecialWireResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.ChangeLocationSpecialWireCertificate]")]
		public ISingleResult<Report_ChangeLocationSpecialWireCertificateResult> Report_ChangeLocationSpecialWireCertificate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="VarChar(20)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="VarChar(20)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CityIDs", DbType="VarChar(MAX)")] string cityIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CenterIDs", DbType="VarChar(MAX)")] string centerIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, cityIDs, centerIDs, requestIDs);
			return ((ISingleResult<Report_ChangeLocationSpecialWireCertificateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.DayeriWiringNetwork]")]
		public ISingleResult<Report_DayeriWiringNetworkResult> Report_DayeriWiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="BigInt")] System.Nullable<long> requestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID);
			return ((ISingleResult<Report_DayeriWiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.DischargeWiringNetwork]")]
		public ISingleResult<Report_DischargeWiringNetworkResult> Report_DischargeWiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="BigInt")] System.Nullable<long> requestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID);
			return ((ISingleResult<Report_DischargeWiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.DischargingWiringNetwork]")]
		public ISingleResult<Report_DischargingWiringNetworkResult> Report_DischargingWiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="BigInt")] System.Nullable<long> requestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID);
			return ((ISingleResult<Report_DischargingWiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.Dtest]")]
		public ISingleResult<Report_DtestResult> Report_Dtest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="BigInt")] System.Nullable<long> requestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID);
			return ((ISingleResult<Report_DtestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.NetworkVacateSpecialWire]")]
		public ISingleResult<Report_NetworkVacateSpecialWireResult> Report_NetworkVacateSpecialWire([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<Report_NetworkVacateSpecialWireResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.SpecialWireCertificatePrint]")]
		public ISingleResult<Report_SpecialWireCertificatePrintResult> Report_SpecialWireCertificatePrint([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string cityIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string centerIDS, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="VarChar(MAX)")] string requestID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> telePhoneNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string fromCreateDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string toCreateDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cityIDs, centerIDS, requestID, fromDate, toDate, telePhoneNo, fromCreateDate, toCreateDate);
			return ((ISingleResult<Report_SpecialWireCertificatePrintResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.SpecialWireWiringNetwork]")]
		public ISingleResult<Report_SpecialWireWiringNetworkResult> Report_SpecialWireWiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="VarChar(MAX)")] string requestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID);
			return ((ISingleResult<Report_SpecialWireWiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspGetTableAndColumnNameByDescription")]
		public int uspGetTableAndColumnNameByDescription([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(300)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspLogError")]
		public int uspLogError([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ErrorIsLogged", DbType="Bit")] ref System.Nullable<bool> errorIsLogged)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), errorIsLogged);
			errorIsLogged = ((System.Nullable<bool>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportMDFExchangeCabinuteInput")]
		public ISingleResult<uspReportMDFExchangeCabinuteInputResult> uspReportMDFExchangeCabinuteInput([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<uspReportMDFExchangeCabinuteInputResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportMDFExchangeCabinuteInputCentral")]
		public ISingleResult<uspReportMDFExchangeCabinuteInputCentralResult> uspReportMDFExchangeCabinuteInputCentral([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<uspReportMDFExchangeCabinuteInputCentralResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportMDFExchangeCentralPost")]
		public ISingleResult<uspReportMDFExchangeCentralPostResult> uspReportMDFExchangeCentralPost([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<uspReportMDFExchangeCentralPostResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportNetworkWireExchangeCabinuteInput")]
		public ISingleResult<uspReportNetworkWireExchangeCabinuteInputResult> uspReportNetworkWireExchangeCabinuteInput([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<uspReportNetworkWireExchangeCabinuteInputResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportNetworkWireExchangeCentralPost")]
		public ISingleResult<uspReportNetworkWireExchangeCentralPostResult> uspReportNetworkWireExchangeCentralPost([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<uspReportNetworkWireExchangeCentralPostResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportRequestState")]
		public ISingleResult<uspReportRequestStateResult> uspReportRequestState([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string cityIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string centerIDS, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="VarChar(15)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="VarChar(15)")] string toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cityIDs, centerIDS, fromDate, toDate);
			return ((ISingleResult<uspReportRequestStateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportTransferPost")]
		public ISingleResult<uspReportTransferPostResult> uspReportTransferPost([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<uspReportTransferPostResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportTrasnlationOpticalCabinetToNormal")]
		public ISingleResult<uspReportTrasnlationOpticalCabinetToNormalResult> uspReportTrasnlationOpticalCabinetToNormal([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string requestsId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestsId);
			return ((ISingleResult<uspReportTrasnlationOpticalCabinetToNormalResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VisitTheSite")]
		public ISingleResult<VisitTheSiteResult> VisitTheSite([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<VisitTheSiteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CnvrtDate", IsComposable=true)]
		public string CnvrtDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiDate", DbType="DateTime")] System.Nullable<System.DateTime> miDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LY", DbType="Int")] System.Nullable<int> lY, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ALY", DbType="Int")] System.Nullable<int> aLY, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NY", DbType="Int")] System.Nullable<int> nY, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Format", DbType="Bit")] System.Nullable<bool> format)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), miDate, lY, aLY, nY, format).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Folder.GetRoles", IsComposable=true)]
		public string GetRoles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBarcode", IsComposable=true)]
		public string GetBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNo", DbType="VarChar(12)")] string phoneNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubUtilityCode", DbType="Int")] System.Nullable<int> subUtilityCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentAmount", DbType="BigInt")] System.Nullable<long> paymentAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CycleID", DbType="VarChar(2)")] string cycleID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), phoneNo, subUtilityCode, paymentAmount, cycleID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBuchtInfo", IsComposable=true)]
		public string GetBuchtInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BuchtID", DbType="BigInt")] System.Nullable<long> buchtID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), buchtID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCheckDigit", IsComposable=true)]
		public System.Nullable<char> GetCheckDigit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Chars", DbType="VarChar(26)")] string chars)
		{
			return ((System.Nullable<char>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chars).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDepositeNumber", IsComposable=true)]
		public string GetDepositeNumber([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CenterID", DbType="Int")] System.Nullable<int> centerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="YearRequestDate", DbType="Char(4)")] string yearRequestDate)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), centerID, yearRequestDate).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMaxFileName", IsComposable=true)]
		public System.Nullable<long> GetMaxFileName()
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMaxSequencesNumberOfCustomerID", IsComposable=true)]
		public System.Nullable<long> GetMaxSequencesNumberOfCustomerID()
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPCMInfo", IsComposable=true)]
		public string GetPCMInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PCMPortID", DbType="BigInt")] System.Nullable<long> pCMPortID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pCMPortID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.mi2sh", IsComposable=true)]
		public string mi2sh([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiDate", DbType="DateTime")] System.Nullable<System.DateTime> miDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Format", DbType="Bit")] System.Nullable<bool> format)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), miDate, format).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.serverdate", IsComposable=true)]
		public System.Nullable<System.DateTime> serverdate()
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sh2mi", IsComposable=true)]
		public System.Nullable<System.DateTime> sh2mi([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string myd)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), myd).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sh2miByTime", IsComposable=true)]
		public System.Nullable<System.DateTime> sh2miByTime([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string myd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string mydt)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), myd, mydt).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ufnSplitList", IsComposable=true)]
		public IQueryable<ufnSplitListResult> ufnSplitList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="List", DbType="VarChar(MAX)")] string list)
		{
			return this.CreateMethodCallQuery<ufnSplitListResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), list);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportE1LINKWiringNetwork")]
		public ISingleResult<uspReportE1LINKWiringNetworkResult> uspReportE1LINKWiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="VarChar(MAX)")] string requestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID);
			return ((ISingleResult<uspReportE1LINKWiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportE1WiringNetwork")]
		public ISingleResult<uspReportE1WiringNetworkResult> uspReportE1WiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="VarChar(MAX)")] string requestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID);
			return ((ISingleResult<uspReportE1WiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportFailure117RequestRemaindInNetwork")]
		public ISingleResult<uspReportFailure117RequestRemaindInNetworkResult> uspReportFailure117RequestRemaindInNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CityID", DbType="Int")] System.Nullable<int> cityID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CenterID", DbType="Int")] System.Nullable<int> centerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromInsertDate", DbType="VarChar(15)")] string fromInsertDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToInsertDate", DbType="VarChar(15)")] string toInsertDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cityID, centerID, fromInsertDate, toInsertDate);
			return ((ISingleResult<uspReportFailure117RequestRemaindInNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportDayeriWiringNetwork")]
		public ISingleResult<uspReportDayeriWiringNetworkResult> uspReportDayeriWiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIds", DbType="VarChar(MAX)")] string requestIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIds);
			return ((ISingleResult<uspReportDayeriWiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportDischargeWiringNetwork")]
		public ISingleResult<uspReportDischargeWiringNetworkResult> uspReportDischargeWiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIds", DbType="VarChar(MAX)")] string requestIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIds);
			return ((ISingleResult<uspReportDischargeWiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTableSchema")]
		public ISingleResult<GetTableSchemaResult> GetTableSchema([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string table)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), table);
			return ((ISingleResult<GetTableSchemaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.VacateSpecialWireWiringNetwork]")]
		public ISingleResult<Report_VacateSpecialWireWiringNetworkResult> Report_VacateSpecialWireWiringNetwork([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="VarChar(MAX)")] string requestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID);
			return ((ISingleResult<Report_VacateSpecialWireWiringNetworkResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.MDFVacateSpecialWire]")]
		public ISingleResult<Report_MDFVacateSpecialWireResult> Report_MDFVacateSpecialWire([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<Report_MDFVacateSpecialWireResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspReportTranslationOpticalCabinetToNormalRequest")]
		public ISingleResult<uspReportTranslationOpticalCabinetToNormalRequestResult> uspReportTranslationOpticalCabinetToNormalRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CitiesID", DbType="VarChar(MAX)")] string citiesID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CentersId", DbType="VarChar(MAX)")] string centersId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestId", DbType="BigInt")] System.Nullable<long> requestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TelephoneNo", DbType="BigInt")] System.Nullable<long> telephoneNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), citiesID, centersId, fromDate, toDate, requestId, telephoneNo);
			return ((ISingleResult<uspReportTranslationOpticalCabinetToNormalRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.ChangeLocationMDFSpecialWire]")]
		public ISingleResult<Report_ChangeLocationMDFSpecialWireResult> Report_ChangeLocationMDFSpecialWire([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<Report_ChangeLocationMDFSpecialWireResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Report.ChangeLocationSpecialWire]")]
		public ISingleResult<Report_ChangeLocationSpecialWireResult> Report_ChangeLocationSpecialWire([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestIDs", DbType="VarChar(MAX)")] string requestIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestIDs);
			return ((ISingleResult<Report_ChangeLocationSpecialWireResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ufnGetServerCompleteDateTime", IsComposable=true)]
		public System.Nullable<System.DateTime> ufnGetServerCompleteDateTime()
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTimeElpased", IsComposable=true)]
		public string GetTimeElpased([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_JulianToSolarFormat", IsComposable=true)]
		public string fn_JulianToSolarFormat([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1)")] string format)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dt, format).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionLog")]
	public partial class ActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _ActionID;
		
		private string _UserName;
		
		private System.DateTime _Date;
		
		private System.Xml.Linq.XElement _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnActionIDChanging(byte value);
    partial void OnActionIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(System.Xml.Linq.XElement value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="TinyInt NOT NULL")]
		public byte ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdameEmkanat")]
	public partial class AdameEmkanat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FISH_NO;
		
		private string _KAFO;
		
		private string _POST;
		
		private string _TYPE_POST;
		
		private string _ELAT;
		
		private string _TA_SABT;
		
		private string _TA_BARE;
		
		private string _NAME;
		
		private string _ADR;
		
		private string _TOZEH;
		
		private System.Nullable<int> _CenterID;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFISH_NOChanging(string value);
    partial void OnFISH_NOChanged();
    partial void OnKAFOChanging(string value);
    partial void OnKAFOChanged();
    partial void OnPOSTChanging(string value);
    partial void OnPOSTChanged();
    partial void OnTYPE_POSTChanging(string value);
    partial void OnTYPE_POSTChanged();
    partial void OnELATChanging(string value);
    partial void OnELATChanged();
    partial void OnTA_SABTChanging(string value);
    partial void OnTA_SABTChanged();
    partial void OnTA_BAREChanging(string value);
    partial void OnTA_BAREChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnADRChanging(string value);
    partial void OnADRChanged();
    partial void OnTOZEHChanging(string value);
    partial void OnTOZEHChanged();
    partial void OnCenterIDChanging(System.Nullable<int> value);
    partial void OnCenterIDChanged();
    #endregion
		
		public AdameEmkanat()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FISH_NO", DbType="NVarChar(MAX)")]
		public string FISH_NO
		{
			get
			{
				return this._FISH_NO;
			}
			set
			{
				if ((this._FISH_NO != value))
				{
					this.OnFISH_NOChanging(value);
					this.SendPropertyChanging();
					this._FISH_NO = value;
					this.SendPropertyChanged("FISH_NO");
					this.OnFISH_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KAFO", DbType="NVarChar(MAX)")]
		public string KAFO
		{
			get
			{
				return this._KAFO;
			}
			set
			{
				if ((this._KAFO != value))
				{
					this.OnKAFOChanging(value);
					this.SendPropertyChanging();
					this._KAFO = value;
					this.SendPropertyChanged("KAFO");
					this.OnKAFOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POST", DbType="NVarChar(MAX)")]
		public string POST
		{
			get
			{
				return this._POST;
			}
			set
			{
				if ((this._POST != value))
				{
					this.OnPOSTChanging(value);
					this.SendPropertyChanging();
					this._POST = value;
					this.SendPropertyChanged("POST");
					this.OnPOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_POST", DbType="NVarChar(MAX)")]
		public string TYPE_POST
		{
			get
			{
				return this._TYPE_POST;
			}
			set
			{
				if ((this._TYPE_POST != value))
				{
					this.OnTYPE_POSTChanging(value);
					this.SendPropertyChanging();
					this._TYPE_POST = value;
					this.SendPropertyChanged("TYPE_POST");
					this.OnTYPE_POSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELAT", DbType="NVarChar(MAX)")]
		public string ELAT
		{
			get
			{
				return this._ELAT;
			}
			set
			{
				if ((this._ELAT != value))
				{
					this.OnELATChanging(value);
					this.SendPropertyChanging();
					this._ELAT = value;
					this.SendPropertyChanged("ELAT");
					this.OnELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TA_SABT", DbType="NVarChar(MAX)")]
		public string TA_SABT
		{
			get
			{
				return this._TA_SABT;
			}
			set
			{
				if ((this._TA_SABT != value))
				{
					this.OnTA_SABTChanging(value);
					this.SendPropertyChanging();
					this._TA_SABT = value;
					this.SendPropertyChanged("TA_SABT");
					this.OnTA_SABTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TA_BARE", DbType="NVarChar(MAX)")]
		public string TA_BARE
		{
			get
			{
				return this._TA_BARE;
			}
			set
			{
				if ((this._TA_BARE != value))
				{
					this.OnTA_BAREChanging(value);
					this.SendPropertyChanging();
					this._TA_BARE = value;
					this.SendPropertyChanged("TA_BARE");
					this.OnTA_BAREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(MAX)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADR", DbType="NVarChar(MAX)")]
		public string ADR
		{
			get
			{
				return this._ADR;
			}
			set
			{
				if ((this._ADR != value))
				{
					this.OnADRChanging(value);
					this.SendPropertyChanging();
					this._ADR = value;
					this.SendPropertyChanged("ADR");
					this.OnADRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOZEH", DbType="NVarChar(MAX)")]
		public string TOZEH
		{
			get
			{
				return this._TOZEH;
			}
			set
			{
				if ((this._TOZEH != value))
				{
					this.OnTOZEHChanging(value);
					this.SendPropertyChanging();
					this._TOZEH = value;
					this.SendPropertyChanged("TOZEH");
					this.OnTOZEHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int")]
		public System.Nullable<int> CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_AdameEmkanat", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.AdameEmkanats.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.AdameEmkanats.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _CenterID;
		
		private string _PostalCode;
		
		private string _AddressContent;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<bool> _ElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESS;
		
		private System.Nullable<long> _ElkaID;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private EntitySet<BlackList> _BlackLists;
		
		private EntitySet<ChangeAddress> _ChangeAddresses;
		
		private EntitySet<ChangeAddress> _ChangeAddresses1;
		
		private EntitySet<ChangeAddress> _ChangeAddresses2;
		
		private EntitySet<ChangeAddress> _ChangeAddresses3;
		
		private EntitySet<ChangeLocation> _ChangeLocations;
		
		private EntitySet<ChangeLocation> _ChangeLocations1;
		
		private EntitySet<ChangeLocation> _ChangeLocations2;
		
		private EntitySet<ChangeLocation> _ChangeLocations3;
		
		private EntitySet<ChangeLocationSpecialWire> _ChangeLocationSpecialWires;
		
		private EntitySet<ChangeLocationSpecialWire> _ChangeLocationSpecialWires1;
		
		private EntitySet<ChangeNo> _ChangeNos;
		
		private EntitySet<ChangeNo> _ChangeNos1;
		
		private EntitySet<E1> _E1s;
		
		private EntitySet<E1> _E1s1;
		
		private EntitySet<E1> _E1s2;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions1;
		
		private EntitySet<InvestigatePossibilityWaitinglist> _InvestigatePossibilityWaitinglists;
		
		private EntitySet<RefundDeposit> _RefundDeposits;
		
		private EntitySet<RefundDeposit> _RefundDeposits1;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers;
		
		private EntitySet<SpecialWire> _SpecialWires;
		
		private EntitySet<SpecialWire> _SpecialWires1;
		
		private EntitySet<SpecialWireAddress> _SpecialWireAddresses;
		
		private EntitySet<SpecialWireAddress> _SpecialWireAddresses1;
		
		private EntitySet<SpecialWirePoint> _SpecialWirePoints;
		
		private EntitySet<TakePossession> _TakePossessions;
		
		private EntitySet<TakePossession> _TakePossessions1;
		
		private EntitySet<Telephone> _Telephones;
		
		private EntitySet<Telephone> _Telephones1;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions1;
		
		private EntitySet<VacateSpecialWire> _VacateSpecialWires;
		
		private EntitySet<VacateSpecialWire> _VacateSpecialWires1;
		
		private EntitySet<VisitAddress> _VisitAddresses;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntitySet<InstallRequest> _InstallRequests;
		
		private EntitySet<InstallRequest> _InstallRequests1;
		
		private EntitySet<Customer> _Customers;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnAddressContentChanging(string value);
    partial void OnAddressContentChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESSChanging(System.Nullable<bool> value);
    partial void OnElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESSChanged();
    partial void OnElkaIDChanging(System.Nullable<long> value);
    partial void OnElkaIDChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    #endregion
		
		public Address()
		{
			this._BlackLists = new EntitySet<BlackList>(new Action<BlackList>(this.attach_BlackLists), new Action<BlackList>(this.detach_BlackLists));
			this._ChangeAddresses = new EntitySet<ChangeAddress>(new Action<ChangeAddress>(this.attach_ChangeAddresses), new Action<ChangeAddress>(this.detach_ChangeAddresses));
			this._ChangeAddresses1 = new EntitySet<ChangeAddress>(new Action<ChangeAddress>(this.attach_ChangeAddresses1), new Action<ChangeAddress>(this.detach_ChangeAddresses1));
			this._ChangeAddresses2 = new EntitySet<ChangeAddress>(new Action<ChangeAddress>(this.attach_ChangeAddresses2), new Action<ChangeAddress>(this.detach_ChangeAddresses2));
			this._ChangeAddresses3 = new EntitySet<ChangeAddress>(new Action<ChangeAddress>(this.attach_ChangeAddresses3), new Action<ChangeAddress>(this.detach_ChangeAddresses3));
			this._ChangeLocations = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations), new Action<ChangeLocation>(this.detach_ChangeLocations));
			this._ChangeLocations1 = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations1), new Action<ChangeLocation>(this.detach_ChangeLocations1));
			this._ChangeLocations2 = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations2), new Action<ChangeLocation>(this.detach_ChangeLocations2));
			this._ChangeLocations3 = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations3), new Action<ChangeLocation>(this.detach_ChangeLocations3));
			this._ChangeLocationSpecialWires = new EntitySet<ChangeLocationSpecialWire>(new Action<ChangeLocationSpecialWire>(this.attach_ChangeLocationSpecialWires), new Action<ChangeLocationSpecialWire>(this.detach_ChangeLocationSpecialWires));
			this._ChangeLocationSpecialWires1 = new EntitySet<ChangeLocationSpecialWire>(new Action<ChangeLocationSpecialWire>(this.attach_ChangeLocationSpecialWires1), new Action<ChangeLocationSpecialWire>(this.detach_ChangeLocationSpecialWires1));
			this._ChangeNos = new EntitySet<ChangeNo>(new Action<ChangeNo>(this.attach_ChangeNos), new Action<ChangeNo>(this.detach_ChangeNos));
			this._ChangeNos1 = new EntitySet<ChangeNo>(new Action<ChangeNo>(this.attach_ChangeNos1), new Action<ChangeNo>(this.detach_ChangeNos1));
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			this._E1s1 = new EntitySet<E1>(new Action<E1>(this.attach_E1s1), new Action<E1>(this.detach_E1s1));
			this._E1s2 = new EntitySet<E1>(new Action<E1>(this.attach_E1s2), new Action<E1>(this.detach_E1s2));
			this._ExchangeCabinetInputConncetions = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions));
			this._ExchangeCabinetInputConncetions1 = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions1), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions1));
			this._InvestigatePossibilityWaitinglists = new EntitySet<InvestigatePossibilityWaitinglist>(new Action<InvestigatePossibilityWaitinglist>(this.attach_InvestigatePossibilityWaitinglists), new Action<InvestigatePossibilityWaitinglist>(this.detach_InvestigatePossibilityWaitinglists));
			this._RefundDeposits = new EntitySet<RefundDeposit>(new Action<RefundDeposit>(this.attach_RefundDeposits), new Action<RefundDeposit>(this.detach_RefundDeposits));
			this._RefundDeposits1 = new EntitySet<RefundDeposit>(new Action<RefundDeposit>(this.attach_RefundDeposits1), new Action<RefundDeposit>(this.detach_RefundDeposits1));
			this._SpaceAndPowers = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers), new Action<SpaceAndPower>(this.detach_SpaceAndPowers));
			this._SpecialWires = new EntitySet<SpecialWire>(new Action<SpecialWire>(this.attach_SpecialWires), new Action<SpecialWire>(this.detach_SpecialWires));
			this._SpecialWires1 = new EntitySet<SpecialWire>(new Action<SpecialWire>(this.attach_SpecialWires1), new Action<SpecialWire>(this.detach_SpecialWires1));
			this._SpecialWireAddresses = new EntitySet<SpecialWireAddress>(new Action<SpecialWireAddress>(this.attach_SpecialWireAddresses), new Action<SpecialWireAddress>(this.detach_SpecialWireAddresses));
			this._SpecialWireAddresses1 = new EntitySet<SpecialWireAddress>(new Action<SpecialWireAddress>(this.attach_SpecialWireAddresses1), new Action<SpecialWireAddress>(this.detach_SpecialWireAddresses1));
			this._SpecialWirePoints = new EntitySet<SpecialWirePoint>(new Action<SpecialWirePoint>(this.attach_SpecialWirePoints), new Action<SpecialWirePoint>(this.detach_SpecialWirePoints));
			this._TakePossessions = new EntitySet<TakePossession>(new Action<TakePossession>(this.attach_TakePossessions), new Action<TakePossession>(this.detach_TakePossessions));
			this._TakePossessions1 = new EntitySet<TakePossession>(new Action<TakePossession>(this.attach_TakePossessions1), new Action<TakePossession>(this.detach_TakePossessions1));
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			this._Telephones1 = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones1), new Action<Telephone>(this.detach_Telephones1));
			this._TranslationOpticalCabinetToNormalConncetions = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions));
			this._TranslationOpticalCabinetToNormalConncetions1 = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions1), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions1));
			this._VacateSpecialWires = new EntitySet<VacateSpecialWire>(new Action<VacateSpecialWire>(this.attach_VacateSpecialWires), new Action<VacateSpecialWire>(this.detach_VacateSpecialWires));
			this._VacateSpecialWires1 = new EntitySet<VacateSpecialWire>(new Action<VacateSpecialWire>(this.attach_VacateSpecialWires1), new Action<VacateSpecialWire>(this.detach_VacateSpecialWires1));
			this._VisitAddresses = new EntitySet<VisitAddress>(new Action<VisitAddress>(this.attach_VisitAddresses), new Action<VisitAddress>(this.detach_VisitAddresses));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._InstallRequests = new EntitySet<InstallRequest>(new Action<InstallRequest>(this.attach_InstallRequests), new Action<InstallRequest>(this.detach_InstallRequests));
			this._InstallRequests1 = new EntitySet<InstallRequest>(new Action<InstallRequest>(this.attach_InstallRequests1), new Action<InstallRequest>(this.detach_InstallRequests1));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressContent", DbType="NVarChar(MAX)")]
		public string AddressContent
		{
			get
			{
				return this._AddressContent;
			}
			set
			{
				if ((this._AddressContent != value))
				{
					this.OnAddressContentChanging(value);
					this.SendPropertyChanging();
					this._AddressContent = value;
					this.SendPropertyChanged("AddressContent");
					this.OnAddressContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESS", DbType="Bit")]
		public System.Nullable<bool> ElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESS
		{
			get
			{
				return this._ElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESS;
			}
			set
			{
				if ((this._ElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESS != value))
				{
					this.OnElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESS = value;
					this.SendPropertyChanged("ElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESS");
					this.OnElkaMOKATEBEH_ADDRESS_OR_NASB_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="BigInt")]
		public System.Nullable<long> ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_BlackList", Storage="_BlackLists", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<BlackList> BlackLists
		{
			get
			{
				return this._BlackLists;
			}
			set
			{
				this._BlackLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeAddress", Storage="_ChangeAddresses", ThisKey="ID", OtherKey="OldCorrespondenceAddressID")]
		public EntitySet<ChangeAddress> ChangeAddresses
		{
			get
			{
				return this._ChangeAddresses;
			}
			set
			{
				this._ChangeAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeAddress1", Storage="_ChangeAddresses1", ThisKey="ID", OtherKey="OldInstallAddressID")]
		public EntitySet<ChangeAddress> ChangeAddresses1
		{
			get
			{
				return this._ChangeAddresses1;
			}
			set
			{
				this._ChangeAddresses1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeAddress2", Storage="_ChangeAddresses2", ThisKey="ID", OtherKey="NewCorrespondenceAddressID")]
		public EntitySet<ChangeAddress> ChangeAddresses2
		{
			get
			{
				return this._ChangeAddresses2;
			}
			set
			{
				this._ChangeAddresses2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeAddress3", Storage="_ChangeAddresses3", ThisKey="ID", OtherKey="NewInstallAddressID")]
		public EntitySet<ChangeAddress> ChangeAddresses3
		{
			get
			{
				return this._ChangeAddresses3;
			}
			set
			{
				this._ChangeAddresses3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocation", Storage="_ChangeLocations", ThisKey="ID", OtherKey="NewCorrespondenceAddressID")]
		public EntitySet<ChangeLocation> ChangeLocations
		{
			get
			{
				return this._ChangeLocations;
			}
			set
			{
				this._ChangeLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocation1", Storage="_ChangeLocations1", ThisKey="ID", OtherKey="OldInstallAddressID")]
		public EntitySet<ChangeLocation> ChangeLocations1
		{
			get
			{
				return this._ChangeLocations1;
			}
			set
			{
				this._ChangeLocations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocation2", Storage="_ChangeLocations2", ThisKey="ID", OtherKey="NewInstallAddressID")]
		public EntitySet<ChangeLocation> ChangeLocations2
		{
			get
			{
				return this._ChangeLocations2;
			}
			set
			{
				this._ChangeLocations2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocation3", Storage="_ChangeLocations3", ThisKey="ID", OtherKey="OldCorrespondenceAddressID")]
		public EntitySet<ChangeLocation> ChangeLocations3
		{
			get
			{
				return this._ChangeLocations3;
			}
			set
			{
				this._ChangeLocations3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocationSpecialWire", Storage="_ChangeLocationSpecialWires", ThisKey="ID", OtherKey="OldInstallAddressID")]
		public EntitySet<ChangeLocationSpecialWire> ChangeLocationSpecialWires
		{
			get
			{
				return this._ChangeLocationSpecialWires;
			}
			set
			{
				this._ChangeLocationSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocationSpecialWire1", Storage="_ChangeLocationSpecialWires1", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<ChangeLocationSpecialWire> ChangeLocationSpecialWires1
		{
			get
			{
				return this._ChangeLocationSpecialWires1;
			}
			set
			{
				this._ChangeLocationSpecialWires1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeNo", Storage="_ChangeNos", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<ChangeNo> ChangeNos
		{
			get
			{
				return this._ChangeNos;
			}
			set
			{
				this._ChangeNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeNo1", Storage="_ChangeNos1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<ChangeNo> ChangeNos1
		{
			get
			{
				return this._ChangeNos1;
			}
			set
			{
				this._ChangeNos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_E1", Storage="_E1s", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_E11", Storage="_E1s1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<E1> E1s1
		{
			get
			{
				return this._E1s1;
			}
			set
			{
				this._E1s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_E12", Storage="_E1s2", ThisKey="ID", OtherKey="TargetInstallAddressID")]
		public EntitySet<E1> E1s2
		{
			get
			{
				return this._E1s2;
			}
			set
			{
				this._E1s2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ExchangeCabinetInputConncetion", Storage="_ExchangeCabinetInputConncetions", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this._ExchangeCabinetInputConncetions;
			}
			set
			{
				this._ExchangeCabinetInputConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ExchangeCabinetInputConncetion1", Storage="_ExchangeCabinetInputConncetions1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions1
		{
			get
			{
				return this._ExchangeCabinetInputConncetions1;
			}
			set
			{
				this._ExchangeCabinetInputConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_InvestigatePossibilityWaitinglist", Storage="_InvestigatePossibilityWaitinglists", ThisKey="ID", OtherKey="InstallAdressID")]
		public EntitySet<InvestigatePossibilityWaitinglist> InvestigatePossibilityWaitinglists
		{
			get
			{
				return this._InvestigatePossibilityWaitinglists;
			}
			set
			{
				this._InvestigatePossibilityWaitinglists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_RefundDeposit", Storage="_RefundDeposits", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<RefundDeposit> RefundDeposits
		{
			get
			{
				return this._RefundDeposits;
			}
			set
			{
				this._RefundDeposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_RefundDeposit1", Storage="_RefundDeposits1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<RefundDeposit> RefundDeposits1
		{
			get
			{
				return this._RefundDeposits1;
			}
			set
			{
				this._RefundDeposits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpaceAndPower", Storage="_SpaceAndPowers", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers
		{
			get
			{
				return this._SpaceAndPowers;
			}
			set
			{
				this._SpaceAndPowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWire", Storage="_SpecialWires", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<SpecialWire> SpecialWires
		{
			get
			{
				return this._SpecialWires;
			}
			set
			{
				this._SpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWire1", Storage="_SpecialWires1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<SpecialWire> SpecialWires1
		{
			get
			{
				return this._SpecialWires1;
			}
			set
			{
				this._SpecialWires1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWireAddress", Storage="_SpecialWireAddresses", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<SpecialWireAddress> SpecialWireAddresses
		{
			get
			{
				return this._SpecialWireAddresses;
			}
			set
			{
				this._SpecialWireAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWireAddress1", Storage="_SpecialWireAddresses1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<SpecialWireAddress> SpecialWireAddresses1
		{
			get
			{
				return this._SpecialWireAddresses1;
			}
			set
			{
				this._SpecialWireAddresses1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWirePoint", Storage="_SpecialWirePoints", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<SpecialWirePoint> SpecialWirePoints
		{
			get
			{
				return this._SpecialWirePoints;
			}
			set
			{
				this._SpecialWirePoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_TakePossession", Storage="_TakePossessions", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<TakePossession> TakePossessions
		{
			get
			{
				return this._TakePossessions;
			}
			set
			{
				this._TakePossessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_TakePossession1", Storage="_TakePossessions1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<TakePossession> TakePossessions1
		{
			get
			{
				return this._TakePossessions1;
			}
			set
			{
				this._TakePossessions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Telephone1", Storage="_Telephones1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<Telephone> Telephones1
		{
			get
			{
				return this._Telephones1;
			}
			set
			{
				this._Telephones1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_TranslationOpticalCabinetToNormalConncetion", Storage="_TranslationOpticalCabinetToNormalConncetions", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_TranslationOpticalCabinetToNormalConncetion1", Storage="_TranslationOpticalCabinetToNormalConncetions1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_VacateSpecialWire", Storage="_VacateSpecialWires", ThisKey="ID", OtherKey="OldInstallAddressID")]
		public EntitySet<VacateSpecialWire> VacateSpecialWires
		{
			get
			{
				return this._VacateSpecialWires;
			}
			set
			{
				this._VacateSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_VacateSpecialWire1", Storage="_VacateSpecialWires1", ThisKey="ID", OtherKey="OldCorrespondenceAddressID")]
		public EntitySet<VacateSpecialWire> VacateSpecialWires1
		{
			get
			{
				return this._VacateSpecialWires1;
			}
			set
			{
				this._VacateSpecialWires1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_VisitAddress", Storage="_VisitAddresses", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<VisitAddress> VisitAddresses
		{
			get
			{
				return this._VisitAddresses;
			}
			set
			{
				this._VisitAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_InstallRequest", Storage="_InstallRequests", ThisKey="ID", OtherKey="InstallAddressID")]
		public EntitySet<InstallRequest> InstallRequests
		{
			get
			{
				return this._InstallRequests;
			}
			set
			{
				this._InstallRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_InstallRequest1", Storage="_InstallRequests1", ThisKey="ID", OtherKey="CorrespondenceAddressID")]
		public EntitySet<InstallRequest> InstallRequests1
		{
			get
			{
				return this._InstallRequests1;
			}
			set
			{
				this._InstallRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Customer", Storage="_Customers", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Address", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_ChangeAddresses(ChangeAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_ChangeAddresses(ChangeAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_ChangeAddresses1(ChangeAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_ChangeAddresses1(ChangeAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_ChangeAddresses2(ChangeAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address2 = this;
		}
		
		private void detach_ChangeAddresses2(ChangeAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address2 = null;
		}
		
		private void attach_ChangeAddresses3(ChangeAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address3 = this;
		}
		
		private void detach_ChangeAddresses3(ChangeAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address3 = null;
		}
		
		private void attach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_ChangeLocations1(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_ChangeLocations1(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_ChangeLocations2(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Address2 = this;
		}
		
		private void detach_ChangeLocations2(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Address2 = null;
		}
		
		private void attach_ChangeLocations3(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Address3 = this;
		}
		
		private void detach_ChangeLocations3(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Address3 = null;
		}
		
		private void attach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_ChangeLocationSpecialWires1(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_ChangeLocationSpecialWires1(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_ChangeNos(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_ChangeNos(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_ChangeNos1(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_ChangeNos1(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_E1s1(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_E1s1(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_E1s2(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Address2 = this;
		}
		
		private void detach_E1s2(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Address2 = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_RefundDeposits1(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_RefundDeposits1(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_SpaceAndPowers(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_SpaceAndPowers(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_SpecialWires(SpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_SpecialWires(SpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_SpecialWires1(SpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_SpecialWires1(SpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_SpecialWireAddresses(SpecialWireAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_SpecialWireAddresses(SpecialWireAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_SpecialWireAddresses1(SpecialWireAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_SpecialWireAddresses1(SpecialWireAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_SpecialWirePoints(SpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_SpecialWirePoints(SpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_TakePossessions1(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_TakePossessions1(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_Telephones1(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_Telephones1(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_VacateSpecialWires1(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_VacateSpecialWires1(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_VisitAddresses(VisitAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_VisitAddresses(VisitAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_InstallRequests1(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_InstallRequests1(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdjacentPost")]
	public partial class AdjacentPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PostID;
		
		private int _AdjacentPostID;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Post> _Post1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPostIDChanging(int value);
    partial void OnPostIDChanged();
    partial void OnAdjacentPostIDChanging(int value);
    partial void OnAdjacentPostIDChanged();
    #endregion
		
		public AdjacentPost()
		{
			this._Post = default(EntityRef<Post>);
			this._Post1 = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int NOT NULL")]
		public int PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjacentPostID", DbType="Int NOT NULL")]
		public int AdjacentPostID
		{
			get
			{
				return this._AdjacentPostID;
			}
			set
			{
				if ((this._AdjacentPostID != value))
				{
					if (this._Post1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdjacentPostIDChanging(value);
					this.SendPropertyChanging();
					this._AdjacentPostID = value;
					this.SendPropertyChanged("AdjacentPostID");
					this.OnAdjacentPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_AdjacentPost", Storage="_Post", ThisKey="PostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.AdjacentPosts.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.AdjacentPosts.Add(this);
						this._PostID = value.ID;
					}
					else
					{
						this._PostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_AdjacentPost1", Storage="_Post1", ThisKey="AdjacentPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post1
		{
			get
			{
				return this._Post1.Entity;
			}
			set
			{
				Post previousValue = this._Post1.Entity;
				if (((previousValue != value) 
							|| (this._Post1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post1.Entity = null;
						previousValue.AdjacentPosts1.Remove(this);
					}
					this._Post1.Entity = value;
					if ((value != null))
					{
						value.AdjacentPosts1.Add(this);
						this._AdjacentPostID = value.ID;
					}
					else
					{
						this._AdjacentPostID = default(int);
					}
					this.SendPropertyChanged("Post1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSL")]
	public partial class ADSL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private string _Wireless;
		
		private System.Nullable<long> _CustomerOwnerID;
		
		private string _CustomerOwnerName;
		
		private System.Nullable<byte> _CustomerOwnerStatus;
		
		private System.Nullable<int> _CustomerTypeID;
		
		private System.Nullable<int> _TariffID;
		
		private string _LicenseLetterNo;
		
		private System.Nullable<byte> _ServiceType;
		
		private System.Nullable<byte> _RegistrationProjectType;
		
		private System.Nullable<int> _PAPInfoID;
		
		private System.Nullable<long> _ADSLPortID;
		
		private System.Nullable<bool> _HasIP;
		
		private System.Nullable<long> _IPStaticID;
		
		private System.Nullable<long> _GroupIPStaticID;
		
		private System.Nullable<int> _ModemID;
		
		private string _UserID;
		
		private string _UserName;
		
		private string _OrginalPassword;
		
		private string _HashPassword;
		
		private string _AAAPassword;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private System.Nullable<System.DateTime> _ExpDate;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<bool> _WasPCM;
		
		private System.Nullable<int> _CustomerGroupID;
		
		private EntityRef<ADSLCustomerGroup> _ADSLCustomerGroup;
		
		private EntityRef<ADSLCustomerType> _ADSLCustomerType;
		
		private EntityRef<ADSLGroupIP> _ADSLGroupIP;
		
		private EntityRef<ADSLIP> _ADSLIP;
		
		private EntityRef<ADSLModemProperty> _ADSLModemProperty;
		
		private EntityRef<ADSLPort> _ADSLPort;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnWirelessChanging(string value);
    partial void OnWirelessChanged();
    partial void OnCustomerOwnerIDChanging(System.Nullable<long> value);
    partial void OnCustomerOwnerIDChanged();
    partial void OnCustomerOwnerNameChanging(string value);
    partial void OnCustomerOwnerNameChanged();
    partial void OnCustomerOwnerStatusChanging(System.Nullable<byte> value);
    partial void OnCustomerOwnerStatusChanged();
    partial void OnCustomerTypeIDChanging(System.Nullable<int> value);
    partial void OnCustomerTypeIDChanged();
    partial void OnTariffIDChanging(System.Nullable<int> value);
    partial void OnTariffIDChanged();
    partial void OnLicenseLetterNoChanging(string value);
    partial void OnLicenseLetterNoChanged();
    partial void OnServiceTypeChanging(System.Nullable<byte> value);
    partial void OnServiceTypeChanged();
    partial void OnRegistrationProjectTypeChanging(System.Nullable<byte> value);
    partial void OnRegistrationProjectTypeChanged();
    partial void OnPAPInfoIDChanging(System.Nullable<int> value);
    partial void OnPAPInfoIDChanged();
    partial void OnADSLPortIDChanging(System.Nullable<long> value);
    partial void OnADSLPortIDChanged();
    partial void OnHasIPChanging(System.Nullable<bool> value);
    partial void OnHasIPChanged();
    partial void OnIPStaticIDChanging(System.Nullable<long> value);
    partial void OnIPStaticIDChanged();
    partial void OnGroupIPStaticIDChanging(System.Nullable<long> value);
    partial void OnGroupIPStaticIDChanged();
    partial void OnModemIDChanging(System.Nullable<int> value);
    partial void OnModemIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnOrginalPasswordChanging(string value);
    partial void OnOrginalPasswordChanged();
    partial void OnHashPasswordChanging(string value);
    partial void OnHashPasswordChanged();
    partial void OnAAAPasswordChanging(string value);
    partial void OnAAAPasswordChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpDateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnWasPCMChanging(System.Nullable<bool> value);
    partial void OnWasPCMChanged();
    partial void OnCustomerGroupIDChanging(System.Nullable<int> value);
    partial void OnCustomerGroupIDChanged();
    #endregion
		
		public ADSL()
		{
			this._ADSLCustomerGroup = default(EntityRef<ADSLCustomerGroup>);
			this._ADSLCustomerType = default(EntityRef<ADSLCustomerType>);
			this._ADSLGroupIP = default(EntityRef<ADSLGroupIP>);
			this._ADSLIP = default(EntityRef<ADSLIP>);
			this._ADSLModemProperty = default(EntityRef<ADSLModemProperty>);
			this._ADSLPort = default(EntityRef<ADSLPort>);
			this._ADSLService = default(EntityRef<ADSLService>);
			this._PAPInfo = default(EntityRef<PAPInfo>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wireless", DbType="NVarChar(50)")]
		public string Wireless
		{
			get
			{
				return this._Wireless;
			}
			set
			{
				if ((this._Wireless != value))
				{
					this.OnWirelessChanging(value);
					this.SendPropertyChanging();
					this._Wireless = value;
					this.SendPropertyChanged("Wireless");
					this.OnWirelessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerID", DbType="BigInt")]
		public System.Nullable<long> CustomerOwnerID
		{
			get
			{
				return this._CustomerOwnerID;
			}
			set
			{
				if ((this._CustomerOwnerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerID = value;
					this.SendPropertyChanged("CustomerOwnerID");
					this.OnCustomerOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerName", DbType="NVarChar(200)")]
		public string CustomerOwnerName
		{
			get
			{
				return this._CustomerOwnerName;
			}
			set
			{
				if ((this._CustomerOwnerName != value))
				{
					this.OnCustomerOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerName = value;
					this.SendPropertyChanged("CustomerOwnerName");
					this.OnCustomerOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerStatus", DbType="TinyInt")]
		public System.Nullable<byte> CustomerOwnerStatus
		{
			get
			{
				return this._CustomerOwnerStatus;
			}
			set
			{
				if ((this._CustomerOwnerStatus != value))
				{
					this.OnCustomerOwnerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerStatus = value;
					this.SendPropertyChanged("CustomerOwnerStatus");
					this.OnCustomerOwnerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int")]
		public System.Nullable<int> CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._ADSLCustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="Int")]
		public System.Nullable<int> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTariffIDChanging(value);
					this.SendPropertyChanging();
					this._TariffID = value;
					this.SendPropertyChanged("TariffID");
					this.OnTariffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseLetterNo", DbType="NVarChar(50)")]
		public string LicenseLetterNo
		{
			get
			{
				return this._LicenseLetterNo;
			}
			set
			{
				if ((this._LicenseLetterNo != value))
				{
					this.OnLicenseLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseLetterNo = value;
					this.SendPropertyChanged("LicenseLetterNo");
					this.OnLicenseLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="TinyInt")]
		public System.Nullable<byte> ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationProjectType", DbType="TinyInt")]
		public System.Nullable<byte> RegistrationProjectType
		{
			get
			{
				return this._RegistrationProjectType;
			}
			set
			{
				if ((this._RegistrationProjectType != value))
				{
					this.OnRegistrationProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationProjectType = value;
					this.SendPropertyChanged("RegistrationProjectType");
					this.OnRegistrationProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int")]
		public System.Nullable<int> PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLPortID", DbType="BigInt")]
		public System.Nullable<long> ADSLPortID
		{
			get
			{
				return this._ADSLPortID;
			}
			set
			{
				if ((this._ADSLPortID != value))
				{
					if (this._ADSLPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLPortIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLPortID = value;
					this.SendPropertyChanged("ADSLPortID");
					this.OnADSLPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIP", DbType="Bit")]
		public System.Nullable<bool> HasIP
		{
			get
			{
				return this._HasIP;
			}
			set
			{
				if ((this._HasIP != value))
				{
					this.OnHasIPChanging(value);
					this.SendPropertyChanging();
					this._HasIP = value;
					this.SendPropertyChanged("HasIP");
					this.OnHasIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPStaticID", DbType="BigInt")]
		public System.Nullable<long> IPStaticID
		{
			get
			{
				return this._IPStaticID;
			}
			set
			{
				if ((this._IPStaticID != value))
				{
					if (this._ADSLIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._IPStaticID = value;
					this.SendPropertyChanged("IPStaticID");
					this.OnIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupIPStaticID", DbType="BigInt")]
		public System.Nullable<long> GroupIPStaticID
		{
			get
			{
				return this._GroupIPStaticID;
			}
			set
			{
				if ((this._GroupIPStaticID != value))
				{
					if (this._ADSLGroupIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._GroupIPStaticID = value;
					this.SendPropertyChanged("GroupIPStaticID");
					this.OnGroupIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemID", DbType="Int")]
		public System.Nullable<int> ModemID
		{
			get
			{
				return this._ModemID;
			}
			set
			{
				if ((this._ModemID != value))
				{
					if (this._ADSLModemProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModemIDChanging(value);
					this.SendPropertyChanging();
					this._ModemID = value;
					this.SendPropertyChanged("ModemID");
					this.OnModemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrginalPassword", DbType="NVarChar(50)")]
		public string OrginalPassword
		{
			get
			{
				return this._OrginalPassword;
			}
			set
			{
				if ((this._OrginalPassword != value))
				{
					this.OnOrginalPasswordChanging(value);
					this.SendPropertyChanging();
					this._OrginalPassword = value;
					this.SendPropertyChanged("OrginalPassword");
					this.OnOrginalPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashPassword", DbType="NVarChar(50)")]
		public string HashPassword
		{
			get
			{
				return this._HashPassword;
			}
			set
			{
				if ((this._HashPassword != value))
				{
					this.OnHashPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashPassword = value;
					this.SendPropertyChanged("HashPassword");
					this.OnHashPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAAPassword", DbType="NVarChar(50)")]
		public string AAAPassword
		{
			get
			{
				return this._AAAPassword;
			}
			set
			{
				if ((this._AAAPassword != value))
				{
					this.OnAAAPasswordChanging(value);
					this.SendPropertyChanging();
					this._AAAPassword = value;
					this.SendPropertyChanged("AAAPassword");
					this.OnAAAPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this.OnExpDateChanging(value);
					this.SendPropertyChanging();
					this._ExpDate = value;
					this.SendPropertyChanged("ExpDate");
					this.OnExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasPCM", DbType="Bit")]
		public System.Nullable<bool> WasPCM
		{
			get
			{
				return this._WasPCM;
			}
			set
			{
				if ((this._WasPCM != value))
				{
					this.OnWasPCMChanging(value);
					this.SendPropertyChanging();
					this._WasPCM = value;
					this.SendPropertyChanged("WasPCM");
					this.OnWasPCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGroupID", DbType="Int")]
		public System.Nullable<int> CustomerGroupID
		{
			get
			{
				return this._CustomerGroupID;
			}
			set
			{
				if ((this._CustomerGroupID != value))
				{
					if (this._ADSLCustomerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerGroupID = value;
					this.SendPropertyChanged("CustomerGroupID");
					this.OnCustomerGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSL", Storage="_ADSLCustomerGroup", ThisKey="CustomerGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerGroup ADSLCustomerGroup
		{
			get
			{
				return this._ADSLCustomerGroup.Entity;
			}
			set
			{
				ADSLCustomerGroup previousValue = this._ADSLCustomerGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerGroup.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._ADSLCustomerGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._CustomerGroupID = value.ID;
					}
					else
					{
						this._CustomerGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerType_ADSL", Storage="_ADSLCustomerType", ThisKey="CustomerTypeID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerType ADSLCustomerType
		{
			get
			{
				return this._ADSLCustomerType.Entity;
			}
			set
			{
				ADSLCustomerType previousValue = this._ADSLCustomerType.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerType.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._ADSLCustomerType.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._CustomerTypeID = value.ID;
					}
					else
					{
						this._CustomerTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_ADSL", Storage="_ADSLGroupIP", ThisKey="GroupIPStaticID", OtherKey="ID", IsForeignKey=true)]
		public ADSLGroupIP ADSLGroupIP
		{
			get
			{
				return this._ADSLGroupIP.Entity;
			}
			set
			{
				ADSLGroupIP previousValue = this._ADSLGroupIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLGroupIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLGroupIP.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._ADSLGroupIP.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._GroupIPStaticID = value.ID;
					}
					else
					{
						this._GroupIPStaticID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLGroupIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_ADSL", Storage="_ADSLIP", ThisKey="IPStaticID", OtherKey="ID", IsForeignKey=true)]
		public ADSLIP ADSLIP
		{
			get
			{
				return this._ADSLIP.Entity;
			}
			set
			{
				ADSLIP previousValue = this._ADSLIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLIP.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._ADSLIP.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._IPStaticID = value.ID;
					}
					else
					{
						this._IPStaticID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModemProperty_ADSL", Storage="_ADSLModemProperty", ThisKey="ModemID", OtherKey="ID", IsForeignKey=true)]
		public ADSLModemProperty ADSLModemProperty
		{
			get
			{
				return this._ADSLModemProperty.Entity;
			}
			set
			{
				ADSLModemProperty previousValue = this._ADSLModemProperty.Entity;
				if (((previousValue != value) 
							|| (this._ADSLModemProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLModemProperty.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._ADSLModemProperty.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._ModemID = value.ID;
					}
					else
					{
						this._ModemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLModemProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSL", Storage="_ADSLPort", ThisKey="ADSLPortID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPort ADSLPort
		{
			get
			{
				return this._ADSLPort.Entity;
			}
			set
			{
				ADSLPort previousValue = this._ADSLPort.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPort.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._ADSLPort.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._ADSLPortID = value.ID;
					}
					else
					{
						this._ADSLPortID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSL", Storage="_ADSLService", ThisKey="TariffID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._TariffID = value.ID;
					}
					else
					{
						this._TariffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSL", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ADSL", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSL", Storage="_Customer", ThisKey="CustomerOwnerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ADSLs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ADSLs.Add(this);
						this._CustomerOwnerID = value.ID;
					}
					else
					{
						this._CustomerOwnerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSL1")]
	public partial class ADSL1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TelephoneNo;
		
		private System.Nullable<long> _CustomerOwnerID;
		
		private string _CustomerOwnerName;
		
		private System.Nullable<byte> _CustomerOwnerStatus;
		
		private System.Nullable<int> _TariffID;
		
		private string _LicenseLetterNo;
		
		private System.Nullable<byte> _ServiceType;
		
		private System.Nullable<byte> _RegistrationProjectType;
		
		private System.Nullable<int> _PAPInfoID;
		
		private System.Nullable<long> _ADSLPortID;
		
		private System.Nullable<bool> _HasIP;
		
		private System.Nullable<long> _IPStaticID;
		
		private System.Nullable<long> _GroupIPStaticID;
		
		private System.Nullable<int> _ModemID;
		
		private string _UserID;
		
		private string _UserName;
		
		private string _OrginalPassword;
		
		private string _HashPassword;
		
		private string _AAAPassword;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private System.Nullable<System.DateTime> _ExpDate;
		
		private System.Nullable<byte> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnCustomerOwnerIDChanging(System.Nullable<long> value);
    partial void OnCustomerOwnerIDChanged();
    partial void OnCustomerOwnerNameChanging(string value);
    partial void OnCustomerOwnerNameChanged();
    partial void OnCustomerOwnerStatusChanging(System.Nullable<byte> value);
    partial void OnCustomerOwnerStatusChanged();
    partial void OnTariffIDChanging(System.Nullable<int> value);
    partial void OnTariffIDChanged();
    partial void OnLicenseLetterNoChanging(string value);
    partial void OnLicenseLetterNoChanged();
    partial void OnServiceTypeChanging(System.Nullable<byte> value);
    partial void OnServiceTypeChanged();
    partial void OnRegistrationProjectTypeChanging(System.Nullable<byte> value);
    partial void OnRegistrationProjectTypeChanged();
    partial void OnPAPInfoIDChanging(System.Nullable<int> value);
    partial void OnPAPInfoIDChanged();
    partial void OnADSLPortIDChanging(System.Nullable<long> value);
    partial void OnADSLPortIDChanged();
    partial void OnHasIPChanging(System.Nullable<bool> value);
    partial void OnHasIPChanged();
    partial void OnIPStaticIDChanging(System.Nullable<long> value);
    partial void OnIPStaticIDChanged();
    partial void OnGroupIPStaticIDChanging(System.Nullable<long> value);
    partial void OnGroupIPStaticIDChanged();
    partial void OnModemIDChanging(System.Nullable<int> value);
    partial void OnModemIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnOrginalPasswordChanging(string value);
    partial void OnOrginalPasswordChanged();
    partial void OnHashPasswordChanging(string value);
    partial void OnHashPasswordChanged();
    partial void OnAAAPasswordChanging(string value);
    partial void OnAAAPasswordChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpDateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public ADSL1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerID", DbType="BigInt")]
		public System.Nullable<long> CustomerOwnerID
		{
			get
			{
				return this._CustomerOwnerID;
			}
			set
			{
				if ((this._CustomerOwnerID != value))
				{
					this.OnCustomerOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerID = value;
					this.SendPropertyChanged("CustomerOwnerID");
					this.OnCustomerOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerName", DbType="NVarChar(200)")]
		public string CustomerOwnerName
		{
			get
			{
				return this._CustomerOwnerName;
			}
			set
			{
				if ((this._CustomerOwnerName != value))
				{
					this.OnCustomerOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerName = value;
					this.SendPropertyChanged("CustomerOwnerName");
					this.OnCustomerOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerStatus", DbType="TinyInt")]
		public System.Nullable<byte> CustomerOwnerStatus
		{
			get
			{
				return this._CustomerOwnerStatus;
			}
			set
			{
				if ((this._CustomerOwnerStatus != value))
				{
					this.OnCustomerOwnerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerStatus = value;
					this.SendPropertyChanged("CustomerOwnerStatus");
					this.OnCustomerOwnerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="Int")]
		public System.Nullable<int> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					this.OnTariffIDChanging(value);
					this.SendPropertyChanging();
					this._TariffID = value;
					this.SendPropertyChanged("TariffID");
					this.OnTariffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseLetterNo", DbType="NVarChar(50)")]
		public string LicenseLetterNo
		{
			get
			{
				return this._LicenseLetterNo;
			}
			set
			{
				if ((this._LicenseLetterNo != value))
				{
					this.OnLicenseLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseLetterNo = value;
					this.SendPropertyChanged("LicenseLetterNo");
					this.OnLicenseLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="TinyInt")]
		public System.Nullable<byte> ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationProjectType", DbType="TinyInt")]
		public System.Nullable<byte> RegistrationProjectType
		{
			get
			{
				return this._RegistrationProjectType;
			}
			set
			{
				if ((this._RegistrationProjectType != value))
				{
					this.OnRegistrationProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationProjectType = value;
					this.SendPropertyChanged("RegistrationProjectType");
					this.OnRegistrationProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int")]
		public System.Nullable<int> PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLPortID", DbType="BigInt")]
		public System.Nullable<long> ADSLPortID
		{
			get
			{
				return this._ADSLPortID;
			}
			set
			{
				if ((this._ADSLPortID != value))
				{
					this.OnADSLPortIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLPortID = value;
					this.SendPropertyChanged("ADSLPortID");
					this.OnADSLPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIP", DbType="Bit")]
		public System.Nullable<bool> HasIP
		{
			get
			{
				return this._HasIP;
			}
			set
			{
				if ((this._HasIP != value))
				{
					this.OnHasIPChanging(value);
					this.SendPropertyChanging();
					this._HasIP = value;
					this.SendPropertyChanged("HasIP");
					this.OnHasIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPStaticID", DbType="BigInt")]
		public System.Nullable<long> IPStaticID
		{
			get
			{
				return this._IPStaticID;
			}
			set
			{
				if ((this._IPStaticID != value))
				{
					this.OnIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._IPStaticID = value;
					this.SendPropertyChanged("IPStaticID");
					this.OnIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupIPStaticID", DbType="BigInt")]
		public System.Nullable<long> GroupIPStaticID
		{
			get
			{
				return this._GroupIPStaticID;
			}
			set
			{
				if ((this._GroupIPStaticID != value))
				{
					this.OnGroupIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._GroupIPStaticID = value;
					this.SendPropertyChanged("GroupIPStaticID");
					this.OnGroupIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemID", DbType="Int")]
		public System.Nullable<int> ModemID
		{
			get
			{
				return this._ModemID;
			}
			set
			{
				if ((this._ModemID != value))
				{
					this.OnModemIDChanging(value);
					this.SendPropertyChanging();
					this._ModemID = value;
					this.SendPropertyChanged("ModemID");
					this.OnModemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrginalPassword", DbType="NVarChar(50)")]
		public string OrginalPassword
		{
			get
			{
				return this._OrginalPassword;
			}
			set
			{
				if ((this._OrginalPassword != value))
				{
					this.OnOrginalPasswordChanging(value);
					this.SendPropertyChanging();
					this._OrginalPassword = value;
					this.SendPropertyChanged("OrginalPassword");
					this.OnOrginalPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashPassword", DbType="NVarChar(50)")]
		public string HashPassword
		{
			get
			{
				return this._HashPassword;
			}
			set
			{
				if ((this._HashPassword != value))
				{
					this.OnHashPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashPassword = value;
					this.SendPropertyChanged("HashPassword");
					this.OnHashPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAAPassword", DbType="NVarChar(50)")]
		public string AAAPassword
		{
			get
			{
				return this._AAAPassword;
			}
			set
			{
				if ((this._AAAPassword != value))
				{
					this.OnAAAPasswordChanging(value);
					this.SendPropertyChanging();
					this._AAAPassword = value;
					this.SendPropertyChanged("AAAPassword");
					this.OnAAAPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this.OnExpDateChanging(value);
					this.SendPropertyChanging();
					this._ExpDate = value;
					this.SendPropertyChanged("ExpDate");
					this.OnExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLAAAActionLog")]
	public partial class ADSLAAAActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _Wireless;
		
		private byte _ActionID;
		
		private System.DateTime _InsertDate;
		
		private int _UserID;
		
		private string _OldValue;
		
		private string _NewValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnWirelessChanging(string value);
    partial void OnWirelessChanged();
    partial void OnActionIDChanging(byte value);
    partial void OnActionIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    #endregion
		
		public ADSLAAAActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wireless", DbType="NVarChar(50)")]
		public string Wireless
		{
			get
			{
				return this._Wireless;
			}
			set
			{
				if ((this._Wireless != value))
				{
					this.OnWirelessChanging(value);
					this.SendPropertyChanging();
					this._Wireless = value;
					this.SendPropertyChanged("Wireless");
					this.OnWirelessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="TinyInt NOT NULL")]
		public byte ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(MAX)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(MAX)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLAAAType")]
	public partial class ADSLAAAType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<ADSLEquipment> _ADSLEquipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ADSLAAAType()
		{
			this._ADSLEquipments = new EntitySet<ADSLEquipment>(new Action<ADSLEquipment>(this.attach_ADSLEquipments), new Action<ADSLEquipment>(this.detach_ADSLEquipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLAAAType_ADSLEquipment", Storage="_ADSLEquipments", ThisKey="ID", OtherKey="AAAType")]
		public EntitySet<ADSLEquipment> ADSLEquipments
		{
			get
			{
				return this._ADSLEquipments;
			}
			set
			{
				this._ADSLEquipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLEquipments(ADSLEquipment entity)
		{
			this.SendPropertyChanging();
			entity.ADSLAAAType = this;
		}
		
		private void detach_ADSLEquipments(ADSLEquipment entity)
		{
			this.SendPropertyChanging();
			entity.ADSLAAAType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLAgentLog")]
	public partial class ADSLAgentLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _AgentID;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAgentIDChanging(byte value);
    partial void OnAgentIDChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public ADSLAgentLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentID", DbType="TinyInt NOT NULL")]
		public byte AgentID
		{
			get
			{
				return this._AgentID;
			}
			set
			{
				if ((this._AgentID != value))
				{
					this.OnAgentIDChanging(value);
					this.SendPropertyChanging();
					this._AgentID = value;
					this.SendPropertyChanged("AgentID");
					this.OnAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLChangeCustomerOwnerCharacteristics")]
	public partial class ADSLChangeCustomerOwnerCharacteristic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _OldCustomerOwnerID;
		
		private System.Nullable<long> _NewCustomerOwnerID;
		
		private System.Nullable<int> _FinalUserID;
		
		private System.Nullable<System.DateTime> _FinalDate;
		
		private string _FinalComment;
		
		private System.Nullable<byte> _NewCustomerOwnerStatus;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Customer> _Customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldCustomerOwnerIDChanging(System.Nullable<long> value);
    partial void OnOldCustomerOwnerIDChanged();
    partial void OnNewCustomerOwnerIDChanging(System.Nullable<long> value);
    partial void OnNewCustomerOwnerIDChanged();
    partial void OnFinalUserIDChanging(System.Nullable<int> value);
    partial void OnFinalUserIDChanged();
    partial void OnFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDateChanged();
    partial void OnFinalCommentChanging(string value);
    partial void OnFinalCommentChanged();
    partial void OnNewCustomerOwnerStatusChanging(System.Nullable<byte> value);
    partial void OnNewCustomerOwnerStatusChanged();
    #endregion
		
		public ADSLChangeCustomerOwnerCharacteristic()
		{
			this._Request = default(EntityRef<Request>);
			this._Customer = default(EntityRef<Customer>);
			this._Customer1 = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCustomerOwnerID", DbType="BigInt")]
		public System.Nullable<long> OldCustomerOwnerID
		{
			get
			{
				return this._OldCustomerOwnerID;
			}
			set
			{
				if ((this._OldCustomerOwnerID != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCustomerOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OldCustomerOwnerID = value;
					this.SendPropertyChanged("OldCustomerOwnerID");
					this.OnOldCustomerOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCustomerOwnerID", DbType="BigInt")]
		public System.Nullable<long> NewCustomerOwnerID
		{
			get
			{
				return this._NewCustomerOwnerID;
			}
			set
			{
				if ((this._NewCustomerOwnerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCustomerOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._NewCustomerOwnerID = value;
					this.SendPropertyChanged("NewCustomerOwnerID");
					this.OnNewCustomerOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalUserID", DbType="Int")]
		public System.Nullable<int> FinalUserID
		{
			get
			{
				return this._FinalUserID;
			}
			set
			{
				if ((this._FinalUserID != value))
				{
					this.OnFinalUserIDChanging(value);
					this.SendPropertyChanging();
					this._FinalUserID = value;
					this.SendPropertyChanged("FinalUserID");
					this.OnFinalUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinalDate
		{
			get
			{
				return this._FinalDate;
			}
			set
			{
				if ((this._FinalDate != value))
				{
					this.OnFinalDateChanging(value);
					this.SendPropertyChanging();
					this._FinalDate = value;
					this.SendPropertyChanged("FinalDate");
					this.OnFinalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalComment", DbType="NVarChar(50)")]
		public string FinalComment
		{
			get
			{
				return this._FinalComment;
			}
			set
			{
				if ((this._FinalComment != value))
				{
					this.OnFinalCommentChanging(value);
					this.SendPropertyChanging();
					this._FinalComment = value;
					this.SendPropertyChanged("FinalComment");
					this.OnFinalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCustomerOwnerStatus", DbType="TinyInt")]
		public System.Nullable<byte> NewCustomerOwnerStatus
		{
			get
			{
				return this._NewCustomerOwnerStatus;
			}
			set
			{
				if ((this._NewCustomerOwnerStatus != value))
				{
					this.OnNewCustomerOwnerStatusChanging(value);
					this.SendPropertyChanging();
					this._NewCustomerOwnerStatus = value;
					this.SendPropertyChanged("NewCustomerOwnerStatus");
					this.OnNewCustomerOwnerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangeCustomerOwnerCharacteristic", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLChangeCustomerOwnerCharacteristic = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeCustomerOwnerCharacteristic = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSLChangeCustomerOwnerCharacteristic", Storage="_Customer", ThisKey="NewCustomerOwnerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ADSLChangeCustomerOwnerCharacteristics.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeCustomerOwnerCharacteristics.Add(this);
						this._NewCustomerOwnerID = value.ID;
					}
					else
					{
						this._NewCustomerOwnerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSLChangeCustomerOwnerCharacteristic1", Storage="_Customer1", ThisKey="OldCustomerOwnerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.ADSLChangeCustomerOwnerCharacteristics1.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeCustomerOwnerCharacteristics1.Add(this);
						this._OldCustomerOwnerID = value.ID;
					}
					else
					{
						this._OldCustomerOwnerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLChangeIPRequest")]
	public partial class ADSLChangeIPRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<byte> _ChangeIPType;
		
		private System.Nullable<long> _OldIPStaticID;
		
		private System.Nullable<long> _NewIPStaticID;
		
		private System.Nullable<long> _OldGroupIPStaticID;
		
		private System.Nullable<long> _NewGroupIPStaticID;
		
		private System.Nullable<int> _IPTime;
		
		private System.Nullable<long> _SaleUserID;
		
		private System.Nullable<System.DateTime> _SaleDate;
		
		private string _SaleComment;
		
		private System.Nullable<int> _FinancialUserID;
		
		private System.Nullable<System.DateTime> _FinancialDate;
		
		private string _FinancialComment;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnChangeIPTypeChanging(System.Nullable<byte> value);
    partial void OnChangeIPTypeChanged();
    partial void OnOldIPStaticIDChanging(System.Nullable<long> value);
    partial void OnOldIPStaticIDChanged();
    partial void OnNewIPStaticIDChanging(System.Nullable<long> value);
    partial void OnNewIPStaticIDChanged();
    partial void OnOldGroupIPStaticIDChanging(System.Nullable<long> value);
    partial void OnOldGroupIPStaticIDChanged();
    partial void OnNewGroupIPStaticIDChanging(System.Nullable<long> value);
    partial void OnNewGroupIPStaticIDChanged();
    partial void OnIPTimeChanging(System.Nullable<int> value);
    partial void OnIPTimeChanged();
    partial void OnSaleUserIDChanging(System.Nullable<long> value);
    partial void OnSaleUserIDChanged();
    partial void OnSaleDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleDateChanged();
    partial void OnSaleCommentChanging(string value);
    partial void OnSaleCommentChanged();
    partial void OnFinancialUserIDChanging(System.Nullable<int> value);
    partial void OnFinancialUserIDChanged();
    partial void OnFinancialDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinancialDateChanged();
    partial void OnFinancialCommentChanging(string value);
    partial void OnFinancialCommentChanged();
    #endregion
		
		public ADSLChangeIPRequest()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeIPType", DbType="TinyInt")]
		public System.Nullable<byte> ChangeIPType
		{
			get
			{
				return this._ChangeIPType;
			}
			set
			{
				if ((this._ChangeIPType != value))
				{
					this.OnChangeIPTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeIPType = value;
					this.SendPropertyChanged("ChangeIPType");
					this.OnChangeIPTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldIPStaticID", DbType="BigInt")]
		public System.Nullable<long> OldIPStaticID
		{
			get
			{
				return this._OldIPStaticID;
			}
			set
			{
				if ((this._OldIPStaticID != value))
				{
					this.OnOldIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._OldIPStaticID = value;
					this.SendPropertyChanged("OldIPStaticID");
					this.OnOldIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewIPStaticID", DbType="BigInt")]
		public System.Nullable<long> NewIPStaticID
		{
			get
			{
				return this._NewIPStaticID;
			}
			set
			{
				if ((this._NewIPStaticID != value))
				{
					this.OnNewIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._NewIPStaticID = value;
					this.SendPropertyChanged("NewIPStaticID");
					this.OnNewIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldGroupIPStaticID", DbType="BigInt")]
		public System.Nullable<long> OldGroupIPStaticID
		{
			get
			{
				return this._OldGroupIPStaticID;
			}
			set
			{
				if ((this._OldGroupIPStaticID != value))
				{
					this.OnOldGroupIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._OldGroupIPStaticID = value;
					this.SendPropertyChanged("OldGroupIPStaticID");
					this.OnOldGroupIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewGroupIPStaticID", DbType="BigInt")]
		public System.Nullable<long> NewGroupIPStaticID
		{
			get
			{
				return this._NewGroupIPStaticID;
			}
			set
			{
				if ((this._NewGroupIPStaticID != value))
				{
					this.OnNewGroupIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._NewGroupIPStaticID = value;
					this.SendPropertyChanged("NewGroupIPStaticID");
					this.OnNewGroupIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPTime", DbType="Int")]
		public System.Nullable<int> IPTime
		{
			get
			{
				return this._IPTime;
			}
			set
			{
				if ((this._IPTime != value))
				{
					this.OnIPTimeChanging(value);
					this.SendPropertyChanging();
					this._IPTime = value;
					this.SendPropertyChanged("IPTime");
					this.OnIPTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleUserID", DbType="BigInt")]
		public System.Nullable<long> SaleUserID
		{
			get
			{
				return this._SaleUserID;
			}
			set
			{
				if ((this._SaleUserID != value))
				{
					this.OnSaleUserIDChanging(value);
					this.SendPropertyChanging();
					this._SaleUserID = value;
					this.SendPropertyChanged("SaleUserID");
					this.OnSaleUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this.OnSaleDateChanging(value);
					this.SendPropertyChanging();
					this._SaleDate = value;
					this.SendPropertyChanged("SaleDate");
					this.OnSaleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleComment", DbType="NVarChar(MAX)")]
		public string SaleComment
		{
			get
			{
				return this._SaleComment;
			}
			set
			{
				if ((this._SaleComment != value))
				{
					this.OnSaleCommentChanging(value);
					this.SendPropertyChanging();
					this._SaleComment = value;
					this.SendPropertyChanged("SaleComment");
					this.OnSaleCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialUserID", DbType="Int")]
		public System.Nullable<int> FinancialUserID
		{
			get
			{
				return this._FinancialUserID;
			}
			set
			{
				if ((this._FinancialUserID != value))
				{
					this.OnFinancialUserIDChanging(value);
					this.SendPropertyChanging();
					this._FinancialUserID = value;
					this.SendPropertyChanged("FinancialUserID");
					this.OnFinancialUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FinancialDate
		{
			get
			{
				return this._FinancialDate;
			}
			set
			{
				if ((this._FinancialDate != value))
				{
					this.OnFinancialDateChanging(value);
					this.SendPropertyChanging();
					this._FinancialDate = value;
					this.SendPropertyChanged("FinancialDate");
					this.OnFinancialDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialComment", DbType="NVarChar(MAX)")]
		public string FinancialComment
		{
			get
			{
				return this._FinancialComment;
			}
			set
			{
				if ((this._FinancialComment != value))
				{
					this.OnFinancialCommentChanging(value);
					this.SendPropertyChanging();
					this._FinancialComment = value;
					this.SendPropertyChanged("FinancialComment");
					this.OnFinancialCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangeIPRequest", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLChangeIPRequest = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeIPRequest = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLChangePlace")]
	public partial class ADSLChangePlace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _OldTelephoneNo;
		
		private System.Nullable<long> _NewTelephoneNo;
		
		private System.Nullable<int> _OldCenterID;
		
		private System.Nullable<int> _NewCenterID;
		
		private System.Nullable<long> _OldPortID;
		
		private System.Nullable<long> _NewPortID;
		
		private System.Nullable<bool> _HasCost;
		
		private System.Nullable<long> _CustomerOwnerID;
		
		private System.Nullable<int> _MDFDischargeUserID;
		
		private System.Nullable<System.DateTime> _MDFDischargeDate;
		
		private string _MDFDischargeComment;
		
		private System.Nullable<int> _MDFInstallUserID;
		
		private System.Nullable<System.DateTime> _MDFInstallDate;
		
		private string _MDFInstallComment;
		
		private string _Comment;
		
		private EntityRef<ADSLPort> _ADSLPort;
		
		private EntityRef<ADSLPort> _ADSLPort1;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Center> _Center1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldTelephoneNoChanging(System.Nullable<long> value);
    partial void OnOldTelephoneNoChanged();
    partial void OnNewTelephoneNoChanging(System.Nullable<long> value);
    partial void OnNewTelephoneNoChanged();
    partial void OnOldCenterIDChanging(System.Nullable<int> value);
    partial void OnOldCenterIDChanged();
    partial void OnNewCenterIDChanging(System.Nullable<int> value);
    partial void OnNewCenterIDChanged();
    partial void OnOldPortIDChanging(System.Nullable<long> value);
    partial void OnOldPortIDChanged();
    partial void OnNewPortIDChanging(System.Nullable<long> value);
    partial void OnNewPortIDChanged();
    partial void OnHasCostChanging(System.Nullable<bool> value);
    partial void OnHasCostChanged();
    partial void OnCustomerOwnerIDChanging(System.Nullable<long> value);
    partial void OnCustomerOwnerIDChanged();
    partial void OnMDFDischargeUserIDChanging(System.Nullable<int> value);
    partial void OnMDFDischargeUserIDChanged();
    partial void OnMDFDischargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFDischargeDateChanged();
    partial void OnMDFDischargeCommentChanging(string value);
    partial void OnMDFDischargeCommentChanged();
    partial void OnMDFInstallUserIDChanging(System.Nullable<int> value);
    partial void OnMDFInstallUserIDChanged();
    partial void OnMDFInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFInstallDateChanged();
    partial void OnMDFInstallCommentChanging(string value);
    partial void OnMDFInstallCommentChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ADSLChangePlace()
		{
			this._ADSLPort = default(EntityRef<ADSLPort>);
			this._ADSLPort1 = default(EntityRef<ADSLPort>);
			this._Center = default(EntityRef<Center>);
			this._Center1 = default(EntityRef<Center>);
			this._Request = default(EntityRef<Request>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> OldTelephoneNo
		{
			get
			{
				return this._OldTelephoneNo;
			}
			set
			{
				if ((this._OldTelephoneNo != value))
				{
					this.OnOldTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._OldTelephoneNo = value;
					this.SendPropertyChanged("OldTelephoneNo");
					this.OnOldTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> NewTelephoneNo
		{
			get
			{
				return this._NewTelephoneNo;
			}
			set
			{
				if ((this._NewTelephoneNo != value))
				{
					this.OnNewTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._NewTelephoneNo = value;
					this.SendPropertyChanged("NewTelephoneNo");
					this.OnNewTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCenterID", DbType="Int")]
		public System.Nullable<int> OldCenterID
		{
			get
			{
				return this._OldCenterID;
			}
			set
			{
				if ((this._OldCenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCenterIDChanging(value);
					this.SendPropertyChanging();
					this._OldCenterID = value;
					this.SendPropertyChanged("OldCenterID");
					this.OnOldCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCenterID", DbType="Int")]
		public System.Nullable<int> NewCenterID
		{
			get
			{
				return this._NewCenterID;
			}
			set
			{
				if ((this._NewCenterID != value))
				{
					if (this._Center1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCenterIDChanging(value);
					this.SendPropertyChanging();
					this._NewCenterID = value;
					this.SendPropertyChanged("NewCenterID");
					this.OnNewCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPortID", DbType="BigInt")]
		public System.Nullable<long> OldPortID
		{
			get
			{
				return this._OldPortID;
			}
			set
			{
				if ((this._OldPortID != value))
				{
					if (this._ADSLPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPortIDChanging(value);
					this.SendPropertyChanging();
					this._OldPortID = value;
					this.SendPropertyChanged("OldPortID");
					this.OnOldPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPortID", DbType="BigInt")]
		public System.Nullable<long> NewPortID
		{
			get
			{
				return this._NewPortID;
			}
			set
			{
				if ((this._NewPortID != value))
				{
					if (this._ADSLPort1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewPortIDChanging(value);
					this.SendPropertyChanging();
					this._NewPortID = value;
					this.SendPropertyChanged("NewPortID");
					this.OnNewPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCost", DbType="Bit")]
		public System.Nullable<bool> HasCost
		{
			get
			{
				return this._HasCost;
			}
			set
			{
				if ((this._HasCost != value))
				{
					this.OnHasCostChanging(value);
					this.SendPropertyChanging();
					this._HasCost = value;
					this.SendPropertyChanged("HasCost");
					this.OnHasCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerID", DbType="BigInt")]
		public System.Nullable<long> CustomerOwnerID
		{
			get
			{
				return this._CustomerOwnerID;
			}
			set
			{
				if ((this._CustomerOwnerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerID = value;
					this.SendPropertyChanged("CustomerOwnerID");
					this.OnCustomerOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDischargeUserID", DbType="Int")]
		public System.Nullable<int> MDFDischargeUserID
		{
			get
			{
				return this._MDFDischargeUserID;
			}
			set
			{
				if ((this._MDFDischargeUserID != value))
				{
					this.OnMDFDischargeUserIDChanging(value);
					this.SendPropertyChanging();
					this._MDFDischargeUserID = value;
					this.SendPropertyChanged("MDFDischargeUserID");
					this.OnMDFDischargeUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDischargeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFDischargeDate
		{
			get
			{
				return this._MDFDischargeDate;
			}
			set
			{
				if ((this._MDFDischargeDate != value))
				{
					this.OnMDFDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._MDFDischargeDate = value;
					this.SendPropertyChanged("MDFDischargeDate");
					this.OnMDFDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDischargeComment", DbType="NVarChar(MAX)")]
		public string MDFDischargeComment
		{
			get
			{
				return this._MDFDischargeComment;
			}
			set
			{
				if ((this._MDFDischargeComment != value))
				{
					this.OnMDFDischargeCommentChanging(value);
					this.SendPropertyChanging();
					this._MDFDischargeComment = value;
					this.SendPropertyChanged("MDFDischargeComment");
					this.OnMDFDischargeCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFInstallUserID", DbType="Int")]
		public System.Nullable<int> MDFInstallUserID
		{
			get
			{
				return this._MDFInstallUserID;
			}
			set
			{
				if ((this._MDFInstallUserID != value))
				{
					this.OnMDFInstallUserIDChanging(value);
					this.SendPropertyChanging();
					this._MDFInstallUserID = value;
					this.SendPropertyChanged("MDFInstallUserID");
					this.OnMDFInstallUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFInstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFInstallDate
		{
			get
			{
				return this._MDFInstallDate;
			}
			set
			{
				if ((this._MDFInstallDate != value))
				{
					this.OnMDFInstallDateChanging(value);
					this.SendPropertyChanging();
					this._MDFInstallDate = value;
					this.SendPropertyChanged("MDFInstallDate");
					this.OnMDFInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFInstallComment", DbType="NVarChar(MAX)")]
		public string MDFInstallComment
		{
			get
			{
				return this._MDFInstallComment;
			}
			set
			{
				if ((this._MDFInstallComment != value))
				{
					this.OnMDFInstallCommentChanging(value);
					this.SendPropertyChanging();
					this._MDFInstallComment = value;
					this.SendPropertyChanged("MDFInstallComment");
					this.OnMDFInstallCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLChangePlace", Storage="_ADSLPort", ThisKey="OldPortID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPort ADSLPort
		{
			get
			{
				return this._ADSLPort.Entity;
			}
			set
			{
				ADSLPort previousValue = this._ADSLPort.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPort.Entity = null;
						previousValue.ADSLChangePlaces.Remove(this);
					}
					this._ADSLPort.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePlaces.Add(this);
						this._OldPortID = value.ID;
					}
					else
					{
						this._OldPortID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLChangePlace1", Storage="_ADSLPort1", ThisKey="NewPortID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPort ADSLPort1
		{
			get
			{
				return this._ADSLPort1.Entity;
			}
			set
			{
				ADSLPort previousValue = this._ADSLPort1.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPort1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPort1.Entity = null;
						previousValue.ADSLChangePlaces1.Remove(this);
					}
					this._ADSLPort1.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePlaces1.Add(this);
						this._NewPortID = value.ID;
					}
					else
					{
						this._NewPortID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLPort1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLChangePlace", Storage="_Center", ThisKey="OldCenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLChangePlaces.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePlaces.Add(this);
						this._OldCenterID = value.ID;
					}
					else
					{
						this._OldCenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLChangePlace1", Storage="_Center1", ThisKey="NewCenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center1
		{
			get
			{
				return this._Center1.Entity;
			}
			set
			{
				Center previousValue = this._Center1.Entity;
				if (((previousValue != value) 
							|| (this._Center1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center1.Entity = null;
						previousValue.ADSLChangePlaces1.Remove(this);
					}
					this._Center1.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePlaces1.Add(this);
						this._NewCenterID = value.ID;
					}
					else
					{
						this._NewCenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangePlace", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLChangePlace = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePlace = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSLChangePlace", Storage="_Customer", ThisKey="CustomerOwnerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ADSLChangePlaces.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePlaces.Add(this);
						this._CustomerOwnerID = value.ID;
					}
					else
					{
						this._CustomerOwnerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLChangePort1")]
	public partial class ADSLChangePort1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _OldPortID;
		
		private System.Nullable<long> _NewPortID;
		
		private System.Nullable<byte> _OldPortStatusID;
		
		private int _ReasonID;
		
		private string _Comment;
		
		private EntityRef<ADSLChangePortReason> _ADSLChangePortReason;
		
		private EntityRef<ADSLPort> _ADSLPort;
		
		private EntityRef<ADSLPort> _ADSLPort1;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldPortIDChanging(long value);
    partial void OnOldPortIDChanged();
    partial void OnNewPortIDChanging(System.Nullable<long> value);
    partial void OnNewPortIDChanged();
    partial void OnOldPortStatusIDChanging(System.Nullable<byte> value);
    partial void OnOldPortStatusIDChanged();
    partial void OnReasonIDChanging(int value);
    partial void OnReasonIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ADSLChangePort1()
		{
			this._ADSLChangePortReason = default(EntityRef<ADSLChangePortReason>);
			this._ADSLPort = default(EntityRef<ADSLPort>);
			this._ADSLPort1 = default(EntityRef<ADSLPort>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPortID", DbType="BigInt NOT NULL")]
		public long OldPortID
		{
			get
			{
				return this._OldPortID;
			}
			set
			{
				if ((this._OldPortID != value))
				{
					if (this._ADSLPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPortIDChanging(value);
					this.SendPropertyChanging();
					this._OldPortID = value;
					this.SendPropertyChanged("OldPortID");
					this.OnOldPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPortID", DbType="BigInt")]
		public System.Nullable<long> NewPortID
		{
			get
			{
				return this._NewPortID;
			}
			set
			{
				if ((this._NewPortID != value))
				{
					if (this._ADSLPort1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewPortIDChanging(value);
					this.SendPropertyChanging();
					this._NewPortID = value;
					this.SendPropertyChanged("NewPortID");
					this.OnNewPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPortStatusID", DbType="TinyInt")]
		public System.Nullable<byte> OldPortStatusID
		{
			get
			{
				return this._OldPortStatusID;
			}
			set
			{
				if ((this._OldPortStatusID != value))
				{
					this.OnOldPortStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OldPortStatusID = value;
					this.SendPropertyChanged("OldPortStatusID");
					this.OnOldPortStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="Int NOT NULL")]
		public int ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					if (this._ADSLChangePortReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLChangePortReason_ADSLChangePort1", Storage="_ADSLChangePortReason", ThisKey="ReasonID", OtherKey="ID", IsForeignKey=true)]
		public ADSLChangePortReason ADSLChangePortReason
		{
			get
			{
				return this._ADSLChangePortReason.Entity;
			}
			set
			{
				ADSLChangePortReason previousValue = this._ADSLChangePortReason.Entity;
				if (((previousValue != value) 
							|| (this._ADSLChangePortReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLChangePortReason.Entity = null;
						previousValue.ADSLChangePort1s.Remove(this);
					}
					this._ADSLChangePortReason.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePort1s.Add(this);
						this._ReasonID = value.ID;
					}
					else
					{
						this._ReasonID = default(int);
					}
					this.SendPropertyChanged("ADSLChangePortReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLChangePort1", Storage="_ADSLPort", ThisKey="OldPortID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPort ADSLPort
		{
			get
			{
				return this._ADSLPort.Entity;
			}
			set
			{
				ADSLPort previousValue = this._ADSLPort.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPort.Entity = null;
						previousValue.ADSLChangePort1s.Remove(this);
					}
					this._ADSLPort.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePort1s.Add(this);
						this._OldPortID = value.ID;
					}
					else
					{
						this._OldPortID = default(long);
					}
					this.SendPropertyChanged("ADSLPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLChangePort11", Storage="_ADSLPort1", ThisKey="NewPortID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPort ADSLPort1
		{
			get
			{
				return this._ADSLPort1.Entity;
			}
			set
			{
				ADSLPort previousValue = this._ADSLPort1.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPort1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPort1.Entity = null;
						previousValue.ADSLChangePort1s1.Remove(this);
					}
					this._ADSLPort1.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePort1s1.Add(this);
						this._NewPortID = value.ID;
					}
					else
					{
						this._NewPortID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLPort1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangePort1", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLChangePort1 = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLChangePort1 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLChangePortReason")]
	public partial class ADSLChangePortReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private EntitySet<ADSLChangePort1> _ADSLChangePort1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ADSLChangePortReason()
		{
			this._ADSLChangePort1s = new EntitySet<ADSLChangePort1>(new Action<ADSLChangePort1>(this.attach_ADSLChangePort1s), new Action<ADSLChangePort1>(this.detach_ADSLChangePort1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLChangePortReason_ADSLChangePort1", Storage="_ADSLChangePort1s", ThisKey="ID", OtherKey="ReasonID")]
		public EntitySet<ADSLChangePort1> ADSLChangePort1s
		{
			get
			{
				return this._ADSLChangePort1s;
			}
			set
			{
				this._ADSLChangePort1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLChangePort1s(ADSLChangePort1 entity)
		{
			this.SendPropertyChanging();
			entity.ADSLChangePortReason = this;
		}
		
		private void detach_ADSLChangePort1s(ADSLChangePort1 entity)
		{
			this.SendPropertyChanging();
			entity.ADSLChangePortReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLChangeService")]
	public partial class ADSLChangeService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _OldServiceID;
		
		private System.Nullable<int> _NewServiceID;
		
		private System.Nullable<int> _AdditionalTrafficeID;
		
		private string _LicenseLetterNo;
		
		private byte _ChangeServiceType;
		
		private byte _ChangeServiceActionType;
		
		private System.Nullable<bool> _NeedModem;
		
		private System.Nullable<int> _ModemID;
		
		private string _ModemMACAddress;
		
		private System.Nullable<int> _ModemSerialNoID;
		
		private string _CommentCustomers;
		
		private System.Nullable<int> _OMCUserID;
		
		private System.Nullable<System.DateTime> _OMCDate;
		
		private string _OMCComment;
		
		private System.Nullable<int> _FinalUserID;
		
		private System.Nullable<System.DateTime> _FinalDate;
		
		private string _FinalComment;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<byte> _SaleWay;
		
		private System.Nullable<bool> _IsIBSngUpdated;
		
		private EntityRef<ADSLModem> _ADSLModem;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<ADSLService> _ADSLService1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldServiceIDChanging(System.Nullable<int> value);
    partial void OnOldServiceIDChanged();
    partial void OnNewServiceIDChanging(System.Nullable<int> value);
    partial void OnNewServiceIDChanged();
    partial void OnAdditionalTrafficeIDChanging(System.Nullable<int> value);
    partial void OnAdditionalTrafficeIDChanged();
    partial void OnLicenseLetterNoChanging(string value);
    partial void OnLicenseLetterNoChanged();
    partial void OnChangeServiceTypeChanging(byte value);
    partial void OnChangeServiceTypeChanged();
    partial void OnChangeServiceActionTypeChanging(byte value);
    partial void OnChangeServiceActionTypeChanged();
    partial void OnNeedModemChanging(System.Nullable<bool> value);
    partial void OnNeedModemChanged();
    partial void OnModemIDChanging(System.Nullable<int> value);
    partial void OnModemIDChanged();
    partial void OnModemMACAddressChanging(string value);
    partial void OnModemMACAddressChanged();
    partial void OnModemSerialNoIDChanging(System.Nullable<int> value);
    partial void OnModemSerialNoIDChanged();
    partial void OnCommentCustomersChanging(string value);
    partial void OnCommentCustomersChanged();
    partial void OnOMCUserIDChanging(System.Nullable<int> value);
    partial void OnOMCUserIDChanged();
    partial void OnOMCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOMCDateChanged();
    partial void OnOMCCommentChanging(string value);
    partial void OnOMCCommentChanged();
    partial void OnFinalUserIDChanging(System.Nullable<int> value);
    partial void OnFinalUserIDChanged();
    partial void OnFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDateChanged();
    partial void OnFinalCommentChanging(string value);
    partial void OnFinalCommentChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnSaleWayChanging(System.Nullable<byte> value);
    partial void OnSaleWayChanged();
    partial void OnIsIBSngUpdatedChanging(System.Nullable<bool> value);
    partial void OnIsIBSngUpdatedChanged();
    #endregion
		
		public ADSLChangeService()
		{
			this._ADSLModem = default(EntityRef<ADSLModem>);
			this._ADSLService = default(EntityRef<ADSLService>);
			this._ADSLService1 = default(EntityRef<ADSLService>);
			this._Request = default(EntityRef<Request>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldServiceID", DbType="Int")]
		public System.Nullable<int> OldServiceID
		{
			get
			{
				return this._OldServiceID;
			}
			set
			{
				if ((this._OldServiceID != value))
				{
					if (this._ADSLService1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldServiceIDChanging(value);
					this.SendPropertyChanging();
					this._OldServiceID = value;
					this.SendPropertyChanged("OldServiceID");
					this.OnOldServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewServiceID", DbType="Int")]
		public System.Nullable<int> NewServiceID
		{
			get
			{
				return this._NewServiceID;
			}
			set
			{
				if ((this._NewServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewServiceIDChanging(value);
					this.SendPropertyChanging();
					this._NewServiceID = value;
					this.SendPropertyChanged("NewServiceID");
					this.OnNewServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalTrafficeID", DbType="Int")]
		public System.Nullable<int> AdditionalTrafficeID
		{
			get
			{
				return this._AdditionalTrafficeID;
			}
			set
			{
				if ((this._AdditionalTrafficeID != value))
				{
					this.OnAdditionalTrafficeIDChanging(value);
					this.SendPropertyChanging();
					this._AdditionalTrafficeID = value;
					this.SendPropertyChanged("AdditionalTrafficeID");
					this.OnAdditionalTrafficeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseLetterNo", DbType="NVarChar(50)")]
		public string LicenseLetterNo
		{
			get
			{
				return this._LicenseLetterNo;
			}
			set
			{
				if ((this._LicenseLetterNo != value))
				{
					this.OnLicenseLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseLetterNo = value;
					this.SendPropertyChanged("LicenseLetterNo");
					this.OnLicenseLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeServiceType", DbType="TinyInt NOT NULL")]
		public byte ChangeServiceType
		{
			get
			{
				return this._ChangeServiceType;
			}
			set
			{
				if ((this._ChangeServiceType != value))
				{
					this.OnChangeServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeServiceType = value;
					this.SendPropertyChanged("ChangeServiceType");
					this.OnChangeServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeServiceActionType", DbType="TinyInt NOT NULL")]
		public byte ChangeServiceActionType
		{
			get
			{
				return this._ChangeServiceActionType;
			}
			set
			{
				if ((this._ChangeServiceActionType != value))
				{
					this.OnChangeServiceActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeServiceActionType = value;
					this.SendPropertyChanged("ChangeServiceActionType");
					this.OnChangeServiceActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedModem", DbType="Bit")]
		public System.Nullable<bool> NeedModem
		{
			get
			{
				return this._NeedModem;
			}
			set
			{
				if ((this._NeedModem != value))
				{
					this.OnNeedModemChanging(value);
					this.SendPropertyChanging();
					this._NeedModem = value;
					this.SendPropertyChanged("NeedModem");
					this.OnNeedModemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemID", DbType="Int")]
		public System.Nullable<int> ModemID
		{
			get
			{
				return this._ModemID;
			}
			set
			{
				if ((this._ModemID != value))
				{
					if (this._ADSLModem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModemIDChanging(value);
					this.SendPropertyChanging();
					this._ModemID = value;
					this.SendPropertyChanged("ModemID");
					this.OnModemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemMACAddress", DbType="NVarChar(50)")]
		public string ModemMACAddress
		{
			get
			{
				return this._ModemMACAddress;
			}
			set
			{
				if ((this._ModemMACAddress != value))
				{
					this.OnModemMACAddressChanging(value);
					this.SendPropertyChanging();
					this._ModemMACAddress = value;
					this.SendPropertyChanged("ModemMACAddress");
					this.OnModemMACAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemSerialNoID", DbType="Int")]
		public System.Nullable<int> ModemSerialNoID
		{
			get
			{
				return this._ModemSerialNoID;
			}
			set
			{
				if ((this._ModemSerialNoID != value))
				{
					this.OnModemSerialNoIDChanging(value);
					this.SendPropertyChanging();
					this._ModemSerialNoID = value;
					this.SendPropertyChanged("ModemSerialNoID");
					this.OnModemSerialNoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentCustomers", DbType="NVarChar(MAX)")]
		public string CommentCustomers
		{
			get
			{
				return this._CommentCustomers;
			}
			set
			{
				if ((this._CommentCustomers != value))
				{
					this.OnCommentCustomersChanging(value);
					this.SendPropertyChanging();
					this._CommentCustomers = value;
					this.SendPropertyChanged("CommentCustomers");
					this.OnCommentCustomersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCUserID", DbType="Int")]
		public System.Nullable<int> OMCUserID
		{
			get
			{
				return this._OMCUserID;
			}
			set
			{
				if ((this._OMCUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOMCUserIDChanging(value);
					this.SendPropertyChanging();
					this._OMCUserID = value;
					this.SendPropertyChanged("OMCUserID");
					this.OnOMCUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OMCDate
		{
			get
			{
				return this._OMCDate;
			}
			set
			{
				if ((this._OMCDate != value))
				{
					this.OnOMCDateChanging(value);
					this.SendPropertyChanging();
					this._OMCDate = value;
					this.SendPropertyChanged("OMCDate");
					this.OnOMCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCComment", DbType="NVarChar(MAX)")]
		public string OMCComment
		{
			get
			{
				return this._OMCComment;
			}
			set
			{
				if ((this._OMCComment != value))
				{
					this.OnOMCCommentChanging(value);
					this.SendPropertyChanging();
					this._OMCComment = value;
					this.SendPropertyChanged("OMCComment");
					this.OnOMCCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalUserID", DbType="Int")]
		public System.Nullable<int> FinalUserID
		{
			get
			{
				return this._FinalUserID;
			}
			set
			{
				if ((this._FinalUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinalUserIDChanging(value);
					this.SendPropertyChanging();
					this._FinalUserID = value;
					this.SendPropertyChanged("FinalUserID");
					this.OnFinalUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FinalDate
		{
			get
			{
				return this._FinalDate;
			}
			set
			{
				if ((this._FinalDate != value))
				{
					this.OnFinalDateChanging(value);
					this.SendPropertyChanging();
					this._FinalDate = value;
					this.SendPropertyChanged("FinalDate");
					this.OnFinalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalComment", DbType="NVarChar(MAX)")]
		public string FinalComment
		{
			get
			{
				return this._FinalComment;
			}
			set
			{
				if ((this._FinalComment != value))
				{
					this.OnFinalCommentChanging(value);
					this.SendPropertyChanging();
					this._FinalComment = value;
					this.SendPropertyChanged("FinalComment");
					this.OnFinalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleWay", DbType="TinyInt")]
		public System.Nullable<byte> SaleWay
		{
			get
			{
				return this._SaleWay;
			}
			set
			{
				if ((this._SaleWay != value))
				{
					this.OnSaleWayChanging(value);
					this.SendPropertyChanging();
					this._SaleWay = value;
					this.SendPropertyChanged("SaleWay");
					this.OnSaleWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIBSngUpdated", DbType="Bit")]
		public System.Nullable<bool> IsIBSngUpdated
		{
			get
			{
				return this._IsIBSngUpdated;
			}
			set
			{
				if ((this._IsIBSngUpdated != value))
				{
					this.OnIsIBSngUpdatedChanging(value);
					this.SendPropertyChanging();
					this._IsIBSngUpdated = value;
					this.SendPropertyChanged("IsIBSngUpdated");
					this.OnIsIBSngUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_ADSLChangeService", Storage="_ADSLModem", ThisKey="ModemID", OtherKey="ID", IsForeignKey=true)]
		public ADSLModem ADSLModem
		{
			get
			{
				return this._ADSLModem.Entity;
			}
			set
			{
				ADSLModem previousValue = this._ADSLModem.Entity;
				if (((previousValue != value) 
							|| (this._ADSLModem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLModem.Entity = null;
						previousValue.ADSLChangeServices.Remove(this);
					}
					this._ADSLModem.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeServices.Add(this);
						this._ModemID = value.ID;
					}
					else
					{
						this._ModemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLModem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLChangeService", Storage="_ADSLService", ThisKey="NewServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.ADSLChangeServices.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeServices.Add(this);
						this._NewServiceID = value.ID;
					}
					else
					{
						this._NewServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLChangeService1", Storage="_ADSLService1", ThisKey="OldServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService1
		{
			get
			{
				return this._ADSLService1.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService1.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService1.Entity = null;
						previousValue.ADSLChangeServices1.Remove(this);
					}
					this._ADSLService1.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeServices1.Add(this);
						this._OldServiceID = value.ID;
					}
					else
					{
						this._OldServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangeService", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLChangeService = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeService = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLChangeService", Storage="_User", ThisKey="OMCUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ADSLChangeServices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeServices.Add(this);
						this._OMCUserID = value.ID;
					}
					else
					{
						this._OMCUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLChangeService1", Storage="_User1", ThisKey="FinalUserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ADSLChangeServices1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ADSLChangeServices1.Add(this);
						this._FinalUserID = value.ID;
					}
					else
					{
						this._FinalUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLCustomerGroup")]
	public partial class ADSLCustomerGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _ISPName;
		
		private string _KeyWord;
		
		private System.Nullable<int> _CustomersCount;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<ADSLGroupIP> _ADSLGroupIPs;
		
		private EntitySet<ADSLIP> _ADSLIPs;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<ADSLServiceGroup> _ADSLServiceGroups;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnISPNameChanging(string value);
    partial void OnISPNameChanged();
    partial void OnKeyWordChanging(string value);
    partial void OnKeyWordChanged();
    partial void OnCustomersCountChanging(System.Nullable<int> value);
    partial void OnCustomersCountChanged();
    #endregion
		
		public ADSLCustomerGroup()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._ADSLGroupIPs = new EntitySet<ADSLGroupIP>(new Action<ADSLGroupIP>(this.attach_ADSLGroupIPs), new Action<ADSLGroupIP>(this.detach_ADSLGroupIPs));
			this._ADSLIPs = new EntitySet<ADSLIP>(new Action<ADSLIP>(this.attach_ADSLIPs), new Action<ADSLIP>(this.detach_ADSLIPs));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._ADSLServiceGroups = new EntitySet<ADSLServiceGroup>(new Action<ADSLServiceGroup>(this.attach_ADSLServiceGroups), new Action<ADSLServiceGroup>(this.detach_ADSLServiceGroups));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISPName", DbType="NVarChar(50)")]
		public string ISPName
		{
			get
			{
				return this._ISPName;
			}
			set
			{
				if ((this._ISPName != value))
				{
					this.OnISPNameChanging(value);
					this.SendPropertyChanging();
					this._ISPName = value;
					this.SendPropertyChanged("ISPName");
					this.OnISPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWord", DbType="NVarChar(50)")]
		public string KeyWord
		{
			get
			{
				return this._KeyWord;
			}
			set
			{
				if ((this._KeyWord != value))
				{
					this.OnKeyWordChanging(value);
					this.SendPropertyChanging();
					this._KeyWord = value;
					this.SendPropertyChanged("KeyWord");
					this.OnKeyWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomersCount", DbType="Int")]
		public System.Nullable<int> CustomersCount
		{
			get
			{
				return this._CustomersCount;
			}
			set
			{
				if ((this._CustomersCount != value))
				{
					this.OnCustomersCountChanging(value);
					this.SendPropertyChanging();
					this._CustomersCount = value;
					this.SendPropertyChanged("CustomersCount");
					this.OnCustomersCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="CustomerGroupID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSLGroupIP", Storage="_ADSLGroupIPs", ThisKey="ID", OtherKey="CustometGroupID")]
		public EntitySet<ADSLGroupIP> ADSLGroupIPs
		{
			get
			{
				return this._ADSLGroupIPs;
			}
			set
			{
				this._ADSLGroupIPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSLIP", Storage="_ADSLIPs", ThisKey="ID", OtherKey="CustometGroupID")]
		public EntitySet<ADSLIP> ADSLIPs
		{
			get
			{
				return this._ADSLIPs;
			}
			set
			{
				this._ADSLIPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="CustomerGroupID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSLServiceGroup", Storage="_ADSLServiceGroups", ThisKey="ID", OtherKey="CustomerGroupID")]
		public EntitySet<ADSLServiceGroup> ADSLServiceGroups
		{
			get
			{
				return this._ADSLServiceGroups;
			}
			set
			{
				this._ADSLServiceGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="CustomerGroupID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = null;
		}
		
		private void attach_ADSLGroupIPs(ADSLGroupIP entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = this;
		}
		
		private void detach_ADSLGroupIPs(ADSLGroupIP entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = null;
		}
		
		private void attach_ADSLIPs(ADSLIP entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = this;
		}
		
		private void detach_ADSLIPs(ADSLIP entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = null;
		}
		
		private void attach_ADSLServiceGroups(ADSLServiceGroup entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = this;
		}
		
		private void detach_ADSLServiceGroups(ADSLServiceGroup entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLCustomerType")]
	public partial class ADSLCustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<Wireless> _Wirelesses;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ADSLCustomerType()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._Wirelesses = new EntitySet<Wireless>(new Action<Wireless>(this.attach_Wirelesses), new Action<Wireless>(this.detach_Wirelesses));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerType_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="CustomerTypeID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerType_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="CustomerTypeID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerType_Wireless", Storage="_Wirelesses", ThisKey="ID", OtherKey="CustomerTypeID")]
		public EntitySet<Wireless> Wirelesses
		{
			get
			{
				return this._Wirelesses;
			}
			set
			{
				this._Wirelesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerType_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="CustomerTypeID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerType = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerType = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerType = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerType = null;
		}
		
		private void attach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerType = this;
		}
		
		private void detach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerType = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerType = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLCustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLCutTemporary")]
	public partial class ADSLCutTemporary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<byte> _CutType;
		
		private string _Comment;
		
		private System.Nullable<byte> _Status;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCutTypeChanging(System.Nullable<byte> value);
    partial void OnCutTypeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public ADSLCutTemporary()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutType", DbType="TinyInt")]
		public System.Nullable<byte> CutType
		{
			get
			{
				return this._CutType;
			}
			set
			{
				if ((this._CutType != value))
				{
					this.OnCutTypeChanging(value);
					this.SendPropertyChanging();
					this._CutType = value;
					this.SendPropertyChanged("CutType");
					this.OnCutTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLCutTemporary", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLCutTemporary = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLCutTemporary = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLDischarge")]
	public partial class ADSLDischarge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Comment;
		
		private System.Nullable<int> _ReasonID;
		
		private System.Nullable<int> _TarrifID;
		
		private System.Nullable<bool> _IsIranInsert;
		
		private System.Nullable<bool> _IsIranEnd;
		
		private EntityRef<ADSLDischargeReason> _ADSLDischargeReason;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnReasonIDChanging(System.Nullable<int> value);
    partial void OnReasonIDChanged();
    partial void OnTarrifIDChanging(System.Nullable<int> value);
    partial void OnTarrifIDChanged();
    partial void OnIsIranInsertChanging(System.Nullable<bool> value);
    partial void OnIsIranInsertChanged();
    partial void OnIsIranEndChanging(System.Nullable<bool> value);
    partial void OnIsIranEndChanged();
    #endregion
		
		public ADSLDischarge()
		{
			this._ADSLDischargeReason = default(EntityRef<ADSLDischargeReason>);
			this._ADSLService = default(EntityRef<ADSLService>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="Int")]
		public System.Nullable<int> ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					if (this._ADSLDischargeReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarrifID", DbType="Int")]
		public System.Nullable<int> TarrifID
		{
			get
			{
				return this._TarrifID;
			}
			set
			{
				if ((this._TarrifID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTarrifIDChanging(value);
					this.SendPropertyChanging();
					this._TarrifID = value;
					this.SendPropertyChanged("TarrifID");
					this.OnTarrifIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIranInsert", DbType="Bit")]
		public System.Nullable<bool> IsIranInsert
		{
			get
			{
				return this._IsIranInsert;
			}
			set
			{
				if ((this._IsIranInsert != value))
				{
					this.OnIsIranInsertChanging(value);
					this.SendPropertyChanging();
					this._IsIranInsert = value;
					this.SendPropertyChanged("IsIranInsert");
					this.OnIsIranInsertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIranEnd", DbType="Bit")]
		public System.Nullable<bool> IsIranEnd
		{
			get
			{
				return this._IsIranEnd;
			}
			set
			{
				if ((this._IsIranEnd != value))
				{
					this.OnIsIranEndChanging(value);
					this.SendPropertyChanging();
					this._IsIranEnd = value;
					this.SendPropertyChanged("IsIranEnd");
					this.OnIsIranEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLDischargeReason_ADSLDischarge", Storage="_ADSLDischargeReason", ThisKey="ReasonID", OtherKey="ID", IsForeignKey=true)]
		public ADSLDischargeReason ADSLDischargeReason
		{
			get
			{
				return this._ADSLDischargeReason.Entity;
			}
			set
			{
				ADSLDischargeReason previousValue = this._ADSLDischargeReason.Entity;
				if (((previousValue != value) 
							|| (this._ADSLDischargeReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLDischargeReason.Entity = null;
						previousValue.ADSLDischarges.Remove(this);
					}
					this._ADSLDischargeReason.Entity = value;
					if ((value != null))
					{
						value.ADSLDischarges.Add(this);
						this._ReasonID = value.ID;
					}
					else
					{
						this._ReasonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLDischargeReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLDischarge", Storage="_ADSLService", ThisKey="TarrifID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.ADSLDischarges.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.ADSLDischarges.Add(this);
						this._TarrifID = value.ID;
					}
					else
					{
						this._TarrifID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLDischarge", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLDischarge = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLDischarge = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLDischargeReason")]
	public partial class ADSLDischargeReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<ADSLDischarge> _ADSLDischarges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ADSLDischargeReason()
		{
			this._ADSLDischarges = new EntitySet<ADSLDischarge>(new Action<ADSLDischarge>(this.attach_ADSLDischarges), new Action<ADSLDischarge>(this.detach_ADSLDischarges));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLDischargeReason_ADSLDischarge", Storage="_ADSLDischarges", ThisKey="ID", OtherKey="ReasonID")]
		public EntitySet<ADSLDischarge> ADSLDischarges
		{
			get
			{
				return this._ADSLDischarges;
			}
			set
			{
				this._ADSLDischarges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLDischarges(ADSLDischarge entity)
		{
			this.SendPropertyChanging();
			entity.ADSLDischargeReason = this;
		}
		
		private void detach_ADSLDischarges(ADSLDischarge entity)
		{
			this.SendPropertyChanging();
			entity.ADSLDischargeReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLEquipment")]
	public partial class ADSLEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private string _Equipment;
		
		private System.Nullable<byte> _EquipmentType;
		
		private System.Nullable<int> _ShelfID;
		
		private System.Nullable<int> _PortTypeID;
		
		private System.Nullable<int> _AAAType;
		
		private System.Nullable<byte> _LocationInstall;
		
		private System.Nullable<byte> _Product;
		
		private string _Site;
		
		private EntitySet<ADSLPort> _ADSLPorts;
		
		private EntityRef<ADSLAAAType> _ADSLAAAType;
		
		private EntityRef<ADSLPortType> _ADSLPortType;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Shelf> _Shelf;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnEquipmentChanging(string value);
    partial void OnEquipmentChanged();
    partial void OnEquipmentTypeChanging(System.Nullable<byte> value);
    partial void OnEquipmentTypeChanged();
    partial void OnShelfIDChanging(System.Nullable<int> value);
    partial void OnShelfIDChanged();
    partial void OnPortTypeIDChanging(System.Nullable<int> value);
    partial void OnPortTypeIDChanged();
    partial void OnAAATypeChanging(System.Nullable<int> value);
    partial void OnAAATypeChanged();
    partial void OnLocationInstallChanging(System.Nullable<byte> value);
    partial void OnLocationInstallChanged();
    partial void OnProductChanging(System.Nullable<byte> value);
    partial void OnProductChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    #endregion
		
		public ADSLEquipment()
		{
			this._ADSLPorts = new EntitySet<ADSLPort>(new Action<ADSLPort>(this.attach_ADSLPorts), new Action<ADSLPort>(this.detach_ADSLPorts));
			this._ADSLAAAType = default(EntityRef<ADSLAAAType>);
			this._ADSLPortType = default(EntityRef<ADSLPortType>);
			this._Center = default(EntityRef<Center>);
			this._Shelf = default(EntityRef<Shelf>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment", DbType="NVarChar(50)")]
		public string Equipment
		{
			get
			{
				return this._Equipment;
			}
			set
			{
				if ((this._Equipment != value))
				{
					this.OnEquipmentChanging(value);
					this.SendPropertyChanging();
					this._Equipment = value;
					this.SendPropertyChanged("Equipment");
					this.OnEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="TinyInt")]
		public System.Nullable<byte> EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this.OnEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentType = value;
					this.SendPropertyChanged("EquipmentType");
					this.OnEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfID", DbType="Int")]
		public System.Nullable<int> ShelfID
		{
			get
			{
				return this._ShelfID;
			}
			set
			{
				if ((this._ShelfID != value))
				{
					if (this._Shelf.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShelfIDChanging(value);
					this.SendPropertyChanging();
					this._ShelfID = value;
					this.SendPropertyChanged("ShelfID");
					this.OnShelfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortTypeID", DbType="Int")]
		public System.Nullable<int> PortTypeID
		{
			get
			{
				return this._PortTypeID;
			}
			set
			{
				if ((this._PortTypeID != value))
				{
					if (this._ADSLPortType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PortTypeID = value;
					this.SendPropertyChanged("PortTypeID");
					this.OnPortTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAAType", DbType="Int")]
		public System.Nullable<int> AAAType
		{
			get
			{
				return this._AAAType;
			}
			set
			{
				if ((this._AAAType != value))
				{
					if (this._ADSLAAAType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAAATypeChanging(value);
					this.SendPropertyChanging();
					this._AAAType = value;
					this.SendPropertyChanged("AAAType");
					this.OnAAATypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationInstall", DbType="TinyInt")]
		public System.Nullable<byte> LocationInstall
		{
			get
			{
				return this._LocationInstall;
			}
			set
			{
				if ((this._LocationInstall != value))
				{
					this.OnLocationInstallChanging(value);
					this.SendPropertyChanging();
					this._LocationInstall = value;
					this.SendPropertyChanged("LocationInstall");
					this.OnLocationInstallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="TinyInt")]
		public System.Nullable<byte> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="NVarChar(100)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLEquipment_ADSLPort", Storage="_ADSLPorts", ThisKey="ID", OtherKey="ADSLEquipmentID")]
		public EntitySet<ADSLPort> ADSLPorts
		{
			get
			{
				return this._ADSLPorts;
			}
			set
			{
				this._ADSLPorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLAAAType_ADSLEquipment", Storage="_ADSLAAAType", ThisKey="AAAType", OtherKey="ID", IsForeignKey=true)]
		public ADSLAAAType ADSLAAAType
		{
			get
			{
				return this._ADSLAAAType.Entity;
			}
			set
			{
				ADSLAAAType previousValue = this._ADSLAAAType.Entity;
				if (((previousValue != value) 
							|| (this._ADSLAAAType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLAAAType.Entity = null;
						previousValue.ADSLEquipments.Remove(this);
					}
					this._ADSLAAAType.Entity = value;
					if ((value != null))
					{
						value.ADSLEquipments.Add(this);
						this._AAAType = value.ID;
					}
					else
					{
						this._AAAType = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLAAAType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPortType_ADSLEquipment", Storage="_ADSLPortType", ThisKey="PortTypeID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPortType ADSLPortType
		{
			get
			{
				return this._ADSLPortType.Entity;
			}
			set
			{
				ADSLPortType previousValue = this._ADSLPortType.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPortType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPortType.Entity = null;
						previousValue.ADSLEquipments.Remove(this);
					}
					this._ADSLPortType.Entity = value;
					if ((value != null))
					{
						value.ADSLEquipments.Add(this);
						this._PortTypeID = value.ID;
					}
					else
					{
						this._PortTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLPortType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLEquipment", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLEquipments.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLEquipments.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shelf_ADSLEquipment", Storage="_Shelf", ThisKey="ShelfID", OtherKey="ID", IsForeignKey=true)]
		public Shelf Shelf
		{
			get
			{
				return this._Shelf.Entity;
			}
			set
			{
				Shelf previousValue = this._Shelf.Entity;
				if (((previousValue != value) 
							|| (this._Shelf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shelf.Entity = null;
						previousValue.ADSLEquipments.Remove(this);
					}
					this._Shelf.Entity = value;
					if ((value != null))
					{
						value.ADSLEquipments.Add(this);
						this._ShelfID = value.ID;
					}
					else
					{
						this._ShelfID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shelf");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLPorts(ADSLPort entity)
		{
			this.SendPropertyChanging();
			entity.ADSLEquipment = this;
		}
		
		private void detach_ADSLPorts(ADSLPort entity)
		{
			this.SendPropertyChanging();
			entity.ADSLEquipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLGroupIP")]
	public partial class ADSLGroupIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _TypeID;
		
		private System.Nullable<int> _CustometGroupID;
		
		private string _VirtualRange;
		
		private string _StartRange;
		
		private int _BlockCount;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private System.Nullable<System.DateTime> _ExpDate;
		
		private System.Nullable<byte> _Status;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<ADSLIPHistory> _ADSLIPHistories;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<Wireless> _Wirelesses;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntityRef<ADSLCustomerGroup> _ADSLCustomerGroup;
		
		private EntityRef<ADSLIPType> _ADSLIPType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnCustometGroupIDChanging(System.Nullable<int> value);
    partial void OnCustometGroupIDChanged();
    partial void OnVirtualRangeChanging(string value);
    partial void OnVirtualRangeChanged();
    partial void OnStartRangeChanging(string value);
    partial void OnStartRangeChanged();
    partial void OnBlockCountChanging(int value);
    partial void OnBlockCountChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpDateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public ADSLGroupIP()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._ADSLIPHistories = new EntitySet<ADSLIPHistory>(new Action<ADSLIPHistory>(this.attach_ADSLIPHistories), new Action<ADSLIPHistory>(this.detach_ADSLIPHistories));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._Wirelesses = new EntitySet<Wireless>(new Action<Wireless>(this.attach_Wirelesses), new Action<Wireless>(this.detach_Wirelesses));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._ADSLCustomerGroup = default(EntityRef<ADSLCustomerGroup>);
			this._ADSLIPType = default(EntityRef<ADSLIPType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._ADSLIPType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustometGroupID", DbType="Int")]
		public System.Nullable<int> CustometGroupID
		{
			get
			{
				return this._CustometGroupID;
			}
			set
			{
				if ((this._CustometGroupID != value))
				{
					if (this._ADSLCustomerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustometGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustometGroupID = value;
					this.SendPropertyChanged("CustometGroupID");
					this.OnCustometGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualRange", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VirtualRange
		{
			get
			{
				return this._VirtualRange;
			}
			set
			{
				if ((this._VirtualRange != value))
				{
					this.OnVirtualRangeChanging(value);
					this.SendPropertyChanging();
					this._VirtualRange = value;
					this.SendPropertyChanged("VirtualRange");
					this.OnVirtualRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartRange", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StartRange
		{
			get
			{
				return this._StartRange;
			}
			set
			{
				if ((this._StartRange != value))
				{
					this.OnStartRangeChanging(value);
					this.SendPropertyChanging();
					this._StartRange = value;
					this.SendPropertyChanged("StartRange");
					this.OnStartRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockCount", DbType="Int NOT NULL")]
		public int BlockCount
		{
			get
			{
				return this._BlockCount;
			}
			set
			{
				if ((this._BlockCount != value))
				{
					this.OnBlockCountChanging(value);
					this.SendPropertyChanging();
					this._BlockCount = value;
					this.SendPropertyChanged("BlockCount");
					this.OnBlockCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this.OnExpDateChanging(value);
					this.SendPropertyChanging();
					this._ExpDate = value;
					this.SendPropertyChanged("ExpDate");
					this.OnExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="GroupIPStaticID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_ADSLIPHistory", Storage="_ADSLIPHistories", ThisKey="ID", OtherKey="IPGroupID")]
		public EntitySet<ADSLIPHistory> ADSLIPHistories
		{
			get
			{
				return this._ADSLIPHistories;
			}
			set
			{
				this._ADSLIPHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="GroupIPStaticID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_Wireless", Storage="_Wirelesses", ThisKey="ID", OtherKey="GroupIPStaticID")]
		public EntitySet<Wireless> Wirelesses
		{
			get
			{
				return this._Wirelesses;
			}
			set
			{
				this._Wirelesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="GroupIPStaticID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSLGroupIP", Storage="_ADSLCustomerGroup", ThisKey="CustometGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerGroup ADSLCustomerGroup
		{
			get
			{
				return this._ADSLCustomerGroup.Entity;
			}
			set
			{
				ADSLCustomerGroup previousValue = this._ADSLCustomerGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerGroup.Entity = null;
						previousValue.ADSLGroupIPs.Remove(this);
					}
					this._ADSLCustomerGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLGroupIPs.Add(this);
						this._CustometGroupID = value.ID;
					}
					else
					{
						this._CustometGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIPType_ADSLGroupIP", Storage="_ADSLIPType", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public ADSLIPType ADSLIPType
		{
			get
			{
				return this._ADSLIPType.Entity;
			}
			set
			{
				ADSLIPType previousValue = this._ADSLIPType.Entity;
				if (((previousValue != value) 
							|| (this._ADSLIPType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLIPType.Entity = null;
						previousValue.ADSLGroupIPs.Remove(this);
					}
					this._ADSLIPType.Entity = value;
					if ((value != null))
					{
						value.ADSLGroupIPs.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("ADSLIPType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = null;
		}
		
		private void attach_ADSLIPHistories(ADSLIPHistory entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = this;
		}
		
		private void detach_ADSLIPHistories(ADSLIPHistory entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = null;
		}
		
		private void attach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = this;
		}
		
		private void detach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLGroupIP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLHistory")]
	public partial class ADSLHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TelephoneNo;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public ADSLHistory()
		{
			this._ADSLService = default(EntityRef<ADSLService>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="NVarChar(50)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLHistory", Storage="_ADSLService", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.ADSLHistories.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.ADSLHistories.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLHistory", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ADSLHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ADSLHistories.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLInstalCostCenter")]
	public partial class ADSLInstalCostCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CenterID;
		
		private System.Nullable<long> _InstallADSLCost;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(System.Nullable<int> value);
    partial void OnCenterIDChanged();
    partial void OnInstallADSLCostChanging(System.Nullable<long> value);
    partial void OnInstallADSLCostChanged();
    #endregion
		
		public ADSLInstalCostCenter()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int")]
		public System.Nullable<int> CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallADSLCost", DbType="BigInt")]
		public System.Nullable<long> InstallADSLCost
		{
			get
			{
				return this._InstallADSLCost;
			}
			set
			{
				if ((this._InstallADSLCost != value))
				{
					this.OnInstallADSLCostChanging(value);
					this.SendPropertyChanging();
					this._InstallADSLCost = value;
					this.SendPropertyChanged("InstallADSLCost");
					this.OnInstallADSLCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLInstalCostCenter", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLInstalCostCenters.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLInstalCostCenters.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLInstallRequest")]
	public partial class ADSLInstallRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _SetupDate;
		
		private System.Nullable<int> _SetupUserID;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSetupDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSetupDateChanged();
    partial void OnSetupUserIDChanging(System.Nullable<int> value);
    partial void OnSetupUserIDChanged();
    #endregion
		
		public ADSLInstallRequest()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SetupDate
		{
			get
			{
				return this._SetupDate;
			}
			set
			{
				if ((this._SetupDate != value))
				{
					this.OnSetupDateChanging(value);
					this.SendPropertyChanging();
					this._SetupDate = value;
					this.SendPropertyChanged("SetupDate");
					this.OnSetupDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupUserID", DbType="Int")]
		public System.Nullable<int> SetupUserID
		{
			get
			{
				return this._SetupUserID;
			}
			set
			{
				if ((this._SetupUserID != value))
				{
					this.OnSetupUserIDChanging(value);
					this.SendPropertyChanging();
					this._SetupUserID = value;
					this.SendPropertyChanged("SetupUserID");
					this.OnSetupUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLInstallRequest", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLInstallRequest = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLInstallRequest = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLIntroductionWay")]
	public partial class ADSLIntroductionWay
	{
		
		private System.Nullable<int> _ID;
		
		private string _Title;
		
		public ADSLIntroductionWay()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLIP")]
	public partial class ADSLIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _TypeID;
		
		private System.Nullable<int> _CustometGroupID;
		
		private string _IP;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private System.Nullable<System.DateTime> _ExpDate;
		
		private System.Nullable<byte> _Status;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<ADSLIPHistory> _ADSLIPHistories;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<Wireless> _Wirelesses;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntityRef<ADSLCustomerGroup> _ADSLCustomerGroup;
		
		private EntityRef<ADSLIPType> _ADSLIPType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnCustometGroupIDChanging(System.Nullable<int> value);
    partial void OnCustometGroupIDChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpDateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public ADSLIP()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._ADSLIPHistories = new EntitySet<ADSLIPHistory>(new Action<ADSLIPHistory>(this.attach_ADSLIPHistories), new Action<ADSLIPHistory>(this.detach_ADSLIPHistories));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._Wirelesses = new EntitySet<Wireless>(new Action<Wireless>(this.attach_Wirelesses), new Action<Wireless>(this.detach_Wirelesses));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._ADSLCustomerGroup = default(EntityRef<ADSLCustomerGroup>);
			this._ADSLIPType = default(EntityRef<ADSLIPType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._ADSLIPType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustometGroupID", DbType="Int")]
		public System.Nullable<int> CustometGroupID
		{
			get
			{
				return this._CustometGroupID;
			}
			set
			{
				if ((this._CustometGroupID != value))
				{
					if (this._ADSLCustomerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustometGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustometGroupID = value;
					this.SendPropertyChanged("CustometGroupID");
					this.OnCustometGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this.OnExpDateChanging(value);
					this.SendPropertyChanging();
					this._ExpDate = value;
					this.SendPropertyChanged("ExpDate");
					this.OnExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="IPStaticID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_ADSLIPHistory", Storage="_ADSLIPHistories", ThisKey="ID", OtherKey="IPID")]
		public EntitySet<ADSLIPHistory> ADSLIPHistories
		{
			get
			{
				return this._ADSLIPHistories;
			}
			set
			{
				this._ADSLIPHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="IPStaticID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_Wireless", Storage="_Wirelesses", ThisKey="ID", OtherKey="IPStaticID")]
		public EntitySet<Wireless> Wirelesses
		{
			get
			{
				return this._Wirelesses;
			}
			set
			{
				this._Wirelesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="IPStaticID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSLIP", Storage="_ADSLCustomerGroup", ThisKey="CustometGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerGroup ADSLCustomerGroup
		{
			get
			{
				return this._ADSLCustomerGroup.Entity;
			}
			set
			{
				ADSLCustomerGroup previousValue = this._ADSLCustomerGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerGroup.Entity = null;
						previousValue.ADSLIPs.Remove(this);
					}
					this._ADSLCustomerGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLIPs.Add(this);
						this._CustometGroupID = value.ID;
					}
					else
					{
						this._CustometGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIPType_ADSLIP", Storage="_ADSLIPType", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public ADSLIPType ADSLIPType
		{
			get
			{
				return this._ADSLIPType.Entity;
			}
			set
			{
				ADSLIPType previousValue = this._ADSLIPType.Entity;
				if (((previousValue != value) 
							|| (this._ADSLIPType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLIPType.Entity = null;
						previousValue.ADSLIPs.Remove(this);
					}
					this._ADSLIPType.Entity = value;
					if ((value != null))
					{
						value.ADSLIPs.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("ADSLIPType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = null;
		}
		
		private void attach_ADSLIPHistories(ADSLIPHistory entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = this;
		}
		
		private void detach_ADSLIPHistories(ADSLIPHistory entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = null;
		}
		
		private void attach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = this;
		}
		
		private void detach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLIPHistory")]
	public partial class ADSLIPHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<long> _IPID;
		
		private System.Nullable<long> _IPGroupID;
		
		private long _TelephoneNo;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<ADSLGroupIP> _ADSLGroupIP;
		
		private EntityRef<ADSLIP> _ADSLIP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIPIDChanging(System.Nullable<long> value);
    partial void OnIPIDChanged();
    partial void OnIPGroupIDChanging(System.Nullable<long> value);
    partial void OnIPGroupIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public ADSLIPHistory()
		{
			this._ADSLGroupIP = default(EntityRef<ADSLGroupIP>);
			this._ADSLIP = default(EntityRef<ADSLIP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPID", DbType="BigInt")]
		public System.Nullable<long> IPID
		{
			get
			{
				return this._IPID;
			}
			set
			{
				if ((this._IPID != value))
				{
					if (this._ADSLIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIPIDChanging(value);
					this.SendPropertyChanging();
					this._IPID = value;
					this.SendPropertyChanged("IPID");
					this.OnIPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPGroupID", DbType="BigInt")]
		public System.Nullable<long> IPGroupID
		{
			get
			{
				return this._IPGroupID;
			}
			set
			{
				if ((this._IPGroupID != value))
				{
					if (this._ADSLGroupIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIPGroupIDChanging(value);
					this.SendPropertyChanging();
					this._IPGroupID = value;
					this.SendPropertyChanged("IPGroupID");
					this.OnIPGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_ADSLIPHistory", Storage="_ADSLGroupIP", ThisKey="IPGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLGroupIP ADSLGroupIP
		{
			get
			{
				return this._ADSLGroupIP.Entity;
			}
			set
			{
				ADSLGroupIP previousValue = this._ADSLGroupIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLGroupIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLGroupIP.Entity = null;
						previousValue.ADSLIPHistories.Remove(this);
					}
					this._ADSLGroupIP.Entity = value;
					if ((value != null))
					{
						value.ADSLIPHistories.Add(this);
						this._IPGroupID = value.ID;
					}
					else
					{
						this._IPGroupID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLGroupIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_ADSLIPHistory", Storage="_ADSLIP", ThisKey="IPID", OtherKey="ID", IsForeignKey=true)]
		public ADSLIP ADSLIP
		{
			get
			{
				return this._ADSLIP.Entity;
			}
			set
			{
				ADSLIP previousValue = this._ADSLIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLIP.Entity = null;
						previousValue.ADSLIPHistories.Remove(this);
					}
					this._ADSLIP.Entity = value;
					if ((value != null))
					{
						value.ADSLIPHistories.Add(this);
						this._IPID = value.ID;
					}
					else
					{
						this._IPID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLIP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLIPType")]
	public partial class ADSLIPType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private byte _Type;
		
		private int _IPCounts;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<ADSLGroupIP> _ADSLGroupIPs;
		
		private EntitySet<ADSLIP> _ADSLIPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnIPCountsChanging(int value);
    partial void OnIPCountsChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ADSLIPType()
		{
			this._ADSLGroupIPs = new EntitySet<ADSLGroupIP>(new Action<ADSLGroupIP>(this.attach_ADSLGroupIPs), new Action<ADSLGroupIP>(this.detach_ADSLGroupIPs));
			this._ADSLIPs = new EntitySet<ADSLIP>(new Action<ADSLIP>(this.attach_ADSLIPs), new Action<ADSLIP>(this.detach_ADSLIPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPCounts", DbType="Int NOT NULL")]
		public int IPCounts
		{
			get
			{
				return this._IPCounts;
			}
			set
			{
				if ((this._IPCounts != value))
				{
					this.OnIPCountsChanging(value);
					this.SendPropertyChanging();
					this._IPCounts = value;
					this.SendPropertyChanged("IPCounts");
					this.OnIPCountsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIPType_ADSLGroupIP", Storage="_ADSLGroupIPs", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<ADSLGroupIP> ADSLGroupIPs
		{
			get
			{
				return this._ADSLGroupIPs;
			}
			set
			{
				this._ADSLGroupIPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIPType_ADSLIP", Storage="_ADSLIPs", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<ADSLIP> ADSLIPs
		{
			get
			{
				return this._ADSLIPs;
			}
			set
			{
				this._ADSLIPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLGroupIPs(ADSLGroupIP entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIPType = this;
		}
		
		private void detach_ADSLGroupIPs(ADSLGroupIP entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIPType = null;
		}
		
		private void attach_ADSLIPs(ADSLIP entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIPType = this;
		}
		
		private void detach_ADSLIPs(ADSLIP entity)
		{
			this.SendPropertyChanging();
			entity.ADSLIPType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLIRANRequest")]
	public partial class ADSLIRANRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _LastSendDate;
		
		private int _Count;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLastSendDateChanging(System.DateTime value);
    partial void OnLastSendDateChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    #endregion
		
		public ADSLIRANRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSendDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastSendDate
		{
			get
			{
				return this._LastSendDate;
			}
			set
			{
				if ((this._LastSendDate != value))
				{
					this.OnLastSendDateChanging(value);
					this.SendPropertyChanging();
					this._LastSendDate = value;
					this.SendPropertyChanged("LastSendDate");
					this.OnLastSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLMDFRange")]
	public partial class ADSLMDFRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MDFID;
		
		private System.Nullable<long> _StartTelephoneNo;
		
		private System.Nullable<long> _EndTelephoneNo;
		
		private EntityRef<MDF> _MDF;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMDFIDChanging(int value);
    partial void OnMDFIDChanged();
    partial void OnStartTelephoneNoChanging(System.Nullable<long> value);
    partial void OnStartTelephoneNoChanged();
    partial void OnEndTelephoneNoChanging(System.Nullable<long> value);
    partial void OnEndTelephoneNoChanged();
    #endregion
		
		public ADSLMDFRange()
		{
			this._MDF = default(EntityRef<MDF>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFID", DbType="Int NOT NULL")]
		public int MDFID
		{
			get
			{
				return this._MDFID;
			}
			set
			{
				if ((this._MDFID != value))
				{
					if (this._MDF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDFIDChanging(value);
					this.SendPropertyChanging();
					this._MDFID = value;
					this.SendPropertyChanged("MDFID");
					this.OnMDFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> StartTelephoneNo
		{
			get
			{
				return this._StartTelephoneNo;
			}
			set
			{
				if ((this._StartTelephoneNo != value))
				{
					this.OnStartTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._StartTelephoneNo = value;
					this.SendPropertyChanged("StartTelephoneNo");
					this.OnStartTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> EndTelephoneNo
		{
			get
			{
				return this._EndTelephoneNo;
			}
			set
			{
				if ((this._EndTelephoneNo != value))
				{
					this.OnEndTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._EndTelephoneNo = value;
					this.SendPropertyChanged("EndTelephoneNo");
					this.OnEndTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDF_ADSLMDFRange", Storage="_MDF", ThisKey="MDFID", OtherKey="ID", IsForeignKey=true)]
		public MDF MDF
		{
			get
			{
				return this._MDF.Entity;
			}
			set
			{
				MDF previousValue = this._MDF.Entity;
				if (((previousValue != value) 
							|| (this._MDF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MDF.Entity = null;
						previousValue.ADSLMDFRanges.Remove(this);
					}
					this._MDF.Entity = value;
					if ((value != null))
					{
						value.ADSLMDFRanges.Add(this);
						this._MDFID = value.ID;
					}
					else
					{
						this._MDFID = default(int);
					}
					this.SendPropertyChanged("MDF");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLModem")]
	public partial class ADSLModem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Model;
		
		private System.Nullable<long> _Price;
		
		private System.Nullable<bool> _IsSalable;
		
		private string _Description;
		
		private bool _ForWireless;
		
		private EntitySet<ADSLChangeService> _ADSLChangeServices;
		
		private EntityRef<ADSLModem> _ADSLModem2;
		
		private EntitySet<ADSLModemProperty> _ADSLModemProperties;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntityRef<ADSLModem> _ADSLModem1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnIsSalableChanging(System.Nullable<bool> value);
    partial void OnIsSalableChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnForWirelessChanging(bool value);
    partial void OnForWirelessChanged();
    #endregion
		
		public ADSLModem()
		{
			this._ADSLChangeServices = new EntitySet<ADSLChangeService>(new Action<ADSLChangeService>(this.attach_ADSLChangeServices), new Action<ADSLChangeService>(this.detach_ADSLChangeServices));
			this._ADSLModem2 = default(EntityRef<ADSLModem>);
			this._ADSLModemProperties = new EntitySet<ADSLModemProperty>(new Action<ADSLModemProperty>(this.attach_ADSLModemProperties), new Action<ADSLModemProperty>(this.detach_ADSLModemProperties));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._ADSLModem1 = default(EntityRef<ADSLModem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._ADSLModem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSalable", DbType="Bit")]
		public System.Nullable<bool> IsSalable
		{
			get
			{
				return this._IsSalable;
			}
			set
			{
				if ((this._IsSalable != value))
				{
					this.OnIsSalableChanging(value);
					this.SendPropertyChanging();
					this._IsSalable = value;
					this.SendPropertyChanged("IsSalable");
					this.OnIsSalableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForWireless", DbType="Bit NOT NULL")]
		public bool ForWireless
		{
			get
			{
				return this._ForWireless;
			}
			set
			{
				if ((this._ForWireless != value))
				{
					this.OnForWirelessChanging(value);
					this.SendPropertyChanging();
					this._ForWireless = value;
					this.SendPropertyChanged("ForWireless");
					this.OnForWirelessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_ADSLChangeService", Storage="_ADSLChangeServices", ThisKey="ID", OtherKey="ModemID")]
		public EntitySet<ADSLChangeService> ADSLChangeServices
		{
			get
			{
				return this._ADSLChangeServices;
			}
			set
			{
				this._ADSLChangeServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_ADSLModem", Storage="_ADSLModem2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLModem ADSLModem2
		{
			get
			{
				return this._ADSLModem2.Entity;
			}
			set
			{
				ADSLModem previousValue = this._ADSLModem2.Entity;
				if (((previousValue != value) 
							|| (this._ADSLModem2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLModem2.Entity = null;
						previousValue.ADSLModem1 = null;
					}
					this._ADSLModem2.Entity = value;
					if ((value != null))
					{
						value.ADSLModem1 = this;
					}
					this.SendPropertyChanged("ADSLModem2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_ADSLModemProperty", Storage="_ADSLModemProperties", ThisKey="ID", OtherKey="ADSLModemID")]
		public EntitySet<ADSLModemProperty> ADSLModemProperties
		{
			get
			{
				return this._ADSLModemProperties;
			}
			set
			{
				this._ADSLModemProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="ModemID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="ModemID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_ADSLModem", Storage="_ADSLModem1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public ADSLModem ADSLModem1
		{
			get
			{
				return this._ADSLModem1.Entity;
			}
			set
			{
				ADSLModem previousValue = this._ADSLModem1.Entity;
				if (((previousValue != value) 
							|| (this._ADSLModem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLModem1.Entity = null;
						previousValue.ADSLModem2 = null;
					}
					this._ADSLModem1.Entity = value;
					if ((value != null))
					{
						value.ADSLModem2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("ADSLModem1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLChangeServices(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModem = this;
		}
		
		private void detach_ADSLChangeServices(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModem = null;
		}
		
		private void attach_ADSLModemProperties(ADSLModemProperty entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModem = this;
		}
		
		private void detach_ADSLModemProperties(ADSLModemProperty entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModem = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModem = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModem = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModem = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLModemProperty")]
	public partial class ADSLModemProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CenterID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<int> _ADSLModemID;
		
		private string _SerialNo;
		
		private string _MACAddress;
		
		private System.Nullable<byte> _Status;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<Wireless> _Wirelesses;
		
		private EntityRef<ADSLModem> _ADSLModem;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(System.Nullable<int> value);
    partial void OnCenterIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnADSLModemIDChanging(System.Nullable<int> value);
    partial void OnADSLModemIDChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    partial void OnMACAddressChanging(string value);
    partial void OnMACAddressChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public ADSLModemProperty()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._Wirelesses = new EntitySet<Wireless>(new Action<Wireless>(this.attach_Wirelesses), new Action<Wireless>(this.detach_Wirelesses));
			this._ADSLModem = default(EntityRef<ADSLModem>);
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int")]
		public System.Nullable<int> CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLModemID", DbType="Int")]
		public System.Nullable<int> ADSLModemID
		{
			get
			{
				return this._ADSLModemID;
			}
			set
			{
				if ((this._ADSLModemID != value))
				{
					if (this._ADSLModem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLModemIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLModemID = value;
					this.SendPropertyChanged("ADSLModemID");
					this.OnADSLModemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="NVarChar(50)")]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAddress", DbType="NVarChar(50)")]
		public string MACAddress
		{
			get
			{
				return this._MACAddress;
			}
			set
			{
				if ((this._MACAddress != value))
				{
					this.OnMACAddressChanging(value);
					this.SendPropertyChanging();
					this._MACAddress = value;
					this.SendPropertyChanged("MACAddress");
					this.OnMACAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModemProperty_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="ModemID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModemProperty_Wireless", Storage="_Wirelesses", ThisKey="ID", OtherKey="ModemID")]
		public EntitySet<Wireless> Wirelesses
		{
			get
			{
				return this._Wirelesses;
			}
			set
			{
				this._Wirelesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_ADSLModemProperty", Storage="_ADSLModem", ThisKey="ADSLModemID", OtherKey="ID", IsForeignKey=true)]
		public ADSLModem ADSLModem
		{
			get
			{
				return this._ADSLModem.Entity;
			}
			set
			{
				ADSLModem previousValue = this._ADSLModem.Entity;
				if (((previousValue != value) 
							|| (this._ADSLModem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLModem.Entity = null;
						previousValue.ADSLModemProperties.Remove(this);
					}
					this._ADSLModem.Entity = value;
					if ((value != null))
					{
						value.ADSLModemProperties.Add(this);
						this._ADSLModemID = value.ID;
					}
					else
					{
						this._ADSLModemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLModem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLModemProperty", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLModemProperties.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLModemProperties.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModemProperty = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModemProperty = null;
		}
		
		private void attach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModemProperty = this;
		}
		
		private void detach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLModemProperty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLPAPCabinetAccuracy")]
	public partial class ADSLPAPCabinetAccuracy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CabinetID;
		
		private int _CenterID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _CorrectDate;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCabinetIDChanging(int value);
    partial void OnCabinetIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCorrectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCorrectDateChanged();
    #endregion
		
		public ADSLPAPCabinetAccuracy()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int NOT NULL")]
		public int CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CorrectDate
		{
			get
			{
				return this._CorrectDate;
			}
			set
			{
				if ((this._CorrectDate != value))
				{
					this.OnCorrectDateChanging(value);
					this.SendPropertyChanging();
					this._CorrectDate = value;
					this.SendPropertyChanged("CorrectDate");
					this.OnCorrectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLPAPCabinetAccuracy", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLPAPCabinetAccuracies.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLPAPCabinetAccuracies.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLPAPFeasibility")]
	public partial class ADSLPAPFeasibility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _PAPUserID;
		
		private int _PAPInfoID;
		
		private int _CityID;
		
		private long _TelephoneNo;
		
		private System.DateTime _Date;
		
		private byte _Status;
		
		private EntityRef<City> _City;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPAPUserIDChanging(System.Nullable<int> value);
    partial void OnPAPUserIDChanged();
    partial void OnPAPInfoIDChanging(int value);
    partial void OnPAPInfoIDChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ADSLPAPFeasibility()
		{
			this._City = default(EntityRef<City>);
			this._PAPInfo = default(EntityRef<PAPInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPUserID", DbType="Int")]
		public System.Nullable<int> PAPUserID
		{
			get
			{
				return this._PAPUserID;
			}
			set
			{
				if ((this._PAPUserID != value))
				{
					this.OnPAPUserIDChanging(value);
					this.SendPropertyChanging();
					this._PAPUserID = value;
					this.SendPropertyChanged("PAPUserID");
					this.OnPAPUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int NOT NULL")]
		public int PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ADSLPAPFeasibility", Storage="_City", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.ADSLPAPFeasibilities.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.ADSLPAPFeasibilities.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSLPAPFeasibility", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.ADSLPAPFeasibilities.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.ADSLPAPFeasibilities.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(int);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLPAPPort")]
	public partial class ADSLPAPPort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _PAPInfoID;
		
		private int _CenterID;
		
		private System.Nullable<long> _PortNo;
		
		private System.Nullable<int> _RowNo;
		
		private System.Nullable<int> _ColumnNo;
		
		private System.Nullable<long> _BuchtNo;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private byte _Status;
		
		private EntitySet<ADSLPAPRequest> _ADSLPAPRequests;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPAPInfoIDChanging(int value);
    partial void OnPAPInfoIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnPortNoChanging(System.Nullable<long> value);
    partial void OnPortNoChanged();
    partial void OnRowNoChanging(System.Nullable<int> value);
    partial void OnRowNoChanged();
    partial void OnColumnNoChanging(System.Nullable<int> value);
    partial void OnColumnNoChanged();
    partial void OnBuchtNoChanging(System.Nullable<long> value);
    partial void OnBuchtNoChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ADSLPAPPort()
		{
			this._ADSLPAPRequests = new EntitySet<ADSLPAPRequest>(new Action<ADSLPAPRequest>(this.attach_ADSLPAPRequests), new Action<ADSLPAPRequest>(this.detach_ADSLPAPRequests));
			this._Center = default(EntityRef<Center>);
			this._PAPInfo = default(EntityRef<PAPInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int NOT NULL")]
		public int PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortNo", DbType="BigInt")]
		public System.Nullable<long> PortNo
		{
			get
			{
				return this._PortNo;
			}
			set
			{
				if ((this._PortNo != value))
				{
					this.OnPortNoChanging(value);
					this.SendPropertyChanging();
					this._PortNo = value;
					this.SendPropertyChanged("PortNo");
					this.OnPortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNo", DbType="Int")]
		public System.Nullable<int> RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this.OnRowNoChanging(value);
					this.SendPropertyChanging();
					this._RowNo = value;
					this.SendPropertyChanged("RowNo");
					this.OnRowNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnNo", DbType="Int")]
		public System.Nullable<int> ColumnNo
		{
			get
			{
				return this._ColumnNo;
			}
			set
			{
				if ((this._ColumnNo != value))
				{
					this.OnColumnNoChanging(value);
					this.SendPropertyChanging();
					this._ColumnNo = value;
					this.SendPropertyChanged("ColumnNo");
					this.OnColumnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtNo", DbType="BigInt")]
		public System.Nullable<long> BuchtNo
		{
			get
			{
				return this._BuchtNo;
			}
			set
			{
				if ((this._BuchtNo != value))
				{
					this.OnBuchtNoChanging(value);
					this.SendPropertyChanging();
					this._BuchtNo = value;
					this.SendPropertyChanged("BuchtNo");
					this.OnBuchtNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPAPPort_ADSLPAPRequest", Storage="_ADSLPAPRequests", ThisKey="ID", OtherKey="ADSLPAPPortID")]
		public EntitySet<ADSLPAPRequest> ADSLPAPRequests
		{
			get
			{
				return this._ADSLPAPRequests;
			}
			set
			{
				this._ADSLPAPRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLPAPPort", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLPAPPorts.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLPAPPorts.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSLPAPPort", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.ADSLPAPPorts.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.ADSLPAPPorts.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(int);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLPAPRequests(ADSLPAPRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPAPPort = this;
		}
		
		private void detach_ADSLPAPRequests(ADSLPAPRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPAPPort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLPAPRequest")]
	public partial class ADSLPAPRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _RequestTypeID;
		
		private int _PAPInfoID;
		
		private long _TelephoneNo;
		
		private string _Customer;
		
		private System.Nullable<byte> _CustomerStatus;
		
		private System.Nullable<long> _ADSLPAPPortID;
		
		private string _SplitorBucht;
		
		private string _LineBucht;
		
		private string _NewPort;
		
		private System.Nullable<byte> _InstalTimeOut;
		
		private string _CommentCustomers;
		
		private string _CommnetReject;
		
		private System.Nullable<int> _MDFUserID;
		
		private System.Nullable<System.DateTime> _MDFDate;
		
		private string _MDFComment;
		
		private System.Nullable<int> _FinalUserID;
		
		private System.Nullable<System.DateTime> _FinalDate;
		
		private string _FinalComment;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _IsIranInsert;
		
		private System.Nullable<bool> _IsIranEnd;
		
		private EntityRef<ADSLPAPPort> _ADSLPAPPort;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestTypeIDChanging(System.Nullable<int> value);
    partial void OnRequestTypeIDChanged();
    partial void OnPAPInfoIDChanging(int value);
    partial void OnPAPInfoIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustomerStatusChanging(System.Nullable<byte> value);
    partial void OnCustomerStatusChanged();
    partial void OnADSLPAPPortIDChanging(System.Nullable<long> value);
    partial void OnADSLPAPPortIDChanged();
    partial void OnSplitorBuchtChanging(string value);
    partial void OnSplitorBuchtChanged();
    partial void OnLineBuchtChanging(string value);
    partial void OnLineBuchtChanged();
    partial void OnNewPortChanging(string value);
    partial void OnNewPortChanged();
    partial void OnInstalTimeOutChanging(System.Nullable<byte> value);
    partial void OnInstalTimeOutChanged();
    partial void OnCommentCustomersChanging(string value);
    partial void OnCommentCustomersChanged();
    partial void OnCommnetRejectChanging(string value);
    partial void OnCommnetRejectChanged();
    partial void OnMDFUserIDChanging(System.Nullable<int> value);
    partial void OnMDFUserIDChanged();
    partial void OnMDFDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFDateChanged();
    partial void OnMDFCommentChanging(string value);
    partial void OnMDFCommentChanged();
    partial void OnFinalUserIDChanging(System.Nullable<int> value);
    partial void OnFinalUserIDChanged();
    partial void OnFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDateChanged();
    partial void OnFinalCommentChanging(string value);
    partial void OnFinalCommentChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsIranInsertChanging(System.Nullable<bool> value);
    partial void OnIsIranInsertChanged();
    partial void OnIsIranEndChanging(System.Nullable<bool> value);
    partial void OnIsIranEndChanged();
    #endregion
		
		public ADSLPAPRequest()
		{
			this._ADSLPAPPort = default(EntityRef<ADSLPAPPort>);
			this._PAPInfo = default(EntityRef<PAPInfo>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int")]
		public System.Nullable<int> RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int NOT NULL")]
		public int PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(200)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerStatus", DbType="TinyInt")]
		public System.Nullable<byte> CustomerStatus
		{
			get
			{
				return this._CustomerStatus;
			}
			set
			{
				if ((this._CustomerStatus != value))
				{
					this.OnCustomerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerStatus = value;
					this.SendPropertyChanged("CustomerStatus");
					this.OnCustomerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLPAPPortID", DbType="BigInt")]
		public System.Nullable<long> ADSLPAPPortID
		{
			get
			{
				return this._ADSLPAPPortID;
			}
			set
			{
				if ((this._ADSLPAPPortID != value))
				{
					if (this._ADSLPAPPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLPAPPortIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLPAPPortID = value;
					this.SendPropertyChanged("ADSLPAPPortID");
					this.OnADSLPAPPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitorBucht", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SplitorBucht
		{
			get
			{
				return this._SplitorBucht;
			}
			set
			{
				if ((this._SplitorBucht != value))
				{
					this.OnSplitorBuchtChanging(value);
					this.SendPropertyChanging();
					this._SplitorBucht = value;
					this.SendPropertyChanged("SplitorBucht");
					this.OnSplitorBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineBucht", DbType="NVarChar(50)")]
		public string LineBucht
		{
			get
			{
				return this._LineBucht;
			}
			set
			{
				if ((this._LineBucht != value))
				{
					this.OnLineBuchtChanging(value);
					this.SendPropertyChanging();
					this._LineBucht = value;
					this.SendPropertyChanged("LineBucht");
					this.OnLineBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPort", DbType="NVarChar(50)")]
		public string NewPort
		{
			get
			{
				return this._NewPort;
			}
			set
			{
				if ((this._NewPort != value))
				{
					this.OnNewPortChanging(value);
					this.SendPropertyChanging();
					this._NewPort = value;
					this.SendPropertyChanged("NewPort");
					this.OnNewPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalTimeOut", DbType="TinyInt")]
		public System.Nullable<byte> InstalTimeOut
		{
			get
			{
				return this._InstalTimeOut;
			}
			set
			{
				if ((this._InstalTimeOut != value))
				{
					this.OnInstalTimeOutChanging(value);
					this.SendPropertyChanging();
					this._InstalTimeOut = value;
					this.SendPropertyChanged("InstalTimeOut");
					this.OnInstalTimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentCustomers", DbType="NVarChar(MAX)")]
		public string CommentCustomers
		{
			get
			{
				return this._CommentCustomers;
			}
			set
			{
				if ((this._CommentCustomers != value))
				{
					this.OnCommentCustomersChanging(value);
					this.SendPropertyChanging();
					this._CommentCustomers = value;
					this.SendPropertyChanged("CommentCustomers");
					this.OnCommentCustomersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommnetReject", DbType="NVarChar(500)")]
		public string CommnetReject
		{
			get
			{
				return this._CommnetReject;
			}
			set
			{
				if ((this._CommnetReject != value))
				{
					this.OnCommnetRejectChanging(value);
					this.SendPropertyChanging();
					this._CommnetReject = value;
					this.SendPropertyChanged("CommnetReject");
					this.OnCommnetRejectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFUserID", DbType="Int")]
		public System.Nullable<int> MDFUserID
		{
			get
			{
				return this._MDFUserID;
			}
			set
			{
				if ((this._MDFUserID != value))
				{
					this.OnMDFUserIDChanging(value);
					this.SendPropertyChanging();
					this._MDFUserID = value;
					this.SendPropertyChanged("MDFUserID");
					this.OnMDFUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFDate
		{
			get
			{
				return this._MDFDate;
			}
			set
			{
				if ((this._MDFDate != value))
				{
					this.OnMDFDateChanging(value);
					this.SendPropertyChanging();
					this._MDFDate = value;
					this.SendPropertyChanged("MDFDate");
					this.OnMDFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFComment", DbType="NVarChar(MAX)")]
		public string MDFComment
		{
			get
			{
				return this._MDFComment;
			}
			set
			{
				if ((this._MDFComment != value))
				{
					this.OnMDFCommentChanging(value);
					this.SendPropertyChanging();
					this._MDFComment = value;
					this.SendPropertyChanged("MDFComment");
					this.OnMDFCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalUserID", DbType="Int")]
		public System.Nullable<int> FinalUserID
		{
			get
			{
				return this._FinalUserID;
			}
			set
			{
				if ((this._FinalUserID != value))
				{
					this.OnFinalUserIDChanging(value);
					this.SendPropertyChanging();
					this._FinalUserID = value;
					this.SendPropertyChanged("FinalUserID");
					this.OnFinalUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FinalDate
		{
			get
			{
				return this._FinalDate;
			}
			set
			{
				if ((this._FinalDate != value))
				{
					this.OnFinalDateChanging(value);
					this.SendPropertyChanging();
					this._FinalDate = value;
					this.SendPropertyChanged("FinalDate");
					this.OnFinalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalComment", DbType="NVarChar(MAX)")]
		public string FinalComment
		{
			get
			{
				return this._FinalComment;
			}
			set
			{
				if ((this._FinalComment != value))
				{
					this.OnFinalCommentChanging(value);
					this.SendPropertyChanging();
					this._FinalComment = value;
					this.SendPropertyChanged("FinalComment");
					this.OnFinalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIranInsert", DbType="Bit")]
		public System.Nullable<bool> IsIranInsert
		{
			get
			{
				return this._IsIranInsert;
			}
			set
			{
				if ((this._IsIranInsert != value))
				{
					this.OnIsIranInsertChanging(value);
					this.SendPropertyChanging();
					this._IsIranInsert = value;
					this.SendPropertyChanged("IsIranInsert");
					this.OnIsIranInsertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIranEnd", DbType="Bit")]
		public System.Nullable<bool> IsIranEnd
		{
			get
			{
				return this._IsIranEnd;
			}
			set
			{
				if ((this._IsIranEnd != value))
				{
					this.OnIsIranEndChanging(value);
					this.SendPropertyChanging();
					this._IsIranEnd = value;
					this.SendPropertyChanged("IsIranEnd");
					this.OnIsIranEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPAPPort_ADSLPAPRequest", Storage="_ADSLPAPPort", ThisKey="ADSLPAPPortID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPAPPort ADSLPAPPort
		{
			get
			{
				return this._ADSLPAPPort.Entity;
			}
			set
			{
				ADSLPAPPort previousValue = this._ADSLPAPPort.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPAPPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPAPPort.Entity = null;
						previousValue.ADSLPAPRequests.Remove(this);
					}
					this._ADSLPAPPort.Entity = value;
					if ((value != null))
					{
						value.ADSLPAPRequests.Add(this);
						this._ADSLPAPPortID = value.ID;
					}
					else
					{
						this._ADSLPAPPortID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLPAPPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSLPAPRequest", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.ADSLPAPRequests.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.ADSLPAPRequests.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(int);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLPAPRequest", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLPAPRequest = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLPAPRequest = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLPorts")]
	public partial class ADSLPort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _ADSLEquipmentID;
		
		private string _PortNo;
		
		private System.Nullable<int> _Radif;
		
		private System.Nullable<int> _Tabaghe;
		
		private System.Nullable<int> _Etesali;
		
		private string _Address;
		
		private System.Nullable<long> _InputBucht;
		
		private System.Nullable<long> _OutBucht;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<System.DateTime> _InstalADSLDate;
		
		private byte _Status;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<ADSLChangePlace> _ADSLChangePlaces;
		
		private EntitySet<ADSLChangePlace> _ADSLChangePlaces1;
		
		private EntitySet<ADSLChangePort1> _ADSLChangePort1s;
		
		private EntitySet<ADSLChangePort1> _ADSLChangePort1s1;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntityRef<ADSLEquipment> _ADSLEquipment;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnADSLEquipmentIDChanging(System.Nullable<int> value);
    partial void OnADSLEquipmentIDChanged();
    partial void OnPortNoChanging(string value);
    partial void OnPortNoChanged();
    partial void OnRadifChanging(System.Nullable<int> value);
    partial void OnRadifChanged();
    partial void OnTabagheChanging(System.Nullable<int> value);
    partial void OnTabagheChanged();
    partial void OnEtesaliChanging(System.Nullable<int> value);
    partial void OnEtesaliChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnInputBuchtChanging(System.Nullable<long> value);
    partial void OnInputBuchtChanged();
    partial void OnOutBuchtChanging(System.Nullable<long> value);
    partial void OnOutBuchtChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnInstalADSLDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstalADSLDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ADSLPort()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._ADSLChangePlaces = new EntitySet<ADSLChangePlace>(new Action<ADSLChangePlace>(this.attach_ADSLChangePlaces), new Action<ADSLChangePlace>(this.detach_ADSLChangePlaces));
			this._ADSLChangePlaces1 = new EntitySet<ADSLChangePlace>(new Action<ADSLChangePlace>(this.attach_ADSLChangePlaces1), new Action<ADSLChangePlace>(this.detach_ADSLChangePlaces1));
			this._ADSLChangePort1s = new EntitySet<ADSLChangePort1>(new Action<ADSLChangePort1>(this.attach_ADSLChangePort1s), new Action<ADSLChangePort1>(this.detach_ADSLChangePort1s));
			this._ADSLChangePort1s1 = new EntitySet<ADSLChangePort1>(new Action<ADSLChangePort1>(this.attach_ADSLChangePort1s1), new Action<ADSLChangePort1>(this.detach_ADSLChangePort1s1));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._ADSLEquipment = default(EntityRef<ADSLEquipment>);
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLEquipmentID", DbType="Int")]
		public System.Nullable<int> ADSLEquipmentID
		{
			get
			{
				return this._ADSLEquipmentID;
			}
			set
			{
				if ((this._ADSLEquipmentID != value))
				{
					if (this._ADSLEquipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLEquipmentID = value;
					this.SendPropertyChanged("ADSLEquipmentID");
					this.OnADSLEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortNo", DbType="NVarChar(50)")]
		public string PortNo
		{
			get
			{
				return this._PortNo;
			}
			set
			{
				if ((this._PortNo != value))
				{
					this.OnPortNoChanging(value);
					this.SendPropertyChanging();
					this._PortNo = value;
					this.SendPropertyChanged("PortNo");
					this.OnPortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="Int")]
		public System.Nullable<int> Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this.OnRadifChanging(value);
					this.SendPropertyChanging();
					this._Radif = value;
					this.SendPropertyChanged("Radif");
					this.OnRadifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabaghe", DbType="Int")]
		public System.Nullable<int> Tabaghe
		{
			get
			{
				return this._Tabaghe;
			}
			set
			{
				if ((this._Tabaghe != value))
				{
					this.OnTabagheChanging(value);
					this.SendPropertyChanging();
					this._Tabaghe = value;
					this.SendPropertyChanged("Tabaghe");
					this.OnTabagheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="Int")]
		public System.Nullable<int> Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this.OnEtesaliChanging(value);
					this.SendPropertyChanging();
					this._Etesali = value;
					this.SendPropertyChanged("Etesali");
					this.OnEtesaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputBucht", DbType="BigInt")]
		public System.Nullable<long> InputBucht
		{
			get
			{
				return this._InputBucht;
			}
			set
			{
				if ((this._InputBucht != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInputBuchtChanging(value);
					this.SendPropertyChanging();
					this._InputBucht = value;
					this.SendPropertyChanged("InputBucht");
					this.OnInputBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutBucht", DbType="BigInt")]
		public System.Nullable<long> OutBucht
		{
			get
			{
				return this._OutBucht;
			}
			set
			{
				if ((this._OutBucht != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutBuchtChanging(value);
					this.SendPropertyChanging();
					this._OutBucht = value;
					this.SendPropertyChanged("OutBucht");
					this.OnOutBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalADSLDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstalADSLDate
		{
			get
			{
				return this._InstalADSLDate;
			}
			set
			{
				if ((this._InstalADSLDate != value))
				{
					this.OnInstalADSLDateChanging(value);
					this.SendPropertyChanging();
					this._InstalADSLDate = value;
					this.SendPropertyChanged("InstalADSLDate");
					this.OnInstalADSLDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="ADSLPortID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLChangePlace", Storage="_ADSLChangePlaces", ThisKey="ID", OtherKey="OldPortID")]
		public EntitySet<ADSLChangePlace> ADSLChangePlaces
		{
			get
			{
				return this._ADSLChangePlaces;
			}
			set
			{
				this._ADSLChangePlaces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLChangePlace1", Storage="_ADSLChangePlaces1", ThisKey="ID", OtherKey="NewPortID")]
		public EntitySet<ADSLChangePlace> ADSLChangePlaces1
		{
			get
			{
				return this._ADSLChangePlaces1;
			}
			set
			{
				this._ADSLChangePlaces1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLChangePort1", Storage="_ADSLChangePort1s", ThisKey="ID", OtherKey="OldPortID")]
		public EntitySet<ADSLChangePort1> ADSLChangePort1s
		{
			get
			{
				return this._ADSLChangePort1s;
			}
			set
			{
				this._ADSLChangePort1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLChangePort11", Storage="_ADSLChangePort1s1", ThisKey="ID", OtherKey="NewPortID")]
		public EntitySet<ADSLChangePort1> ADSLChangePort1s1
		{
			get
			{
				return this._ADSLChangePort1s1;
			}
			set
			{
				this._ADSLChangePort1s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="ADSLPortID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="ADSLPortID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLEquipment_ADSLPort", Storage="_ADSLEquipment", ThisKey="ADSLEquipmentID", OtherKey="ID", IsForeignKey=true)]
		public ADSLEquipment ADSLEquipment
		{
			get
			{
				return this._ADSLEquipment.Entity;
			}
			set
			{
				ADSLEquipment previousValue = this._ADSLEquipment.Entity;
				if (((previousValue != value) 
							|| (this._ADSLEquipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLEquipment.Entity = null;
						previousValue.ADSLPorts.Remove(this);
					}
					this._ADSLEquipment.Entity = value;
					if ((value != null))
					{
						value.ADSLPorts.Add(this);
						this._ADSLEquipmentID = value.ID;
					}
					else
					{
						this._ADSLEquipmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLEquipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ADSLPort", Storage="_Bucht", ThisKey="InputBucht", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.ADSLPorts.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.ADSLPorts.Add(this);
						this._InputBucht = value.ID;
					}
					else
					{
						this._InputBucht = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ADSLPort1", Storage="_Bucht1", ThisKey="OutBucht", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.ADSLPorts1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.ADSLPorts1.Add(this);
						this._OutBucht = value.ID;
					}
					else
					{
						this._OutBucht = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = null;
		}
		
		private void attach_ADSLChangePlaces(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = this;
		}
		
		private void detach_ADSLChangePlaces(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = null;
		}
		
		private void attach_ADSLChangePlaces1(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort1 = this;
		}
		
		private void detach_ADSLChangePlaces1(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort1 = null;
		}
		
		private void attach_ADSLChangePort1s(ADSLChangePort1 entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = this;
		}
		
		private void detach_ADSLChangePort1s(ADSLChangePort1 entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = null;
		}
		
		private void attach_ADSLChangePort1s1(ADSLChangePort1 entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort1 = this;
		}
		
		private void detach_ADSLChangePort1s1(ADSLChangePort1 entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort1 = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLPortType")]
	public partial class ADSLPortType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<ADSLEquipment> _ADSLEquipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ADSLPortType()
		{
			this._ADSLEquipments = new EntitySet<ADSLEquipment>(new Action<ADSLEquipment>(this.attach_ADSLEquipments), new Action<ADSLEquipment>(this.detach_ADSLEquipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPortType_ADSLEquipment", Storage="_ADSLEquipments", ThisKey="ID", OtherKey="PortTypeID")]
		public EntitySet<ADSLEquipment> ADSLEquipments
		{
			get
			{
				return this._ADSLEquipments;
			}
			set
			{
				this._ADSLEquipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLEquipments(ADSLEquipment entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPortType = this;
		}
		
		private void detach_ADSLEquipments(ADSLEquipment entity)
		{
			this.SendPropertyChanging();
			entity.ADSLPortType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLRequest")]
	public partial class ADSLRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private long _CustomerOwnerID;
		
		private System.Nullable<long> _CustomerOwnerElkaID;
		
		private System.Nullable<byte> _CustomerOwnerStatus;
		
		private System.Nullable<System.DateTime> _CustomerEndRentDate;
		
		private System.Nullable<byte> _SaleWay;
		
		private System.Nullable<int> _ADSLSellerAgentID;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<int> _AdditionalServiceID;
		
		private string _LicenseLetterNo;
		
		private System.Nullable<bool> _HasIP;
		
		private System.Nullable<long> _IPStaticID;
		
		private System.Nullable<long> _GroupIPStaticID;
		
		private System.Nullable<int> _IPDuration;
		
		private System.Nullable<int> _CustomerGroupID;
		
		private System.Nullable<int> _CustomerTypeID;
		
		private System.Nullable<int> _JobGroupID;
		
		private string _ReagentTelephoneNo;
		
		private System.Nullable<byte> _CustomerPriority;
		
		private System.Nullable<bool> _RequiredInstalation;
		
		private System.Nullable<bool> _NeedModem;
		
		private System.Nullable<int> _ModemID;
		
		private string _ModemMACAddress;
		
		private System.Nullable<int> _ModemSerialNoID;
		
		private System.Nullable<byte> _RegistrationProjectType;
		
		private System.Nullable<long> _ADSLPortID;
		
		private string _CommentCustomers;
		
		private System.Nullable<int> _ContractorID;
		
		private System.Nullable<byte> _CustomerSatisfaction;
		
		private System.Nullable<int> _AssignmentLineUserID;
		
		private System.Nullable<System.DateTime> _AssignmentLineDate;
		
		private string _AssignmentLineCommnet;
		
		private System.Nullable<int> _MDFUserID;
		
		private System.Nullable<System.DateTime> _MDFDate;
		
		private string _MDFCommnet;
		
		private System.Nullable<int> _OMCUserID;
		
		private System.Nullable<System.DateTime> _OMCDate;
		
		private string _OMCCommnet;
		
		private System.Nullable<int> _SetupUserID;
		
		private System.Nullable<System.DateTime> _SetupDate;
		
		private string _SetupCommnet;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<bool> _IsWireLess;
		
		private System.Nullable<bool> _IsIranInsert;
		
		private System.Nullable<bool> _IsIranEnd;
		
		private EntityRef<ADSLRequest> _ADSLRequest2;
		
		private EntityRef<ADSLCustomerGroup> _ADSLCustomerGroup;
		
		private EntityRef<ADSLCustomerType> _ADSLCustomerType;
		
		private EntityRef<ADSLGroupIP> _ADSLGroupIP;
		
		private EntityRef<ADSLIP> _ADSLIP;
		
		private EntityRef<ADSLModem> _ADSLModem;
		
		private EntityRef<ADSLPort> _ADSLPort;
		
		private EntityRef<ADSLRequest> _ADSLRequest1;
		
		private EntityRef<ADSLSellerAgent> _ADSLSellerAgent;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<Contractor> _Contractor;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User3;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnCustomerOwnerIDChanging(long value);
    partial void OnCustomerOwnerIDChanged();
    partial void OnCustomerOwnerElkaIDChanging(System.Nullable<long> value);
    partial void OnCustomerOwnerElkaIDChanged();
    partial void OnCustomerOwnerStatusChanging(System.Nullable<byte> value);
    partial void OnCustomerOwnerStatusChanged();
    partial void OnCustomerEndRentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomerEndRentDateChanged();
    partial void OnSaleWayChanging(System.Nullable<byte> value);
    partial void OnSaleWayChanged();
    partial void OnADSLSellerAgentIDChanging(System.Nullable<int> value);
    partial void OnADSLSellerAgentIDChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    partial void OnAdditionalServiceIDChanging(System.Nullable<int> value);
    partial void OnAdditionalServiceIDChanged();
    partial void OnLicenseLetterNoChanging(string value);
    partial void OnLicenseLetterNoChanged();
    partial void OnHasIPChanging(System.Nullable<bool> value);
    partial void OnHasIPChanged();
    partial void OnIPStaticIDChanging(System.Nullable<long> value);
    partial void OnIPStaticIDChanged();
    partial void OnGroupIPStaticIDChanging(System.Nullable<long> value);
    partial void OnGroupIPStaticIDChanged();
    partial void OnIPDurationChanging(System.Nullable<int> value);
    partial void OnIPDurationChanged();
    partial void OnCustomerGroupIDChanging(System.Nullable<int> value);
    partial void OnCustomerGroupIDChanged();
    partial void OnCustomerTypeIDChanging(System.Nullable<int> value);
    partial void OnCustomerTypeIDChanged();
    partial void OnJobGroupIDChanging(System.Nullable<int> value);
    partial void OnJobGroupIDChanged();
    partial void OnReagentTelephoneNoChanging(string value);
    partial void OnReagentTelephoneNoChanged();
    partial void OnCustomerPriorityChanging(System.Nullable<byte> value);
    partial void OnCustomerPriorityChanged();
    partial void OnRequiredInstalationChanging(System.Nullable<bool> value);
    partial void OnRequiredInstalationChanged();
    partial void OnNeedModemChanging(System.Nullable<bool> value);
    partial void OnNeedModemChanged();
    partial void OnModemIDChanging(System.Nullable<int> value);
    partial void OnModemIDChanged();
    partial void OnModemMACAddressChanging(string value);
    partial void OnModemMACAddressChanged();
    partial void OnModemSerialNoIDChanging(System.Nullable<int> value);
    partial void OnModemSerialNoIDChanged();
    partial void OnRegistrationProjectTypeChanging(System.Nullable<byte> value);
    partial void OnRegistrationProjectTypeChanged();
    partial void OnADSLPortIDChanging(System.Nullable<long> value);
    partial void OnADSLPortIDChanged();
    partial void OnCommentCustomersChanging(string value);
    partial void OnCommentCustomersChanged();
    partial void OnContractorIDChanging(System.Nullable<int> value);
    partial void OnContractorIDChanged();
    partial void OnCustomerSatisfactionChanging(System.Nullable<byte> value);
    partial void OnCustomerSatisfactionChanged();
    partial void OnAssignmentLineUserIDChanging(System.Nullable<int> value);
    partial void OnAssignmentLineUserIDChanged();
    partial void OnAssignmentLineDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssignmentLineDateChanged();
    partial void OnAssignmentLineCommnetChanging(string value);
    partial void OnAssignmentLineCommnetChanged();
    partial void OnMDFUserIDChanging(System.Nullable<int> value);
    partial void OnMDFUserIDChanged();
    partial void OnMDFDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFDateChanged();
    partial void OnMDFCommnetChanging(string value);
    partial void OnMDFCommnetChanged();
    partial void OnOMCUserIDChanging(System.Nullable<int> value);
    partial void OnOMCUserIDChanged();
    partial void OnOMCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOMCDateChanged();
    partial void OnOMCCommnetChanging(string value);
    partial void OnOMCCommnetChanged();
    partial void OnSetupUserIDChanging(System.Nullable<int> value);
    partial void OnSetupUserIDChanged();
    partial void OnSetupDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSetupDateChanged();
    partial void OnSetupCommnetChanging(string value);
    partial void OnSetupCommnetChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnIsWireLessChanging(System.Nullable<bool> value);
    partial void OnIsWireLessChanged();
    partial void OnIsIranInsertChanging(System.Nullable<bool> value);
    partial void OnIsIranInsertChanged();
    partial void OnIsIranEndChanging(System.Nullable<bool> value);
    partial void OnIsIranEndChanged();
    #endregion
		
		public ADSLRequest()
		{
			this._ADSLRequest2 = default(EntityRef<ADSLRequest>);
			this._ADSLCustomerGroup = default(EntityRef<ADSLCustomerGroup>);
			this._ADSLCustomerType = default(EntityRef<ADSLCustomerType>);
			this._ADSLGroupIP = default(EntityRef<ADSLGroupIP>);
			this._ADSLIP = default(EntityRef<ADSLIP>);
			this._ADSLModem = default(EntityRef<ADSLModem>);
			this._ADSLPort = default(EntityRef<ADSLPort>);
			this._ADSLRequest1 = default(EntityRef<ADSLRequest>);
			this._ADSLSellerAgent = default(EntityRef<ADSLSellerAgent>);
			this._ADSLService = default(EntityRef<ADSLService>);
			this._Contractor = default(EntityRef<Contractor>);
			this._Request = default(EntityRef<Request>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if ((this._ADSLRequest1.HasLoadedOrAssignedValue || this._Request.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerID", DbType="BigInt NOT NULL")]
		public long CustomerOwnerID
		{
			get
			{
				return this._CustomerOwnerID;
			}
			set
			{
				if ((this._CustomerOwnerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerID = value;
					this.SendPropertyChanged("CustomerOwnerID");
					this.OnCustomerOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerElkaID", DbType="BigInt")]
		public System.Nullable<long> CustomerOwnerElkaID
		{
			get
			{
				return this._CustomerOwnerElkaID;
			}
			set
			{
				if ((this._CustomerOwnerElkaID != value))
				{
					this.OnCustomerOwnerElkaIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerElkaID = value;
					this.SendPropertyChanged("CustomerOwnerElkaID");
					this.OnCustomerOwnerElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerStatus", DbType="TinyInt")]
		public System.Nullable<byte> CustomerOwnerStatus
		{
			get
			{
				return this._CustomerOwnerStatus;
			}
			set
			{
				if ((this._CustomerOwnerStatus != value))
				{
					this.OnCustomerOwnerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerStatus = value;
					this.SendPropertyChanged("CustomerOwnerStatus");
					this.OnCustomerOwnerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEndRentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CustomerEndRentDate
		{
			get
			{
				return this._CustomerEndRentDate;
			}
			set
			{
				if ((this._CustomerEndRentDate != value))
				{
					this.OnCustomerEndRentDateChanging(value);
					this.SendPropertyChanging();
					this._CustomerEndRentDate = value;
					this.SendPropertyChanged("CustomerEndRentDate");
					this.OnCustomerEndRentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleWay", DbType="TinyInt")]
		public System.Nullable<byte> SaleWay
		{
			get
			{
				return this._SaleWay;
			}
			set
			{
				if ((this._SaleWay != value))
				{
					this.OnSaleWayChanging(value);
					this.SendPropertyChanging();
					this._SaleWay = value;
					this.SendPropertyChanged("SaleWay");
					this.OnSaleWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLSellerAgentID", DbType="Int")]
		public System.Nullable<int> ADSLSellerAgentID
		{
			get
			{
				return this._ADSLSellerAgentID;
			}
			set
			{
				if ((this._ADSLSellerAgentID != value))
				{
					if (this._ADSLSellerAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLSellerAgentIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLSellerAgentID = value;
					this.SendPropertyChanged("ADSLSellerAgentID");
					this.OnADSLSellerAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalServiceID", DbType="Int")]
		public System.Nullable<int> AdditionalServiceID
		{
			get
			{
				return this._AdditionalServiceID;
			}
			set
			{
				if ((this._AdditionalServiceID != value))
				{
					this.OnAdditionalServiceIDChanging(value);
					this.SendPropertyChanging();
					this._AdditionalServiceID = value;
					this.SendPropertyChanged("AdditionalServiceID");
					this.OnAdditionalServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseLetterNo", DbType="NVarChar(50)")]
		public string LicenseLetterNo
		{
			get
			{
				return this._LicenseLetterNo;
			}
			set
			{
				if ((this._LicenseLetterNo != value))
				{
					this.OnLicenseLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseLetterNo = value;
					this.SendPropertyChanged("LicenseLetterNo");
					this.OnLicenseLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIP", DbType="Bit")]
		public System.Nullable<bool> HasIP
		{
			get
			{
				return this._HasIP;
			}
			set
			{
				if ((this._HasIP != value))
				{
					this.OnHasIPChanging(value);
					this.SendPropertyChanging();
					this._HasIP = value;
					this.SendPropertyChanged("HasIP");
					this.OnHasIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPStaticID", DbType="BigInt")]
		public System.Nullable<long> IPStaticID
		{
			get
			{
				return this._IPStaticID;
			}
			set
			{
				if ((this._IPStaticID != value))
				{
					if (this._ADSLIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._IPStaticID = value;
					this.SendPropertyChanged("IPStaticID");
					this.OnIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupIPStaticID", DbType="BigInt")]
		public System.Nullable<long> GroupIPStaticID
		{
			get
			{
				return this._GroupIPStaticID;
			}
			set
			{
				if ((this._GroupIPStaticID != value))
				{
					if (this._ADSLGroupIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._GroupIPStaticID = value;
					this.SendPropertyChanged("GroupIPStaticID");
					this.OnGroupIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPDuration", DbType="Int")]
		public System.Nullable<int> IPDuration
		{
			get
			{
				return this._IPDuration;
			}
			set
			{
				if ((this._IPDuration != value))
				{
					this.OnIPDurationChanging(value);
					this.SendPropertyChanging();
					this._IPDuration = value;
					this.SendPropertyChanged("IPDuration");
					this.OnIPDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGroupID", DbType="Int")]
		public System.Nullable<int> CustomerGroupID
		{
			get
			{
				return this._CustomerGroupID;
			}
			set
			{
				if ((this._CustomerGroupID != value))
				{
					if (this._ADSLCustomerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerGroupID = value;
					this.SendPropertyChanged("CustomerGroupID");
					this.OnCustomerGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int")]
		public System.Nullable<int> CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._ADSLCustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobGroupID", DbType="Int")]
		public System.Nullable<int> JobGroupID
		{
			get
			{
				return this._JobGroupID;
			}
			set
			{
				if ((this._JobGroupID != value))
				{
					this.OnJobGroupIDChanging(value);
					this.SendPropertyChanging();
					this._JobGroupID = value;
					this.SendPropertyChanged("JobGroupID");
					this.OnJobGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReagentTelephoneNo", DbType="NVarChar(50)")]
		public string ReagentTelephoneNo
		{
			get
			{
				return this._ReagentTelephoneNo;
			}
			set
			{
				if ((this._ReagentTelephoneNo != value))
				{
					this.OnReagentTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ReagentTelephoneNo = value;
					this.SendPropertyChanged("ReagentTelephoneNo");
					this.OnReagentTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPriority", DbType="TinyInt")]
		public System.Nullable<byte> CustomerPriority
		{
			get
			{
				return this._CustomerPriority;
			}
			set
			{
				if ((this._CustomerPriority != value))
				{
					this.OnCustomerPriorityChanging(value);
					this.SendPropertyChanging();
					this._CustomerPriority = value;
					this.SendPropertyChanged("CustomerPriority");
					this.OnCustomerPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredInstalation", DbType="Bit")]
		public System.Nullable<bool> RequiredInstalation
		{
			get
			{
				return this._RequiredInstalation;
			}
			set
			{
				if ((this._RequiredInstalation != value))
				{
					this.OnRequiredInstalationChanging(value);
					this.SendPropertyChanging();
					this._RequiredInstalation = value;
					this.SendPropertyChanged("RequiredInstalation");
					this.OnRequiredInstalationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedModem", DbType="Bit")]
		public System.Nullable<bool> NeedModem
		{
			get
			{
				return this._NeedModem;
			}
			set
			{
				if ((this._NeedModem != value))
				{
					this.OnNeedModemChanging(value);
					this.SendPropertyChanging();
					this._NeedModem = value;
					this.SendPropertyChanged("NeedModem");
					this.OnNeedModemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemID", DbType="Int")]
		public System.Nullable<int> ModemID
		{
			get
			{
				return this._ModemID;
			}
			set
			{
				if ((this._ModemID != value))
				{
					if (this._ADSLModem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModemIDChanging(value);
					this.SendPropertyChanging();
					this._ModemID = value;
					this.SendPropertyChanged("ModemID");
					this.OnModemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemMACAddress", DbType="NVarChar(50)")]
		public string ModemMACAddress
		{
			get
			{
				return this._ModemMACAddress;
			}
			set
			{
				if ((this._ModemMACAddress != value))
				{
					this.OnModemMACAddressChanging(value);
					this.SendPropertyChanging();
					this._ModemMACAddress = value;
					this.SendPropertyChanged("ModemMACAddress");
					this.OnModemMACAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemSerialNoID", DbType="Int")]
		public System.Nullable<int> ModemSerialNoID
		{
			get
			{
				return this._ModemSerialNoID;
			}
			set
			{
				if ((this._ModemSerialNoID != value))
				{
					this.OnModemSerialNoIDChanging(value);
					this.SendPropertyChanging();
					this._ModemSerialNoID = value;
					this.SendPropertyChanged("ModemSerialNoID");
					this.OnModemSerialNoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationProjectType", DbType="TinyInt")]
		public System.Nullable<byte> RegistrationProjectType
		{
			get
			{
				return this._RegistrationProjectType;
			}
			set
			{
				if ((this._RegistrationProjectType != value))
				{
					this.OnRegistrationProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationProjectType = value;
					this.SendPropertyChanged("RegistrationProjectType");
					this.OnRegistrationProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLPortID", DbType="BigInt")]
		public System.Nullable<long> ADSLPortID
		{
			get
			{
				return this._ADSLPortID;
			}
			set
			{
				if ((this._ADSLPortID != value))
				{
					if (this._ADSLPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLPortIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLPortID = value;
					this.SendPropertyChanged("ADSLPortID");
					this.OnADSLPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentCustomers", DbType="NVarChar(MAX)")]
		public string CommentCustomers
		{
			get
			{
				return this._CommentCustomers;
			}
			set
			{
				if ((this._CommentCustomers != value))
				{
					this.OnCommentCustomersChanging(value);
					this.SendPropertyChanging();
					this._CommentCustomers = value;
					this.SendPropertyChanged("CommentCustomers");
					this.OnCommentCustomersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorID", DbType="Int")]
		public System.Nullable<int> ContractorID
		{
			get
			{
				return this._ContractorID;
			}
			set
			{
				if ((this._ContractorID != value))
				{
					if (this._Contractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIDChanging(value);
					this.SendPropertyChanging();
					this._ContractorID = value;
					this.SendPropertyChanged("ContractorID");
					this.OnContractorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerSatisfaction", DbType="TinyInt")]
		public System.Nullable<byte> CustomerSatisfaction
		{
			get
			{
				return this._CustomerSatisfaction;
			}
			set
			{
				if ((this._CustomerSatisfaction != value))
				{
					this.OnCustomerSatisfactionChanging(value);
					this.SendPropertyChanging();
					this._CustomerSatisfaction = value;
					this.SendPropertyChanged("CustomerSatisfaction");
					this.OnCustomerSatisfactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLineUserID", DbType="Int")]
		public System.Nullable<int> AssignmentLineUserID
		{
			get
			{
				return this._AssignmentLineUserID;
			}
			set
			{
				if ((this._AssignmentLineUserID != value))
				{
					if (this._User3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignmentLineUserIDChanging(value);
					this.SendPropertyChanging();
					this._AssignmentLineUserID = value;
					this.SendPropertyChanged("AssignmentLineUserID");
					this.OnAssignmentLineUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLineDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AssignmentLineDate
		{
			get
			{
				return this._AssignmentLineDate;
			}
			set
			{
				if ((this._AssignmentLineDate != value))
				{
					this.OnAssignmentLineDateChanging(value);
					this.SendPropertyChanging();
					this._AssignmentLineDate = value;
					this.SendPropertyChanged("AssignmentLineDate");
					this.OnAssignmentLineDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLineCommnet", DbType="NVarChar(MAX)")]
		public string AssignmentLineCommnet
		{
			get
			{
				return this._AssignmentLineCommnet;
			}
			set
			{
				if ((this._AssignmentLineCommnet != value))
				{
					this.OnAssignmentLineCommnetChanging(value);
					this.SendPropertyChanging();
					this._AssignmentLineCommnet = value;
					this.SendPropertyChanged("AssignmentLineCommnet");
					this.OnAssignmentLineCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFUserID", DbType="Int")]
		public System.Nullable<int> MDFUserID
		{
			get
			{
				return this._MDFUserID;
			}
			set
			{
				if ((this._MDFUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDFUserIDChanging(value);
					this.SendPropertyChanging();
					this._MDFUserID = value;
					this.SendPropertyChanged("MDFUserID");
					this.OnMDFUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFDate
		{
			get
			{
				return this._MDFDate;
			}
			set
			{
				if ((this._MDFDate != value))
				{
					this.OnMDFDateChanging(value);
					this.SendPropertyChanging();
					this._MDFDate = value;
					this.SendPropertyChanged("MDFDate");
					this.OnMDFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFCommnet", DbType="NVarChar(MAX)")]
		public string MDFCommnet
		{
			get
			{
				return this._MDFCommnet;
			}
			set
			{
				if ((this._MDFCommnet != value))
				{
					this.OnMDFCommnetChanging(value);
					this.SendPropertyChanging();
					this._MDFCommnet = value;
					this.SendPropertyChanged("MDFCommnet");
					this.OnMDFCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCUserID", DbType="Int")]
		public System.Nullable<int> OMCUserID
		{
			get
			{
				return this._OMCUserID;
			}
			set
			{
				if ((this._OMCUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOMCUserIDChanging(value);
					this.SendPropertyChanging();
					this._OMCUserID = value;
					this.SendPropertyChanged("OMCUserID");
					this.OnOMCUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OMCDate
		{
			get
			{
				return this._OMCDate;
			}
			set
			{
				if ((this._OMCDate != value))
				{
					this.OnOMCDateChanging(value);
					this.SendPropertyChanging();
					this._OMCDate = value;
					this.SendPropertyChanged("OMCDate");
					this.OnOMCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCCommnet", DbType="NVarChar(MAX)")]
		public string OMCCommnet
		{
			get
			{
				return this._OMCCommnet;
			}
			set
			{
				if ((this._OMCCommnet != value))
				{
					this.OnOMCCommnetChanging(value);
					this.SendPropertyChanging();
					this._OMCCommnet = value;
					this.SendPropertyChanged("OMCCommnet");
					this.OnOMCCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupUserID", DbType="Int")]
		public System.Nullable<int> SetupUserID
		{
			get
			{
				return this._SetupUserID;
			}
			set
			{
				if ((this._SetupUserID != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetupUserIDChanging(value);
					this.SendPropertyChanging();
					this._SetupUserID = value;
					this.SendPropertyChanged("SetupUserID");
					this.OnSetupUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SetupDate
		{
			get
			{
				return this._SetupDate;
			}
			set
			{
				if ((this._SetupDate != value))
				{
					this.OnSetupDateChanging(value);
					this.SendPropertyChanging();
					this._SetupDate = value;
					this.SendPropertyChanged("SetupDate");
					this.OnSetupDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupCommnet", DbType="NVarChar(MAX)")]
		public string SetupCommnet
		{
			get
			{
				return this._SetupCommnet;
			}
			set
			{
				if ((this._SetupCommnet != value))
				{
					this.OnSetupCommnetChanging(value);
					this.SendPropertyChanging();
					this._SetupCommnet = value;
					this.SendPropertyChanged("SetupCommnet");
					this.OnSetupCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWireLess", DbType="Bit")]
		public System.Nullable<bool> IsWireLess
		{
			get
			{
				return this._IsWireLess;
			}
			set
			{
				if ((this._IsWireLess != value))
				{
					this.OnIsWireLessChanging(value);
					this.SendPropertyChanging();
					this._IsWireLess = value;
					this.SendPropertyChanged("IsWireLess");
					this.OnIsWireLessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIranInsert", DbType="Bit")]
		public System.Nullable<bool> IsIranInsert
		{
			get
			{
				return this._IsIranInsert;
			}
			set
			{
				if ((this._IsIranInsert != value))
				{
					this.OnIsIranInsertChanging(value);
					this.SendPropertyChanging();
					this._IsIranInsert = value;
					this.SendPropertyChanged("IsIranInsert");
					this.OnIsIranInsertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIranEnd", DbType="Bit")]
		public System.Nullable<bool> IsIranEnd
		{
			get
			{
				return this._IsIranEnd;
			}
			set
			{
				if ((this._IsIranEnd != value))
				{
					this.OnIsIranEndChanging(value);
					this.SendPropertyChanging();
					this._IsIranEnd = value;
					this.SendPropertyChanged("IsIranEnd");
					this.OnIsIranEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLRequest_ADSLRequest", Storage="_ADSLRequest2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLRequest ADSLRequest2
		{
			get
			{
				return this._ADSLRequest2.Entity;
			}
			set
			{
				ADSLRequest previousValue = this._ADSLRequest2.Entity;
				if (((previousValue != value) 
							|| (this._ADSLRequest2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLRequest2.Entity = null;
						previousValue.ADSLRequest1 = null;
					}
					this._ADSLRequest2.Entity = value;
					if ((value != null))
					{
						value.ADSLRequest1 = this;
					}
					this.SendPropertyChanged("ADSLRequest2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSLRequest", Storage="_ADSLCustomerGroup", ThisKey="CustomerGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerGroup ADSLCustomerGroup
		{
			get
			{
				return this._ADSLCustomerGroup.Entity;
			}
			set
			{
				ADSLCustomerGroup previousValue = this._ADSLCustomerGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerGroup.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._ADSLCustomerGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._CustomerGroupID = value.ID;
					}
					else
					{
						this._CustomerGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerType_ADSLRequest", Storage="_ADSLCustomerType", ThisKey="CustomerTypeID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerType ADSLCustomerType
		{
			get
			{
				return this._ADSLCustomerType.Entity;
			}
			set
			{
				ADSLCustomerType previousValue = this._ADSLCustomerType.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerType.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._ADSLCustomerType.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._CustomerTypeID = value.ID;
					}
					else
					{
						this._CustomerTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_ADSLRequest", Storage="_ADSLGroupIP", ThisKey="GroupIPStaticID", OtherKey="ID", IsForeignKey=true)]
		public ADSLGroupIP ADSLGroupIP
		{
			get
			{
				return this._ADSLGroupIP.Entity;
			}
			set
			{
				ADSLGroupIP previousValue = this._ADSLGroupIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLGroupIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLGroupIP.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._ADSLGroupIP.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._GroupIPStaticID = value.ID;
					}
					else
					{
						this._GroupIPStaticID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLGroupIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_ADSLRequest", Storage="_ADSLIP", ThisKey="IPStaticID", OtherKey="ID", IsForeignKey=true)]
		public ADSLIP ADSLIP
		{
			get
			{
				return this._ADSLIP.Entity;
			}
			set
			{
				ADSLIP previousValue = this._ADSLIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLIP.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._ADSLIP.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._IPStaticID = value.ID;
					}
					else
					{
						this._IPStaticID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_ADSLRequest", Storage="_ADSLModem", ThisKey="ModemID", OtherKey="ID", IsForeignKey=true)]
		public ADSLModem ADSLModem
		{
			get
			{
				return this._ADSLModem.Entity;
			}
			set
			{
				ADSLModem previousValue = this._ADSLModem.Entity;
				if (((previousValue != value) 
							|| (this._ADSLModem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLModem.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._ADSLModem.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._ModemID = value.ID;
					}
					else
					{
						this._ModemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLModem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_ADSLRequest", Storage="_ADSLPort", ThisKey="ADSLPortID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPort ADSLPort
		{
			get
			{
				return this._ADSLPort.Entity;
			}
			set
			{
				ADSLPort previousValue = this._ADSLPort.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPort.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._ADSLPort.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._ADSLPortID = value.ID;
					}
					else
					{
						this._ADSLPortID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLRequest_ADSLRequest", Storage="_ADSLRequest1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public ADSLRequest ADSLRequest1
		{
			get
			{
				return this._ADSLRequest1.Entity;
			}
			set
			{
				ADSLRequest previousValue = this._ADSLRequest1.Entity;
				if (((previousValue != value) 
							|| (this._ADSLRequest1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLRequest1.Entity = null;
						previousValue.ADSLRequest2 = null;
					}
					this._ADSLRequest1.Entity = value;
					if ((value != null))
					{
						value.ADSLRequest2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("ADSLRequest1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLRequest", Storage="_ADSLSellerAgent", ThisKey="ADSLSellerAgentID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerAgent ADSLSellerAgent
		{
			get
			{
				return this._ADSLSellerAgent.Entity;
			}
			set
			{
				ADSLSellerAgent previousValue = this._ADSLSellerAgent.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgent.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._ADSLSellerAgent.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._ADSLSellerAgentID = value.ID;
					}
					else
					{
						this._ADSLSellerAgentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLSellerAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLRequest", Storage="_ADSLService", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_ADSLRequest", Storage="_Contractor", ThisKey="ContractorID", OtherKey="ID", IsForeignKey=true)]
		public Contractor Contractor
		{
			get
			{
				return this._Contractor.Entity;
			}
			set
			{
				Contractor previousValue = this._Contractor.Entity;
				if (((previousValue != value) 
							|| (this._Contractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contractor.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._Contractor.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._ContractorID = value.ID;
					}
					else
					{
						this._ContractorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contractor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLRequest", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLRequest = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLRequest = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLRequest", Storage="_User", ThisKey="MDFUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._MDFUserID = value.ID;
					}
					else
					{
						this._MDFUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLRequest1", Storage="_User1", ThisKey="OMCUserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ADSLRequests1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests1.Add(this);
						this._OMCUserID = value.ID;
					}
					else
					{
						this._OMCUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLRequest2", Storage="_User2", ThisKey="SetupUserID", OtherKey="ID", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.ADSLRequests2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests2.Add(this);
						this._SetupUserID = value.ID;
					}
					else
					{
						this._SetupUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLRequest3", Storage="_User3", ThisKey="AssignmentLineUserID", OtherKey="ID", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.ADSLRequests3.Remove(this);
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests3.Add(this);
						this._AssignmentLineUserID = value.ID;
					}
					else
					{
						this._AssignmentLineUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSLRequest", Storage="_Customer", ThisKey="CustomerOwnerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ADSLRequests.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ADSLRequests.Add(this);
						this._CustomerOwnerID = value.ID;
					}
					else
					{
						this._CustomerOwnerID = default(long);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSellerAgent")]
	public partial class ADSLSellerAgent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _GroupID;
		
		private System.Nullable<int> _CityID;
		
		private string _Title;
		
		private string _LeaderName;
		
		private string _TelephoneNo;
		
		private string _MobileNo;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Address;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<long> _CreditCash;
		
		private System.Nullable<long> _CreditCashUse;
		
		private System.Nullable<long> _CreditCashRemain;
		
		private System.Nullable<long> _CreditInstalment;
		
		private System.Nullable<long> _CreditInstalmentUse;
		
		private System.Nullable<long> _CreditInstalmentRemain;
		
		private System.Nullable<bool> _IsSellModem;
		
		private System.Nullable<int> _Percent1Month;
		
		private System.Nullable<int> _Amount1Month;
		
		private System.Nullable<int> _Percent2Month;
		
		private System.Nullable<int> _Amount2Month;
		
		private System.Nullable<int> _Percent3Month;
		
		private System.Nullable<int> _Amount3Month;
		
		private System.Nullable<int> _Percent4Month;
		
		private System.Nullable<int> _Amount4Month;
		
		private System.Nullable<int> _Percent5Month;
		
		private System.Nullable<int> _Amount5Month;
		
		private System.Nullable<int> _Percent6Month;
		
		private System.Nullable<int> _Amount6Month;
		
		private System.Nullable<int> _Percent7Month;
		
		private System.Nullable<int> _Amount7Month;
		
		private System.Nullable<int> _Percent8Month;
		
		private System.Nullable<int> _Amount8Month;
		
		private System.Nullable<int> _Percent9Month;
		
		private System.Nullable<int> _Amount9Month;
		
		private System.Nullable<int> _Percent10Month;
		
		private System.Nullable<int> _Amount10Month;
		
		private System.Nullable<int> _Percent11Month;
		
		private System.Nullable<int> _Amount11Month;
		
		private System.Nullable<int> _Percent12Month;
		
		private System.Nullable<int> _Amount12Month;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<ADSLSellerAgentRecharge> _ADSLSellerAgentRecharges;
		
		private EntitySet<ADSLSellerAgentUser> _ADSLSellerAgentUsers;
		
		private EntitySet<ADSLServiceGroupSeller> _ADSLServiceGroupSellers;
		
		private EntitySet<ADSLServiceSeller> _ADSLServiceSellers;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntityRef<ADSLSellerGroup> _ADSLSellerGroup;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLeaderNameChanging(string value);
    partial void OnLeaderNameChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreditCashChanging(System.Nullable<long> value);
    partial void OnCreditCashChanged();
    partial void OnCreditCashUseChanging(System.Nullable<long> value);
    partial void OnCreditCashUseChanged();
    partial void OnCreditCashRemainChanging(System.Nullable<long> value);
    partial void OnCreditCashRemainChanged();
    partial void OnCreditInstalmentChanging(System.Nullable<long> value);
    partial void OnCreditInstalmentChanged();
    partial void OnCreditInstalmentUseChanging(System.Nullable<long> value);
    partial void OnCreditInstalmentUseChanged();
    partial void OnCreditInstalmentRemainChanging(System.Nullable<long> value);
    partial void OnCreditInstalmentRemainChanged();
    partial void OnIsSellModemChanging(System.Nullable<bool> value);
    partial void OnIsSellModemChanged();
    partial void OnPercent1MonthChanging(System.Nullable<int> value);
    partial void OnPercent1MonthChanged();
    partial void OnAmount1MonthChanging(System.Nullable<int> value);
    partial void OnAmount1MonthChanged();
    partial void OnPercent2MonthChanging(System.Nullable<int> value);
    partial void OnPercent2MonthChanged();
    partial void OnAmount2MonthChanging(System.Nullable<int> value);
    partial void OnAmount2MonthChanged();
    partial void OnPercent3MonthChanging(System.Nullable<int> value);
    partial void OnPercent3MonthChanged();
    partial void OnAmount3MonthChanging(System.Nullable<int> value);
    partial void OnAmount3MonthChanged();
    partial void OnPercent4MonthChanging(System.Nullable<int> value);
    partial void OnPercent4MonthChanged();
    partial void OnAmount4MonthChanging(System.Nullable<int> value);
    partial void OnAmount4MonthChanged();
    partial void OnPercent5MonthChanging(System.Nullable<int> value);
    partial void OnPercent5MonthChanged();
    partial void OnAmount5MonthChanging(System.Nullable<int> value);
    partial void OnAmount5MonthChanged();
    partial void OnPercent6MonthChanging(System.Nullable<int> value);
    partial void OnPercent6MonthChanged();
    partial void OnAmount6MonthChanging(System.Nullable<int> value);
    partial void OnAmount6MonthChanged();
    partial void OnPercent7MonthChanging(System.Nullable<int> value);
    partial void OnPercent7MonthChanged();
    partial void OnAmount7MonthChanging(System.Nullable<int> value);
    partial void OnAmount7MonthChanged();
    partial void OnPercent8MonthChanging(System.Nullable<int> value);
    partial void OnPercent8MonthChanged();
    partial void OnAmount8MonthChanging(System.Nullable<int> value);
    partial void OnAmount8MonthChanged();
    partial void OnPercent9MonthChanging(System.Nullable<int> value);
    partial void OnPercent9MonthChanged();
    partial void OnAmount9MonthChanging(System.Nullable<int> value);
    partial void OnAmount9MonthChanged();
    partial void OnPercent10MonthChanging(System.Nullable<int> value);
    partial void OnPercent10MonthChanged();
    partial void OnAmount10MonthChanging(System.Nullable<int> value);
    partial void OnAmount10MonthChanged();
    partial void OnPercent11MonthChanging(System.Nullable<int> value);
    partial void OnPercent11MonthChanged();
    partial void OnAmount11MonthChanging(System.Nullable<int> value);
    partial void OnAmount11MonthChanged();
    partial void OnPercent12MonthChanging(System.Nullable<int> value);
    partial void OnPercent12MonthChanged();
    partial void OnAmount12MonthChanging(System.Nullable<int> value);
    partial void OnAmount12MonthChanged();
    #endregion
		
		public ADSLSellerAgent()
		{
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._ADSLSellerAgentRecharges = new EntitySet<ADSLSellerAgentRecharge>(new Action<ADSLSellerAgentRecharge>(this.attach_ADSLSellerAgentRecharges), new Action<ADSLSellerAgentRecharge>(this.detach_ADSLSellerAgentRecharges));
			this._ADSLSellerAgentUsers = new EntitySet<ADSLSellerAgentUser>(new Action<ADSLSellerAgentUser>(this.attach_ADSLSellerAgentUsers), new Action<ADSLSellerAgentUser>(this.detach_ADSLSellerAgentUsers));
			this._ADSLServiceGroupSellers = new EntitySet<ADSLServiceGroupSeller>(new Action<ADSLServiceGroupSeller>(this.attach_ADSLServiceGroupSellers), new Action<ADSLServiceGroupSeller>(this.detach_ADSLServiceGroupSellers));
			this._ADSLServiceSellers = new EntitySet<ADSLServiceSeller>(new Action<ADSLServiceSeller>(this.attach_ADSLServiceSellers), new Action<ADSLServiceSeller>(this.detach_ADSLServiceSellers));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._ADSLSellerGroup = default(EntityRef<ADSLSellerGroup>);
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._ADSLSellerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderName", DbType="NVarChar(50)")]
		public string LeaderName
		{
			get
			{
				return this._LeaderName;
			}
			set
			{
				if ((this._LeaderName != value))
				{
					this.OnLeaderNameChanging(value);
					this.SendPropertyChanging();
					this._LeaderName = value;
					this.SendPropertyChanged("LeaderName");
					this.OnLeaderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="NVarChar(50)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(50)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCash", DbType="BigInt")]
		public System.Nullable<long> CreditCash
		{
			get
			{
				return this._CreditCash;
			}
			set
			{
				if ((this._CreditCash != value))
				{
					this.OnCreditCashChanging(value);
					this.SendPropertyChanging();
					this._CreditCash = value;
					this.SendPropertyChanged("CreditCash");
					this.OnCreditCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCashUse", DbType="BigInt")]
		public System.Nullable<long> CreditCashUse
		{
			get
			{
				return this._CreditCashUse;
			}
			set
			{
				if ((this._CreditCashUse != value))
				{
					this.OnCreditCashUseChanging(value);
					this.SendPropertyChanging();
					this._CreditCashUse = value;
					this.SendPropertyChanged("CreditCashUse");
					this.OnCreditCashUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCashRemain", DbType="BigInt")]
		public System.Nullable<long> CreditCashRemain
		{
			get
			{
				return this._CreditCashRemain;
			}
			set
			{
				if ((this._CreditCashRemain != value))
				{
					this.OnCreditCashRemainChanging(value);
					this.SendPropertyChanging();
					this._CreditCashRemain = value;
					this.SendPropertyChanged("CreditCashRemain");
					this.OnCreditCashRemainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditInstalment", DbType="BigInt")]
		public System.Nullable<long> CreditInstalment
		{
			get
			{
				return this._CreditInstalment;
			}
			set
			{
				if ((this._CreditInstalment != value))
				{
					this.OnCreditInstalmentChanging(value);
					this.SendPropertyChanging();
					this._CreditInstalment = value;
					this.SendPropertyChanged("CreditInstalment");
					this.OnCreditInstalmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditInstalmentUse", DbType="BigInt")]
		public System.Nullable<long> CreditInstalmentUse
		{
			get
			{
				return this._CreditInstalmentUse;
			}
			set
			{
				if ((this._CreditInstalmentUse != value))
				{
					this.OnCreditInstalmentUseChanging(value);
					this.SendPropertyChanging();
					this._CreditInstalmentUse = value;
					this.SendPropertyChanged("CreditInstalmentUse");
					this.OnCreditInstalmentUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditInstalmentRemain", DbType="BigInt")]
		public System.Nullable<long> CreditInstalmentRemain
		{
			get
			{
				return this._CreditInstalmentRemain;
			}
			set
			{
				if ((this._CreditInstalmentRemain != value))
				{
					this.OnCreditInstalmentRemainChanging(value);
					this.SendPropertyChanging();
					this._CreditInstalmentRemain = value;
					this.SendPropertyChanged("CreditInstalmentRemain");
					this.OnCreditInstalmentRemainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSellModem", DbType="Bit")]
		public System.Nullable<bool> IsSellModem
		{
			get
			{
				return this._IsSellModem;
			}
			set
			{
				if ((this._IsSellModem != value))
				{
					this.OnIsSellModemChanging(value);
					this.SendPropertyChanging();
					this._IsSellModem = value;
					this.SendPropertyChanged("IsSellModem");
					this.OnIsSellModemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent1Month", DbType="Int")]
		public System.Nullable<int> Percent1Month
		{
			get
			{
				return this._Percent1Month;
			}
			set
			{
				if ((this._Percent1Month != value))
				{
					this.OnPercent1MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent1Month = value;
					this.SendPropertyChanged("Percent1Month");
					this.OnPercent1MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount1Month", DbType="Int")]
		public System.Nullable<int> Amount1Month
		{
			get
			{
				return this._Amount1Month;
			}
			set
			{
				if ((this._Amount1Month != value))
				{
					this.OnAmount1MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount1Month = value;
					this.SendPropertyChanged("Amount1Month");
					this.OnAmount1MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent2Month", DbType="Int")]
		public System.Nullable<int> Percent2Month
		{
			get
			{
				return this._Percent2Month;
			}
			set
			{
				if ((this._Percent2Month != value))
				{
					this.OnPercent2MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent2Month = value;
					this.SendPropertyChanged("Percent2Month");
					this.OnPercent2MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount2Month", DbType="Int")]
		public System.Nullable<int> Amount2Month
		{
			get
			{
				return this._Amount2Month;
			}
			set
			{
				if ((this._Amount2Month != value))
				{
					this.OnAmount2MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount2Month = value;
					this.SendPropertyChanged("Amount2Month");
					this.OnAmount2MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent3Month", DbType="Int")]
		public System.Nullable<int> Percent3Month
		{
			get
			{
				return this._Percent3Month;
			}
			set
			{
				if ((this._Percent3Month != value))
				{
					this.OnPercent3MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent3Month = value;
					this.SendPropertyChanged("Percent3Month");
					this.OnPercent3MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount3Month", DbType="Int")]
		public System.Nullable<int> Amount3Month
		{
			get
			{
				return this._Amount3Month;
			}
			set
			{
				if ((this._Amount3Month != value))
				{
					this.OnAmount3MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount3Month = value;
					this.SendPropertyChanged("Amount3Month");
					this.OnAmount3MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent4Month", DbType="Int")]
		public System.Nullable<int> Percent4Month
		{
			get
			{
				return this._Percent4Month;
			}
			set
			{
				if ((this._Percent4Month != value))
				{
					this.OnPercent4MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent4Month = value;
					this.SendPropertyChanged("Percent4Month");
					this.OnPercent4MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount4Month", DbType="Int")]
		public System.Nullable<int> Amount4Month
		{
			get
			{
				return this._Amount4Month;
			}
			set
			{
				if ((this._Amount4Month != value))
				{
					this.OnAmount4MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount4Month = value;
					this.SendPropertyChanged("Amount4Month");
					this.OnAmount4MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent5Month", DbType="Int")]
		public System.Nullable<int> Percent5Month
		{
			get
			{
				return this._Percent5Month;
			}
			set
			{
				if ((this._Percent5Month != value))
				{
					this.OnPercent5MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent5Month = value;
					this.SendPropertyChanged("Percent5Month");
					this.OnPercent5MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount5Month", DbType="Int")]
		public System.Nullable<int> Amount5Month
		{
			get
			{
				return this._Amount5Month;
			}
			set
			{
				if ((this._Amount5Month != value))
				{
					this.OnAmount5MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount5Month = value;
					this.SendPropertyChanged("Amount5Month");
					this.OnAmount5MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent6Month", DbType="Int")]
		public System.Nullable<int> Percent6Month
		{
			get
			{
				return this._Percent6Month;
			}
			set
			{
				if ((this._Percent6Month != value))
				{
					this.OnPercent6MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent6Month = value;
					this.SendPropertyChanged("Percent6Month");
					this.OnPercent6MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount6Month", DbType="Int")]
		public System.Nullable<int> Amount6Month
		{
			get
			{
				return this._Amount6Month;
			}
			set
			{
				if ((this._Amount6Month != value))
				{
					this.OnAmount6MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount6Month = value;
					this.SendPropertyChanged("Amount6Month");
					this.OnAmount6MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent7Month", DbType="Int")]
		public System.Nullable<int> Percent7Month
		{
			get
			{
				return this._Percent7Month;
			}
			set
			{
				if ((this._Percent7Month != value))
				{
					this.OnPercent7MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent7Month = value;
					this.SendPropertyChanged("Percent7Month");
					this.OnPercent7MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount7Month", DbType="Int")]
		public System.Nullable<int> Amount7Month
		{
			get
			{
				return this._Amount7Month;
			}
			set
			{
				if ((this._Amount7Month != value))
				{
					this.OnAmount7MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount7Month = value;
					this.SendPropertyChanged("Amount7Month");
					this.OnAmount7MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent8Month", DbType="Int")]
		public System.Nullable<int> Percent8Month
		{
			get
			{
				return this._Percent8Month;
			}
			set
			{
				if ((this._Percent8Month != value))
				{
					this.OnPercent8MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent8Month = value;
					this.SendPropertyChanged("Percent8Month");
					this.OnPercent8MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount8Month", DbType="Int")]
		public System.Nullable<int> Amount8Month
		{
			get
			{
				return this._Amount8Month;
			}
			set
			{
				if ((this._Amount8Month != value))
				{
					this.OnAmount8MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount8Month = value;
					this.SendPropertyChanged("Amount8Month");
					this.OnAmount8MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent9Month", DbType="Int")]
		public System.Nullable<int> Percent9Month
		{
			get
			{
				return this._Percent9Month;
			}
			set
			{
				if ((this._Percent9Month != value))
				{
					this.OnPercent9MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent9Month = value;
					this.SendPropertyChanged("Percent9Month");
					this.OnPercent9MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount9Month", DbType="Int")]
		public System.Nullable<int> Amount9Month
		{
			get
			{
				return this._Amount9Month;
			}
			set
			{
				if ((this._Amount9Month != value))
				{
					this.OnAmount9MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount9Month = value;
					this.SendPropertyChanged("Amount9Month");
					this.OnAmount9MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent10Month", DbType="Int")]
		public System.Nullable<int> Percent10Month
		{
			get
			{
				return this._Percent10Month;
			}
			set
			{
				if ((this._Percent10Month != value))
				{
					this.OnPercent10MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent10Month = value;
					this.SendPropertyChanged("Percent10Month");
					this.OnPercent10MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount10Month", DbType="Int")]
		public System.Nullable<int> Amount10Month
		{
			get
			{
				return this._Amount10Month;
			}
			set
			{
				if ((this._Amount10Month != value))
				{
					this.OnAmount10MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount10Month = value;
					this.SendPropertyChanged("Amount10Month");
					this.OnAmount10MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent11Month", DbType="Int")]
		public System.Nullable<int> Percent11Month
		{
			get
			{
				return this._Percent11Month;
			}
			set
			{
				if ((this._Percent11Month != value))
				{
					this.OnPercent11MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent11Month = value;
					this.SendPropertyChanged("Percent11Month");
					this.OnPercent11MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount11Month", DbType="Int")]
		public System.Nullable<int> Amount11Month
		{
			get
			{
				return this._Amount11Month;
			}
			set
			{
				if ((this._Amount11Month != value))
				{
					this.OnAmount11MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount11Month = value;
					this.SendPropertyChanged("Amount11Month");
					this.OnAmount11MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent12Month", DbType="Int")]
		public System.Nullable<int> Percent12Month
		{
			get
			{
				return this._Percent12Month;
			}
			set
			{
				if ((this._Percent12Month != value))
				{
					this.OnPercent12MonthChanging(value);
					this.SendPropertyChanging();
					this._Percent12Month = value;
					this.SendPropertyChanged("Percent12Month");
					this.OnPercent12MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount12Month", DbType="Int")]
		public System.Nullable<int> Amount12Month
		{
			get
			{
				return this._Amount12Month;
			}
			set
			{
				if ((this._Amount12Month != value))
				{
					this.OnAmount12MonthChanging(value);
					this.SendPropertyChanging();
					this._Amount12Month = value;
					this.SendPropertyChanged("Amount12Month");
					this.OnAmount12MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="ADSLSellerAgentID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLSellerAgentRecharge", Storage="_ADSLSellerAgentRecharges", ThisKey="ID", OtherKey="SellerAgentID")]
		public EntitySet<ADSLSellerAgentRecharge> ADSLSellerAgentRecharges
		{
			get
			{
				return this._ADSLSellerAgentRecharges;
			}
			set
			{
				this._ADSLSellerAgentRecharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLSellerAgentUser", Storage="_ADSLSellerAgentUsers", ThisKey="ID", OtherKey="SellerAgentID")]
		public EntitySet<ADSLSellerAgentUser> ADSLSellerAgentUsers
		{
			get
			{
				return this._ADSLSellerAgentUsers;
			}
			set
			{
				this._ADSLSellerAgentUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLServiceGroupSeller", Storage="_ADSLServiceGroupSellers", ThisKey="ID", OtherKey="SellerAgentID")]
		public EntitySet<ADSLServiceGroupSeller> ADSLServiceGroupSellers
		{
			get
			{
				return this._ADSLServiceGroupSellers;
			}
			set
			{
				this._ADSLServiceGroupSellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLServiceSeller", Storage="_ADSLServiceSellers", ThisKey="ID", OtherKey="SellerAgentID")]
		public EntitySet<ADSLServiceSeller> ADSLServiceSellers
		{
			get
			{
				return this._ADSLServiceSellers;
			}
			set
			{
				this._ADSLServiceSellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="ADSLSellerAgentID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerGroup_ADSLSellerAgent", Storage="_ADSLSellerGroup", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerGroup ADSLSellerGroup
		{
			get
			{
				return this._ADSLSellerGroup.Entity;
			}
			set
			{
				ADSLSellerGroup previousValue = this._ADSLSellerGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerGroup.Entity = null;
						previousValue.ADSLSellerAgents.Remove(this);
					}
					this._ADSLSellerGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgents.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("ADSLSellerGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ADSLSellerAgent", Storage="_City", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.ADSLSellerAgents.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgents.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = null;
		}
		
		private void attach_ADSLSellerAgentRecharges(ADSLSellerAgentRecharge entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = this;
		}
		
		private void detach_ADSLSellerAgentRecharges(ADSLSellerAgentRecharge entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = null;
		}
		
		private void attach_ADSLSellerAgentUsers(ADSLSellerAgentUser entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = this;
		}
		
		private void detach_ADSLSellerAgentUsers(ADSLSellerAgentUser entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = null;
		}
		
		private void attach_ADSLServiceGroupSellers(ADSLServiceGroupSeller entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = this;
		}
		
		private void detach_ADSLServiceGroupSellers(ADSLServiceGroupSeller entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = null;
		}
		
		private void attach_ADSLServiceSellers(ADSLServiceSeller entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = this;
		}
		
		private void detach_ADSLServiceSellers(ADSLServiceSeller entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSellerAgentRecharge")]
	public partial class ADSLSellerAgentRecharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SellerAgentID;
		
		private long _Cost;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<ADSLSellerAgent> _ADSLSellerAgent;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSellerAgentIDChanging(int value);
    partial void OnSellerAgentIDChanged();
    partial void OnCostChanging(long value);
    partial void OnCostChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public ADSLSellerAgentRecharge()
		{
			this._ADSLSellerAgent = default(EntityRef<ADSLSellerAgent>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerAgentID", DbType="Int NOT NULL")]
		public int SellerAgentID
		{
			get
			{
				return this._SellerAgentID;
			}
			set
			{
				if ((this._SellerAgentID != value))
				{
					if (this._ADSLSellerAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerAgentIDChanging(value);
					this.SendPropertyChanging();
					this._SellerAgentID = value;
					this.SendPropertyChanged("SellerAgentID");
					this.OnSellerAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt NOT NULL")]
		public long Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLSellerAgentRecharge", Storage="_ADSLSellerAgent", ThisKey="SellerAgentID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerAgent ADSLSellerAgent
		{
			get
			{
				return this._ADSLSellerAgent.Entity;
			}
			set
			{
				ADSLSellerAgent previousValue = this._ADSLSellerAgent.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgent.Entity = null;
						previousValue.ADSLSellerAgentRecharges.Remove(this);
					}
					this._ADSLSellerAgent.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgentRecharges.Add(this);
						this._SellerAgentID = value.ID;
					}
					else
					{
						this._SellerAgentID = default(int);
					}
					this.SendPropertyChanged("ADSLSellerAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSellerAgentRecharge", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ADSLSellerAgentRecharges.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgentRecharges.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSellerAgentUser")]
	public partial class ADSLSellerAgentUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Password;
		
		private int _SellerAgentID;
		
		private string _Email;
		
		private bool _IsEnable;
		
		private System.Nullable<bool> _IsAdmin;
		
		private System.Nullable<long> _CreditCash;
		
		private System.Nullable<long> _CreditCashUse;
		
		private System.Nullable<long> _CreditCashRemain;
		
		private System.Nullable<long> _CreditInstalment;
		
		private System.Nullable<long> _CreditInstalmentUse;
		
		private System.Nullable<long> _CreditInstalmentRemain;
		
		private EntitySet<ADSLSellerAgentUserCredit> _ADSLSellerAgentUserCredits;
		
		private EntitySet<ADSLSellerAgentUserRecharge> _ADSLSellerAgentUserRecharges;
		
		private EntityRef<ADSLSellerAgent> _ADSLSellerAgent;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSellerAgentIDChanging(int value);
    partial void OnSellerAgentIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsEnableChanging(bool value);
    partial void OnIsEnableChanged();
    partial void OnIsAdminChanging(System.Nullable<bool> value);
    partial void OnIsAdminChanged();
    partial void OnCreditCashChanging(System.Nullable<long> value);
    partial void OnCreditCashChanged();
    partial void OnCreditCashUseChanging(System.Nullable<long> value);
    partial void OnCreditCashUseChanged();
    partial void OnCreditCashRemainChanging(System.Nullable<long> value);
    partial void OnCreditCashRemainChanged();
    partial void OnCreditInstalmentChanging(System.Nullable<long> value);
    partial void OnCreditInstalmentChanged();
    partial void OnCreditInstalmentUseChanging(System.Nullable<long> value);
    partial void OnCreditInstalmentUseChanged();
    partial void OnCreditInstalmentRemainChanging(System.Nullable<long> value);
    partial void OnCreditInstalmentRemainChanged();
    #endregion
		
		public ADSLSellerAgentUser()
		{
			this._ADSLSellerAgentUserCredits = new EntitySet<ADSLSellerAgentUserCredit>(new Action<ADSLSellerAgentUserCredit>(this.attach_ADSLSellerAgentUserCredits), new Action<ADSLSellerAgentUserCredit>(this.detach_ADSLSellerAgentUserCredits));
			this._ADSLSellerAgentUserRecharges = new EntitySet<ADSLSellerAgentUserRecharge>(new Action<ADSLSellerAgentUserRecharge>(this.attach_ADSLSellerAgentUserRecharges), new Action<ADSLSellerAgentUserRecharge>(this.detach_ADSLSellerAgentUserRecharges));
			this._ADSLSellerAgent = default(EntityRef<ADSLSellerAgent>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerAgentID", DbType="Int NOT NULL")]
		public int SellerAgentID
		{
			get
			{
				return this._SellerAgentID;
			}
			set
			{
				if ((this._SellerAgentID != value))
				{
					if (this._ADSLSellerAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerAgentIDChanging(value);
					this.SendPropertyChanging();
					this._SellerAgentID = value;
					this.SendPropertyChanged("SellerAgentID");
					this.OnSellerAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit")]
		public System.Nullable<bool> IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCash", DbType="BigInt")]
		public System.Nullable<long> CreditCash
		{
			get
			{
				return this._CreditCash;
			}
			set
			{
				if ((this._CreditCash != value))
				{
					this.OnCreditCashChanging(value);
					this.SendPropertyChanging();
					this._CreditCash = value;
					this.SendPropertyChanged("CreditCash");
					this.OnCreditCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCashUse", DbType="BigInt")]
		public System.Nullable<long> CreditCashUse
		{
			get
			{
				return this._CreditCashUse;
			}
			set
			{
				if ((this._CreditCashUse != value))
				{
					this.OnCreditCashUseChanging(value);
					this.SendPropertyChanging();
					this._CreditCashUse = value;
					this.SendPropertyChanged("CreditCashUse");
					this.OnCreditCashUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCashRemain", DbType="BigInt")]
		public System.Nullable<long> CreditCashRemain
		{
			get
			{
				return this._CreditCashRemain;
			}
			set
			{
				if ((this._CreditCashRemain != value))
				{
					this.OnCreditCashRemainChanging(value);
					this.SendPropertyChanging();
					this._CreditCashRemain = value;
					this.SendPropertyChanged("CreditCashRemain");
					this.OnCreditCashRemainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditInstalment", DbType="BigInt")]
		public System.Nullable<long> CreditInstalment
		{
			get
			{
				return this._CreditInstalment;
			}
			set
			{
				if ((this._CreditInstalment != value))
				{
					this.OnCreditInstalmentChanging(value);
					this.SendPropertyChanging();
					this._CreditInstalment = value;
					this.SendPropertyChanged("CreditInstalment");
					this.OnCreditInstalmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditInstalmentUse", DbType="BigInt")]
		public System.Nullable<long> CreditInstalmentUse
		{
			get
			{
				return this._CreditInstalmentUse;
			}
			set
			{
				if ((this._CreditInstalmentUse != value))
				{
					this.OnCreditInstalmentUseChanging(value);
					this.SendPropertyChanging();
					this._CreditInstalmentUse = value;
					this.SendPropertyChanged("CreditInstalmentUse");
					this.OnCreditInstalmentUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditInstalmentRemain", DbType="BigInt")]
		public System.Nullable<long> CreditInstalmentRemain
		{
			get
			{
				return this._CreditInstalmentRemain;
			}
			set
			{
				if ((this._CreditInstalmentRemain != value))
				{
					this.OnCreditInstalmentRemainChanging(value);
					this.SendPropertyChanging();
					this._CreditInstalmentRemain = value;
					this.SendPropertyChanged("CreditInstalmentRemain");
					this.OnCreditInstalmentRemainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgentUser_ADSLSellerAgentUserCredit", Storage="_ADSLSellerAgentUserCredits", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ADSLSellerAgentUserCredit> ADSLSellerAgentUserCredits
		{
			get
			{
				return this._ADSLSellerAgentUserCredits;
			}
			set
			{
				this._ADSLSellerAgentUserCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgentUser_ADSLSellerAgentUserRecharge", Storage="_ADSLSellerAgentUserRecharges", ThisKey="ID", OtherKey="SellerAgentUserID")]
		public EntitySet<ADSLSellerAgentUserRecharge> ADSLSellerAgentUserRecharges
		{
			get
			{
				return this._ADSLSellerAgentUserRecharges;
			}
			set
			{
				this._ADSLSellerAgentUserRecharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLSellerAgentUser", Storage="_ADSLSellerAgent", ThisKey="SellerAgentID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerAgent ADSLSellerAgent
		{
			get
			{
				return this._ADSLSellerAgent.Entity;
			}
			set
			{
				ADSLSellerAgent previousValue = this._ADSLSellerAgent.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgent.Entity = null;
						previousValue.ADSLSellerAgentUsers.Remove(this);
					}
					this._ADSLSellerAgent.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgentUsers.Add(this);
						this._SellerAgentID = value.ID;
					}
					else
					{
						this._SellerAgentID = default(int);
					}
					this.SendPropertyChanged("ADSLSellerAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSellerAgentUser", Storage="_User", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ADSLSellerAgentUser = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgentUser = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLSellerAgentUserCredits(ADSLSellerAgentUserCredit entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgentUser = this;
		}
		
		private void detach_ADSLSellerAgentUserCredits(ADSLSellerAgentUserCredit entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgentUser = null;
		}
		
		private void attach_ADSLSellerAgentUserRecharges(ADSLSellerAgentUserRecharge entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgentUser = this;
		}
		
		private void detach_ADSLSellerAgentUserRecharges(ADSLSellerAgentUserRecharge entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerAgentUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSellerAgentUserCredit")]
	public partial class ADSLSellerAgentUserCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _UserID;
		
		private long _RequestID;
		
		private System.Nullable<long> _Cost;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<bool> _IsPaid;
		
		private EntityRef<ADSLSellerAgentUser> _ADSLSellerAgentUser;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnCostChanging(System.Nullable<long> value);
    partial void OnCostChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    #endregion
		
		public ADSLSellerAgentUserCredit()
		{
			this._ADSLSellerAgentUser = default(EntityRef<ADSLSellerAgentUser>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._ADSLSellerAgentUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt")]
		public System.Nullable<long> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgentUser_ADSLSellerAgentUserCredit", Storage="_ADSLSellerAgentUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerAgentUser ADSLSellerAgentUser
		{
			get
			{
				return this._ADSLSellerAgentUser.Entity;
			}
			set
			{
				ADSLSellerAgentUser previousValue = this._ADSLSellerAgentUser.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgentUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgentUser.Entity = null;
						previousValue.ADSLSellerAgentUserCredits.Remove(this);
					}
					this._ADSLSellerAgentUser.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgentUserCredits.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("ADSLSellerAgentUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLSellerAgentUserCredit", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLSellerAgentUserCredits.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgentUserCredits.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSellerAgentUserRecharge")]
	public partial class ADSLSellerAgentUserRecharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SellerAgentUserID;
		
		private long _Cost;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<ADSLSellerAgentUser> _ADSLSellerAgentUser;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSellerAgentUserIDChanging(int value);
    partial void OnSellerAgentUserIDChanged();
    partial void OnCostChanging(long value);
    partial void OnCostChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public ADSLSellerAgentUserRecharge()
		{
			this._ADSLSellerAgentUser = default(EntityRef<ADSLSellerAgentUser>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerAgentUserID", DbType="Int NOT NULL")]
		public int SellerAgentUserID
		{
			get
			{
				return this._SellerAgentUserID;
			}
			set
			{
				if ((this._SellerAgentUserID != value))
				{
					if (this._ADSLSellerAgentUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerAgentUserIDChanging(value);
					this.SendPropertyChanging();
					this._SellerAgentUserID = value;
					this.SendPropertyChanged("SellerAgentUserID");
					this.OnSellerAgentUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt NOT NULL")]
		public long Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgentUser_ADSLSellerAgentUserRecharge", Storage="_ADSLSellerAgentUser", ThisKey="SellerAgentUserID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerAgentUser ADSLSellerAgentUser
		{
			get
			{
				return this._ADSLSellerAgentUser.Entity;
			}
			set
			{
				ADSLSellerAgentUser previousValue = this._ADSLSellerAgentUser.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgentUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgentUser.Entity = null;
						previousValue.ADSLSellerAgentUserRecharges.Remove(this);
					}
					this._ADSLSellerAgentUser.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgentUserRecharges.Add(this);
						this._SellerAgentUserID = value.ID;
					}
					else
					{
						this._SellerAgentUserID = default(int);
					}
					this.SendPropertyChanged("ADSLSellerAgentUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSellerAgentUserRecharge", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ADSLSellerAgentUserRecharges.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ADSLSellerAgentUserRecharges.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSellerGroup")]
	public partial class ADSLSellerGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private System.Nullable<byte> _Type;
		
		private EntitySet<ADSLSellerAgent> _ADSLSellerAgents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(System.Nullable<byte> value);
    partial void OnTypeChanged();
    #endregion
		
		public ADSLSellerGroup()
		{
			this._ADSLSellerAgents = new EntitySet<ADSLSellerAgent>(new Action<ADSLSellerAgent>(this.attach_ADSLSellerAgents), new Action<ADSLSellerAgent>(this.detach_ADSLSellerAgents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt")]
		public System.Nullable<byte> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerGroup_ADSLSellerAgent", Storage="_ADSLSellerAgents", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<ADSLSellerAgent> ADSLSellerAgents
		{
			get
			{
				return this._ADSLSellerAgents;
			}
			set
			{
				this._ADSLSellerAgents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLSellerAgents(ADSLSellerAgent entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerGroup = this;
		}
		
		private void detach_ADSLSellerAgents(ADSLSellerAgent entity)
		{
			this.SendPropertyChanging();
			entity.ADSLSellerGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSellTraffic")]
	public partial class ADSLSellTraffic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _AdditionalServiceID;
		
		private System.Nullable<byte> _ChangeServiceType;
		
		private System.Nullable<int> _FinalUserID;
		
		private System.Nullable<System.DateTime> _FinalDate;
		
		private string _FinalComment;
		
		private System.Nullable<bool> _IsIBSngUpdated;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAdditionalServiceIDChanging(int value);
    partial void OnAdditionalServiceIDChanged();
    partial void OnChangeServiceTypeChanging(System.Nullable<byte> value);
    partial void OnChangeServiceTypeChanged();
    partial void OnFinalUserIDChanging(System.Nullable<int> value);
    partial void OnFinalUserIDChanged();
    partial void OnFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDateChanged();
    partial void OnFinalCommentChanging(string value);
    partial void OnFinalCommentChanged();
    partial void OnIsIBSngUpdatedChanging(System.Nullable<bool> value);
    partial void OnIsIBSngUpdatedChanged();
    #endregion
		
		public ADSLSellTraffic()
		{
			this._ADSLService = default(EntityRef<ADSLService>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalServiceID", DbType="Int NOT NULL")]
		public int AdditionalServiceID
		{
			get
			{
				return this._AdditionalServiceID;
			}
			set
			{
				if ((this._AdditionalServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdditionalServiceIDChanging(value);
					this.SendPropertyChanging();
					this._AdditionalServiceID = value;
					this.SendPropertyChanged("AdditionalServiceID");
					this.OnAdditionalServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeServiceType", DbType="TinyInt")]
		public System.Nullable<byte> ChangeServiceType
		{
			get
			{
				return this._ChangeServiceType;
			}
			set
			{
				if ((this._ChangeServiceType != value))
				{
					this.OnChangeServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeServiceType = value;
					this.SendPropertyChanged("ChangeServiceType");
					this.OnChangeServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalUserID", DbType="Int")]
		public System.Nullable<int> FinalUserID
		{
			get
			{
				return this._FinalUserID;
			}
			set
			{
				if ((this._FinalUserID != value))
				{
					this.OnFinalUserIDChanging(value);
					this.SendPropertyChanging();
					this._FinalUserID = value;
					this.SendPropertyChanged("FinalUserID");
					this.OnFinalUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FinalDate
		{
			get
			{
				return this._FinalDate;
			}
			set
			{
				if ((this._FinalDate != value))
				{
					this.OnFinalDateChanging(value);
					this.SendPropertyChanging();
					this._FinalDate = value;
					this.SendPropertyChanged("FinalDate");
					this.OnFinalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalComment", DbType="NVarChar(MAX)")]
		public string FinalComment
		{
			get
			{
				return this._FinalComment;
			}
			set
			{
				if ((this._FinalComment != value))
				{
					this.OnFinalCommentChanging(value);
					this.SendPropertyChanging();
					this._FinalComment = value;
					this.SendPropertyChanged("FinalComment");
					this.OnFinalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIBSngUpdated", DbType="Bit")]
		public System.Nullable<bool> IsIBSngUpdated
		{
			get
			{
				return this._IsIBSngUpdated;
			}
			set
			{
				if ((this._IsIBSngUpdated != value))
				{
					this.OnIsIBSngUpdatedChanging(value);
					this.SendPropertyChanging();
					this._IsIBSngUpdated = value;
					this.SendPropertyChanged("IsIBSngUpdated");
					this.OnIsIBSngUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLSellTraffic", Storage="_ADSLService", ThisKey="AdditionalServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.ADSLSellTraffics.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.ADSLSellTraffics.Add(this);
						this._AdditionalServiceID = value.ID;
					}
					else
					{
						this._AdditionalServiceID = default(int);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLSellTraffic", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLSellTraffic = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLSellTraffic = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLService")]
	public partial class ADSLService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _IBSngGroupName;
		
		private int _TypeID;
		
		private int _GroupID;
		
		private System.Nullable<int> _NetworkID;
		
		private System.Nullable<int> _BandWidthID;
		
		private System.Nullable<int> _TrafficID;
		
		private System.Nullable<int> _DurationID;
		
		private bool _IsRequiredLicense;
		
		private System.Nullable<int> _OverNightCredit;
		
		private System.Nullable<int> _ReserveCridit;
		
		private System.Nullable<bool> _IsFree;
		
		private int _PaymentTypeID;
		
		private long _Price;
		
		private System.Nullable<int> _Tax;
		
		private System.Nullable<int> _Abonman;
		
		private System.Nullable<long> _PriceSum;
		
		private System.Nullable<bool> _IsInstalment;
		
		private System.Nullable<long> _Instalment;
		
		private System.Nullable<int> _MAXInstallmentCount;
		
		private System.Nullable<int> _GiftProfileID;
		
		private bool _IsModemMandatory;
		
		private bool _IsModemInstallment;
		
		private System.Nullable<int> _ModemDiscount;
		
		private System.Nullable<int> _IPDiscount;
		
		private bool _IsOnlineRegister;
		
		private bool _IsSpecial;
		
		private bool _IsActive;
		
		private string _SellChanell;
		
		private System.Nullable<System.DateTime> _StartDtae;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _ServiceCode;
		
		private bool _ForWireless;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<ADSLChangeService> _ADSLChangeServices;
		
		private EntitySet<ADSLChangeService> _ADSLChangeServices1;
		
		private EntitySet<ADSLDischarge> _ADSLDischarges;
		
		private EntitySet<ADSLHistory> _ADSLHistories;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<ADSLSellTraffic> _ADSLSellTraffics;
		
		private EntityRef<ADSLService> _ADSLService2;
		
		private EntitySet<ADSLServiceCenter> _ADSLServiceCenters;
		
		private EntitySet<ADSLServiceSeller> _ADSLServiceSellers;
		
		private EntitySet<Wireless> _Wirelesses;
		
		private EntitySet<WirelessChangeService> _WirelessChangeServices;
		
		private EntitySet<WirelessChangeService> _WirelessChangeServices1;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntitySet<WirelessSellTraffic> _WirelessSellTraffics;
		
		private EntityRef<ADSLService> _ADSLService1;
		
		private EntityRef<ADSLServiceBandWidth> _ADSLServiceBandWidth;
		
		private EntityRef<ADSLServiceDuration> _ADSLServiceDuration;
		
		private EntityRef<ADSLServiceGiftProfile> _ADSLServiceGiftProfile;
		
		private EntityRef<ADSLServiceGroup> _ADSLServiceGroup;
		
		private EntityRef<ADSLServiceNetwork> _ADSLServiceNetwork;
		
		private EntityRef<ADSLServiceTraffic> _ADSLServiceTraffic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIBSngGroupNameChanging(string value);
    partial void OnIBSngGroupNameChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnNetworkIDChanging(System.Nullable<int> value);
    partial void OnNetworkIDChanged();
    partial void OnBandWidthIDChanging(System.Nullable<int> value);
    partial void OnBandWidthIDChanged();
    partial void OnTrafficIDChanging(System.Nullable<int> value);
    partial void OnTrafficIDChanged();
    partial void OnDurationIDChanging(System.Nullable<int> value);
    partial void OnDurationIDChanged();
    partial void OnIsRequiredLicenseChanging(bool value);
    partial void OnIsRequiredLicenseChanged();
    partial void OnOverNightCreditChanging(System.Nullable<int> value);
    partial void OnOverNightCreditChanged();
    partial void OnReserveCriditChanging(System.Nullable<int> value);
    partial void OnReserveCriditChanged();
    partial void OnIsFreeChanging(System.Nullable<bool> value);
    partial void OnIsFreeChanged();
    partial void OnPaymentTypeIDChanging(int value);
    partial void OnPaymentTypeIDChanged();
    partial void OnPriceChanging(long value);
    partial void OnPriceChanged();
    partial void OnTaxChanging(System.Nullable<int> value);
    partial void OnTaxChanged();
    partial void OnAbonmanChanging(System.Nullable<int> value);
    partial void OnAbonmanChanged();
    partial void OnPriceSumChanging(System.Nullable<long> value);
    partial void OnPriceSumChanged();
    partial void OnIsInstalmentChanging(System.Nullable<bool> value);
    partial void OnIsInstalmentChanged();
    partial void OnInstalmentChanging(System.Nullable<long> value);
    partial void OnInstalmentChanged();
    partial void OnMAXInstallmentCountChanging(System.Nullable<int> value);
    partial void OnMAXInstallmentCountChanged();
    partial void OnGiftProfileIDChanging(System.Nullable<int> value);
    partial void OnGiftProfileIDChanged();
    partial void OnIsModemMandatoryChanging(bool value);
    partial void OnIsModemMandatoryChanged();
    partial void OnIsModemInstallmentChanging(bool value);
    partial void OnIsModemInstallmentChanged();
    partial void OnModemDiscountChanging(System.Nullable<int> value);
    partial void OnModemDiscountChanged();
    partial void OnIPDiscountChanging(System.Nullable<int> value);
    partial void OnIPDiscountChanged();
    partial void OnIsOnlineRegisterChanging(bool value);
    partial void OnIsOnlineRegisterChanged();
    partial void OnIsSpecialChanging(bool value);
    partial void OnIsSpecialChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnSellChanellChanging(string value);
    partial void OnSellChanellChanged();
    partial void OnStartDtaeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDtaeChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnServiceCodeChanging(System.Nullable<int> value);
    partial void OnServiceCodeChanged();
    partial void OnForWirelessChanging(bool value);
    partial void OnForWirelessChanged();
    #endregion
		
		public ADSLService()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._ADSLChangeServices = new EntitySet<ADSLChangeService>(new Action<ADSLChangeService>(this.attach_ADSLChangeServices), new Action<ADSLChangeService>(this.detach_ADSLChangeServices));
			this._ADSLChangeServices1 = new EntitySet<ADSLChangeService>(new Action<ADSLChangeService>(this.attach_ADSLChangeServices1), new Action<ADSLChangeService>(this.detach_ADSLChangeServices1));
			this._ADSLDischarges = new EntitySet<ADSLDischarge>(new Action<ADSLDischarge>(this.attach_ADSLDischarges), new Action<ADSLDischarge>(this.detach_ADSLDischarges));
			this._ADSLHistories = new EntitySet<ADSLHistory>(new Action<ADSLHistory>(this.attach_ADSLHistories), new Action<ADSLHistory>(this.detach_ADSLHistories));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._ADSLSellTraffics = new EntitySet<ADSLSellTraffic>(new Action<ADSLSellTraffic>(this.attach_ADSLSellTraffics), new Action<ADSLSellTraffic>(this.detach_ADSLSellTraffics));
			this._ADSLService2 = default(EntityRef<ADSLService>);
			this._ADSLServiceCenters = new EntitySet<ADSLServiceCenter>(new Action<ADSLServiceCenter>(this.attach_ADSLServiceCenters), new Action<ADSLServiceCenter>(this.detach_ADSLServiceCenters));
			this._ADSLServiceSellers = new EntitySet<ADSLServiceSeller>(new Action<ADSLServiceSeller>(this.attach_ADSLServiceSellers), new Action<ADSLServiceSeller>(this.detach_ADSLServiceSellers));
			this._Wirelesses = new EntitySet<Wireless>(new Action<Wireless>(this.attach_Wirelesses), new Action<Wireless>(this.detach_Wirelesses));
			this._WirelessChangeServices = new EntitySet<WirelessChangeService>(new Action<WirelessChangeService>(this.attach_WirelessChangeServices), new Action<WirelessChangeService>(this.detach_WirelessChangeServices));
			this._WirelessChangeServices1 = new EntitySet<WirelessChangeService>(new Action<WirelessChangeService>(this.attach_WirelessChangeServices1), new Action<WirelessChangeService>(this.detach_WirelessChangeServices1));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._WirelessSellTraffics = new EntitySet<WirelessSellTraffic>(new Action<WirelessSellTraffic>(this.attach_WirelessSellTraffics), new Action<WirelessSellTraffic>(this.detach_WirelessSellTraffics));
			this._ADSLService1 = default(EntityRef<ADSLService>);
			this._ADSLServiceBandWidth = default(EntityRef<ADSLServiceBandWidth>);
			this._ADSLServiceDuration = default(EntityRef<ADSLServiceDuration>);
			this._ADSLServiceGiftProfile = default(EntityRef<ADSLServiceGiftProfile>);
			this._ADSLServiceGroup = default(EntityRef<ADSLServiceGroup>);
			this._ADSLServiceNetwork = default(EntityRef<ADSLServiceNetwork>);
			this._ADSLServiceTraffic = default(EntityRef<ADSLServiceTraffic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._ADSLService1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBSngGroupName", DbType="NVarChar(100)")]
		public string IBSngGroupName
		{
			get
			{
				return this._IBSngGroupName;
			}
			set
			{
				if ((this._IBSngGroupName != value))
				{
					this.OnIBSngGroupNameChanging(value);
					this.SendPropertyChanging();
					this._IBSngGroupName = value;
					this.SendPropertyChanged("IBSngGroupName");
					this.OnIBSngGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._ADSLServiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkID", DbType="Int")]
		public System.Nullable<int> NetworkID
		{
			get
			{
				return this._NetworkID;
			}
			set
			{
				if ((this._NetworkID != value))
				{
					if (this._ADSLServiceNetwork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNetworkIDChanging(value);
					this.SendPropertyChanging();
					this._NetworkID = value;
					this.SendPropertyChanged("NetworkID");
					this.OnNetworkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BandWidthID", DbType="Int")]
		public System.Nullable<int> BandWidthID
		{
			get
			{
				return this._BandWidthID;
			}
			set
			{
				if ((this._BandWidthID != value))
				{
					if (this._ADSLServiceBandWidth.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBandWidthIDChanging(value);
					this.SendPropertyChanging();
					this._BandWidthID = value;
					this.SendPropertyChanged("BandWidthID");
					this.OnBandWidthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficID", DbType="Int")]
		public System.Nullable<int> TrafficID
		{
			get
			{
				return this._TrafficID;
			}
			set
			{
				if ((this._TrafficID != value))
				{
					if (this._ADSLServiceTraffic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrafficIDChanging(value);
					this.SendPropertyChanging();
					this._TrafficID = value;
					this.SendPropertyChanged("TrafficID");
					this.OnTrafficIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationID", DbType="Int")]
		public System.Nullable<int> DurationID
		{
			get
			{
				return this._DurationID;
			}
			set
			{
				if ((this._DurationID != value))
				{
					if (this._ADSLServiceDuration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDurationIDChanging(value);
					this.SendPropertyChanging();
					this._DurationID = value;
					this.SendPropertyChanged("DurationID");
					this.OnDurationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiredLicense", DbType="Bit NOT NULL")]
		public bool IsRequiredLicense
		{
			get
			{
				return this._IsRequiredLicense;
			}
			set
			{
				if ((this._IsRequiredLicense != value))
				{
					this.OnIsRequiredLicenseChanging(value);
					this.SendPropertyChanging();
					this._IsRequiredLicense = value;
					this.SendPropertyChanged("IsRequiredLicense");
					this.OnIsRequiredLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverNightCredit", DbType="Int")]
		public System.Nullable<int> OverNightCredit
		{
			get
			{
				return this._OverNightCredit;
			}
			set
			{
				if ((this._OverNightCredit != value))
				{
					this.OnOverNightCreditChanging(value);
					this.SendPropertyChanging();
					this._OverNightCredit = value;
					this.SendPropertyChanged("OverNightCredit");
					this.OnOverNightCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveCridit", DbType="Int")]
		public System.Nullable<int> ReserveCridit
		{
			get
			{
				return this._ReserveCridit;
			}
			set
			{
				if ((this._ReserveCridit != value))
				{
					this.OnReserveCriditChanging(value);
					this.SendPropertyChanging();
					this._ReserveCridit = value;
					this.SendPropertyChanged("ReserveCridit");
					this.OnReserveCriditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFree", DbType="Bit")]
		public System.Nullable<bool> IsFree
		{
			get
			{
				return this._IsFree;
			}
			set
			{
				if ((this._IsFree != value))
				{
					this.OnIsFreeChanging(value);
					this.SendPropertyChanging();
					this._IsFree = value;
					this.SendPropertyChanged("IsFree");
					this.OnIsFreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeID", DbType="Int NOT NULL")]
		public int PaymentTypeID
		{
			get
			{
				return this._PaymentTypeID;
			}
			set
			{
				if ((this._PaymentTypeID != value))
				{
					this.OnPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeID = value;
					this.SendPropertyChanged("PaymentTypeID");
					this.OnPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt NOT NULL")]
		public long Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Int")]
		public System.Nullable<int> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abonman", DbType="Int")]
		public System.Nullable<int> Abonman
		{
			get
			{
				return this._Abonman;
			}
			set
			{
				if ((this._Abonman != value))
				{
					this.OnAbonmanChanging(value);
					this.SendPropertyChanging();
					this._Abonman = value;
					this.SendPropertyChanged("Abonman");
					this.OnAbonmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSum", DbType="BigInt")]
		public System.Nullable<long> PriceSum
		{
			get
			{
				return this._PriceSum;
			}
			set
			{
				if ((this._PriceSum != value))
				{
					this.OnPriceSumChanging(value);
					this.SendPropertyChanging();
					this._PriceSum = value;
					this.SendPropertyChanged("PriceSum");
					this.OnPriceSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInstalment", DbType="Bit")]
		public System.Nullable<bool> IsInstalment
		{
			get
			{
				return this._IsInstalment;
			}
			set
			{
				if ((this._IsInstalment != value))
				{
					this.OnIsInstalmentChanging(value);
					this.SendPropertyChanging();
					this._IsInstalment = value;
					this.SendPropertyChanged("IsInstalment");
					this.OnIsInstalmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instalment", DbType="BigInt")]
		public System.Nullable<long> Instalment
		{
			get
			{
				return this._Instalment;
			}
			set
			{
				if ((this._Instalment != value))
				{
					this.OnInstalmentChanging(value);
					this.SendPropertyChanging();
					this._Instalment = value;
					this.SendPropertyChanged("Instalment");
					this.OnInstalmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAXInstallmentCount", DbType="Int")]
		public System.Nullable<int> MAXInstallmentCount
		{
			get
			{
				return this._MAXInstallmentCount;
			}
			set
			{
				if ((this._MAXInstallmentCount != value))
				{
					this.OnMAXInstallmentCountChanging(value);
					this.SendPropertyChanging();
					this._MAXInstallmentCount = value;
					this.SendPropertyChanged("MAXInstallmentCount");
					this.OnMAXInstallmentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftProfileID", DbType="Int")]
		public System.Nullable<int> GiftProfileID
		{
			get
			{
				return this._GiftProfileID;
			}
			set
			{
				if ((this._GiftProfileID != value))
				{
					if (this._ADSLServiceGiftProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGiftProfileIDChanging(value);
					this.SendPropertyChanging();
					this._GiftProfileID = value;
					this.SendPropertyChanged("GiftProfileID");
					this.OnGiftProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModemMandatory", DbType="Bit NOT NULL")]
		public bool IsModemMandatory
		{
			get
			{
				return this._IsModemMandatory;
			}
			set
			{
				if ((this._IsModemMandatory != value))
				{
					this.OnIsModemMandatoryChanging(value);
					this.SendPropertyChanging();
					this._IsModemMandatory = value;
					this.SendPropertyChanged("IsModemMandatory");
					this.OnIsModemMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModemInstallment", DbType="Bit NOT NULL")]
		public bool IsModemInstallment
		{
			get
			{
				return this._IsModemInstallment;
			}
			set
			{
				if ((this._IsModemInstallment != value))
				{
					this.OnIsModemInstallmentChanging(value);
					this.SendPropertyChanging();
					this._IsModemInstallment = value;
					this.SendPropertyChanged("IsModemInstallment");
					this.OnIsModemInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemDiscount", DbType="Int")]
		public System.Nullable<int> ModemDiscount
		{
			get
			{
				return this._ModemDiscount;
			}
			set
			{
				if ((this._ModemDiscount != value))
				{
					this.OnModemDiscountChanging(value);
					this.SendPropertyChanging();
					this._ModemDiscount = value;
					this.SendPropertyChanged("ModemDiscount");
					this.OnModemDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPDiscount", DbType="Int")]
		public System.Nullable<int> IPDiscount
		{
			get
			{
				return this._IPDiscount;
			}
			set
			{
				if ((this._IPDiscount != value))
				{
					this.OnIPDiscountChanging(value);
					this.SendPropertyChanging();
					this._IPDiscount = value;
					this.SendPropertyChanged("IPDiscount");
					this.OnIPDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnlineRegister", DbType="Bit NOT NULL")]
		public bool IsOnlineRegister
		{
			get
			{
				return this._IsOnlineRegister;
			}
			set
			{
				if ((this._IsOnlineRegister != value))
				{
					this.OnIsOnlineRegisterChanging(value);
					this.SendPropertyChanging();
					this._IsOnlineRegister = value;
					this.SendPropertyChanged("IsOnlineRegister");
					this.OnIsOnlineRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecial", DbType="Bit NOT NULL")]
		public bool IsSpecial
		{
			get
			{
				return this._IsSpecial;
			}
			set
			{
				if ((this._IsSpecial != value))
				{
					this.OnIsSpecialChanging(value);
					this.SendPropertyChanging();
					this._IsSpecial = value;
					this.SendPropertyChanged("IsSpecial");
					this.OnIsSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellChanell", DbType="NVarChar(20)")]
		public string SellChanell
		{
			get
			{
				return this._SellChanell;
			}
			set
			{
				if ((this._SellChanell != value))
				{
					this.OnSellChanellChanging(value);
					this.SendPropertyChanging();
					this._SellChanell = value;
					this.SendPropertyChanged("SellChanell");
					this.OnSellChanellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDtae", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDtae
		{
			get
			{
				return this._StartDtae;
			}
			set
			{
				if ((this._StartDtae != value))
				{
					this.OnStartDtaeChanging(value);
					this.SendPropertyChanging();
					this._StartDtae = value;
					this.SendPropertyChanged("StartDtae");
					this.OnStartDtaeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCode", DbType="Int")]
		public System.Nullable<int> ServiceCode
		{
			get
			{
				return this._ServiceCode;
			}
			set
			{
				if ((this._ServiceCode != value))
				{
					this.OnServiceCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceCode = value;
					this.SendPropertyChanged("ServiceCode");
					this.OnServiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForWireless", DbType="Bit NOT NULL")]
		public bool ForWireless
		{
			get
			{
				return this._ForWireless;
			}
			set
			{
				if ((this._ForWireless != value))
				{
					this.OnForWirelessChanging(value);
					this.SendPropertyChanging();
					this._ForWireless = value;
					this.SendPropertyChanged("ForWireless");
					this.OnForWirelessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="TariffID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLChangeService", Storage="_ADSLChangeServices", ThisKey="ID", OtherKey="NewServiceID")]
		public EntitySet<ADSLChangeService> ADSLChangeServices
		{
			get
			{
				return this._ADSLChangeServices;
			}
			set
			{
				this._ADSLChangeServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLChangeService1", Storage="_ADSLChangeServices1", ThisKey="ID", OtherKey="OldServiceID")]
		public EntitySet<ADSLChangeService> ADSLChangeServices1
		{
			get
			{
				return this._ADSLChangeServices1;
			}
			set
			{
				this._ADSLChangeServices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLDischarge", Storage="_ADSLDischarges", ThisKey="ID", OtherKey="TarrifID")]
		public EntitySet<ADSLDischarge> ADSLDischarges
		{
			get
			{
				return this._ADSLDischarges;
			}
			set
			{
				this._ADSLDischarges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLHistory", Storage="_ADSLHistories", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<ADSLHistory> ADSLHistories
		{
			get
			{
				return this._ADSLHistories;
			}
			set
			{
				this._ADSLHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLSellTraffic", Storage="_ADSLSellTraffics", ThisKey="ID", OtherKey="AdditionalServiceID")]
		public EntitySet<ADSLSellTraffic> ADSLSellTraffics
		{
			get
			{
				return this._ADSLSellTraffics;
			}
			set
			{
				this._ADSLSellTraffics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLService", Storage="_ADSLService2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLService ADSLService2
		{
			get
			{
				return this._ADSLService2.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService2.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService2.Entity = null;
						previousValue.ADSLService1 = null;
					}
					this._ADSLService2.Entity = value;
					if ((value != null))
					{
						value.ADSLService1 = this;
					}
					this.SendPropertyChanged("ADSLService2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLServiceCenter", Storage="_ADSLServiceCenters", ThisKey="ID", OtherKey="ADSLServiceID")]
		public EntitySet<ADSLServiceCenter> ADSLServiceCenters
		{
			get
			{
				return this._ADSLServiceCenters;
			}
			set
			{
				this._ADSLServiceCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLServiceSeller", Storage="_ADSLServiceSellers", ThisKey="ID", OtherKey="ADSLServiceID")]
		public EntitySet<ADSLServiceSeller> ADSLServiceSellers
		{
			get
			{
				return this._ADSLServiceSellers;
			}
			set
			{
				this._ADSLServiceSellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_Wireless", Storage="_Wirelesses", ThisKey="ID", OtherKey="TariffID")]
		public EntitySet<Wireless> Wirelesses
		{
			get
			{
				return this._Wirelesses;
			}
			set
			{
				this._Wirelesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_WirelessChangeService", Storage="_WirelessChangeServices", ThisKey="ID", OtherKey="OldServiceID")]
		public EntitySet<WirelessChangeService> WirelessChangeServices
		{
			get
			{
				return this._WirelessChangeServices;
			}
			set
			{
				this._WirelessChangeServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_WirelessChangeService1", Storage="_WirelessChangeServices1", ThisKey="ID", OtherKey="NewServiceID")]
		public EntitySet<WirelessChangeService> WirelessChangeServices1
		{
			get
			{
				return this._WirelessChangeServices1;
			}
			set
			{
				this._WirelessChangeServices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_WirelessSellTraffic", Storage="_WirelessSellTraffics", ThisKey="ID", OtherKey="AdditionalServiceID")]
		public EntitySet<WirelessSellTraffic> WirelessSellTraffics
		{
			get
			{
				return this._WirelessSellTraffics;
			}
			set
			{
				this._WirelessSellTraffics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLService", Storage="_ADSLService1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService1
		{
			get
			{
				return this._ADSLService1.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService1.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService1.Entity = null;
						previousValue.ADSLService2 = null;
					}
					this._ADSLService1.Entity = value;
					if ((value != null))
					{
						value.ADSLService2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("ADSLService1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceBandWidth_ADSLService", Storage="_ADSLServiceBandWidth", ThisKey="BandWidthID", OtherKey="ID", IsForeignKey=true)]
		public ADSLServiceBandWidth ADSLServiceBandWidth
		{
			get
			{
				return this._ADSLServiceBandWidth.Entity;
			}
			set
			{
				ADSLServiceBandWidth previousValue = this._ADSLServiceBandWidth.Entity;
				if (((previousValue != value) 
							|| (this._ADSLServiceBandWidth.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLServiceBandWidth.Entity = null;
						previousValue.ADSLServices.Remove(this);
					}
					this._ADSLServiceBandWidth.Entity = value;
					if ((value != null))
					{
						value.ADSLServices.Add(this);
						this._BandWidthID = value.ID;
					}
					else
					{
						this._BandWidthID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLServiceBandWidth");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceDuration_ADSLService", Storage="_ADSLServiceDuration", ThisKey="DurationID", OtherKey="ID", IsForeignKey=true)]
		public ADSLServiceDuration ADSLServiceDuration
		{
			get
			{
				return this._ADSLServiceDuration.Entity;
			}
			set
			{
				ADSLServiceDuration previousValue = this._ADSLServiceDuration.Entity;
				if (((previousValue != value) 
							|| (this._ADSLServiceDuration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLServiceDuration.Entity = null;
						previousValue.ADSLServices.Remove(this);
					}
					this._ADSLServiceDuration.Entity = value;
					if ((value != null))
					{
						value.ADSLServices.Add(this);
						this._DurationID = value.ID;
					}
					else
					{
						this._DurationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLServiceDuration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceGiftProfile_ADSLService", Storage="_ADSLServiceGiftProfile", ThisKey="GiftProfileID", OtherKey="ID", IsForeignKey=true)]
		public ADSLServiceGiftProfile ADSLServiceGiftProfile
		{
			get
			{
				return this._ADSLServiceGiftProfile.Entity;
			}
			set
			{
				ADSLServiceGiftProfile previousValue = this._ADSLServiceGiftProfile.Entity;
				if (((previousValue != value) 
							|| (this._ADSLServiceGiftProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLServiceGiftProfile.Entity = null;
						previousValue.ADSLServices.Remove(this);
					}
					this._ADSLServiceGiftProfile.Entity = value;
					if ((value != null))
					{
						value.ADSLServices.Add(this);
						this._GiftProfileID = value.ID;
					}
					else
					{
						this._GiftProfileID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLServiceGiftProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceGroup_ADSLService", Storage="_ADSLServiceGroup", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLServiceGroup ADSLServiceGroup
		{
			get
			{
				return this._ADSLServiceGroup.Entity;
			}
			set
			{
				ADSLServiceGroup previousValue = this._ADSLServiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLServiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLServiceGroup.Entity = null;
						previousValue.ADSLServices.Remove(this);
					}
					this._ADSLServiceGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLServices.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("ADSLServiceGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceNetwork_ADSLService", Storage="_ADSLServiceNetwork", ThisKey="NetworkID", OtherKey="ID", IsForeignKey=true)]
		public ADSLServiceNetwork ADSLServiceNetwork
		{
			get
			{
				return this._ADSLServiceNetwork.Entity;
			}
			set
			{
				ADSLServiceNetwork previousValue = this._ADSLServiceNetwork.Entity;
				if (((previousValue != value) 
							|| (this._ADSLServiceNetwork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLServiceNetwork.Entity = null;
						previousValue.ADSLServices.Remove(this);
					}
					this._ADSLServiceNetwork.Entity = value;
					if ((value != null))
					{
						value.ADSLServices.Add(this);
						this._NetworkID = value.ID;
					}
					else
					{
						this._NetworkID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLServiceNetwork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceTraffic_ADSLService", Storage="_ADSLServiceTraffic", ThisKey="TrafficID", OtherKey="ID", IsForeignKey=true)]
		public ADSLServiceTraffic ADSLServiceTraffic
		{
			get
			{
				return this._ADSLServiceTraffic.Entity;
			}
			set
			{
				ADSLServiceTraffic previousValue = this._ADSLServiceTraffic.Entity;
				if (((previousValue != value) 
							|| (this._ADSLServiceTraffic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLServiceTraffic.Entity = null;
						previousValue.ADSLServices.Remove(this);
					}
					this._ADSLServiceTraffic.Entity = value;
					if ((value != null))
					{
						value.ADSLServices.Add(this);
						this._TrafficID = value.ID;
					}
					else
					{
						this._TrafficID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLServiceTraffic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_ADSLChangeServices(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_ADSLChangeServices(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_ADSLChangeServices1(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService1 = this;
		}
		
		private void detach_ADSLChangeServices1(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService1 = null;
		}
		
		private void attach_ADSLDischarges(ADSLDischarge entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_ADSLDischarges(ADSLDischarge entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_ADSLHistories(ADSLHistory entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_ADSLHistories(ADSLHistory entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_ADSLSellTraffics(ADSLSellTraffic entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_ADSLSellTraffics(ADSLSellTraffic entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_ADSLServiceCenters(ADSLServiceCenter entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_ADSLServiceCenters(ADSLServiceCenter entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_ADSLServiceSellers(ADSLServiceSeller entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_ADSLServiceSellers(ADSLServiceSeller entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_WirelessChangeServices(WirelessChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_WirelessChangeServices(WirelessChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_WirelessChangeServices1(WirelessChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService1 = this;
		}
		
		private void detach_WirelessChangeServices1(WirelessChangeService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService1 = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
		
		private void attach_WirelessSellTraffics(WirelessSellTraffic entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = this;
		}
		
		private void detach_WirelessSellTraffics(WirelessSellTraffic entity)
		{
			this.SendPropertyChanging();
			entity.ADSLService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLService1")]
	public partial class ADSLService1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Serial;
		
		private string _Name;
		
		private string _IBSName;
		
		private System.Nullable<int> _Credit;
		
		private string _Price;
		
		private string _Ghest;
		
		private string _Class;
		
		private long _SpeedClass;
		
		private bool _Special;
		
		private bool _Active;
		
		private bool _Visible;
		
		private bool _Agent;
		
		private bool _Register;
		
		private int _CgroupRef;
		
		private int _TownshipRef;
		
		private int _BranchRef;
		
		private System.Nullable<int> _Created;
		
		private string _ServiceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerialChanging(long value);
    partial void OnSerialChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIBSNameChanging(string value);
    partial void OnIBSNameChanged();
    partial void OnCreditChanging(System.Nullable<int> value);
    partial void OnCreditChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnGhestChanging(string value);
    partial void OnGhestChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnSpeedClassChanging(long value);
    partial void OnSpeedClassChanged();
    partial void OnSpecialChanging(bool value);
    partial void OnSpecialChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnAgentChanging(bool value);
    partial void OnAgentChanged();
    partial void OnRegisterChanging(bool value);
    partial void OnRegisterChanged();
    partial void OnCgroupRefChanging(int value);
    partial void OnCgroupRefChanged();
    partial void OnTownshipRefChanging(int value);
    partial void OnTownshipRefChanged();
    partial void OnBranchRefChanging(int value);
    partial void OnBranchRefChanged();
    partial void OnCreatedChanging(System.Nullable<int> value);
    partial void OnCreatedChanged();
    partial void OnServiceTypeChanging(string value);
    partial void OnServiceTypeChanged();
    #endregion
		
		public ADSLService1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBSName", DbType="VarChar(250)")]
		public string IBSName
		{
			get
			{
				return this._IBSName;
			}
			set
			{
				if ((this._IBSName != value))
				{
					this.OnIBSNameChanging(value);
					this.SendPropertyChanging();
					this._IBSName = value;
					this.SendPropertyChanged("IBSName");
					this.OnIBSNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Int")]
		public System.Nullable<int> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ghest", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Ghest
		{
			get
			{
				return this._Ghest;
			}
			set
			{
				if ((this._Ghest != value))
				{
					this.OnGhestChanging(value);
					this.SendPropertyChanging();
					this._Ghest = value;
					this.SendPropertyChanged("Ghest");
					this.OnGhestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeedClass", DbType="BigInt NOT NULL")]
		public long SpeedClass
		{
			get
			{
				return this._SpeedClass;
			}
			set
			{
				if ((this._SpeedClass != value))
				{
					this.OnSpeedClassChanging(value);
					this.SendPropertyChanging();
					this._SpeedClass = value;
					this.SendPropertyChanged("SpeedClass");
					this.OnSpeedClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special", DbType="Bit NOT NULL")]
		public bool Special
		{
			get
			{
				return this._Special;
			}
			set
			{
				if ((this._Special != value))
				{
					this.OnSpecialChanging(value);
					this.SendPropertyChanging();
					this._Special = value;
					this.SendPropertyChanged("Special");
					this.OnSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agent", DbType="Bit NOT NULL")]
		public bool Agent
		{
			get
			{
				return this._Agent;
			}
			set
			{
				if ((this._Agent != value))
				{
					this.OnAgentChanging(value);
					this.SendPropertyChanging();
					this._Agent = value;
					this.SendPropertyChanged("Agent");
					this.OnAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Register", DbType="Bit NOT NULL")]
		public bool Register
		{
			get
			{
				return this._Register;
			}
			set
			{
				if ((this._Register != value))
				{
					this.OnRegisterChanging(value);
					this.SendPropertyChanging();
					this._Register = value;
					this.SendPropertyChanged("Register");
					this.OnRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CgroupRef", DbType="Int NOT NULL")]
		public int CgroupRef
		{
			get
			{
				return this._CgroupRef;
			}
			set
			{
				if ((this._CgroupRef != value))
				{
					this.OnCgroupRefChanging(value);
					this.SendPropertyChanging();
					this._CgroupRef = value;
					this.SendPropertyChanged("CgroupRef");
					this.OnCgroupRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TownshipRef", DbType="Int NOT NULL")]
		public int TownshipRef
		{
			get
			{
				return this._TownshipRef;
			}
			set
			{
				if ((this._TownshipRef != value))
				{
					this.OnTownshipRefChanging(value);
					this.SendPropertyChanging();
					this._TownshipRef = value;
					this.SendPropertyChanged("TownshipRef");
					this.OnTownshipRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchRef", DbType="Int NOT NULL")]
		public int BranchRef
		{
			get
			{
				return this._BranchRef;
			}
			set
			{
				if ((this._BranchRef != value))
				{
					this.OnBranchRefChanging(value);
					this.SendPropertyChanging();
					this._BranchRef = value;
					this.SendPropertyChanged("BranchRef");
					this.OnBranchRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="Int")]
		public System.Nullable<int> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceBandWidth")]
	public partial class ADSLServiceBandWidth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<ADSLService> _ADSLServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ADSLServiceBandWidth()
		{
			this._ADSLServices = new EntitySet<ADSLService>(new Action<ADSLService>(this.attach_ADSLServices), new Action<ADSLService>(this.detach_ADSLServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceBandWidth_ADSLService", Storage="_ADSLServices", ThisKey="ID", OtherKey="BandWidthID")]
		public EntitySet<ADSLService> ADSLServices
		{
			get
			{
				return this._ADSLServices;
			}
			set
			{
				this._ADSLServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceBandWidth = this;
		}
		
		private void detach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceBandWidth = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceCenter")]
	public partial class ADSLServiceCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ADSLServiceID;
		
		private int _CenterID;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnADSLServiceIDChanging(int value);
    partial void OnADSLServiceIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    #endregion
		
		public ADSLServiceCenter()
		{
			this._ADSLService = default(EntityRef<ADSLService>);
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLServiceID", DbType="Int NOT NULL")]
		public int ADSLServiceID
		{
			get
			{
				return this._ADSLServiceID;
			}
			set
			{
				if ((this._ADSLServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLServiceID = value;
					this.SendPropertyChanged("ADSLServiceID");
					this.OnADSLServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLServiceCenter", Storage="_ADSLService", ThisKey="ADSLServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.ADSLServiceCenters.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceCenters.Add(this);
						this._ADSLServiceID = value.ID;
					}
					else
					{
						this._ADSLServiceID = default(int);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLServiceCenter", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLServiceCenters.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceCenters.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceDuration")]
	public partial class ADSLServiceDuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<ADSLService> _ADSLServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ADSLServiceDuration()
		{
			this._ADSLServices = new EntitySet<ADSLService>(new Action<ADSLService>(this.attach_ADSLServices), new Action<ADSLService>(this.detach_ADSLServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceDuration_ADSLService", Storage="_ADSLServices", ThisKey="ID", OtherKey="DurationID")]
		public EntitySet<ADSLService> ADSLServices
		{
			get
			{
				return this._ADSLServices;
			}
			set
			{
				this._ADSLServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceDuration = this;
		}
		
		private void detach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceDuration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceGiftProfile")]
	public partial class ADSLServiceGiftProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<ADSLService> _ADSLServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ADSLServiceGiftProfile()
		{
			this._ADSLServices = new EntitySet<ADSLService>(new Action<ADSLService>(this.attach_ADSLServices), new Action<ADSLService>(this.detach_ADSLServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceGiftProfile_ADSLService", Storage="_ADSLServices", ThisKey="ID", OtherKey="GiftProfileID")]
		public EntitySet<ADSLService> ADSLServices
		{
			get
			{
				return this._ADSLServices;
			}
			set
			{
				this._ADSLServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceGiftProfile = this;
		}
		
		private void detach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceGiftProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceGroup")]
	public partial class ADSLServiceGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerGroupID;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _TimeoutDate;
		
		private System.Nullable<bool> _CutforDebt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<ADSLService> _ADSLServices;
		
		private EntitySet<ADSLServiceGroupCenter> _ADSLServiceGroupCenters;
		
		private EntitySet<ADSLServiceGroupSeller> _ADSLServiceGroupSellers;
		
		private EntityRef<ADSLCustomerGroup> _ADSLCustomerGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerGroupIDChanging(System.Nullable<int> value);
    partial void OnCustomerGroupIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnTimeoutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeoutDateChanged();
    partial void OnCutforDebtChanging(System.Nullable<bool> value);
    partial void OnCutforDebtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ADSLServiceGroup()
		{
			this._ADSLServices = new EntitySet<ADSLService>(new Action<ADSLService>(this.attach_ADSLServices), new Action<ADSLService>(this.detach_ADSLServices));
			this._ADSLServiceGroupCenters = new EntitySet<ADSLServiceGroupCenter>(new Action<ADSLServiceGroupCenter>(this.attach_ADSLServiceGroupCenters), new Action<ADSLServiceGroupCenter>(this.detach_ADSLServiceGroupCenters));
			this._ADSLServiceGroupSellers = new EntitySet<ADSLServiceGroupSeller>(new Action<ADSLServiceGroupSeller>(this.attach_ADSLServiceGroupSellers), new Action<ADSLServiceGroupSeller>(this.detach_ADSLServiceGroupSellers));
			this._ADSLCustomerGroup = default(EntityRef<ADSLCustomerGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGroupID", DbType="Int")]
		public System.Nullable<int> CustomerGroupID
		{
			get
			{
				return this._CustomerGroupID;
			}
			set
			{
				if ((this._CustomerGroupID != value))
				{
					if (this._ADSLCustomerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerGroupID = value;
					this.SendPropertyChanged("CustomerGroupID");
					this.OnCustomerGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeoutDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TimeoutDate
		{
			get
			{
				return this._TimeoutDate;
			}
			set
			{
				if ((this._TimeoutDate != value))
				{
					this.OnTimeoutDateChanging(value);
					this.SendPropertyChanging();
					this._TimeoutDate = value;
					this.SendPropertyChanged("TimeoutDate");
					this.OnTimeoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutforDebt", DbType="Bit")]
		public System.Nullable<bool> CutforDebt
		{
			get
			{
				return this._CutforDebt;
			}
			set
			{
				if ((this._CutforDebt != value))
				{
					this.OnCutforDebtChanging(value);
					this.SendPropertyChanging();
					this._CutforDebt = value;
					this.SendPropertyChanged("CutforDebt");
					this.OnCutforDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceGroup_ADSLService", Storage="_ADSLServices", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<ADSLService> ADSLServices
		{
			get
			{
				return this._ADSLServices;
			}
			set
			{
				this._ADSLServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceGroup_ADSLServiceGroupCenter", Storage="_ADSLServiceGroupCenters", ThisKey="ID", OtherKey="ServiceGroupID")]
		public EntitySet<ADSLServiceGroupCenter> ADSLServiceGroupCenters
		{
			get
			{
				return this._ADSLServiceGroupCenters;
			}
			set
			{
				this._ADSLServiceGroupCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceGroup_ADSLServiceGroupSeller", Storage="_ADSLServiceGroupSellers", ThisKey="ID", OtherKey="ServiceGroupID")]
		public EntitySet<ADSLServiceGroupSeller> ADSLServiceGroupSellers
		{
			get
			{
				return this._ADSLServiceGroupSellers;
			}
			set
			{
				this._ADSLServiceGroupSellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_ADSLServiceGroup", Storage="_ADSLCustomerGroup", ThisKey="CustomerGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerGroup ADSLCustomerGroup
		{
			get
			{
				return this._ADSLCustomerGroup.Entity;
			}
			set
			{
				ADSLCustomerGroup previousValue = this._ADSLCustomerGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerGroup.Entity = null;
						previousValue.ADSLServiceGroups.Remove(this);
					}
					this._ADSLCustomerGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceGroups.Add(this);
						this._CustomerGroupID = value.ID;
					}
					else
					{
						this._CustomerGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceGroup = this;
		}
		
		private void detach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceGroup = null;
		}
		
		private void attach_ADSLServiceGroupCenters(ADSLServiceGroupCenter entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceGroup = this;
		}
		
		private void detach_ADSLServiceGroupCenters(ADSLServiceGroupCenter entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceGroup = null;
		}
		
		private void attach_ADSLServiceGroupSellers(ADSLServiceGroupSeller entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceGroup = this;
		}
		
		private void detach_ADSLServiceGroupSellers(ADSLServiceGroupSeller entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceGroupCenter")]
	public partial class ADSLServiceGroupCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ServiceGroupID;
		
		private int _CenterID;
		
		private EntityRef<ADSLServiceGroup> _ADSLServiceGroup;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceGroupIDChanging(int value);
    partial void OnServiceGroupIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    #endregion
		
		public ADSLServiceGroupCenter()
		{
			this._ADSLServiceGroup = default(EntityRef<ADSLServiceGroup>);
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceGroupID", DbType="Int NOT NULL")]
		public int ServiceGroupID
		{
			get
			{
				return this._ServiceGroupID;
			}
			set
			{
				if ((this._ServiceGroupID != value))
				{
					if (this._ADSLServiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceGroupID = value;
					this.SendPropertyChanged("ServiceGroupID");
					this.OnServiceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceGroup_ADSLServiceGroupCenter", Storage="_ADSLServiceGroup", ThisKey="ServiceGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLServiceGroup ADSLServiceGroup
		{
			get
			{
				return this._ADSLServiceGroup.Entity;
			}
			set
			{
				ADSLServiceGroup previousValue = this._ADSLServiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLServiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLServiceGroup.Entity = null;
						previousValue.ADSLServiceGroupCenters.Remove(this);
					}
					this._ADSLServiceGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceGroupCenters.Add(this);
						this._ServiceGroupID = value.ID;
					}
					else
					{
						this._ServiceGroupID = default(int);
					}
					this.SendPropertyChanged("ADSLServiceGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLServiceGroupCenter", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLServiceGroupCenters.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceGroupCenters.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceGroupSeller")]
	public partial class ADSLServiceGroupSeller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ServiceGroupID;
		
		private int _SellerAgentID;
		
		private EntityRef<ADSLSellerAgent> _ADSLSellerAgent;
		
		private EntityRef<ADSLServiceGroup> _ADSLServiceGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceGroupIDChanging(int value);
    partial void OnServiceGroupIDChanged();
    partial void OnSellerAgentIDChanging(int value);
    partial void OnSellerAgentIDChanged();
    #endregion
		
		public ADSLServiceGroupSeller()
		{
			this._ADSLSellerAgent = default(EntityRef<ADSLSellerAgent>);
			this._ADSLServiceGroup = default(EntityRef<ADSLServiceGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceGroupID", DbType="Int NOT NULL")]
		public int ServiceGroupID
		{
			get
			{
				return this._ServiceGroupID;
			}
			set
			{
				if ((this._ServiceGroupID != value))
				{
					if (this._ADSLServiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceGroupID = value;
					this.SendPropertyChanged("ServiceGroupID");
					this.OnServiceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerAgentID", DbType="Int NOT NULL")]
		public int SellerAgentID
		{
			get
			{
				return this._SellerAgentID;
			}
			set
			{
				if ((this._SellerAgentID != value))
				{
					if (this._ADSLSellerAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerAgentIDChanging(value);
					this.SendPropertyChanging();
					this._SellerAgentID = value;
					this.SendPropertyChanged("SellerAgentID");
					this.OnSellerAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLServiceGroupSeller", Storage="_ADSLSellerAgent", ThisKey="SellerAgentID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerAgent ADSLSellerAgent
		{
			get
			{
				return this._ADSLSellerAgent.Entity;
			}
			set
			{
				ADSLSellerAgent previousValue = this._ADSLSellerAgent.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgent.Entity = null;
						previousValue.ADSLServiceGroupSellers.Remove(this);
					}
					this._ADSLSellerAgent.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceGroupSellers.Add(this);
						this._SellerAgentID = value.ID;
					}
					else
					{
						this._SellerAgentID = default(int);
					}
					this.SendPropertyChanged("ADSLSellerAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceGroup_ADSLServiceGroupSeller", Storage="_ADSLServiceGroup", ThisKey="ServiceGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLServiceGroup ADSLServiceGroup
		{
			get
			{
				return this._ADSLServiceGroup.Entity;
			}
			set
			{
				ADSLServiceGroup previousValue = this._ADSLServiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLServiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLServiceGroup.Entity = null;
						previousValue.ADSLServiceGroupSellers.Remove(this);
					}
					this._ADSLServiceGroup.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceGroupSellers.Add(this);
						this._ServiceGroupID = value.ID;
					}
					else
					{
						this._ServiceGroupID = default(int);
					}
					this.SendPropertyChanged("ADSLServiceGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceNetwork")]
	public partial class ADSLServiceNetwork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<ADSLService> _ADSLServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ADSLServiceNetwork()
		{
			this._ADSLServices = new EntitySet<ADSLService>(new Action<ADSLService>(this.attach_ADSLServices), new Action<ADSLService>(this.detach_ADSLServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceNetwork_ADSLService", Storage="_ADSLServices", ThisKey="ID", OtherKey="NetworkID")]
		public EntitySet<ADSLService> ADSLServices
		{
			get
			{
				return this._ADSLServices;
			}
			set
			{
				this._ADSLServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceNetwork = this;
		}
		
		private void detach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceNetwork = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceSeller")]
	public partial class ADSLServiceSeller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ADSLServiceID;
		
		private int _SellerAgentID;
		
		private EntityRef<ADSLSellerAgent> _ADSLSellerAgent;
		
		private EntityRef<ADSLService> _ADSLService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnADSLServiceIDChanging(int value);
    partial void OnADSLServiceIDChanged();
    partial void OnSellerAgentIDChanging(int value);
    partial void OnSellerAgentIDChanged();
    #endregion
		
		public ADSLServiceSeller()
		{
			this._ADSLSellerAgent = default(EntityRef<ADSLSellerAgent>);
			this._ADSLService = default(EntityRef<ADSLService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLServiceID", DbType="Int NOT NULL")]
		public int ADSLServiceID
		{
			get
			{
				return this._ADSLServiceID;
			}
			set
			{
				if ((this._ADSLServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLServiceID = value;
					this.SendPropertyChanged("ADSLServiceID");
					this.OnADSLServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerAgentID", DbType="Int NOT NULL")]
		public int SellerAgentID
		{
			get
			{
				return this._SellerAgentID;
			}
			set
			{
				if ((this._SellerAgentID != value))
				{
					if (this._ADSLSellerAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerAgentIDChanging(value);
					this.SendPropertyChanging();
					this._SellerAgentID = value;
					this.SendPropertyChanged("SellerAgentID");
					this.OnSellerAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_ADSLServiceSeller", Storage="_ADSLSellerAgent", ThisKey="SellerAgentID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerAgent ADSLSellerAgent
		{
			get
			{
				return this._ADSLSellerAgent.Entity;
			}
			set
			{
				ADSLSellerAgent previousValue = this._ADSLSellerAgent.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgent.Entity = null;
						previousValue.ADSLServiceSellers.Remove(this);
					}
					this._ADSLSellerAgent.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceSellers.Add(this);
						this._SellerAgentID = value.ID;
					}
					else
					{
						this._SellerAgentID = default(int);
					}
					this.SendPropertyChanged("ADSLSellerAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_ADSLServiceSeller", Storage="_ADSLService", ThisKey="ADSLServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.ADSLServiceSellers.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.ADSLServiceSellers.Add(this);
						this._ADSLServiceID = value.ID;
					}
					else
					{
						this._ADSLServiceID = default(int);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLServiceTraffic")]
	public partial class ADSLServiceTraffic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private System.Nullable<int> _Credit;
		
		private EntitySet<ADSLService> _ADSLServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCreditChanging(System.Nullable<int> value);
    partial void OnCreditChanged();
    #endregion
		
		public ADSLServiceTraffic()
		{
			this._ADSLServices = new EntitySet<ADSLService>(new Action<ADSLService>(this.attach_ADSLServices), new Action<ADSLService>(this.detach_ADSLServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Int")]
		public System.Nullable<int> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLServiceTraffic_ADSLService", Storage="_ADSLServices", ThisKey="ID", OtherKey="TrafficID")]
		public EntitySet<ADSLService> ADSLServices
		{
			get
			{
				return this._ADSLServices;
			}
			set
			{
				this._ADSLServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceTraffic = this;
		}
		
		private void detach_ADSLServices(ADSLService entity)
		{
			this.SendPropertyChanging();
			entity.ADSLServiceTraffic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSetupContactInformation")]
	public partial class ADSLSetupContactInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _RequestID;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Time;
		
		private string _Description;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ADSLSetupContactInformation()
		{
			this._Request = default(EntityRef<Request>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(20)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLSetupContactInformation", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLSetupContactInformations.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLSetupContactInformations.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSetupContactInformation", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ADSLSetupContactInformations.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ADSLSetupContactInformations.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSupportCommnet")]
	public partial class ADSLSupportCommnet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private int _UserID;
		
		private System.DateTime _InsertDate;
		
		private string _Commnet;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCommnetChanging(string value);
    partial void OnCommnetChanged();
    #endregion
		
		public ADSLSupportCommnet()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commnet", DbType="NVarChar(MAX)")]
		public string Commnet
		{
			get
			{
				return this._Commnet;
			}
			set
			{
				if ((this._Commnet != value))
				{
					this.OnCommnetChanging(value);
					this.SendPropertyChanging();
					this._Commnet = value;
					this.SendPropertyChanged("Commnet");
					this.OnCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSupportCommnet", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ADSLSupportCommnets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ADSLSupportCommnets.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLSupportRequest")]
	public partial class ADSLSupportRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _FirstDescription;
		
		private string _ResultDescription;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnFirstDescriptionChanging(string value);
    partial void OnFirstDescriptionChanged();
    partial void OnResultDescriptionChanging(string value);
    partial void OnResultDescriptionChanged();
    #endregion
		
		public ADSLSupportRequest()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDescription", DbType="NVarChar(MAX)")]
		public string FirstDescription
		{
			get
			{
				return this._FirstDescription;
			}
			set
			{
				if ((this._FirstDescription != value))
				{
					this.OnFirstDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FirstDescription = value;
					this.SendPropertyChanged("FirstDescription");
					this.OnFirstDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDescription", DbType="NVarChar(MAX)")]
		public string ResultDescription
		{
			get
			{
				return this._ResultDescription;
			}
			set
			{
				if ((this._ResultDescription != value))
				{
					this.OnResultDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ResultDescription = value;
					this.SendPropertyChanged("ResultDescription");
					this.OnResultDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLSupportRequest", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ADSLSupportRequest = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ADSLSupportRequest = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLTelephoneAccuracy")]
	public partial class ADSLTelephoneAccuracy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _TelephoneNo;
		
		private int _CenterID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _CorrectDate;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCorrectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCorrectDateChanged();
    #endregion
		
		public ADSLTelephoneAccuracy()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CorrectDate
		{
			get
			{
				return this._CorrectDate;
			}
			set
			{
				if ((this._CorrectDate != value))
				{
					this.OnCorrectDateChanging(value);
					this.SendPropertyChanging();
					this._CorrectDate = value;
					this.SendPropertyChanged("CorrectDate");
					this.OnCorrectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLTelephoneAccuracy", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLTelephoneAccuracies.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLTelephoneAccuracies.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLTelephoneNoHistory")]
	public partial class ADSLTelephoneNoHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private System.Nullable<int> _PAPInfoID;
		
		private int _CenterID;
		
		private System.Nullable<System.DateTime> _InstalDate;
		
		private System.Nullable<System.DateTime> _DischargeDate;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnPAPInfoIDChanging(System.Nullable<int> value);
    partial void OnPAPInfoIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnInstalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstalDateChanged();
    partial void OnDischargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDischargeDateChanged();
    #endregion
		
		public ADSLTelephoneNoHistory()
		{
			this._Center = default(EntityRef<Center>);
			this._PAPInfo = default(EntityRef<PAPInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int")]
		public System.Nullable<int> PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstalDate
		{
			get
			{
				return this._InstalDate;
			}
			set
			{
				if ((this._InstalDate != value))
				{
					this.OnInstalDateChanging(value);
					this.SendPropertyChanging();
					this._InstalDate = value;
					this.SendPropertyChanged("InstalDate");
					this.OnInstalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this.OnDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._DischargeDate = value;
					this.SendPropertyChanged("DischargeDate");
					this.OnDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLTelephoneNoHistory", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ADSLTelephoneNoHistories.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ADSLTelephoneNoHistories.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSLTelephoneNoHistory", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.ADSLTelephoneNoHistories.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.ADSLTelephoneNoHistories.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADSLTrafficBaseCost")]
	public partial class ADSLTrafficBaseCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private long _Cost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCostChanging(long value);
    partial void OnCostChanged();
    #endregion
		
		public ADSLTrafficBaseCost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt NOT NULL")]
		public long Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Announce")]
	public partial class Announce : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AnnounceTitle;
		
		private string _IssueNumber;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.Guid> _DocumentsFileID;
		
		private System.Nullable<byte> _Status;
		
		private EntitySet<DocumentRequestType> _DocumentRequestTypes;
		
		private EntitySet<QuotaDiscount> _QuotaDiscounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAnnounceTitleChanging(string value);
    partial void OnAnnounceTitleChanged();
    partial void OnIssueNumberChanging(string value);
    partial void OnIssueNumberChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDocumentsFileIDChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentsFileIDChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public Announce()
		{
			this._DocumentRequestTypes = new EntitySet<DocumentRequestType>(new Action<DocumentRequestType>(this.attach_DocumentRequestTypes), new Action<DocumentRequestType>(this.detach_DocumentRequestTypes));
			this._QuotaDiscounts = new EntitySet<QuotaDiscount>(new Action<QuotaDiscount>(this.attach_QuotaDiscounts), new Action<QuotaDiscount>(this.detach_QuotaDiscounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceTitle", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string AnnounceTitle
		{
			get
			{
				return this._AnnounceTitle;
			}
			set
			{
				if ((this._AnnounceTitle != value))
				{
					this.OnAnnounceTitleChanging(value);
					this.SendPropertyChanging();
					this._AnnounceTitle = value;
					this.SendPropertyChanged("AnnounceTitle");
					this.OnAnnounceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IssueNumber
		{
			get
			{
				return this._IssueNumber;
			}
			set
			{
				if ((this._IssueNumber != value))
				{
					this.OnIssueNumberChanging(value);
					this.SendPropertyChanging();
					this._IssueNumber = value;
					this.SendPropertyChanged("IssueNumber");
					this.OnIssueNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentsFileID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentsFileID
		{
			get
			{
				return this._DocumentsFileID;
			}
			set
			{
				if ((this._DocumentsFileID != value))
				{
					this.OnDocumentsFileIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentsFileID = value;
					this.SendPropertyChanged("DocumentsFileID");
					this.OnDocumentsFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Announce_DocumentRequestType", Storage="_DocumentRequestTypes", ThisKey="ID", OtherKey="AnnounceID")]
		public EntitySet<DocumentRequestType> DocumentRequestTypes
		{
			get
			{
				return this._DocumentRequestTypes;
			}
			set
			{
				this._DocumentRequestTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Announce_QuotaDiscount", Storage="_QuotaDiscounts", ThisKey="ID", OtherKey="AnnounceID")]
		public EntitySet<QuotaDiscount> QuotaDiscounts
		{
			get
			{
				return this._QuotaDiscounts;
			}
			set
			{
				this._QuotaDiscounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentRequestTypes(DocumentRequestType entity)
		{
			this.SendPropertyChanging();
			entity.Announce = this;
		}
		
		private void detach_DocumentRequestTypes(DocumentRequestType entity)
		{
			this.SendPropertyChanging();
			entity.Announce = null;
		}
		
		private void attach_QuotaDiscounts(QuotaDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Announce = this;
		}
		
		private void detach_QuotaDiscounts(QuotaDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Announce = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnnounceTo118")]
	public partial class AnnounceTo118 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _AnnounceTypeID;
		
		private long _SubscriberAddressID;
		
		private long _SubscriberID;
		
		private byte _OneOneEightReportID;
		
		private byte _Status;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAnnounceTypeIDChanging(byte value);
    partial void OnAnnounceTypeIDChanged();
    partial void OnSubscriberAddressIDChanging(long value);
    partial void OnSubscriberAddressIDChanged();
    partial void OnSubscriberIDChanging(long value);
    partial void OnSubscriberIDChanged();
    partial void OnOneOneEightReportIDChanging(byte value);
    partial void OnOneOneEightReportIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public AnnounceTo118()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceTypeID", DbType="TinyInt NOT NULL")]
		public byte AnnounceTypeID
		{
			get
			{
				return this._AnnounceTypeID;
			}
			set
			{
				if ((this._AnnounceTypeID != value))
				{
					this.OnAnnounceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AnnounceTypeID = value;
					this.SendPropertyChanged("AnnounceTypeID");
					this.OnAnnounceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberAddressID", DbType="BigInt NOT NULL")]
		public long SubscriberAddressID
		{
			get
			{
				return this._SubscriberAddressID;
			}
			set
			{
				if ((this._SubscriberAddressID != value))
				{
					this.OnSubscriberAddressIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriberAddressID = value;
					this.SendPropertyChanged("SubscriberAddressID");
					this.OnSubscriberAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberID", DbType="BigInt NOT NULL")]
		public long SubscriberID
		{
			get
			{
				return this._SubscriberID;
			}
			set
			{
				if ((this._SubscriberID != value))
				{
					this.OnSubscriberIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriberID = value;
					this.SendPropertyChanged("SubscriberID");
					this.OnSubscriberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OneOneEightReportID", DbType="TinyInt NOT NULL")]
		public byte OneOneEightReportID
		{
			get
			{
				return this._OneOneEightReportID;
			}
			set
			{
				if ((this._OneOneEightReportID != value))
				{
					this.OnOneOneEightReportIDChanging(value);
					this.SendPropertyChanging();
					this._OneOneEightReportID = value;
					this.SendPropertyChanged("OneOneEightReportID");
					this.OnOneOneEightReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_AnnounceTo118", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.AnnounceTo118 = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.AnnounceTo118 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AORBPostAndCabinet")]
	public partial class AORBPostAndCabinet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<Cabinet> _Cabinets;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AORBPostAndCabinet()
		{
			this._Cabinets = new EntitySet<Cabinet>(new Action<Cabinet>(this.attach_Cabinets), new Action<Cabinet>(this.detach_Cabinets));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AORBPostAndCabinet_Cabinet", Storage="_Cabinets", ThisKey="ID", OtherKey="ABType")]
		public EntitySet<Cabinet> Cabinets
		{
			get
			{
				return this._Cabinets;
			}
			set
			{
				this._Cabinets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AORBPostAndCabinet_Post", Storage="_Posts", ThisKey="ID", OtherKey="AorBType")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.AORBPostAndCabinet = this;
		}
		
		private void detach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.AORBPostAndCabinet = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.AORBPostAndCabinet = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.AORBPostAndCabinet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BankName;
		
		private System.Nullable<int> _BankCode;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<BankBranch> _BankBranches;
		
		private EntitySet<RequestPayment> _RequestPayments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankCodeChanging(System.Nullable<int> value);
    partial void OnBankCodeChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public Bank()
		{
			this._BankBranches = new EntitySet<BankBranch>(new Action<BankBranch>(this.attach_BankBranches), new Action<BankBranch>(this.detach_BankBranches));
			this._RequestPayments = new EntitySet<RequestPayment>(new Action<RequestPayment>(this.attach_RequestPayments), new Action<RequestPayment>(this.detach_RequestPayments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="Int")]
		public System.Nullable<int> BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_BankBranch", Storage="_BankBranches", ThisKey="ID", OtherKey="BankID")]
		public EntitySet<BankBranch> BankBranches
		{
			get
			{
				return this._BankBranches;
			}
			set
			{
				this._BankBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_RequestPayment", Storage="_RequestPayments", ThisKey="ID", OtherKey="BankID")]
		public EntitySet<RequestPayment> RequestPayments
		{
			get
			{
				return this._RequestPayments;
			}
			set
			{
				this._RequestPayments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankBranches(BankBranch entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_BankBranches(BankBranch entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
		
		private void attach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankBranch")]
	public partial class BankBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BankID;
		
		private string _BranchCode;
		
		private string _BranchName;
		
		private string _AccountNo;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<RequestPayment> _RequestPayments;
		
		private EntityRef<Bank> _Bank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBankIDChanging(int value);
    partial void OnBankIDChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public BankBranch()
		{
			this._RequestPayments = new EntitySet<RequestPayment>(new Action<RequestPayment>(this.attach_RequestPayments), new Action<RequestPayment>(this.detach_RequestPayments));
			this._Bank = default(EntityRef<Bank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankBranch_RequestPayment", Storage="_RequestPayments", ThisKey="ID", OtherKey="BankBranchID")]
		public EntitySet<RequestPayment> RequestPayments
		{
			get
			{
				return this._RequestPayments;
			}
			set
			{
				this._RequestPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_BankBranch", Storage="_Bank", ThisKey="BankID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.BankBranches.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.BankBranches.Add(this);
						this._BankID = value.ID;
					}
					else
					{
						this._BankID = default(int);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.BankBranch = this;
		}
		
		private void detach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.BankBranch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaseCost")]
	public partial class BaseCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private long _Cost;
		
		private bool _IsFormula;
		
		private string _Formula;
		
		private System.Nullable<int> _Tax;
		
		private System.Nullable<int> _RequestTypeID;
		
		private byte _PaymentType;
		
		private bool _IsCheque;
		
		private string _AccountNumber;
		
		private System.Nullable<int> _WorkUnit;
		
		private byte _ChargingGroup;
		
		private bool _IsPerodic;
		
		private bool _IsActive;
		
		private System.Nullable<int> _QuotaDiscountID;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private string _Description;
		
		private bool _IsDeposit;
		
		private bool _UseOutBound;
		
		private bool _UseZeroBlock;
		
		private bool _UseCableMeter;
		
		private bool _IsReadOnly;
		
		private EntitySet<Installment> _Installments;
		
		private EntitySet<RequestPayment> _RequestPayments;
		
		private EntityRef<QuotaDiscount> _QuotaDiscount;
		
		private EntityRef<RequestType> _RequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCostChanging(long value);
    partial void OnCostChanged();
    partial void OnIsFormulaChanging(bool value);
    partial void OnIsFormulaChanged();
    partial void OnFormulaChanging(string value);
    partial void OnFormulaChanged();
    partial void OnTaxChanging(System.Nullable<int> value);
    partial void OnTaxChanged();
    partial void OnRequestTypeIDChanging(System.Nullable<int> value);
    partial void OnRequestTypeIDChanged();
    partial void OnPaymentTypeChanging(byte value);
    partial void OnPaymentTypeChanged();
    partial void OnIsChequeChanging(bool value);
    partial void OnIsChequeChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnWorkUnitChanging(System.Nullable<int> value);
    partial void OnWorkUnitChanged();
    partial void OnChargingGroupChanging(byte value);
    partial void OnChargingGroupChanged();
    partial void OnIsPerodicChanging(bool value);
    partial void OnIsPerodicChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnQuotaDiscountIDChanging(System.Nullable<int> value);
    partial void OnQuotaDiscountIDChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDepositChanging(bool value);
    partial void OnIsDepositChanged();
    partial void OnUseOutBoundChanging(bool value);
    partial void OnUseOutBoundChanged();
    partial void OnUseZeroBlockChanging(bool value);
    partial void OnUseZeroBlockChanged();
    partial void OnUseCableMeterChanging(bool value);
    partial void OnUseCableMeterChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    #endregion
		
		public BaseCost()
		{
			this._Installments = new EntitySet<Installment>(new Action<Installment>(this.attach_Installments), new Action<Installment>(this.detach_Installments));
			this._RequestPayments = new EntitySet<RequestPayment>(new Action<RequestPayment>(this.attach_RequestPayments), new Action<RequestPayment>(this.detach_RequestPayments));
			this._QuotaDiscount = default(EntityRef<QuotaDiscount>);
			this._RequestType = default(EntityRef<RequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt NOT NULL")]
		public long Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFormula", DbType="Bit NOT NULL")]
		public bool IsFormula
		{
			get
			{
				return this._IsFormula;
			}
			set
			{
				if ((this._IsFormula != value))
				{
					this.OnIsFormulaChanging(value);
					this.SendPropertyChanging();
					this._IsFormula = value;
					this.SendPropertyChanged("IsFormula");
					this.OnIsFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Formula", DbType="NVarChar(200)")]
		public string Formula
		{
			get
			{
				return this._Formula;
			}
			set
			{
				if ((this._Formula != value))
				{
					this.OnFormulaChanging(value);
					this.SendPropertyChanging();
					this._Formula = value;
					this.SendPropertyChanged("Formula");
					this.OnFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Int")]
		public System.Nullable<int> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int")]
		public System.Nullable<int> RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="TinyInt NOT NULL")]
		public byte PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheque", DbType="Bit NOT NULL")]
		public bool IsCheque
		{
			get
			{
				return this._IsCheque;
			}
			set
			{
				if ((this._IsCheque != value))
				{
					this.OnIsChequeChanging(value);
					this.SendPropertyChanging();
					this._IsCheque = value;
					this.SendPropertyChanged("IsCheque");
					this.OnIsChequeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkUnit", DbType="Int")]
		public System.Nullable<int> WorkUnit
		{
			get
			{
				return this._WorkUnit;
			}
			set
			{
				if ((this._WorkUnit != value))
				{
					this.OnWorkUnitChanging(value);
					this.SendPropertyChanging();
					this._WorkUnit = value;
					this.SendPropertyChanged("WorkUnit");
					this.OnWorkUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargingGroup", DbType="TinyInt NOT NULL")]
		public byte ChargingGroup
		{
			get
			{
				return this._ChargingGroup;
			}
			set
			{
				if ((this._ChargingGroup != value))
				{
					this.OnChargingGroupChanging(value);
					this.SendPropertyChanging();
					this._ChargingGroup = value;
					this.SendPropertyChanged("ChargingGroup");
					this.OnChargingGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPerodic", DbType="Bit NOT NULL")]
		public bool IsPerodic
		{
			get
			{
				return this._IsPerodic;
			}
			set
			{
				if ((this._IsPerodic != value))
				{
					this.OnIsPerodicChanging(value);
					this.SendPropertyChanging();
					this._IsPerodic = value;
					this.SendPropertyChanged("IsPerodic");
					this.OnIsPerodicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotaDiscountID", DbType="Int")]
		public System.Nullable<int> QuotaDiscountID
		{
			get
			{
				return this._QuotaDiscountID;
			}
			set
			{
				if ((this._QuotaDiscountID != value))
				{
					if (this._QuotaDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuotaDiscountIDChanging(value);
					this.SendPropertyChanging();
					this._QuotaDiscountID = value;
					this.SendPropertyChanged("QuotaDiscountID");
					this.OnQuotaDiscountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeposit", DbType="Bit NOT NULL")]
		public bool IsDeposit
		{
			get
			{
				return this._IsDeposit;
			}
			set
			{
				if ((this._IsDeposit != value))
				{
					this.OnIsDepositChanging(value);
					this.SendPropertyChanging();
					this._IsDeposit = value;
					this.SendPropertyChanged("IsDeposit");
					this.OnIsDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseOutBound", DbType="Bit NOT NULL")]
		public bool UseOutBound
		{
			get
			{
				return this._UseOutBound;
			}
			set
			{
				if ((this._UseOutBound != value))
				{
					this.OnUseOutBoundChanging(value);
					this.SendPropertyChanging();
					this._UseOutBound = value;
					this.SendPropertyChanged("UseOutBound");
					this.OnUseOutBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseZeroBlock", DbType="Bit NOT NULL")]
		public bool UseZeroBlock
		{
			get
			{
				return this._UseZeroBlock;
			}
			set
			{
				if ((this._UseZeroBlock != value))
				{
					this.OnUseZeroBlockChanging(value);
					this.SendPropertyChanging();
					this._UseZeroBlock = value;
					this.SendPropertyChanged("UseZeroBlock");
					this.OnUseZeroBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCableMeter", DbType="Bit NOT NULL")]
		public bool UseCableMeter
		{
			get
			{
				return this._UseCableMeter;
			}
			set
			{
				if ((this._UseCableMeter != value))
				{
					this.OnUseCableMeterChanging(value);
					this.SendPropertyChanging();
					this._UseCableMeter = value;
					this.SendPropertyChanged("UseCableMeter");
					this.OnUseCableMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseCost_Installment", Storage="_Installments", ThisKey="ID", OtherKey="BaseCostID")]
		public EntitySet<Installment> Installments
		{
			get
			{
				return this._Installments;
			}
			set
			{
				this._Installments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseCost_RequestPayment", Storage="_RequestPayments", ThisKey="ID", OtherKey="BaseCostID")]
		public EntitySet<RequestPayment> RequestPayments
		{
			get
			{
				return this._RequestPayments;
			}
			set
			{
				this._RequestPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuotaDiscount_BaseCost", Storage="_QuotaDiscount", ThisKey="QuotaDiscountID", OtherKey="ID", IsForeignKey=true)]
		public QuotaDiscount QuotaDiscount
		{
			get
			{
				return this._QuotaDiscount.Entity;
			}
			set
			{
				QuotaDiscount previousValue = this._QuotaDiscount.Entity;
				if (((previousValue != value) 
							|| (this._QuotaDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuotaDiscount.Entity = null;
						previousValue.BaseCosts.Remove(this);
					}
					this._QuotaDiscount.Entity = value;
					if ((value != null))
					{
						value.BaseCosts.Add(this);
						this._QuotaDiscountID = value.ID;
					}
					else
					{
						this._QuotaDiscountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuotaDiscount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_BaseCost", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.BaseCosts.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.BaseCosts.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Installments(Installment entity)
		{
			this.SendPropertyChanging();
			entity.BaseCost = this;
		}
		
		private void detach_Installments(Installment entity)
		{
			this.SendPropertyChanging();
			entity.BaseCost = null;
		}
		
		private void attach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.BaseCost = this;
		}
		
		private void detach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.BaseCost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlackList")]
	public partial class BlackList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _TypeMember;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<long> _CustomerID;
		
		private System.Nullable<long> _AddressID;
		
		private byte _ReasonID;
		
		private System.DateTime _InsertDate;
		
		private int _CreatorUserID;
		
		private System.Nullable<System.DateTime> _ExitDate;
		
		private System.Nullable<int> _ExitUserID;
		
		private bool _Status;
		
		private string _ArrestReference;
		
		private string _ArrestLetterNo;
		
		private System.Nullable<System.DateTime> _ArrestLetterNoDate;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<BlackListReason> _BlackListReason;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeMemberChanging(byte value);
    partial void OnTypeMemberChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnAddressIDChanging(System.Nullable<long> value);
    partial void OnAddressIDChanged();
    partial void OnReasonIDChanging(byte value);
    partial void OnReasonIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCreatorUserIDChanging(int value);
    partial void OnCreatorUserIDChanged();
    partial void OnExitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExitDateChanged();
    partial void OnExitUserIDChanging(System.Nullable<int> value);
    partial void OnExitUserIDChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnArrestReferenceChanging(string value);
    partial void OnArrestReferenceChanged();
    partial void OnArrestLetterNoChanging(string value);
    partial void OnArrestLetterNoChanged();
    partial void OnArrestLetterNoDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrestLetterNoDateChanged();
    #endregion
		
		public BlackList()
		{
			this._Address = default(EntityRef<Address>);
			this._BlackListReason = default(EntityRef<BlackListReason>);
			this._Telephone = default(EntityRef<Telephone>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMember", DbType="TinyInt NOT NULL")]
		public byte TypeMember
		{
			get
			{
				return this._TypeMember;
			}
			set
			{
				if ((this._TypeMember != value))
				{
					this.OnTypeMemberChanging(value);
					this.SendPropertyChanging();
					this._TypeMember = value;
					this.SendPropertyChanged("TypeMember");
					this.OnTypeMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="BigInt")]
		public System.Nullable<long> AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="TinyInt NOT NULL")]
		public byte ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					if (this._BlackListReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int NOT NULL")]
		public int CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExitDate
		{
			get
			{
				return this._ExitDate;
			}
			set
			{
				if ((this._ExitDate != value))
				{
					this.OnExitDateChanging(value);
					this.SendPropertyChanging();
					this._ExitDate = value;
					this.SendPropertyChanged("ExitDate");
					this.OnExitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitUserID", DbType="Int")]
		public System.Nullable<int> ExitUserID
		{
			get
			{
				return this._ExitUserID;
			}
			set
			{
				if ((this._ExitUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExitUserIDChanging(value);
					this.SendPropertyChanging();
					this._ExitUserID = value;
					this.SendPropertyChanged("ExitUserID");
					this.OnExitUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrestReference", DbType="NVarChar(100)")]
		public string ArrestReference
		{
			get
			{
				return this._ArrestReference;
			}
			set
			{
				if ((this._ArrestReference != value))
				{
					this.OnArrestReferenceChanging(value);
					this.SendPropertyChanging();
					this._ArrestReference = value;
					this.SendPropertyChanged("ArrestReference");
					this.OnArrestReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrestLetterNo", DbType="NVarChar(20)")]
		public string ArrestLetterNo
		{
			get
			{
				return this._ArrestLetterNo;
			}
			set
			{
				if ((this._ArrestLetterNo != value))
				{
					this.OnArrestLetterNoChanging(value);
					this.SendPropertyChanging();
					this._ArrestLetterNo = value;
					this.SendPropertyChanged("ArrestLetterNo");
					this.OnArrestLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrestLetterNoDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ArrestLetterNoDate
		{
			get
			{
				return this._ArrestLetterNoDate;
			}
			set
			{
				if ((this._ArrestLetterNoDate != value))
				{
					this.OnArrestLetterNoDateChanging(value);
					this.SendPropertyChanging();
					this._ArrestLetterNoDate = value;
					this.SendPropertyChanged("ArrestLetterNoDate");
					this.OnArrestLetterNoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_BlackList", Storage="_Address", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.BlackLists.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.BlackLists.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlackListReason_BlackList", Storage="_BlackListReason", ThisKey="ReasonID", OtherKey="ID", IsForeignKey=true)]
		public BlackListReason BlackListReason
		{
			get
			{
				return this._BlackListReason.Entity;
			}
			set
			{
				BlackListReason previousValue = this._BlackListReason.Entity;
				if (((previousValue != value) 
							|| (this._BlackListReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlackListReason.Entity = null;
						previousValue.BlackLists.Remove(this);
					}
					this._BlackListReason.Entity = value;
					if ((value != null))
					{
						value.BlackLists.Add(this);
						this._ReasonID = value.ID;
					}
					else
					{
						this._ReasonID = default(byte);
					}
					this.SendPropertyChanged("BlackListReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_BlackList", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true, DeleteRule="CASCADE")]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.BlackLists.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.BlackLists.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlackList", Storage="_User", ThisKey="CreatorUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BlackLists.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BlackLists.Add(this);
						this._CreatorUserID = value.ID;
					}
					else
					{
						this._CreatorUserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlackList1", Storage="_User1", ThisKey="ExitUserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.BlackLists1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.BlackLists1.Add(this);
						this._ExitUserID = value.ID;
					}
					else
					{
						this._ExitUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_BlackList", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.BlackLists.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.BlackLists.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlackListReason")]
	public partial class BlackListReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _ReasonContent;
		
		private EntitySet<BlackList> _BlackLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnReasonContentChanging(string value);
    partial void OnReasonContentChanged();
    #endregion
		
		public BlackListReason()
		{
			this._BlackLists = new EntitySet<BlackList>(new Action<BlackList>(this.attach_BlackLists), new Action<BlackList>(this.detach_BlackLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonContent", DbType="NVarChar(MAX)")]
		public string ReasonContent
		{
			get
			{
				return this._ReasonContent;
			}
			set
			{
				if ((this._ReasonContent != value))
				{
					this.OnReasonContentChanging(value);
					this.SendPropertyChanging();
					this._ReasonContent = value;
					this.SendPropertyChanged("ReasonContent");
					this.OnReasonContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlackListReason_BlackList", Storage="_BlackLists", ThisKey="ID", OtherKey="ReasonID")]
		public EntitySet<BlackList> BlackLists
		{
			get
			{
				return this._BlackLists;
			}
			set
			{
				this._BlackLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.BlackListReason = this;
		}
		
		private void detach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.BlackListReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bucht")]
	public partial class Bucht : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _MDFRowID;
		
		private System.Nullable<int> _SwitchPortID;
		
		private System.Nullable<long> _CablePairID;
		
		private System.Nullable<long> _CabinetInputID;
		
		private int _BuchtTypeID;
		
		private long _BuchtNo;
		
		private System.Nullable<int> _PCMPortID;
		
		private System.Nullable<byte> _PortNo;
		
		private System.Nullable<long> _ConnectionID;
		
		private System.Nullable<long> _PCMMainBuchtID;
		
		private System.Nullable<long> _BuchtIDConnectedOtherBucht;
		
		private System.Nullable<int> _E1NumberID;
		
		private bool _ADSLStatus;
		
		private System.Nullable<int> _PAPInfoID;
		
		private byte _Status;
		
		private string _ElkaID;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _CenterID;
		
		private string _Center;
		
		private System.Nullable<int> _MDFID;
		
		private string _MDF;
		
		private System.Nullable<int> _FrameID;
		
		private System.Nullable<int> _Frame;
		
		private System.Nullable<int> _ColumnNo;
		
		private System.Nullable<int> _RowNo;
		
		private System.Nullable<long> _TelephoneNo;
		
		private EntitySet<ADSLPort> _ADSLPorts;
		
		private EntitySet<ADSLPort> _ADSLPorts1;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<Bucht> _Buchts1;
		
		private EntitySet<BuchtSwitching> _BuchtSwitchings;
		
		private EntitySet<BuchtSwitching> _BuchtSwitchings1;
		
		private EntitySet<BuchtSwitching> _BuchtSwitchings2;
		
		private EntitySet<ChangeLocation> _ChangeLocations;
		
		private EntitySet<ChangeLocationSpecialWire> _ChangeLocationSpecialWires;
		
		private EntitySet<ChangeLocationSpecialWire> _ChangeLocationSpecialWires1;
		
		private EntitySet<E1> _E1s;
		
		private EntitySet<E1Link> _E1Links;
		
		private EntitySet<E1Link> _E1Links1;
		
		private EntitySet<E1Link> _E1Links2;
		
		private EntitySet<ExchangeBrokenPCM> _ExchangeBrokenPCMs;
		
		private EntitySet<ExchangeBrokenPCM> _ExchangeBrokenPCMs1;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions1;
		
		private EntitySet<ExchangeCentralCableMDF> _ExchangeCentralCableMDFs;
		
		private EntitySet<ExchangeCentralCableMDF> _ExchangeCentralCableMDFs1;
		
		private EntitySet<ExchangeCentralCableMDF> _ExchangeCentralCableMDFs2;
		
		private EntitySet<ExchangeCentralCableMDF> _ExchangeCentralCableMDFs3;
		
		private EntitySet<ExchangeCentralCableMDFConncetion> _ExchangeCentralCableMDFConncetions;
		
		private EntitySet<ExchangeCentralCableMDFConncetion> _ExchangeCentralCableMDFConncetions1;
		
		private EntitySet<InvestigatePossibility> _InvestigatePossibilities;
		
		private EntitySet<RefundDeposit> _RefundDeposits;
		
		private EntitySet<SpecialWire> _SpecialWires;
		
		private EntityRef<SpecialWireAddress> _SpecialWireAddress;
		
		private EntitySet<SpecialWireAddress> _SpecialWireAddresses;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions1;
		
		private EntitySet<VacateSpecialWire> _VacateSpecialWires;
		
		private EntitySet<VacateSpecialWirePoint> _VacateSpecialWirePoints;
		
		private EntitySet<Wiring> _Wirings;
		
		private EntitySet<ExchangeGSMConnection> _ExchangeGSMConnections;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<Bucht> _Bucht2;
		
		private EntityRef<BuchtType> _BuchtType;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<CablePair> _CablePair;
		
		private EntityRef<Center> _Center1;
		
		private EntityRef<City> _City;
		
		private EntityRef<E1Number> _E1Number;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
		private EntityRef<PCMPort> _PCMPort;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<SwitchPort> _SwitchPort;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<VerticalMDFRow> _VerticalMDFRow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMDFRowIDChanging(int value);
    partial void OnMDFRowIDChanged();
    partial void OnSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnSwitchPortIDChanged();
    partial void OnCablePairIDChanging(System.Nullable<long> value);
    partial void OnCablePairIDChanged();
    partial void OnCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnCabinetInputIDChanged();
    partial void OnBuchtTypeIDChanging(int value);
    partial void OnBuchtTypeIDChanged();
    partial void OnBuchtNoChanging(long value);
    partial void OnBuchtNoChanged();
    partial void OnPCMPortIDChanging(System.Nullable<int> value);
    partial void OnPCMPortIDChanged();
    partial void OnPortNoChanging(System.Nullable<byte> value);
    partial void OnPortNoChanged();
    partial void OnConnectionIDChanging(System.Nullable<long> value);
    partial void OnConnectionIDChanged();
    partial void OnPCMMainBuchtIDChanging(System.Nullable<long> value);
    partial void OnPCMMainBuchtIDChanged();
    partial void OnBuchtIDConnectedOtherBuchtChanging(System.Nullable<long> value);
    partial void OnBuchtIDConnectedOtherBuchtChanged();
    partial void OnE1NumberIDChanging(System.Nullable<int> value);
    partial void OnE1NumberIDChanged();
    partial void OnADSLStatusChanging(bool value);
    partial void OnADSLStatusChanged();
    partial void OnPAPInfoIDChanging(System.Nullable<int> value);
    partial void OnPAPInfoIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnElkaIDChanging(string value);
    partial void OnElkaIDChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnCenterIDChanging(System.Nullable<int> value);
    partial void OnCenterIDChanged();
    partial void OnCenterChanging(string value);
    partial void OnCenterChanged();
    partial void OnMDFIDChanging(System.Nullable<int> value);
    partial void OnMDFIDChanged();
    partial void OnMDFChanging(string value);
    partial void OnMDFChanged();
    partial void OnFrameIDChanging(System.Nullable<int> value);
    partial void OnFrameIDChanged();
    partial void OnFrameChanging(System.Nullable<int> value);
    partial void OnFrameChanged();
    partial void OnColumnNoChanging(System.Nullable<int> value);
    partial void OnColumnNoChanged();
    partial void OnRowNoChanging(System.Nullable<int> value);
    partial void OnRowNoChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    #endregion
		
		public Bucht()
		{
			this._ADSLPorts = new EntitySet<ADSLPort>(new Action<ADSLPort>(this.attach_ADSLPorts), new Action<ADSLPort>(this.detach_ADSLPorts));
			this._ADSLPorts1 = new EntitySet<ADSLPort>(new Action<ADSLPort>(this.attach_ADSLPorts1), new Action<ADSLPort>(this.detach_ADSLPorts1));
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._Buchts1 = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts1), new Action<Bucht>(this.detach_Buchts1));
			this._BuchtSwitchings = new EntitySet<BuchtSwitching>(new Action<BuchtSwitching>(this.attach_BuchtSwitchings), new Action<BuchtSwitching>(this.detach_BuchtSwitchings));
			this._BuchtSwitchings1 = new EntitySet<BuchtSwitching>(new Action<BuchtSwitching>(this.attach_BuchtSwitchings1), new Action<BuchtSwitching>(this.detach_BuchtSwitchings1));
			this._BuchtSwitchings2 = new EntitySet<BuchtSwitching>(new Action<BuchtSwitching>(this.attach_BuchtSwitchings2), new Action<BuchtSwitching>(this.detach_BuchtSwitchings2));
			this._ChangeLocations = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations), new Action<ChangeLocation>(this.detach_ChangeLocations));
			this._ChangeLocationSpecialWires = new EntitySet<ChangeLocationSpecialWire>(new Action<ChangeLocationSpecialWire>(this.attach_ChangeLocationSpecialWires), new Action<ChangeLocationSpecialWire>(this.detach_ChangeLocationSpecialWires));
			this._ChangeLocationSpecialWires1 = new EntitySet<ChangeLocationSpecialWire>(new Action<ChangeLocationSpecialWire>(this.attach_ChangeLocationSpecialWires1), new Action<ChangeLocationSpecialWire>(this.detach_ChangeLocationSpecialWires1));
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			this._E1Links = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links), new Action<E1Link>(this.detach_E1Links));
			this._E1Links1 = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links1), new Action<E1Link>(this.detach_E1Links1));
			this._E1Links2 = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links2), new Action<E1Link>(this.detach_E1Links2));
			this._ExchangeBrokenPCMs = new EntitySet<ExchangeBrokenPCM>(new Action<ExchangeBrokenPCM>(this.attach_ExchangeBrokenPCMs), new Action<ExchangeBrokenPCM>(this.detach_ExchangeBrokenPCMs));
			this._ExchangeBrokenPCMs1 = new EntitySet<ExchangeBrokenPCM>(new Action<ExchangeBrokenPCM>(this.attach_ExchangeBrokenPCMs1), new Action<ExchangeBrokenPCM>(this.detach_ExchangeBrokenPCMs1));
			this._ExchangeCabinetInputConncetions = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions));
			this._ExchangeCabinetInputConncetions1 = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions1), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions1));
			this._ExchangeCentralCableMDFs = new EntitySet<ExchangeCentralCableMDF>(new Action<ExchangeCentralCableMDF>(this.attach_ExchangeCentralCableMDFs), new Action<ExchangeCentralCableMDF>(this.detach_ExchangeCentralCableMDFs));
			this._ExchangeCentralCableMDFs1 = new EntitySet<ExchangeCentralCableMDF>(new Action<ExchangeCentralCableMDF>(this.attach_ExchangeCentralCableMDFs1), new Action<ExchangeCentralCableMDF>(this.detach_ExchangeCentralCableMDFs1));
			this._ExchangeCentralCableMDFs2 = new EntitySet<ExchangeCentralCableMDF>(new Action<ExchangeCentralCableMDF>(this.attach_ExchangeCentralCableMDFs2), new Action<ExchangeCentralCableMDF>(this.detach_ExchangeCentralCableMDFs2));
			this._ExchangeCentralCableMDFs3 = new EntitySet<ExchangeCentralCableMDF>(new Action<ExchangeCentralCableMDF>(this.attach_ExchangeCentralCableMDFs3), new Action<ExchangeCentralCableMDF>(this.detach_ExchangeCentralCableMDFs3));
			this._ExchangeCentralCableMDFConncetions = new EntitySet<ExchangeCentralCableMDFConncetion>(new Action<ExchangeCentralCableMDFConncetion>(this.attach_ExchangeCentralCableMDFConncetions), new Action<ExchangeCentralCableMDFConncetion>(this.detach_ExchangeCentralCableMDFConncetions));
			this._ExchangeCentralCableMDFConncetions1 = new EntitySet<ExchangeCentralCableMDFConncetion>(new Action<ExchangeCentralCableMDFConncetion>(this.attach_ExchangeCentralCableMDFConncetions1), new Action<ExchangeCentralCableMDFConncetion>(this.detach_ExchangeCentralCableMDFConncetions1));
			this._InvestigatePossibilities = new EntitySet<InvestigatePossibility>(new Action<InvestigatePossibility>(this.attach_InvestigatePossibilities), new Action<InvestigatePossibility>(this.detach_InvestigatePossibilities));
			this._RefundDeposits = new EntitySet<RefundDeposit>(new Action<RefundDeposit>(this.attach_RefundDeposits), new Action<RefundDeposit>(this.detach_RefundDeposits));
			this._SpecialWires = new EntitySet<SpecialWire>(new Action<SpecialWire>(this.attach_SpecialWires), new Action<SpecialWire>(this.detach_SpecialWires));
			this._SpecialWireAddress = default(EntityRef<SpecialWireAddress>);
			this._SpecialWireAddresses = new EntitySet<SpecialWireAddress>(new Action<SpecialWireAddress>(this.attach_SpecialWireAddresses), new Action<SpecialWireAddress>(this.detach_SpecialWireAddresses));
			this._TranslationOpticalCabinetToNormalConncetions = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions));
			this._TranslationOpticalCabinetToNormalConncetions1 = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions1), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions1));
			this._VacateSpecialWires = new EntitySet<VacateSpecialWire>(new Action<VacateSpecialWire>(this.attach_VacateSpecialWires), new Action<VacateSpecialWire>(this.detach_VacateSpecialWires));
			this._VacateSpecialWirePoints = new EntitySet<VacateSpecialWirePoint>(new Action<VacateSpecialWirePoint>(this.attach_VacateSpecialWirePoints), new Action<VacateSpecialWirePoint>(this.detach_VacateSpecialWirePoints));
			this._Wirings = new EntitySet<Wiring>(new Action<Wiring>(this.attach_Wirings), new Action<Wiring>(this.detach_Wirings));
			this._ExchangeGSMConnections = new EntitySet<ExchangeGSMConnection>(new Action<ExchangeGSMConnection>(this.attach_ExchangeGSMConnections), new Action<ExchangeGSMConnection>(this.detach_ExchangeGSMConnections));
			this._Bucht1 = default(EntityRef<Bucht>);
			this._Bucht2 = default(EntityRef<Bucht>);
			this._BuchtType = default(EntityRef<BuchtType>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._CablePair = default(EntityRef<CablePair>);
			this._Center1 = default(EntityRef<Center>);
			this._City = default(EntityRef<City>);
			this._E1Number = default(EntityRef<E1Number>);
			this._PAPInfo = default(EntityRef<PAPInfo>);
			this._PCMPort = default(EntityRef<PCMPort>);
			this._PostContact = default(EntityRef<PostContact>);
			this._SwitchPort = default(EntityRef<SwitchPort>);
			this._Telephone = default(EntityRef<Telephone>);
			this._VerticalMDFRow = default(EntityRef<VerticalMDFRow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFRowID", DbType="Int NOT NULL")]
		public int MDFRowID
		{
			get
			{
				return this._MDFRowID;
			}
			set
			{
				if ((this._MDFRowID != value))
				{
					if (this._VerticalMDFRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDFRowIDChanging(value);
					this.SendPropertyChanging();
					this._MDFRowID = value;
					this.SendPropertyChanged("MDFRowID");
					this.OnMDFRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPortID", DbType="Int")]
		public System.Nullable<int> SwitchPortID
		{
			get
			{
				return this._SwitchPortID;
			}
			set
			{
				if ((this._SwitchPortID != value))
				{
					if (this._SwitchPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPortID = value;
					this.SendPropertyChanged("SwitchPortID");
					this.OnSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CablePairID", DbType="BigInt")]
		public System.Nullable<long> CablePairID
		{
			get
			{
				return this._CablePairID;
			}
			set
			{
				if ((this._CablePairID != value))
				{
					if (this._CablePair.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCablePairIDChanging(value);
					this.SendPropertyChanging();
					this._CablePairID = value;
					this.SendPropertyChanged("CablePairID");
					this.OnCablePairIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt")]
		public System.Nullable<long> CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtTypeID", DbType="Int NOT NULL")]
		public int BuchtTypeID
		{
			get
			{
				return this._BuchtTypeID;
			}
			set
			{
				if ((this._BuchtTypeID != value))
				{
					if (this._BuchtType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtTypeID = value;
					this.SendPropertyChanged("BuchtTypeID");
					this.OnBuchtTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtNo", DbType="BigInt NOT NULL")]
		public long BuchtNo
		{
			get
			{
				return this._BuchtNo;
			}
			set
			{
				if ((this._BuchtNo != value))
				{
					this.OnBuchtNoChanging(value);
					this.SendPropertyChanging();
					this._BuchtNo = value;
					this.SendPropertyChanged("BuchtNo");
					this.OnBuchtNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMPortID", DbType="Int")]
		public System.Nullable<int> PCMPortID
		{
			get
			{
				return this._PCMPortID;
			}
			set
			{
				if ((this._PCMPortID != value))
				{
					if (this._PCMPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCMPortIDChanging(value);
					this.SendPropertyChanging();
					this._PCMPortID = value;
					this.SendPropertyChanged("PCMPortID");
					this.OnPCMPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortNo", DbType="TinyInt")]
		public System.Nullable<byte> PortNo
		{
			get
			{
				return this._PortNo;
			}
			set
			{
				if ((this._PortNo != value))
				{
					this.OnPortNoChanging(value);
					this.SendPropertyChanging();
					this._PortNo = value;
					this.SendPropertyChanged("PortNo");
					this.OnPortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionID", DbType="BigInt")]
		public System.Nullable<long> ConnectionID
		{
			get
			{
				return this._ConnectionID;
			}
			set
			{
				if ((this._ConnectionID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConnectionIDChanging(value);
					this.SendPropertyChanging();
					this._ConnectionID = value;
					this.SendPropertyChanged("ConnectionID");
					this.OnConnectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMMainBuchtID", DbType="BigInt")]
		public System.Nullable<long> PCMMainBuchtID
		{
			get
			{
				return this._PCMMainBuchtID;
			}
			set
			{
				if ((this._PCMMainBuchtID != value))
				{
					if (this._Bucht2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCMMainBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._PCMMainBuchtID = value;
					this.SendPropertyChanged("PCMMainBuchtID");
					this.OnPCMMainBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtIDConnectedOtherBucht", DbType="BigInt")]
		public System.Nullable<long> BuchtIDConnectedOtherBucht
		{
			get
			{
				return this._BuchtIDConnectedOtherBucht;
			}
			set
			{
				if ((this._BuchtIDConnectedOtherBucht != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDConnectedOtherBuchtChanging(value);
					this.SendPropertyChanging();
					this._BuchtIDConnectedOtherBucht = value;
					this.SendPropertyChanged("BuchtIDConnectedOtherBucht");
					this.OnBuchtIDConnectedOtherBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E1NumberID", DbType="Int")]
		public System.Nullable<int> E1NumberID
		{
			get
			{
				return this._E1NumberID;
			}
			set
			{
				if ((this._E1NumberID != value))
				{
					if (this._E1Number.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnE1NumberIDChanging(value);
					this.SendPropertyChanging();
					this._E1NumberID = value;
					this.SendPropertyChanged("E1NumberID");
					this.OnE1NumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLStatus", DbType="Bit NOT NULL")]
		public bool ADSLStatus
		{
			get
			{
				return this._ADSLStatus;
			}
			set
			{
				if ((this._ADSLStatus != value))
				{
					this.OnADSLStatusChanging(value);
					this.SendPropertyChanging();
					this._ADSLStatus = value;
					this.SendPropertyChanged("ADSLStatus");
					this.OnADSLStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int")]
		public System.Nullable<int> PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="NVarChar(50)")]
		public string ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int")]
		public System.Nullable<int> CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Center", DbType="NVarChar(50)")]
		public string Center
		{
			get
			{
				return this._Center;
			}
			set
			{
				if ((this._Center != value))
				{
					this.OnCenterChanging(value);
					this.SendPropertyChanging();
					this._Center = value;
					this.SendPropertyChanged("Center");
					this.OnCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFID", DbType="Int")]
		public System.Nullable<int> MDFID
		{
			get
			{
				return this._MDFID;
			}
			set
			{
				if ((this._MDFID != value))
				{
					this.OnMDFIDChanging(value);
					this.SendPropertyChanging();
					this._MDFID = value;
					this.SendPropertyChanged("MDFID");
					this.OnMDFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDF", DbType="NVarChar(100)")]
		public string MDF
		{
			get
			{
				return this._MDF;
			}
			set
			{
				if ((this._MDF != value))
				{
					this.OnMDFChanging(value);
					this.SendPropertyChanging();
					this._MDF = value;
					this.SendPropertyChanged("MDF");
					this.OnMDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrameID", DbType="Int")]
		public System.Nullable<int> FrameID
		{
			get
			{
				return this._FrameID;
			}
			set
			{
				if ((this._FrameID != value))
				{
					this.OnFrameIDChanging(value);
					this.SendPropertyChanging();
					this._FrameID = value;
					this.SendPropertyChanged("FrameID");
					this.OnFrameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frame", DbType="Int")]
		public System.Nullable<int> Frame
		{
			get
			{
				return this._Frame;
			}
			set
			{
				if ((this._Frame != value))
				{
					this.OnFrameChanging(value);
					this.SendPropertyChanging();
					this._Frame = value;
					this.SendPropertyChanged("Frame");
					this.OnFrameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnNo", DbType="Int")]
		public System.Nullable<int> ColumnNo
		{
			get
			{
				return this._ColumnNo;
			}
			set
			{
				if ((this._ColumnNo != value))
				{
					this.OnColumnNoChanging(value);
					this.SendPropertyChanging();
					this._ColumnNo = value;
					this.SendPropertyChanged("ColumnNo");
					this.OnColumnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNo", DbType="Int")]
		public System.Nullable<int> RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this.OnRowNoChanging(value);
					this.SendPropertyChanging();
					this._RowNo = value;
					this.SendPropertyChanged("RowNo");
					this.OnRowNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ADSLPort", Storage="_ADSLPorts", ThisKey="ID", OtherKey="InputBucht")]
		public EntitySet<ADSLPort> ADSLPorts
		{
			get
			{
				return this._ADSLPorts;
			}
			set
			{
				this._ADSLPorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ADSLPort1", Storage="_ADSLPorts1", ThisKey="ID", OtherKey="OutBucht")]
		public EntitySet<ADSLPort> ADSLPorts1
		{
			get
			{
				return this._ADSLPorts1;
			}
			set
			{
				this._ADSLPorts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="BuchtIDConnectedOtherBucht")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_Bucht1", Storage="_Buchts1", ThisKey="ID", OtherKey="PCMMainBuchtID")]
		public EntitySet<Bucht> Buchts1
		{
			get
			{
				return this._Buchts1;
			}
			set
			{
				this._Buchts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_BuchtSwitching", Storage="_BuchtSwitchings", ThisKey="ID", OtherKey="OldBuchtID")]
		public EntitySet<BuchtSwitching> BuchtSwitchings
		{
			get
			{
				return this._BuchtSwitchings;
			}
			set
			{
				this._BuchtSwitchings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_BuchtSwitching1", Storage="_BuchtSwitchings1", ThisKey="ID", OtherKey="NewBuchtID")]
		public EntitySet<BuchtSwitching> BuchtSwitchings1
		{
			get
			{
				return this._BuchtSwitchings1;
			}
			set
			{
				this._BuchtSwitchings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_BuchtSwitching2", Storage="_BuchtSwitchings2", ThisKey="ID", OtherKey="OtherBuchtID")]
		public EntitySet<BuchtSwitching> BuchtSwitchings2
		{
			get
			{
				return this._BuchtSwitchings2;
			}
			set
			{
				this._BuchtSwitchings2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ChangeLocation", Storage="_ChangeLocations", ThisKey="ID", OtherKey="OldBuchtID")]
		public EntitySet<ChangeLocation> ChangeLocations
		{
			get
			{
				return this._ChangeLocations;
			}
			set
			{
				this._ChangeLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ChangeLocationSpecialWire", Storage="_ChangeLocationSpecialWires", ThisKey="ID", OtherKey="OldBuchtID")]
		public EntitySet<ChangeLocationSpecialWire> ChangeLocationSpecialWires
		{
			get
			{
				return this._ChangeLocationSpecialWires;
			}
			set
			{
				this._ChangeLocationSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ChangeLocationSpecialWire1", Storage="_ChangeLocationSpecialWires1", ThisKey="ID", OtherKey="OldOtherBuchtID")]
		public EntitySet<ChangeLocationSpecialWire> ChangeLocationSpecialWires1
		{
			get
			{
				return this._ChangeLocationSpecialWires1;
			}
			set
			{
				this._ChangeLocationSpecialWires1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_E1", Storage="_E1s", ThisKey="ID", OtherKey="BuchtID")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_E1Link", Storage="_E1Links", ThisKey="ID", OtherKey="BuchtID")]
		public EntitySet<E1Link> E1Links
		{
			get
			{
				return this._E1Links;
			}
			set
			{
				this._E1Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_E1Link1", Storage="_E1Links1", ThisKey="ID", OtherKey="OtherBuchtID")]
		public EntitySet<E1Link> E1Links1
		{
			get
			{
				return this._E1Links1;
			}
			set
			{
				this._E1Links1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_E1Link2", Storage="_E1Links2", ThisKey="ID", OtherKey="AcessBuchtID")]
		public EntitySet<E1Link> E1Links2
		{
			get
			{
				return this._E1Links2;
			}
			set
			{
				this._E1Links2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeBrokenPCM", Storage="_ExchangeBrokenPCMs", ThisKey="ID", OtherKey="OldBuchtID")]
		public EntitySet<ExchangeBrokenPCM> ExchangeBrokenPCMs
		{
			get
			{
				return this._ExchangeBrokenPCMs;
			}
			set
			{
				this._ExchangeBrokenPCMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeBrokenPCM1", Storage="_ExchangeBrokenPCMs1", ThisKey="ID", OtherKey="NewBuchtID")]
		public EntitySet<ExchangeBrokenPCM> ExchangeBrokenPCMs1
		{
			get
			{
				return this._ExchangeBrokenPCMs1;
			}
			set
			{
				this._ExchangeBrokenPCMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCabinetInputConncetion", Storage="_ExchangeCabinetInputConncetions", ThisKey="ID", OtherKey="FromBucht")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this._ExchangeCabinetInputConncetions;
			}
			set
			{
				this._ExchangeCabinetInputConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCabinetInputConncetion1", Storage="_ExchangeCabinetInputConncetions1", ThisKey="ID", OtherKey="ToBucht")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions1
		{
			get
			{
				return this._ExchangeCabinetInputConncetions1;
			}
			set
			{
				this._ExchangeCabinetInputConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDF", Storage="_ExchangeCentralCableMDFs", ThisKey="ID", OtherKey="FromNewBuchtID")]
		public EntitySet<ExchangeCentralCableMDF> ExchangeCentralCableMDFs
		{
			get
			{
				return this._ExchangeCentralCableMDFs;
			}
			set
			{
				this._ExchangeCentralCableMDFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDF1", Storage="_ExchangeCentralCableMDFs1", ThisKey="ID", OtherKey="ToNewBuchtID")]
		public EntitySet<ExchangeCentralCableMDF> ExchangeCentralCableMDFs1
		{
			get
			{
				return this._ExchangeCentralCableMDFs1;
			}
			set
			{
				this._ExchangeCentralCableMDFs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDF2", Storage="_ExchangeCentralCableMDFs2", ThisKey="ID", OtherKey="FromOldBuchtID")]
		public EntitySet<ExchangeCentralCableMDF> ExchangeCentralCableMDFs2
		{
			get
			{
				return this._ExchangeCentralCableMDFs2;
			}
			set
			{
				this._ExchangeCentralCableMDFs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDF3", Storage="_ExchangeCentralCableMDFs3", ThisKey="ID", OtherKey="ToOldBuchtID")]
		public EntitySet<ExchangeCentralCableMDF> ExchangeCentralCableMDFs3
		{
			get
			{
				return this._ExchangeCentralCableMDFs3;
			}
			set
			{
				this._ExchangeCentralCableMDFs3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDFConncetion", Storage="_ExchangeCentralCableMDFConncetions", ThisKey="ID", OtherKey="OldBuchtID")]
		public EntitySet<ExchangeCentralCableMDFConncetion> ExchangeCentralCableMDFConncetions
		{
			get
			{
				return this._ExchangeCentralCableMDFConncetions;
			}
			set
			{
				this._ExchangeCentralCableMDFConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDFConncetion1", Storage="_ExchangeCentralCableMDFConncetions1", ThisKey="ID", OtherKey="NewBuchtID")]
		public EntitySet<ExchangeCentralCableMDFConncetion> ExchangeCentralCableMDFConncetions1
		{
			get
			{
				return this._ExchangeCentralCableMDFConncetions1;
			}
			set
			{
				this._ExchangeCentralCableMDFConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_InvestigatePossibility", Storage="_InvestigatePossibilities", ThisKey="ID", OtherKey="BuchtID")]
		public EntitySet<InvestigatePossibility> InvestigatePossibilities
		{
			get
			{
				return this._InvestigatePossibilities;
			}
			set
			{
				this._InvestigatePossibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_RefundDeposit", Storage="_RefundDeposits", ThisKey="ID", OtherKey="BuchtID")]
		public EntitySet<RefundDeposit> RefundDeposits
		{
			get
			{
				return this._RefundDeposits;
			}
			set
			{
				this._RefundDeposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_SpecialWire", Storage="_SpecialWires", ThisKey="ID", OtherKey="OtherBuchtID")]
		public EntitySet<SpecialWire> SpecialWires
		{
			get
			{
				return this._SpecialWires;
			}
			set
			{
				this._SpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_SpecialWireAddress", Storage="_SpecialWireAddress", ThisKey="ID", OtherKey="BuchtID", IsUnique=true, IsForeignKey=false)]
		public SpecialWireAddress SpecialWireAddress
		{
			get
			{
				return this._SpecialWireAddress.Entity;
			}
			set
			{
				SpecialWireAddress previousValue = this._SpecialWireAddress.Entity;
				if (((previousValue != value) 
							|| (this._SpecialWireAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialWireAddress.Entity = null;
						previousValue.Bucht = null;
					}
					this._SpecialWireAddress.Entity = value;
					if ((value != null))
					{
						value.Bucht = this;
					}
					this.SendPropertyChanged("SpecialWireAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_SpecialWireAddress1", Storage="_SpecialWireAddresses", ThisKey="ID", OtherKey="SecondBuchtID")]
		public EntitySet<SpecialWireAddress> SpecialWireAddresses
		{
			get
			{
				return this._SpecialWireAddresses;
			}
			set
			{
				this._SpecialWireAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_TranslationOpticalCabinetToNormalConncetion", Storage="_TranslationOpticalCabinetToNormalConncetions", ThisKey="ID", OtherKey="FromBucht")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_TranslationOpticalCabinetToNormalConncetion1", Storage="_TranslationOpticalCabinetToNormalConncetions1", ThisKey="ID", OtherKey="ToBucht")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_VacateSpecialWire", Storage="_VacateSpecialWires", ThisKey="ID", OtherKey="BuchtID")]
		public EntitySet<VacateSpecialWire> VacateSpecialWires
		{
			get
			{
				return this._VacateSpecialWires;
			}
			set
			{
				this._VacateSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_VacateSpecialWirePoint", Storage="_VacateSpecialWirePoints", ThisKey="ID", OtherKey="BuchtID")]
		public EntitySet<VacateSpecialWirePoint> VacateSpecialWirePoints
		{
			get
			{
				return this._VacateSpecialWirePoints;
			}
			set
			{
				this._VacateSpecialWirePoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_Wiring", Storage="_Wirings", ThisKey="ID", OtherKey="BuchtID")]
		public EntitySet<Wiring> Wirings
		{
			get
			{
				return this._Wirings;
			}
			set
			{
				this._Wirings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeGSMConnection", Storage="_ExchangeGSMConnections", ThisKey="ID", OtherKey="BuchtID")]
		public EntitySet<ExchangeGSMConnection> ExchangeGSMConnections
		{
			get
			{
				return this._ExchangeGSMConnections;
			}
			set
			{
				this._ExchangeGSMConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_Bucht", Storage="_Bucht1", ThisKey="BuchtIDConnectedOtherBucht", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._BuchtIDConnectedOtherBucht = value.ID;
					}
					else
					{
						this._BuchtIDConnectedOtherBucht = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_Bucht1", Storage="_Bucht2", ThisKey="PCMMainBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht2
		{
			get
			{
				return this._Bucht2.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht2.Entity;
				if (((previousValue != value) 
							|| (this._Bucht2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht2.Entity = null;
						previousValue.Buchts1.Remove(this);
					}
					this._Bucht2.Entity = value;
					if ((value != null))
					{
						value.Buchts1.Add(this);
						this._PCMMainBuchtID = value.ID;
					}
					else
					{
						this._PCMMainBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuchtType_Bucht", Storage="_BuchtType", ThisKey="BuchtTypeID", OtherKey="ID", IsForeignKey=true)]
		public BuchtType BuchtType
		{
			get
			{
				return this._BuchtType.Entity;
			}
			set
			{
				BuchtType previousValue = this._BuchtType.Entity;
				if (((previousValue != value) 
							|| (this._BuchtType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuchtType.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._BuchtType.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._BuchtTypeID = value.ID;
					}
					else
					{
						this._BuchtTypeID = default(int);
					}
					this.SendPropertyChanged("BuchtType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_Bucht", Storage="_CabinetInput", ThisKey="CabinetInputID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._CabinetInputID = value.ID;
					}
					else
					{
						this._CabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CablePair_Bucht", Storage="_CablePair", ThisKey="CablePairID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public CablePair CablePair
		{
			get
			{
				return this._CablePair.Entity;
			}
			set
			{
				CablePair previousValue = this._CablePair.Entity;
				if (((previousValue != value) 
							|| (this._CablePair.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CablePair.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._CablePair.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._CablePairID = value.ID;
					}
					else
					{
						this._CablePairID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CablePair");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Bucht", Storage="_Center1", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center1
		{
			get
			{
				return this._Center1.Entity;
			}
			set
			{
				Center previousValue = this._Center1.Entity;
				if (((previousValue != value) 
							|| (this._Center1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center1.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._Center1.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Bucht", Storage="_City", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_Bucht", Storage="_E1Number", ThisKey="E1NumberID", OtherKey="ID", IsForeignKey=true)]
		public E1Number E1Number
		{
			get
			{
				return this._E1Number.Entity;
			}
			set
			{
				E1Number previousValue = this._E1Number.Entity;
				if (((previousValue != value) 
							|| (this._E1Number.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Number.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._E1Number.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._E1NumberID = value.ID;
					}
					else
					{
						this._E1NumberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("E1Number");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_Bucht", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMPort_Bucht", Storage="_PCMPort", ThisKey="PCMPortID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public PCMPort PCMPort
		{
			get
			{
				return this._PCMPort.Entity;
			}
			set
			{
				PCMPort previousValue = this._PCMPort.Entity;
				if (((previousValue != value) 
							|| (this._PCMPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCMPort.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._PCMPort.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._PCMPortID = value.ID;
					}
					else
					{
						this._PCMPortID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PCMPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_Bucht", Storage="_PostContact", ThisKey="ConnectionID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._ConnectionID = value.ID;
					}
					else
					{
						this._ConnectionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_Bucht", Storage="_SwitchPort", ThisKey="SwitchPortID", OtherKey="ID", IsForeignKey=true)]
		public SwitchPort SwitchPort
		{
			get
			{
				return this._SwitchPort.Entity;
			}
			set
			{
				SwitchPort previousValue = this._SwitchPort.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPort.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._SwitchPort.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._SwitchPortID = value.ID;
					}
					else
					{
						this._SwitchPortID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SwitchPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_Bucht", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VerticalMDFRow_Bucht", Storage="_VerticalMDFRow", ThisKey="MDFRowID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public VerticalMDFRow VerticalMDFRow
		{
			get
			{
				return this._VerticalMDFRow.Entity;
			}
			set
			{
				VerticalMDFRow previousValue = this._VerticalMDFRow.Entity;
				if (((previousValue != value) 
							|| (this._VerticalMDFRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VerticalMDFRow.Entity = null;
						previousValue.Buchts.Remove(this);
					}
					this._VerticalMDFRow.Entity = value;
					if ((value != null))
					{
						value.Buchts.Add(this);
						this._MDFRowID = value.ID;
					}
					else
					{
						this._MDFRowID = default(int);
					}
					this.SendPropertyChanged("VerticalMDFRow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLPorts(ADSLPort entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_ADSLPorts(ADSLPort entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_ADSLPorts1(ADSLPort entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_ADSLPorts1(ADSLPort entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_Buchts1(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.Bucht2 = this;
		}
		
		private void detach_Buchts1(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.Bucht2 = null;
		}
		
		private void attach_BuchtSwitchings(BuchtSwitching entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_BuchtSwitchings(BuchtSwitching entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_BuchtSwitchings1(BuchtSwitching entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_BuchtSwitchings1(BuchtSwitching entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_BuchtSwitchings2(BuchtSwitching entity)
		{
			this.SendPropertyChanging();
			entity.Bucht2 = this;
		}
		
		private void detach_BuchtSwitchings2(BuchtSwitching entity)
		{
			this.SendPropertyChanging();
			entity.Bucht2 = null;
		}
		
		private void attach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_ChangeLocationSpecialWires1(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_ChangeLocationSpecialWires1(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_E1Links1(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_E1Links1(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_E1Links2(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.Bucht2 = this;
		}
		
		private void detach_E1Links2(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.Bucht2 = null;
		}
		
		private void attach_ExchangeBrokenPCMs(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_ExchangeBrokenPCMs(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_ExchangeBrokenPCMs1(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_ExchangeBrokenPCMs1(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_ExchangeCentralCableMDFs(ExchangeCentralCableMDF entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_ExchangeCentralCableMDFs(ExchangeCentralCableMDF entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_ExchangeCentralCableMDFs1(ExchangeCentralCableMDF entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_ExchangeCentralCableMDFs1(ExchangeCentralCableMDF entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_ExchangeCentralCableMDFs2(ExchangeCentralCableMDF entity)
		{
			this.SendPropertyChanging();
			entity.Bucht2 = this;
		}
		
		private void detach_ExchangeCentralCableMDFs2(ExchangeCentralCableMDF entity)
		{
			this.SendPropertyChanging();
			entity.Bucht2 = null;
		}
		
		private void attach_ExchangeCentralCableMDFs3(ExchangeCentralCableMDF entity)
		{
			this.SendPropertyChanging();
			entity.Bucht3 = this;
		}
		
		private void detach_ExchangeCentralCableMDFs3(ExchangeCentralCableMDF entity)
		{
			this.SendPropertyChanging();
			entity.Bucht3 = null;
		}
		
		private void attach_ExchangeCentralCableMDFConncetions(ExchangeCentralCableMDFConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_ExchangeCentralCableMDFConncetions(ExchangeCentralCableMDFConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_ExchangeCentralCableMDFConncetions1(ExchangeCentralCableMDFConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_ExchangeCentralCableMDFConncetions1(ExchangeCentralCableMDFConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_InvestigatePossibilities(InvestigatePossibility entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_InvestigatePossibilities(InvestigatePossibility entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_SpecialWires(SpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_SpecialWires(SpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_SpecialWireAddresses(SpecialWireAddress entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_SpecialWireAddresses(SpecialWireAddress entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Bucht1 = null;
		}
		
		private void attach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_VacateSpecialWirePoints(VacateSpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_VacateSpecialWirePoints(VacateSpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
		
		private void attach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = this;
		}
		
		private void detach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Bucht = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuchtSwitching")]
	public partial class BuchtSwitching : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _OldBuchtID;
		
		private System.Nullable<long> _NewBuchtID;
		
		private System.Nullable<long> _PostContactID;
		
		private System.Nullable<System.DateTime> _NetworkAccomplishmentDate;
		
		private string _NetworkAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _DateOfFinal;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.DateTime> _MDFAccomplishmentDate;
		
		private string _MDFAccomplishmentTime;
		
		private System.Nullable<int> _CauseBuchtSwitchingID;
		
		private System.Nullable<long> _OtherBuchtID;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<Bucht> _Bucht2;
		
		private EntityRef<CauseBuchtSwitching> _CauseBuchtSwitching;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldBuchtIDChanging(long value);
    partial void OnOldBuchtIDChanged();
    partial void OnNewBuchtIDChanging(System.Nullable<long> value);
    partial void OnNewBuchtIDChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    partial void OnNetworkAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkAccomplishmentDateChanged();
    partial void OnNetworkAccomplishmentTimeChanging(string value);
    partial void OnNetworkAccomplishmentTimeChanged();
    partial void OnDateOfFinalChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfFinalChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnMDFAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFAccomplishmentDateChanged();
    partial void OnMDFAccomplishmentTimeChanging(string value);
    partial void OnMDFAccomplishmentTimeChanged();
    partial void OnCauseBuchtSwitchingIDChanging(System.Nullable<int> value);
    partial void OnCauseBuchtSwitchingIDChanged();
    partial void OnOtherBuchtIDChanging(System.Nullable<long> value);
    partial void OnOtherBuchtIDChanged();
    #endregion
		
		public BuchtSwitching()
		{
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._Bucht2 = default(EntityRef<Bucht>);
			this._CauseBuchtSwitching = default(EntityRef<CauseBuchtSwitching>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtID", DbType="BigInt NOT NULL")]
		public long OldBuchtID
		{
			get
			{
				return this._OldBuchtID;
			}
			set
			{
				if ((this._OldBuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtID = value;
					this.SendPropertyChanged("OldBuchtID");
					this.OnOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewBuchtID", DbType="BigInt")]
		public System.Nullable<long> NewBuchtID
		{
			get
			{
				return this._NewBuchtID;
			}
			set
			{
				if ((this._NewBuchtID != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._NewBuchtID = value;
					this.SendPropertyChanged("NewBuchtID");
					this.OnNewBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkAccomplishmentDate
		{
			get
			{
				return this._NetworkAccomplishmentDate;
			}
			set
			{
				if ((this._NetworkAccomplishmentDate != value))
				{
					this.OnNetworkAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentDate = value;
					this.SendPropertyChanged("NetworkAccomplishmentDate");
					this.OnNetworkAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentTime", DbType="NChar(10)")]
		public string NetworkAccomplishmentTime
		{
			get
			{
				return this._NetworkAccomplishmentTime;
			}
			set
			{
				if ((this._NetworkAccomplishmentTime != value))
				{
					this.OnNetworkAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentTime = value;
					this.SendPropertyChanged("NetworkAccomplishmentTime");
					this.OnNetworkAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfFinal", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateOfFinal
		{
			get
			{
				return this._DateOfFinal;
			}
			set
			{
				if ((this._DateOfFinal != value))
				{
					this.OnDateOfFinalChanging(value);
					this.SendPropertyChanging();
					this._DateOfFinal = value;
					this.SendPropertyChanged("DateOfFinal");
					this.OnDateOfFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFAccomplishmentDate
		{
			get
			{
				return this._MDFAccomplishmentDate;
			}
			set
			{
				if ((this._MDFAccomplishmentDate != value))
				{
					this.OnMDFAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentDate = value;
					this.SendPropertyChanged("MDFAccomplishmentDate");
					this.OnMDFAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentTime", DbType="NChar(10)")]
		public string MDFAccomplishmentTime
		{
			get
			{
				return this._MDFAccomplishmentTime;
			}
			set
			{
				if ((this._MDFAccomplishmentTime != value))
				{
					this.OnMDFAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentTime = value;
					this.SendPropertyChanged("MDFAccomplishmentTime");
					this.OnMDFAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseBuchtSwitchingID", DbType="Int")]
		public System.Nullable<int> CauseBuchtSwitchingID
		{
			get
			{
				return this._CauseBuchtSwitchingID;
			}
			set
			{
				if ((this._CauseBuchtSwitchingID != value))
				{
					if (this._CauseBuchtSwitching.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauseBuchtSwitchingIDChanging(value);
					this.SendPropertyChanging();
					this._CauseBuchtSwitchingID = value;
					this.SendPropertyChanged("CauseBuchtSwitchingID");
					this.OnCauseBuchtSwitchingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtID", DbType="BigInt")]
		public System.Nullable<long> OtherBuchtID
		{
			get
			{
				return this._OtherBuchtID;
			}
			set
			{
				if ((this._OtherBuchtID != value))
				{
					if (this._Bucht2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OtherBuchtID = value;
					this.SendPropertyChanged("OtherBuchtID");
					this.OnOtherBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_BuchtSwitching", Storage="_Bucht", ThisKey="OldBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.BuchtSwitchings.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.BuchtSwitchings.Add(this);
						this._OldBuchtID = value.ID;
					}
					else
					{
						this._OldBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_BuchtSwitching1", Storage="_Bucht1", ThisKey="NewBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.BuchtSwitchings1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.BuchtSwitchings1.Add(this);
						this._NewBuchtID = value.ID;
					}
					else
					{
						this._NewBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_BuchtSwitching2", Storage="_Bucht2", ThisKey="OtherBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht2
		{
			get
			{
				return this._Bucht2.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht2.Entity;
				if (((previousValue != value) 
							|| (this._Bucht2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht2.Entity = null;
						previousValue.BuchtSwitchings2.Remove(this);
					}
					this._Bucht2.Entity = value;
					if ((value != null))
					{
						value.BuchtSwitchings2.Add(this);
						this._OtherBuchtID = value.ID;
					}
					else
					{
						this._OtherBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseBuchtSwitching_BuchtSwitching", Storage="_CauseBuchtSwitching", ThisKey="CauseBuchtSwitchingID", OtherKey="ID", IsForeignKey=true)]
		public CauseBuchtSwitching CauseBuchtSwitching
		{
			get
			{
				return this._CauseBuchtSwitching.Entity;
			}
			set
			{
				CauseBuchtSwitching previousValue = this._CauseBuchtSwitching.Entity;
				if (((previousValue != value) 
							|| (this._CauseBuchtSwitching.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauseBuchtSwitching.Entity = null;
						previousValue.BuchtSwitchings.Remove(this);
					}
					this._CauseBuchtSwitching.Entity = value;
					if ((value != null))
					{
						value.BuchtSwitchings.Add(this);
						this._CauseBuchtSwitchingID = value.ID;
					}
					else
					{
						this._CauseBuchtSwitchingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CauseBuchtSwitching");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_BuchtSwitching", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.BuchtSwitching = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.BuchtSwitching = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuchtType")]
	public partial class BuchtType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BuchtTypeName;
		
		private System.Nullable<int> _ParentID;
		
		private bool _IsReadOnly;
		
		private string _ElkaID;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<BuchtType> _BuchtTypes;
		
		private EntitySet<SpecialWire> _SpecialWires;
		
		private EntityRef<BuchtType> _BuchtType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBuchtTypeNameChanging(string value);
    partial void OnBuchtTypeNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    partial void OnElkaIDChanging(string value);
    partial void OnElkaIDChanged();
    #endregion
		
		public BuchtType()
		{
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._BuchtTypes = new EntitySet<BuchtType>(new Action<BuchtType>(this.attach_BuchtTypes), new Action<BuchtType>(this.detach_BuchtTypes));
			this._SpecialWires = new EntitySet<SpecialWire>(new Action<SpecialWire>(this.attach_SpecialWires), new Action<SpecialWire>(this.detach_SpecialWires));
			this._BuchtType1 = default(EntityRef<BuchtType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtTypeName", DbType="NVarChar(50)")]
		public string BuchtTypeName
		{
			get
			{
				return this._BuchtTypeName;
			}
			set
			{
				if ((this._BuchtTypeName != value))
				{
					this.OnBuchtTypeNameChanging(value);
					this.SendPropertyChanging();
					this._BuchtTypeName = value;
					this.SendPropertyChanged("BuchtTypeName");
					this.OnBuchtTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._BuchtType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="NVarChar(50)")]
		public string ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuchtType_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="BuchtTypeID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuchtType_BuchtType", Storage="_BuchtTypes", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<BuchtType> BuchtTypes
		{
			get
			{
				return this._BuchtTypes;
			}
			set
			{
				this._BuchtTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuchtType_SpecialWire", Storage="_SpecialWires", ThisKey="ID", OtherKey="BuchtType")]
		public EntitySet<SpecialWire> SpecialWires
		{
			get
			{
				return this._SpecialWires;
			}
			set
			{
				this._SpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuchtType_BuchtType", Storage="_BuchtType1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public BuchtType BuchtType1
		{
			get
			{
				return this._BuchtType1.Entity;
			}
			set
			{
				BuchtType previousValue = this._BuchtType1.Entity;
				if (((previousValue != value) 
							|| (this._BuchtType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuchtType1.Entity = null;
						previousValue.BuchtTypes.Remove(this);
					}
					this._BuchtType1.Entity = value;
					if ((value != null))
					{
						value.BuchtTypes.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BuchtType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.BuchtType = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.BuchtType = null;
		}
		
		private void attach_BuchtTypes(BuchtType entity)
		{
			this.SendPropertyChanging();
			entity.BuchtType1 = this;
		}
		
		private void detach_BuchtTypes(BuchtType entity)
		{
			this.SendPropertyChanging();
			entity.BuchtType1 = null;
		}
		
		private void attach_SpecialWires(SpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.BuchtType1 = this;
		}
		
		private void detach_SpecialWires(SpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.BuchtType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuchtTypeNumberChange")]
	public partial class BuchtTypeNumberChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FromBuchtType;
		
		private int _ToBuchtType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFromBuchtTypeChanging(int value);
    partial void OnFromBuchtTypeChanged();
    partial void OnToBuchtTypeChanging(int value);
    partial void OnToBuchtTypeChanged();
    #endregion
		
		public BuchtTypeNumberChange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromBuchtType", DbType="Int NOT NULL")]
		public int FromBuchtType
		{
			get
			{
				return this._FromBuchtType;
			}
			set
			{
				if ((this._FromBuchtType != value))
				{
					this.OnFromBuchtTypeChanging(value);
					this.SendPropertyChanging();
					this._FromBuchtType = value;
					this.SendPropertyChanged("FromBuchtType");
					this.OnFromBuchtTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToBuchtType", DbType="Int NOT NULL")]
		public int ToBuchtType
		{
			get
			{
				return this._ToBuchtType;
			}
			set
			{
				if ((this._ToBuchtType != value))
				{
					this.OnToBuchtTypeChanging(value);
					this.SendPropertyChanging();
					this._ToBuchtType = value;
					this.SendPropertyChanged("ToBuchtType");
					this.OnToBuchtTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cabinet")]
	public partial class Cabinet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private int _CabinetNumber;
		
		private System.Nullable<byte> _ABType;
		
		private string _CabinetCode;
		
		private int _CabinetTypeID;
		
		private int _CabinetUsageType;
		
		private System.Nullable<int> _FromInputNo;
		
		private System.Nullable<int> _ToInputNo;
		
		private int _DistanceFromCenter;
		
		private bool _IsOutBound;
		
		private System.Nullable<int> _OutBoundMeter;
		
		private string _Address;
		
		private string _PostCode;
		
		private long _FromPostalCode;
		
		private long _ToPostalCode;
		
		private int _Status;
		
		private int _Capacity;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _LastTimeAddFacility;
		
		private System.Nullable<System.DateTime> _DateOfLastReview;
		
		private System.Nullable<int> _SwitchID;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private bool _IsLimitPost;
		
		private System.Nullable<int> _MaxNumberPost;
		
		private bool _ApplyQuota;
		
		private EntitySet<CabinetInput> _CabinetInputs;
		
		private EntitySet<CenterToCenterTranslation> _CenterToCenterTranslations;
		
		private EntitySet<CenterToCenterTranslation> _CenterToCenterTranslations1;
		
		private EntitySet<ExchangeCabinetInput> _ExchangeCabinetInputs;
		
		private EntitySet<ExchangeCabinetInput> _ExchangeCabinetInputs1;
		
		private EntitySet<ExchangePost> _ExchangePosts;
		
		private EntitySet<ExchangePost> _ExchangePosts1;
		
		private EntitySet<InvestigatePossibilityWaitinglist> _InvestigatePossibilityWaitinglists;
		
		private EntitySet<Linesman> _Linesmans;
		
		private EntitySet<Post> _Posts;
		
		private EntitySet<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormals;
		
		private EntitySet<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormals1;
		
		private EntitySet<TranslationPost> _TranslationPosts;
		
		private EntitySet<TranslationPostInput> _TranslationPostInputs;
		
		private EntitySet<TranslationPostInput> _TranslationPostInputs1;
		
		private EntitySet<VisitPlacesCabinetAndPost> _VisitPlacesCabinetAndPosts;
		
		private EntitySet<ExchangeGSMConnection> _ExchangeGSMConnections;
		
		private EntityRef<AORBPostAndCabinet> _AORBPostAndCabinet;
		
		private EntityRef<CabinetStatus> _CabinetStatus;
		
		private EntityRef<CabinetType> _CabinetType;
		
		private EntityRef<CabinetUsageType> _CabinetUsageType1;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnCabinetNumberChanging(int value);
    partial void OnCabinetNumberChanged();
    partial void OnABTypeChanging(System.Nullable<byte> value);
    partial void OnABTypeChanged();
    partial void OnCabinetCodeChanging(string value);
    partial void OnCabinetCodeChanged();
    partial void OnCabinetTypeIDChanging(int value);
    partial void OnCabinetTypeIDChanged();
    partial void OnCabinetUsageTypeChanging(int value);
    partial void OnCabinetUsageTypeChanged();
    partial void OnFromInputNoChanging(System.Nullable<int> value);
    partial void OnFromInputNoChanged();
    partial void OnToInputNoChanging(System.Nullable<int> value);
    partial void OnToInputNoChanged();
    partial void OnDistanceFromCenterChanging(int value);
    partial void OnDistanceFromCenterChanged();
    partial void OnIsOutBoundChanging(bool value);
    partial void OnIsOutBoundChanged();
    partial void OnOutBoundMeterChanging(System.Nullable<int> value);
    partial void OnOutBoundMeterChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnFromPostalCodeChanging(long value);
    partial void OnFromPostalCodeChanged();
    partial void OnToPostalCodeChanging(long value);
    partial void OnToPostalCodeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastTimeAddFacilityChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTimeAddFacilityChanged();
    partial void OnDateOfLastReviewChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfLastReviewChanged();
    partial void OnSwitchIDChanging(System.Nullable<int> value);
    partial void OnSwitchIDChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnIsLimitPostChanging(bool value);
    partial void OnIsLimitPostChanged();
    partial void OnMaxNumberPostChanging(System.Nullable<int> value);
    partial void OnMaxNumberPostChanged();
    partial void OnApplyQuotaChanging(bool value);
    partial void OnApplyQuotaChanged();
    #endregion
		
		public Cabinet()
		{
			this._CabinetInputs = new EntitySet<CabinetInput>(new Action<CabinetInput>(this.attach_CabinetInputs), new Action<CabinetInput>(this.detach_CabinetInputs));
			this._CenterToCenterTranslations = new EntitySet<CenterToCenterTranslation>(new Action<CenterToCenterTranslation>(this.attach_CenterToCenterTranslations), new Action<CenterToCenterTranslation>(this.detach_CenterToCenterTranslations));
			this._CenterToCenterTranslations1 = new EntitySet<CenterToCenterTranslation>(new Action<CenterToCenterTranslation>(this.attach_CenterToCenterTranslations1), new Action<CenterToCenterTranslation>(this.detach_CenterToCenterTranslations1));
			this._ExchangeCabinetInputs = new EntitySet<ExchangeCabinetInput>(new Action<ExchangeCabinetInput>(this.attach_ExchangeCabinetInputs), new Action<ExchangeCabinetInput>(this.detach_ExchangeCabinetInputs));
			this._ExchangeCabinetInputs1 = new EntitySet<ExchangeCabinetInput>(new Action<ExchangeCabinetInput>(this.attach_ExchangeCabinetInputs1), new Action<ExchangeCabinetInput>(this.detach_ExchangeCabinetInputs1));
			this._ExchangePosts = new EntitySet<ExchangePost>(new Action<ExchangePost>(this.attach_ExchangePosts), new Action<ExchangePost>(this.detach_ExchangePosts));
			this._ExchangePosts1 = new EntitySet<ExchangePost>(new Action<ExchangePost>(this.attach_ExchangePosts1), new Action<ExchangePost>(this.detach_ExchangePosts1));
			this._InvestigatePossibilityWaitinglists = new EntitySet<InvestigatePossibilityWaitinglist>(new Action<InvestigatePossibilityWaitinglist>(this.attach_InvestigatePossibilityWaitinglists), new Action<InvestigatePossibilityWaitinglist>(this.detach_InvestigatePossibilityWaitinglists));
			this._Linesmans = new EntitySet<Linesman>(new Action<Linesman>(this.attach_Linesmans), new Action<Linesman>(this.detach_Linesmans));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._TranslationOpticalCabinetToNormals = new EntitySet<TranslationOpticalCabinetToNormal>(new Action<TranslationOpticalCabinetToNormal>(this.attach_TranslationOpticalCabinetToNormals), new Action<TranslationOpticalCabinetToNormal>(this.detach_TranslationOpticalCabinetToNormals));
			this._TranslationOpticalCabinetToNormals1 = new EntitySet<TranslationOpticalCabinetToNormal>(new Action<TranslationOpticalCabinetToNormal>(this.attach_TranslationOpticalCabinetToNormals1), new Action<TranslationOpticalCabinetToNormal>(this.detach_TranslationOpticalCabinetToNormals1));
			this._TranslationPosts = new EntitySet<TranslationPost>(new Action<TranslationPost>(this.attach_TranslationPosts), new Action<TranslationPost>(this.detach_TranslationPosts));
			this._TranslationPostInputs = new EntitySet<TranslationPostInput>(new Action<TranslationPostInput>(this.attach_TranslationPostInputs), new Action<TranslationPostInput>(this.detach_TranslationPostInputs));
			this._TranslationPostInputs1 = new EntitySet<TranslationPostInput>(new Action<TranslationPostInput>(this.attach_TranslationPostInputs1), new Action<TranslationPostInput>(this.detach_TranslationPostInputs1));
			this._VisitPlacesCabinetAndPosts = new EntitySet<VisitPlacesCabinetAndPost>(new Action<VisitPlacesCabinetAndPost>(this.attach_VisitPlacesCabinetAndPosts), new Action<VisitPlacesCabinetAndPost>(this.detach_VisitPlacesCabinetAndPosts));
			this._ExchangeGSMConnections = new EntitySet<ExchangeGSMConnection>(new Action<ExchangeGSMConnection>(this.attach_ExchangeGSMConnections), new Action<ExchangeGSMConnection>(this.detach_ExchangeGSMConnections));
			this._AORBPostAndCabinet = default(EntityRef<AORBPostAndCabinet>);
			this._CabinetStatus = default(EntityRef<CabinetStatus>);
			this._CabinetType = default(EntityRef<CabinetType>);
			this._CabinetUsageType1 = default(EntityRef<CabinetUsageType>);
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNumber", DbType="Int NOT NULL")]
		public int CabinetNumber
		{
			get
			{
				return this._CabinetNumber;
			}
			set
			{
				if ((this._CabinetNumber != value))
				{
					this.OnCabinetNumberChanging(value);
					this.SendPropertyChanging();
					this._CabinetNumber = value;
					this.SendPropertyChanged("CabinetNumber");
					this.OnCabinetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABType", DbType="TinyInt")]
		public System.Nullable<byte> ABType
		{
			get
			{
				return this._ABType;
			}
			set
			{
				if ((this._ABType != value))
				{
					if (this._AORBPostAndCabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnABTypeChanging(value);
					this.SendPropertyChanging();
					this._ABType = value;
					this.SendPropertyChanged("ABType");
					this.OnABTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetCode", DbType="VarChar(50)")]
		public string CabinetCode
		{
			get
			{
				return this._CabinetCode;
			}
			set
			{
				if ((this._CabinetCode != value))
				{
					this.OnCabinetCodeChanging(value);
					this.SendPropertyChanging();
					this._CabinetCode = value;
					this.SendPropertyChanged("CabinetCode");
					this.OnCabinetCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetTypeID", DbType="Int NOT NULL")]
		public int CabinetTypeID
		{
			get
			{
				return this._CabinetTypeID;
			}
			set
			{
				if ((this._CabinetTypeID != value))
				{
					if (this._CabinetType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetTypeID = value;
					this.SendPropertyChanged("CabinetTypeID");
					this.OnCabinetTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetUsageType", DbType="Int NOT NULL")]
		public int CabinetUsageType
		{
			get
			{
				return this._CabinetUsageType;
			}
			set
			{
				if ((this._CabinetUsageType != value))
				{
					if (this._CabinetUsageType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetUsageTypeChanging(value);
					this.SendPropertyChanging();
					this._CabinetUsageType = value;
					this.SendPropertyChanged("CabinetUsageType");
					this.OnCabinetUsageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromInputNo", DbType="Int")]
		public System.Nullable<int> FromInputNo
		{
			get
			{
				return this._FromInputNo;
			}
			set
			{
				if ((this._FromInputNo != value))
				{
					this.OnFromInputNoChanging(value);
					this.SendPropertyChanging();
					this._FromInputNo = value;
					this.SendPropertyChanged("FromInputNo");
					this.OnFromInputNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToInputNo", DbType="Int")]
		public System.Nullable<int> ToInputNo
		{
			get
			{
				return this._ToInputNo;
			}
			set
			{
				if ((this._ToInputNo != value))
				{
					this.OnToInputNoChanging(value);
					this.SendPropertyChanging();
					this._ToInputNo = value;
					this.SendPropertyChanged("ToInputNo");
					this.OnToInputNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromCenter", DbType="Int NOT NULL")]
		public int DistanceFromCenter
		{
			get
			{
				return this._DistanceFromCenter;
			}
			set
			{
				if ((this._DistanceFromCenter != value))
				{
					this.OnDistanceFromCenterChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromCenter = value;
					this.SendPropertyChanged("DistanceFromCenter");
					this.OnDistanceFromCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutBound", DbType="Bit NOT NULL")]
		public bool IsOutBound
		{
			get
			{
				return this._IsOutBound;
			}
			set
			{
				if ((this._IsOutBound != value))
				{
					this.OnIsOutBoundChanging(value);
					this.SendPropertyChanging();
					this._IsOutBound = value;
					this.SendPropertyChanged("IsOutBound");
					this.OnIsOutBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutBoundMeter", DbType="Int")]
		public System.Nullable<int> OutBoundMeter
		{
			get
			{
				return this._OutBoundMeter;
			}
			set
			{
				if ((this._OutBoundMeter != value))
				{
					this.OnOutBoundMeterChanging(value);
					this.SendPropertyChanging();
					this._OutBoundMeter = value;
					this.SendPropertyChanged("OutBoundMeter");
					this.OnOutBoundMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(50)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPostalCode", DbType="BigInt NOT NULL")]
		public long FromPostalCode
		{
			get
			{
				return this._FromPostalCode;
			}
			set
			{
				if ((this._FromPostalCode != value))
				{
					this.OnFromPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._FromPostalCode = value;
					this.SendPropertyChanged("FromPostalCode");
					this.OnFromPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPostalCode", DbType="BigInt NOT NULL")]
		public long ToPostalCode
		{
			get
			{
				return this._ToPostalCode;
			}
			set
			{
				if ((this._ToPostalCode != value))
				{
					this.OnToPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._ToPostalCode = value;
					this.SendPropertyChanged("ToPostalCode");
					this.OnToPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._CabinetStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTimeAddFacility", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastTimeAddFacility
		{
			get
			{
				return this._LastTimeAddFacility;
			}
			set
			{
				if ((this._LastTimeAddFacility != value))
				{
					this.OnLastTimeAddFacilityChanging(value);
					this.SendPropertyChanging();
					this._LastTimeAddFacility = value;
					this.SendPropertyChanged("LastTimeAddFacility");
					this.OnLastTimeAddFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfLastReview", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateOfLastReview
		{
			get
			{
				return this._DateOfLastReview;
			}
			set
			{
				if ((this._DateOfLastReview != value))
				{
					this.OnDateOfLastReviewChanging(value);
					this.SendPropertyChanging();
					this._DateOfLastReview = value;
					this.SendPropertyChanged("DateOfLastReview");
					this.OnDateOfLastReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchID", DbType="Int")]
		public System.Nullable<int> SwitchID
		{
			get
			{
				return this._SwitchID;
			}
			set
			{
				if ((this._SwitchID != value))
				{
					this.OnSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchID = value;
					this.SendPropertyChanged("SwitchID");
					this.OnSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLimitPost", DbType="Bit NOT NULL")]
		public bool IsLimitPost
		{
			get
			{
				return this._IsLimitPost;
			}
			set
			{
				if ((this._IsLimitPost != value))
				{
					this.OnIsLimitPostChanging(value);
					this.SendPropertyChanging();
					this._IsLimitPost = value;
					this.SendPropertyChanged("IsLimitPost");
					this.OnIsLimitPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNumberPost", DbType="Int")]
		public System.Nullable<int> MaxNumberPost
		{
			get
			{
				return this._MaxNumberPost;
			}
			set
			{
				if ((this._MaxNumberPost != value))
				{
					this.OnMaxNumberPostChanging(value);
					this.SendPropertyChanging();
					this._MaxNumberPost = value;
					this.SendPropertyChanged("MaxNumberPost");
					this.OnMaxNumberPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyQuota", DbType="Bit NOT NULL")]
		public bool ApplyQuota
		{
			get
			{
				return this._ApplyQuota;
			}
			set
			{
				if ((this._ApplyQuota != value))
				{
					this.OnApplyQuotaChanging(value);
					this.SendPropertyChanging();
					this._ApplyQuota = value;
					this.SendPropertyChanged("ApplyQuota");
					this.OnApplyQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_CabinetInput", Storage="_CabinetInputs", ThisKey="ID", OtherKey="CabinetID")]
		public EntitySet<CabinetInput> CabinetInputs
		{
			get
			{
				return this._CabinetInputs;
			}
			set
			{
				this._CabinetInputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_CenterToCenterTranslation", Storage="_CenterToCenterTranslations", ThisKey="ID", OtherKey="OldCabinetID")]
		public EntitySet<CenterToCenterTranslation> CenterToCenterTranslations
		{
			get
			{
				return this._CenterToCenterTranslations;
			}
			set
			{
				this._CenterToCenterTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_CenterToCenterTranslation1", Storage="_CenterToCenterTranslations1", ThisKey="ID", OtherKey="NewCabinetID")]
		public EntitySet<CenterToCenterTranslation> CenterToCenterTranslations1
		{
			get
			{
				return this._CenterToCenterTranslations1;
			}
			set
			{
				this._CenterToCenterTranslations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangeCabinetInput", Storage="_ExchangeCabinetInputs", ThisKey="ID", OtherKey="OldCabinetID")]
		public EntitySet<ExchangeCabinetInput> ExchangeCabinetInputs
		{
			get
			{
				return this._ExchangeCabinetInputs;
			}
			set
			{
				this._ExchangeCabinetInputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangeCabinetInput1", Storage="_ExchangeCabinetInputs1", ThisKey="ID", OtherKey="NewCabinetID")]
		public EntitySet<ExchangeCabinetInput> ExchangeCabinetInputs1
		{
			get
			{
				return this._ExchangeCabinetInputs1;
			}
			set
			{
				this._ExchangeCabinetInputs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangePost", Storage="_ExchangePosts", ThisKey="ID", OtherKey="OldCabinetID")]
		public EntitySet<ExchangePost> ExchangePosts
		{
			get
			{
				return this._ExchangePosts;
			}
			set
			{
				this._ExchangePosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangePost1", Storage="_ExchangePosts1", ThisKey="ID", OtherKey="NewCabinetID")]
		public EntitySet<ExchangePost> ExchangePosts1
		{
			get
			{
				return this._ExchangePosts1;
			}
			set
			{
				this._ExchangePosts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_InvestigatePossibilityWaitinglist", Storage="_InvestigatePossibilityWaitinglists", ThisKey="ID", OtherKey="CabinetID")]
		public EntitySet<InvestigatePossibilityWaitinglist> InvestigatePossibilityWaitinglists
		{
			get
			{
				return this._InvestigatePossibilityWaitinglists;
			}
			set
			{
				this._InvestigatePossibilityWaitinglists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_Linesman", Storage="_Linesmans", ThisKey="ID", OtherKey="CabinetID")]
		public EntitySet<Linesman> Linesmans
		{
			get
			{
				return this._Linesmans;
			}
			set
			{
				this._Linesmans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_Post", Storage="_Posts", ThisKey="ID", OtherKey="CabinetID")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationOpticalCabinetToNormal", Storage="_TranslationOpticalCabinetToNormals", ThisKey="ID", OtherKey="OldCabinetID")]
		public EntitySet<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals
		{
			get
			{
				return this._TranslationOpticalCabinetToNormals;
			}
			set
			{
				this._TranslationOpticalCabinetToNormals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationOpticalCabinetToNormal1", Storage="_TranslationOpticalCabinetToNormals1", ThisKey="ID", OtherKey="NewCabinetID")]
		public EntitySet<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormals1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormals1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationPost", Storage="_TranslationPosts", ThisKey="ID", OtherKey="OldCabinetID")]
		public EntitySet<TranslationPost> TranslationPosts
		{
			get
			{
				return this._TranslationPosts;
			}
			set
			{
				this._TranslationPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationPostInput", Storage="_TranslationPostInputs", ThisKey="ID", OtherKey="FromCabinetID")]
		public EntitySet<TranslationPostInput> TranslationPostInputs
		{
			get
			{
				return this._TranslationPostInputs;
			}
			set
			{
				this._TranslationPostInputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationPostInput1", Storage="_TranslationPostInputs1", ThisKey="ID", OtherKey="ToCabinetID")]
		public EntitySet<TranslationPostInput> TranslationPostInputs1
		{
			get
			{
				return this._TranslationPostInputs1;
			}
			set
			{
				this._TranslationPostInputs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_VisitPlacesCabinetAndPost", Storage="_VisitPlacesCabinetAndPosts", ThisKey="ID", OtherKey="CabinetID")]
		public EntitySet<VisitPlacesCabinetAndPost> VisitPlacesCabinetAndPosts
		{
			get
			{
				return this._VisitPlacesCabinetAndPosts;
			}
			set
			{
				this._VisitPlacesCabinetAndPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangeGSMConnection", Storage="_ExchangeGSMConnections", ThisKey="ID", OtherKey="CabinetID")]
		public EntitySet<ExchangeGSMConnection> ExchangeGSMConnections
		{
			get
			{
				return this._ExchangeGSMConnections;
			}
			set
			{
				this._ExchangeGSMConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AORBPostAndCabinet_Cabinet", Storage="_AORBPostAndCabinet", ThisKey="ABType", OtherKey="ID", IsForeignKey=true)]
		public AORBPostAndCabinet AORBPostAndCabinet
		{
			get
			{
				return this._AORBPostAndCabinet.Entity;
			}
			set
			{
				AORBPostAndCabinet previousValue = this._AORBPostAndCabinet.Entity;
				if (((previousValue != value) 
							|| (this._AORBPostAndCabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AORBPostAndCabinet.Entity = null;
						previousValue.Cabinets.Remove(this);
					}
					this._AORBPostAndCabinet.Entity = value;
					if ((value != null))
					{
						value.Cabinets.Add(this);
						this._ABType = value.ID;
					}
					else
					{
						this._ABType = default(Nullable<byte>);
					}
					this.SendPropertyChanged("AORBPostAndCabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetStatus_Cabinet", Storage="_CabinetStatus", ThisKey="Status", OtherKey="ID", IsForeignKey=true)]
		public CabinetStatus CabinetStatus
		{
			get
			{
				return this._CabinetStatus.Entity;
			}
			set
			{
				CabinetStatus previousValue = this._CabinetStatus.Entity;
				if (((previousValue != value) 
							|| (this._CabinetStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetStatus.Entity = null;
						previousValue.Cabinets.Remove(this);
					}
					this._CabinetStatus.Entity = value;
					if ((value != null))
					{
						value.Cabinets.Add(this);
						this._Status = value.ID;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("CabinetStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetType_Cabinet", Storage="_CabinetType", ThisKey="CabinetTypeID", OtherKey="ID", IsForeignKey=true)]
		public CabinetType CabinetType
		{
			get
			{
				return this._CabinetType.Entity;
			}
			set
			{
				CabinetType previousValue = this._CabinetType.Entity;
				if (((previousValue != value) 
							|| (this._CabinetType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetType.Entity = null;
						previousValue.Cabinets.Remove(this);
					}
					this._CabinetType.Entity = value;
					if ((value != null))
					{
						value.Cabinets.Add(this);
						this._CabinetTypeID = value.ID;
					}
					else
					{
						this._CabinetTypeID = default(int);
					}
					this.SendPropertyChanged("CabinetType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetUsageType_Cabinet", Storage="_CabinetUsageType1", ThisKey="CabinetUsageType", OtherKey="ID", IsForeignKey=true)]
		public CabinetUsageType CabinetUsageType1
		{
			get
			{
				return this._CabinetUsageType1.Entity;
			}
			set
			{
				CabinetUsageType previousValue = this._CabinetUsageType1.Entity;
				if (((previousValue != value) 
							|| (this._CabinetUsageType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetUsageType1.Entity = null;
						previousValue.Cabinets.Remove(this);
					}
					this._CabinetUsageType1.Entity = value;
					if ((value != null))
					{
						value.Cabinets.Add(this);
						this._CabinetUsageType = value.ID;
					}
					else
					{
						this._CabinetUsageType = default(int);
					}
					this.SendPropertyChanged("CabinetUsageType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Cabinet", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Cabinets.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Cabinets.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CabinetInputs(CabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_CabinetInputs(CabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_CenterToCenterTranslations(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_CenterToCenterTranslations(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_CenterToCenterTranslations1(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = this;
		}
		
		private void detach_CenterToCenterTranslations1(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = null;
		}
		
		private void attach_ExchangeCabinetInputs(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_ExchangeCabinetInputs(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_ExchangeCabinetInputs1(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = this;
		}
		
		private void detach_ExchangeCabinetInputs1(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = null;
		}
		
		private void attach_ExchangePosts(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_ExchangePosts(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_ExchangePosts1(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = this;
		}
		
		private void detach_ExchangePosts1(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = null;
		}
		
		private void attach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_Linesmans(Linesman entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_Linesmans(Linesman entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormals(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormals(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormals1(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormals1(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = null;
		}
		
		private void attach_TranslationPosts(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_TranslationPosts(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_TranslationPostInputs(TranslationPostInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_TranslationPostInputs(TranslationPostInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_TranslationPostInputs1(TranslationPostInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = this;
		}
		
		private void detach_TranslationPostInputs1(TranslationPostInput entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet1 = null;
		}
		
		private void attach_VisitPlacesCabinetAndPosts(VisitPlacesCabinetAndPost entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_VisitPlacesCabinetAndPosts(VisitPlacesCabinetAndPost entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
		
		private void attach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = this;
		}
		
		private void detach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Cabinet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CabinetInput")]
	public partial class CabinetInput : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _CabinetID;
		
		private int _InputNumber;
		
		private System.DateTime _InsertDate;
		
		private byte _Status;
		
		private System.Nullable<byte> _Direction;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<CablePair> _CablePairs;
		
		private EntitySet<CenterToCenterTranslation> _CenterToCenterTranslations;
		
		private EntitySet<CenterToCenterTranslation> _CenterToCenterTranslations1;
		
		private EntitySet<CenterToCenterTranslation> _CenterToCenterTranslations2;
		
		private EntitySet<CenterToCenterTranslation> _CenterToCenterTranslations3;
		
		private EntitySet<ChangeLocationSpecialWire> _ChangeLocationSpecialWires;
		
		private EntitySet<ExchangeCabinetInput> _ExchangeCabinetInputs;
		
		private EntitySet<ExchangeCabinetInput> _ExchangeCabinetInputs1;
		
		private EntitySet<ExchangeCabinetInput> _ExchangeCabinetInputs2;
		
		private EntitySet<ExchangeCabinetInput> _ExchangeCabinetInputs3;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions1;
		
		private EntitySet<ExchangePost> _ExchangePosts;
		
		private EntitySet<ExchangePost> _ExchangePosts1;
		
		private EntitySet<Malfuction> _Malfuctions;
		
		private EntitySet<RefundDeposit> _RefundDeposits;
		
		private EntitySet<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormals;
		
		private EntitySet<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormals1;
		
		private EntitySet<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormals2;
		
		private EntitySet<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormals3;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions1;
		
		private EntitySet<TranslationPostInputConnection> _TranslationPostInputConnections;
		
		private EntitySet<VacateSpecialWire> _VacateSpecialWires;
		
		private EntitySet<ExchangeGSMConnection> _ExchangeGSMConnections;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<CabinetInputDirection> _CabinetInputDirection;
		
		private EntityRef<CabinetInputStatus> _CabinetInputStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCabinetIDChanging(int value);
    partial void OnCabinetIDChanged();
    partial void OnInputNumberChanging(int value);
    partial void OnInputNumberChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnDirectionChanging(System.Nullable<byte> value);
    partial void OnDirectionChanged();
    #endregion
		
		public CabinetInput()
		{
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._CablePairs = new EntitySet<CablePair>(new Action<CablePair>(this.attach_CablePairs), new Action<CablePair>(this.detach_CablePairs));
			this._CenterToCenterTranslations = new EntitySet<CenterToCenterTranslation>(new Action<CenterToCenterTranslation>(this.attach_CenterToCenterTranslations), new Action<CenterToCenterTranslation>(this.detach_CenterToCenterTranslations));
			this._CenterToCenterTranslations1 = new EntitySet<CenterToCenterTranslation>(new Action<CenterToCenterTranslation>(this.attach_CenterToCenterTranslations1), new Action<CenterToCenterTranslation>(this.detach_CenterToCenterTranslations1));
			this._CenterToCenterTranslations2 = new EntitySet<CenterToCenterTranslation>(new Action<CenterToCenterTranslation>(this.attach_CenterToCenterTranslations2), new Action<CenterToCenterTranslation>(this.detach_CenterToCenterTranslations2));
			this._CenterToCenterTranslations3 = new EntitySet<CenterToCenterTranslation>(new Action<CenterToCenterTranslation>(this.attach_CenterToCenterTranslations3), new Action<CenterToCenterTranslation>(this.detach_CenterToCenterTranslations3));
			this._ChangeLocationSpecialWires = new EntitySet<ChangeLocationSpecialWire>(new Action<ChangeLocationSpecialWire>(this.attach_ChangeLocationSpecialWires), new Action<ChangeLocationSpecialWire>(this.detach_ChangeLocationSpecialWires));
			this._ExchangeCabinetInputs = new EntitySet<ExchangeCabinetInput>(new Action<ExchangeCabinetInput>(this.attach_ExchangeCabinetInputs), new Action<ExchangeCabinetInput>(this.detach_ExchangeCabinetInputs));
			this._ExchangeCabinetInputs1 = new EntitySet<ExchangeCabinetInput>(new Action<ExchangeCabinetInput>(this.attach_ExchangeCabinetInputs1), new Action<ExchangeCabinetInput>(this.detach_ExchangeCabinetInputs1));
			this._ExchangeCabinetInputs2 = new EntitySet<ExchangeCabinetInput>(new Action<ExchangeCabinetInput>(this.attach_ExchangeCabinetInputs2), new Action<ExchangeCabinetInput>(this.detach_ExchangeCabinetInputs2));
			this._ExchangeCabinetInputs3 = new EntitySet<ExchangeCabinetInput>(new Action<ExchangeCabinetInput>(this.attach_ExchangeCabinetInputs3), new Action<ExchangeCabinetInput>(this.detach_ExchangeCabinetInputs3));
			this._ExchangeCabinetInputConncetions = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions));
			this._ExchangeCabinetInputConncetions1 = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions1), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions1));
			this._ExchangePosts = new EntitySet<ExchangePost>(new Action<ExchangePost>(this.attach_ExchangePosts), new Action<ExchangePost>(this.detach_ExchangePosts));
			this._ExchangePosts1 = new EntitySet<ExchangePost>(new Action<ExchangePost>(this.attach_ExchangePosts1), new Action<ExchangePost>(this.detach_ExchangePosts1));
			this._Malfuctions = new EntitySet<Malfuction>(new Action<Malfuction>(this.attach_Malfuctions), new Action<Malfuction>(this.detach_Malfuctions));
			this._RefundDeposits = new EntitySet<RefundDeposit>(new Action<RefundDeposit>(this.attach_RefundDeposits), new Action<RefundDeposit>(this.detach_RefundDeposits));
			this._TranslationOpticalCabinetToNormals = new EntitySet<TranslationOpticalCabinetToNormal>(new Action<TranslationOpticalCabinetToNormal>(this.attach_TranslationOpticalCabinetToNormals), new Action<TranslationOpticalCabinetToNormal>(this.detach_TranslationOpticalCabinetToNormals));
			this._TranslationOpticalCabinetToNormals1 = new EntitySet<TranslationOpticalCabinetToNormal>(new Action<TranslationOpticalCabinetToNormal>(this.attach_TranslationOpticalCabinetToNormals1), new Action<TranslationOpticalCabinetToNormal>(this.detach_TranslationOpticalCabinetToNormals1));
			this._TranslationOpticalCabinetToNormals2 = new EntitySet<TranslationOpticalCabinetToNormal>(new Action<TranslationOpticalCabinetToNormal>(this.attach_TranslationOpticalCabinetToNormals2), new Action<TranslationOpticalCabinetToNormal>(this.detach_TranslationOpticalCabinetToNormals2));
			this._TranslationOpticalCabinetToNormals3 = new EntitySet<TranslationOpticalCabinetToNormal>(new Action<TranslationOpticalCabinetToNormal>(this.attach_TranslationOpticalCabinetToNormals3), new Action<TranslationOpticalCabinetToNormal>(this.detach_TranslationOpticalCabinetToNormals3));
			this._TranslationOpticalCabinetToNormalConncetions = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions));
			this._TranslationOpticalCabinetToNormalConncetions1 = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions1), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions1));
			this._TranslationPostInputConnections = new EntitySet<TranslationPostInputConnection>(new Action<TranslationPostInputConnection>(this.attach_TranslationPostInputConnections), new Action<TranslationPostInputConnection>(this.detach_TranslationPostInputConnections));
			this._VacateSpecialWires = new EntitySet<VacateSpecialWire>(new Action<VacateSpecialWire>(this.attach_VacateSpecialWires), new Action<VacateSpecialWire>(this.detach_VacateSpecialWires));
			this._ExchangeGSMConnections = new EntitySet<ExchangeGSMConnection>(new Action<ExchangeGSMConnection>(this.attach_ExchangeGSMConnections), new Action<ExchangeGSMConnection>(this.detach_ExchangeGSMConnections));
			this._Cabinet = default(EntityRef<Cabinet>);
			this._CabinetInputDirection = default(EntityRef<CabinetInputDirection>);
			this._CabinetInputStatus = default(EntityRef<CabinetInputStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int NOT NULL")]
		public int CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputNumber", DbType="Int NOT NULL")]
		public int InputNumber
		{
			get
			{
				return this._InputNumber;
			}
			set
			{
				if ((this._InputNumber != value))
				{
					this.OnInputNumberChanging(value);
					this.SendPropertyChanging();
					this._InputNumber = value;
					this.SendPropertyChanged("InputNumber");
					this.OnInputNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._CabinetInputStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="TinyInt")]
		public System.Nullable<byte> Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					if (this._CabinetInputDirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="CabinetInputID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CablePair", Storage="_CablePairs", ThisKey="ID", OtherKey="CabinetInputID")]
		public EntitySet<CablePair> CablePairs
		{
			get
			{
				return this._CablePairs;
			}
			set
			{
				this._CablePairs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CenterToCenterTranslation", Storage="_CenterToCenterTranslations", ThisKey="ID", OtherKey="FromOldCabinetInputID")]
		public EntitySet<CenterToCenterTranslation> CenterToCenterTranslations
		{
			get
			{
				return this._CenterToCenterTranslations;
			}
			set
			{
				this._CenterToCenterTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CenterToCenterTranslation1", Storage="_CenterToCenterTranslations1", ThisKey="ID", OtherKey="ToOldCabinetInputID")]
		public EntitySet<CenterToCenterTranslation> CenterToCenterTranslations1
		{
			get
			{
				return this._CenterToCenterTranslations1;
			}
			set
			{
				this._CenterToCenterTranslations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CenterToCenterTranslation2", Storage="_CenterToCenterTranslations2", ThisKey="ID", OtherKey="FromNewCabinetInputID")]
		public EntitySet<CenterToCenterTranslation> CenterToCenterTranslations2
		{
			get
			{
				return this._CenterToCenterTranslations2;
			}
			set
			{
				this._CenterToCenterTranslations2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CenterToCenterTranslation3", Storage="_CenterToCenterTranslations3", ThisKey="ID", OtherKey="ToNewCabinetInputID")]
		public EntitySet<CenterToCenterTranslation> CenterToCenterTranslations3
		{
			get
			{
				return this._CenterToCenterTranslations3;
			}
			set
			{
				this._CenterToCenterTranslations3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ChangeLocationSpecialWire", Storage="_ChangeLocationSpecialWires", ThisKey="ID", OtherKey="OldCabinetInputID")]
		public EntitySet<ChangeLocationSpecialWire> ChangeLocationSpecialWires
		{
			get
			{
				return this._ChangeLocationSpecialWires;
			}
			set
			{
				this._ChangeLocationSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInput", Storage="_ExchangeCabinetInputs", ThisKey="ID", OtherKey="FromOldCabinetInputID")]
		public EntitySet<ExchangeCabinetInput> ExchangeCabinetInputs
		{
			get
			{
				return this._ExchangeCabinetInputs;
			}
			set
			{
				this._ExchangeCabinetInputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInput1", Storage="_ExchangeCabinetInputs1", ThisKey="ID", OtherKey="ToOldCabinetInputID")]
		public EntitySet<ExchangeCabinetInput> ExchangeCabinetInputs1
		{
			get
			{
				return this._ExchangeCabinetInputs1;
			}
			set
			{
				this._ExchangeCabinetInputs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInput2", Storage="_ExchangeCabinetInputs2", ThisKey="ID", OtherKey="FromNewCabinetInputID")]
		public EntitySet<ExchangeCabinetInput> ExchangeCabinetInputs2
		{
			get
			{
				return this._ExchangeCabinetInputs2;
			}
			set
			{
				this._ExchangeCabinetInputs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInput3", Storage="_ExchangeCabinetInputs3", ThisKey="ID", OtherKey="ToNewCabinetInputID")]
		public EntitySet<ExchangeCabinetInput> ExchangeCabinetInputs3
		{
			get
			{
				return this._ExchangeCabinetInputs3;
			}
			set
			{
				this._ExchangeCabinetInputs3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInputConncetion", Storage="_ExchangeCabinetInputConncetions", ThisKey="ID", OtherKey="FromCabinetInputID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this._ExchangeCabinetInputConncetions;
			}
			set
			{
				this._ExchangeCabinetInputConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInputConncetion1", Storage="_ExchangeCabinetInputConncetions1", ThisKey="ID", OtherKey="ToCabinetInputID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions1
		{
			get
			{
				return this._ExchangeCabinetInputConncetions1;
			}
			set
			{
				this._ExchangeCabinetInputConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangePost", Storage="_ExchangePosts", ThisKey="ID", OtherKey="FromCabinetInputID")]
		public EntitySet<ExchangePost> ExchangePosts
		{
			get
			{
				return this._ExchangePosts;
			}
			set
			{
				this._ExchangePosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangePost1", Storage="_ExchangePosts1", ThisKey="ID", OtherKey="ToCabinetInputID")]
		public EntitySet<ExchangePost> ExchangePosts1
		{
			get
			{
				return this._ExchangePosts1;
			}
			set
			{
				this._ExchangePosts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_Malfuction", Storage="_Malfuctions", ThisKey="ID", OtherKey="CabinetInputID")]
		public EntitySet<Malfuction> Malfuctions
		{
			get
			{
				return this._Malfuctions;
			}
			set
			{
				this._Malfuctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_RefundDeposit", Storage="_RefundDeposits", ThisKey="ID", OtherKey="CabinetInputID")]
		public EntitySet<RefundDeposit> RefundDeposits
		{
			get
			{
				return this._RefundDeposits;
			}
			set
			{
				this._RefundDeposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormal", Storage="_TranslationOpticalCabinetToNormals", ThisKey="ID", OtherKey="FromNewCabinetInputID")]
		public EntitySet<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals
		{
			get
			{
				return this._TranslationOpticalCabinetToNormals;
			}
			set
			{
				this._TranslationOpticalCabinetToNormals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormal1", Storage="_TranslationOpticalCabinetToNormals1", ThisKey="ID", OtherKey="FromOldCabinetInputID")]
		public EntitySet<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormals1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormals1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormal2", Storage="_TranslationOpticalCabinetToNormals2", ThisKey="ID", OtherKey="ToNewCabinetInputID")]
		public EntitySet<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals2
		{
			get
			{
				return this._TranslationOpticalCabinetToNormals2;
			}
			set
			{
				this._TranslationOpticalCabinetToNormals2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormal3", Storage="_TranslationOpticalCabinetToNormals3", ThisKey="ID", OtherKey="ToOldCabinetInputID")]
		public EntitySet<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals3
		{
			get
			{
				return this._TranslationOpticalCabinetToNormals3;
			}
			set
			{
				this._TranslationOpticalCabinetToNormals3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormalConncetion", Storage="_TranslationOpticalCabinetToNormalConncetions", ThisKey="ID", OtherKey="FromCabinetInputID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormalConncetion1", Storage="_TranslationOpticalCabinetToNormalConncetions1", ThisKey="ID", OtherKey="ToCabinetInputID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationPostInputConnection", Storage="_TranslationPostInputConnections", ThisKey="ID", OtherKey="CabinetInputID")]
		public EntitySet<TranslationPostInputConnection> TranslationPostInputConnections
		{
			get
			{
				return this._TranslationPostInputConnections;
			}
			set
			{
				this._TranslationPostInputConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_VacateSpecialWire", Storage="_VacateSpecialWires", ThisKey="ID", OtherKey="CabinetInputID")]
		public EntitySet<VacateSpecialWire> VacateSpecialWires
		{
			get
			{
				return this._VacateSpecialWires;
			}
			set
			{
				this._VacateSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeGSMConnection", Storage="_ExchangeGSMConnections", ThisKey="ID", OtherKey="CabinetInputID")]
		public EntitySet<ExchangeGSMConnection> ExchangeGSMConnections
		{
			get
			{
				return this._ExchangeGSMConnections;
			}
			set
			{
				this._ExchangeGSMConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_CabinetInput", Storage="_Cabinet", ThisKey="CabinetID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.CabinetInputs.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.CabinetInputs.Add(this);
						this._CabinetID = value.ID;
					}
					else
					{
						this._CabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInputDirection_CabinetInput", Storage="_CabinetInputDirection", ThisKey="Direction", OtherKey="ID", IsForeignKey=true)]
		public CabinetInputDirection CabinetInputDirection
		{
			get
			{
				return this._CabinetInputDirection.Entity;
			}
			set
			{
				CabinetInputDirection previousValue = this._CabinetInputDirection.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInputDirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInputDirection.Entity = null;
						previousValue.CabinetInputs.Remove(this);
					}
					this._CabinetInputDirection.Entity = value;
					if ((value != null))
					{
						value.CabinetInputs.Add(this);
						this._Direction = value.ID;
					}
					else
					{
						this._Direction = default(Nullable<byte>);
					}
					this.SendPropertyChanged("CabinetInputDirection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInputStatus_CabinetInput", Storage="_CabinetInputStatus", ThisKey="Status", OtherKey="ID", IsForeignKey=true)]
		public CabinetInputStatus CabinetInputStatus
		{
			get
			{
				return this._CabinetInputStatus.Entity;
			}
			set
			{
				CabinetInputStatus previousValue = this._CabinetInputStatus.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInputStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInputStatus.Entity = null;
						previousValue.CabinetInputs.Remove(this);
					}
					this._CabinetInputStatus.Entity = value;
					if ((value != null))
					{
						value.CabinetInputs.Add(this);
						this._Status = value.ID;
					}
					else
					{
						this._Status = default(byte);
					}
					this.SendPropertyChanged("CabinetInputStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_CablePairs(CablePair entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_CablePairs(CablePair entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_CenterToCenterTranslations(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_CenterToCenterTranslations(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_CenterToCenterTranslations1(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = this;
		}
		
		private void detach_CenterToCenterTranslations1(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = null;
		}
		
		private void attach_CenterToCenterTranslations2(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput2 = this;
		}
		
		private void detach_CenterToCenterTranslations2(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput2 = null;
		}
		
		private void attach_CenterToCenterTranslations3(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput3 = this;
		}
		
		private void detach_CenterToCenterTranslations3(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput3 = null;
		}
		
		private void attach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_ExchangeCabinetInputs(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_ExchangeCabinetInputs(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_ExchangeCabinetInputs1(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = this;
		}
		
		private void detach_ExchangeCabinetInputs1(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = null;
		}
		
		private void attach_ExchangeCabinetInputs2(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput2 = this;
		}
		
		private void detach_ExchangeCabinetInputs2(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput2 = null;
		}
		
		private void attach_ExchangeCabinetInputs3(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput3 = this;
		}
		
		private void detach_ExchangeCabinetInputs3(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput3 = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = null;
		}
		
		private void attach_ExchangePosts(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_ExchangePosts(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_ExchangePosts1(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = this;
		}
		
		private void detach_ExchangePosts1(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = null;
		}
		
		private void attach_Malfuctions(Malfuction entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_Malfuctions(Malfuction entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormals(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormals(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormals1(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormals1(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormals2(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput2 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormals2(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput2 = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormals3(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput3 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormals3(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput3 = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput1 = null;
		}
		
		private void attach_TranslationPostInputConnections(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_TranslationPostInputConnections(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
		
		private void attach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = this;
		}
		
		private void detach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInput = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CabinetInputDirection")]
	public partial class CabinetInputDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<CabinetInput> _CabinetInputs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CabinetInputDirection()
		{
			this._CabinetInputs = new EntitySet<CabinetInput>(new Action<CabinetInput>(this.attach_CabinetInputs), new Action<CabinetInput>(this.detach_CabinetInputs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInputDirection_CabinetInput", Storage="_CabinetInputs", ThisKey="ID", OtherKey="Direction")]
		public EntitySet<CabinetInput> CabinetInputs
		{
			get
			{
				return this._CabinetInputs;
			}
			set
			{
				this._CabinetInputs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CabinetInputs(CabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInputDirection = this;
		}
		
		private void detach_CabinetInputs(CabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInputDirection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CabinetInputStatus")]
	public partial class CabinetInputStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<CabinetInput> _CabinetInputs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CabinetInputStatus()
		{
			this._CabinetInputs = new EntitySet<CabinetInput>(new Action<CabinetInput>(this.attach_CabinetInputs), new Action<CabinetInput>(this.detach_CabinetInputs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInputStatus_CabinetInput", Storage="_CabinetInputs", ThisKey="ID", OtherKey="Status")]
		public EntitySet<CabinetInput> CabinetInputs
		{
			get
			{
				return this._CabinetInputs;
			}
			set
			{
				this._CabinetInputs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CabinetInputs(CabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInputStatus = this;
		}
		
		private void detach_CabinetInputs(CabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.CabinetInputStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CabinetStatus")]
	public partial class CabinetStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Cabinet> _Cabinets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CabinetStatus()
		{
			this._Cabinets = new EntitySet<Cabinet>(new Action<Cabinet>(this.attach_Cabinets), new Action<Cabinet>(this.detach_Cabinets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetStatus_Cabinet", Storage="_Cabinets", ThisKey="ID", OtherKey="Status")]
		public EntitySet<Cabinet> Cabinets
		{
			get
			{
				return this._Cabinets;
			}
			set
			{
				this._Cabinets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.CabinetStatus = this;
		}
		
		private void detach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.CabinetStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CabinetType")]
	public partial class CabinetType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CabinetTypeName;
		
		private System.Nullable<int> _CabinetCapacity;
		
		private EntitySet<Cabinet> _Cabinets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCabinetTypeNameChanging(string value);
    partial void OnCabinetTypeNameChanged();
    partial void OnCabinetCapacityChanging(System.Nullable<int> value);
    partial void OnCabinetCapacityChanged();
    #endregion
		
		public CabinetType()
		{
			this._Cabinets = new EntitySet<Cabinet>(new Action<Cabinet>(this.attach_Cabinets), new Action<Cabinet>(this.detach_Cabinets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CabinetTypeName
		{
			get
			{
				return this._CabinetTypeName;
			}
			set
			{
				if ((this._CabinetTypeName != value))
				{
					this.OnCabinetTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CabinetTypeName = value;
					this.SendPropertyChanged("CabinetTypeName");
					this.OnCabinetTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetCapacity", DbType="Int")]
		public System.Nullable<int> CabinetCapacity
		{
			get
			{
				return this._CabinetCapacity;
			}
			set
			{
				if ((this._CabinetCapacity != value))
				{
					this.OnCabinetCapacityChanging(value);
					this.SendPropertyChanging();
					this._CabinetCapacity = value;
					this.SendPropertyChanged("CabinetCapacity");
					this.OnCabinetCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetType_Cabinet", Storage="_Cabinets", ThisKey="ID", OtherKey="CabinetTypeID")]
		public EntitySet<Cabinet> Cabinets
		{
			get
			{
				return this._Cabinets;
			}
			set
			{
				this._Cabinets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.CabinetType = this;
		}
		
		private void detach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.CabinetType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CabinetUsageType")]
	public partial class CabinetUsageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Cabinet> _Cabinets;
		
		private EntitySet<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormals;
		
		private EntitySet<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormals1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CabinetUsageType()
		{
			this._Cabinets = new EntitySet<Cabinet>(new Action<Cabinet>(this.attach_Cabinets), new Action<Cabinet>(this.detach_Cabinets));
			this._TranslationOpticalCabinetToNormals = new EntitySet<TranslationOpticalCabinetToNormal>(new Action<TranslationOpticalCabinetToNormal>(this.attach_TranslationOpticalCabinetToNormals), new Action<TranslationOpticalCabinetToNormal>(this.detach_TranslationOpticalCabinetToNormals));
			this._TranslationOpticalCabinetToNormals1 = new EntitySet<TranslationOpticalCabinetToNormal>(new Action<TranslationOpticalCabinetToNormal>(this.attach_TranslationOpticalCabinetToNormals1), new Action<TranslationOpticalCabinetToNormal>(this.detach_TranslationOpticalCabinetToNormals1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetUsageType_Cabinet", Storage="_Cabinets", ThisKey="ID", OtherKey="CabinetUsageType")]
		public EntitySet<Cabinet> Cabinets
		{
			get
			{
				return this._Cabinets;
			}
			set
			{
				this._Cabinets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetUsageType_TranslationOpticalCabinetToNormal", Storage="_TranslationOpticalCabinetToNormals", ThisKey="ID", OtherKey="NewCabinetUsageTypeID")]
		public EntitySet<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals
		{
			get
			{
				return this._TranslationOpticalCabinetToNormals;
			}
			set
			{
				this._TranslationOpticalCabinetToNormals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetUsageType_TranslationOpticalCabinetToNormal1", Storage="_TranslationOpticalCabinetToNormals1", ThisKey="ID", OtherKey="OldCabinetUsageTypeID")]
		public EntitySet<TranslationOpticalCabinetToNormal> TranslationOpticalCabinetToNormals1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormals1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormals1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.CabinetUsageType1 = this;
		}
		
		private void detach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.CabinetUsageType1 = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormals(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetUsageType = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormals(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetUsageType = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormals1(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetUsageType1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormals1(TranslationOpticalCabinetToNormal entity)
		{
			this.SendPropertyChanging();
			entity.CabinetUsageType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cable")]
	public partial class Cable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _CenterID;
		
		private int _CableNumber;
		
		private int _CableTypeID;
		
		private int _CableUsedChannelID;
		
		private decimal _CableDiameter;
		
		private System.Nullable<byte> _PhysicalType;
		
		private int _FromCablePairNumber;
		
		private int _ToCablePairNumber;
		
		private byte _Status;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<int> _CabinetIDInVirtualCable;
		
		private System.Nullable<long> _ElkaID;
		
		private EntitySet<CablePair> _CablePairs;
		
		private EntityRef<CableType> _CableType;
		
		private EntityRef<CableUsedChannel> _CableUsedChannel;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnCableNumberChanging(int value);
    partial void OnCableNumberChanged();
    partial void OnCableTypeIDChanging(int value);
    partial void OnCableTypeIDChanged();
    partial void OnCableUsedChannelIDChanging(int value);
    partial void OnCableUsedChannelIDChanged();
    partial void OnCableDiameterChanging(decimal value);
    partial void OnCableDiameterChanged();
    partial void OnPhysicalTypeChanging(System.Nullable<byte> value);
    partial void OnPhysicalTypeChanged();
    partial void OnFromCablePairNumberChanging(int value);
    partial void OnFromCablePairNumberChanged();
    partial void OnToCablePairNumberChanging(int value);
    partial void OnToCablePairNumberChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCabinetIDInVirtualCableChanging(System.Nullable<int> value);
    partial void OnCabinetIDInVirtualCableChanged();
    partial void OnElkaIDChanging(System.Nullable<long> value);
    partial void OnElkaIDChanged();
    #endregion
		
		public Cable()
		{
			this._CablePairs = new EntitySet<CablePair>(new Action<CablePair>(this.attach_CablePairs), new Action<CablePair>(this.detach_CablePairs));
			this._CableType = default(EntityRef<CableType>);
			this._CableUsedChannel = default(EntityRef<CableUsedChannel>);
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableNumber", DbType="Int NOT NULL")]
		public int CableNumber
		{
			get
			{
				return this._CableNumber;
			}
			set
			{
				if ((this._CableNumber != value))
				{
					this.OnCableNumberChanging(value);
					this.SendPropertyChanging();
					this._CableNumber = value;
					this.SendPropertyChanged("CableNumber");
					this.OnCableNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableTypeID", DbType="Int NOT NULL")]
		public int CableTypeID
		{
			get
			{
				return this._CableTypeID;
			}
			set
			{
				if ((this._CableTypeID != value))
				{
					if (this._CableType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCableTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CableTypeID = value;
					this.SendPropertyChanged("CableTypeID");
					this.OnCableTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableUsedChannelID", DbType="Int NOT NULL")]
		public int CableUsedChannelID
		{
			get
			{
				return this._CableUsedChannelID;
			}
			set
			{
				if ((this._CableUsedChannelID != value))
				{
					if (this._CableUsedChannel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCableUsedChannelIDChanging(value);
					this.SendPropertyChanging();
					this._CableUsedChannelID = value;
					this.SendPropertyChanged("CableUsedChannelID");
					this.OnCableUsedChannelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableDiameter", DbType="Decimal(18,4) NOT NULL")]
		public decimal CableDiameter
		{
			get
			{
				return this._CableDiameter;
			}
			set
			{
				if ((this._CableDiameter != value))
				{
					this.OnCableDiameterChanging(value);
					this.SendPropertyChanging();
					this._CableDiameter = value;
					this.SendPropertyChanged("CableDiameter");
					this.OnCableDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalType", DbType="TinyInt")]
		public System.Nullable<byte> PhysicalType
		{
			get
			{
				return this._PhysicalType;
			}
			set
			{
				if ((this._PhysicalType != value))
				{
					this.OnPhysicalTypeChanging(value);
					this.SendPropertyChanging();
					this._PhysicalType = value;
					this.SendPropertyChanged("PhysicalType");
					this.OnPhysicalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCablePairNumber", DbType="Int NOT NULL")]
		public int FromCablePairNumber
		{
			get
			{
				return this._FromCablePairNumber;
			}
			set
			{
				if ((this._FromCablePairNumber != value))
				{
					this.OnFromCablePairNumberChanging(value);
					this.SendPropertyChanging();
					this._FromCablePairNumber = value;
					this.SendPropertyChanged("FromCablePairNumber");
					this.OnFromCablePairNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCablePairNumber", DbType="Int NOT NULL")]
		public int ToCablePairNumber
		{
			get
			{
				return this._ToCablePairNumber;
			}
			set
			{
				if ((this._ToCablePairNumber != value))
				{
					this.OnToCablePairNumberChanging(value);
					this.SendPropertyChanging();
					this._ToCablePairNumber = value;
					this.SendPropertyChanged("ToCablePairNumber");
					this.OnToCablePairNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetIDInVirtualCable", DbType="Int")]
		public System.Nullable<int> CabinetIDInVirtualCable
		{
			get
			{
				return this._CabinetIDInVirtualCable;
			}
			set
			{
				if ((this._CabinetIDInVirtualCable != value))
				{
					this.OnCabinetIDInVirtualCableChanging(value);
					this.SendPropertyChanging();
					this._CabinetIDInVirtualCable = value;
					this.SendPropertyChanged("CabinetIDInVirtualCable");
					this.OnCabinetIDInVirtualCableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="BigInt")]
		public System.Nullable<long> ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cable_CablePair", Storage="_CablePairs", ThisKey="ID", OtherKey="CableID")]
		public EntitySet<CablePair> CablePairs
		{
			get
			{
				return this._CablePairs;
			}
			set
			{
				this._CablePairs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableType_Cable", Storage="_CableType", ThisKey="CableTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CableType CableType
		{
			get
			{
				return this._CableType.Entity;
			}
			set
			{
				CableType previousValue = this._CableType.Entity;
				if (((previousValue != value) 
							|| (this._CableType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CableType.Entity = null;
						previousValue.Cables.Remove(this);
					}
					this._CableType.Entity = value;
					if ((value != null))
					{
						value.Cables.Add(this);
						this._CableTypeID = value.ID;
					}
					else
					{
						this._CableTypeID = default(int);
					}
					this.SendPropertyChanged("CableType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableUsedChannel_Cable", Storage="_CableUsedChannel", ThisKey="CableUsedChannelID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CableUsedChannel CableUsedChannel
		{
			get
			{
				return this._CableUsedChannel.Entity;
			}
			set
			{
				CableUsedChannel previousValue = this._CableUsedChannel.Entity;
				if (((previousValue != value) 
							|| (this._CableUsedChannel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CableUsedChannel.Entity = null;
						previousValue.Cables.Remove(this);
					}
					this._CableUsedChannel.Entity = value;
					if ((value != null))
					{
						value.Cables.Add(this);
						this._CableUsedChannelID = value.ID;
					}
					else
					{
						this._CableUsedChannelID = default(int);
					}
					this.SendPropertyChanged("CableUsedChannel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Cable", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Cables.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Cables.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CablePairs(CablePair entity)
		{
			this.SendPropertyChanging();
			entity.Cable = this;
		}
		
		private void detach_CablePairs(CablePair entity)
		{
			this.SendPropertyChanging();
			entity.Cable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CableColor")]
	public partial class CableColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Color;
		
		private EntitySet<FailureForm> _FailureForms;
		
		private EntitySet<FailureForm> _FailureForms1;
		
		private EntitySet<PostContact> _PostContacts;
		
		private EntitySet<PostContact> _PostContacts1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    #endregion
		
		public CableColor()
		{
			this._FailureForms = new EntitySet<FailureForm>(new Action<FailureForm>(this.attach_FailureForms), new Action<FailureForm>(this.detach_FailureForms));
			this._FailureForms1 = new EntitySet<FailureForm>(new Action<FailureForm>(this.attach_FailureForms1), new Action<FailureForm>(this.detach_FailureForms1));
			this._PostContacts = new EntitySet<PostContact>(new Action<PostContact>(this.attach_PostContacts), new Action<PostContact>(this.detach_PostContacts));
			this._PostContacts1 = new EntitySet<PostContact>(new Action<PostContact>(this.attach_PostContacts1), new Action<PostContact>(this.detach_PostContacts1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableColor_FailureForm", Storage="_FailureForms", ThisKey="ID", OtherKey="CableColor1")]
		public EntitySet<FailureForm> FailureForms
		{
			get
			{
				return this._FailureForms;
			}
			set
			{
				this._FailureForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableColor_FailureForm1", Storage="_FailureForms1", ThisKey="ID", OtherKey="CableColor2")]
		public EntitySet<FailureForm> FailureForms1
		{
			get
			{
				return this._FailureForms1;
			}
			set
			{
				this._FailureForms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableColor_PostContact", Storage="_PostContacts", ThisKey="ID", OtherKey="FirsetCableColorID")]
		public EntitySet<PostContact> PostContacts
		{
			get
			{
				return this._PostContacts;
			}
			set
			{
				this._PostContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableColor_PostContact1", Storage="_PostContacts1", ThisKey="ID", OtherKey="SecondCableColorID")]
		public EntitySet<PostContact> PostContacts1
		{
			get
			{
				return this._PostContacts1;
			}
			set
			{
				this._PostContacts1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.CableColor = this;
		}
		
		private void detach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.CableColor = null;
		}
		
		private void attach_FailureForms1(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.CableColor3 = this;
		}
		
		private void detach_FailureForms1(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.CableColor3 = null;
		}
		
		private void attach_PostContacts(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.CableColor = this;
		}
		
		private void detach_PostContacts(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.CableColor = null;
		}
		
		private void attach_PostContacts1(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.CableColor1 = this;
		}
		
		private void detach_PostContacts1(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.CableColor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CableDesignOffice")]
	public partial class CableDesignOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _RequestID;
		
		private System.Guid _CableDesignFileID;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnCableDesignFileIDChanging(System.Guid value);
    partial void OnCableDesignFileIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public CableDesignOffice()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableDesignFileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CableDesignFileID
		{
			get
			{
				return this._CableDesignFileID;
			}
			set
			{
				if ((this._CableDesignFileID != value))
				{
					this.OnCableDesignFileIDChanging(value);
					this.SendPropertyChanging();
					this._CableDesignFileID = value;
					this.SendPropertyChanged("CableDesignFileID");
					this.OnCableDesignFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CableDesignOffice", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.CableDesignOffices.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.CableDesignOffices.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CablePair")]
	public partial class CablePair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _CableID;
		
		private System.Nullable<long> _CabinetInputID;
		
		private int _CablePairNumber;
		
		private byte _Status;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<long> _ElkaID;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<Cable> _Cable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCableIDChanging(long value);
    partial void OnCableIDChanged();
    partial void OnCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnCabinetInputIDChanged();
    partial void OnCablePairNumberChanging(int value);
    partial void OnCablePairNumberChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnElkaIDChanging(System.Nullable<long> value);
    partial void OnElkaIDChanged();
    #endregion
		
		public CablePair()
		{
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._Cable = default(EntityRef<Cable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableID", DbType="BigInt NOT NULL")]
		public long CableID
		{
			get
			{
				return this._CableID;
			}
			set
			{
				if ((this._CableID != value))
				{
					if (this._Cable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCableIDChanging(value);
					this.SendPropertyChanging();
					this._CableID = value;
					this.SendPropertyChanged("CableID");
					this.OnCableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt")]
		public System.Nullable<long> CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CablePairNumber", DbType="Int NOT NULL")]
		public int CablePairNumber
		{
			get
			{
				return this._CablePairNumber;
			}
			set
			{
				if ((this._CablePairNumber != value))
				{
					this.OnCablePairNumberChanging(value);
					this.SendPropertyChanging();
					this._CablePairNumber = value;
					this.SendPropertyChanged("CablePairNumber");
					this.OnCablePairNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="BigInt")]
		public System.Nullable<long> ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CablePair_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="CablePairID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CablePair", Storage="_CabinetInput", ThisKey="CabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.CablePairs.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.CablePairs.Add(this);
						this._CabinetInputID = value.ID;
					}
					else
					{
						this._CabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cable_CablePair", Storage="_Cable", ThisKey="CableID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cable Cable
		{
			get
			{
				return this._Cable.Entity;
			}
			set
			{
				Cable previousValue = this._Cable.Entity;
				if (((previousValue != value) 
							|| (this._Cable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cable.Entity = null;
						previousValue.CablePairs.Remove(this);
					}
					this._Cable.Entity = value;
					if ((value != null))
					{
						value.CablePairs.Add(this);
						this._CableID = value.ID;
					}
					else
					{
						this._CableID = default(long);
					}
					this.SendPropertyChanged("Cable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.CablePair = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.CablePair = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CableType")]
	public partial class CableType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CableTypeName;
		
		private System.Nullable<bool> _IsReadOnly;
		
		private EntitySet<Cable> _Cables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCableTypeNameChanging(string value);
    partial void OnCableTypeNameChanged();
    partial void OnIsReadOnlyChanging(System.Nullable<bool> value);
    partial void OnIsReadOnlyChanged();
    #endregion
		
		public CableType()
		{
			this._Cables = new EntitySet<Cable>(new Action<Cable>(this.attach_Cables), new Action<Cable>(this.detach_Cables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CableTypeName
		{
			get
			{
				return this._CableTypeName;
			}
			set
			{
				if ((this._CableTypeName != value))
				{
					this.OnCableTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CableTypeName = value;
					this.SendPropertyChanged("CableTypeName");
					this.OnCableTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit")]
		public System.Nullable<bool> IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableType_Cable", Storage="_Cables", ThisKey="ID", OtherKey="CableTypeID")]
		public EntitySet<Cable> Cables
		{
			get
			{
				return this._Cables;
			}
			set
			{
				this._Cables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cables(Cable entity)
		{
			this.SendPropertyChanging();
			entity.CableType = this;
		}
		
		private void detach_Cables(Cable entity)
		{
			this.SendPropertyChanging();
			entity.CableType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CableUsedChannel")]
	public partial class CableUsedChannel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CableUsedChannelName;
		
		private bool _IsReadOnly;
		
		private EntitySet<Cable> _Cables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCableUsedChannelNameChanging(string value);
    partial void OnCableUsedChannelNameChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    #endregion
		
		public CableUsedChannel()
		{
			this._Cables = new EntitySet<Cable>(new Action<Cable>(this.attach_Cables), new Action<Cable>(this.detach_Cables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableUsedChannelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CableUsedChannelName
		{
			get
			{
				return this._CableUsedChannelName;
			}
			set
			{
				if ((this._CableUsedChannelName != value))
				{
					this.OnCableUsedChannelNameChanging(value);
					this.SendPropertyChanging();
					this._CableUsedChannelName = value;
					this.SendPropertyChanged("CableUsedChannelName");
					this.OnCableUsedChannelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableUsedChannel_Cable", Storage="_Cables", ThisKey="ID", OtherKey="CableUsedChannelID")]
		public EntitySet<Cable> Cables
		{
			get
			{
				return this._Cables;
			}
			set
			{
				this._Cables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cables(Cable entity)
		{
			this.SendPropertyChanging();
			entity.CableUsedChannel = this;
		}
		
		private void detach_Cables(Cable entity)
		{
			this.SendPropertyChanging();
			entity.CableUsedChannel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CancelationRequestList")]
	public partial class CancelationRequestList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Reason;
		
		private System.DateTime _EntryDate;
		
		private System.Guid _UserID;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public CancelationRequestList()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(MAX)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CancelationRequestList", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.CancelationRequestList = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.CancelationRequestList = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauseBuchtSwitching")]
	public partial class CauseBuchtSwitching : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsReadOnly;
		
		private EntitySet<BuchtSwitching> _BuchtSwitchings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    #endregion
		
		public CauseBuchtSwitching()
		{
			this._BuchtSwitchings = new EntitySet<BuchtSwitching>(new Action<BuchtSwitching>(this.attach_BuchtSwitchings), new Action<BuchtSwitching>(this.detach_BuchtSwitchings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseBuchtSwitching_BuchtSwitching", Storage="_BuchtSwitchings", ThisKey="ID", OtherKey="CauseBuchtSwitchingID")]
		public EntitySet<BuchtSwitching> BuchtSwitchings
		{
			get
			{
				return this._BuchtSwitchings;
			}
			set
			{
				this._BuchtSwitchings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuchtSwitchings(BuchtSwitching entity)
		{
			this.SendPropertyChanging();
			entity.CauseBuchtSwitching = this;
		}
		
		private void detach_BuchtSwitchings(BuchtSwitching entity)
		{
			this.SendPropertyChanging();
			entity.CauseBuchtSwitching = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauseOfChangeNo")]
	public partial class CauseOfChangeNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsReadOnly;
		
		private EntitySet<ChangeNo> _ChangeNos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    #endregion
		
		public CauseOfChangeNo()
		{
			this._ChangeNos = new EntitySet<ChangeNo>(new Action<ChangeNo>(this.attach_ChangeNos), new Action<ChangeNo>(this.detach_ChangeNos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfChangeNo_ChangeNo", Storage="_ChangeNos", ThisKey="ID", OtherKey="CauseOfChangeNoID")]
		public EntitySet<ChangeNo> ChangeNos
		{
			get
			{
				return this._ChangeNos;
			}
			set
			{
				this._ChangeNos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangeNos(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfChangeNo = this;
		}
		
		private void detach_ChangeNos(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfChangeNo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauseOfCut")]
	public partial class CauseOfCut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsReadOnly;
		
		private bool _RequestAbility;
		
		private EntitySet<CutAndEstablish> _CutAndEstablishes;
		
		private EntitySet<Telephone> _Telephones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    partial void OnRequestAbilityChanging(bool value);
    partial void OnRequestAbilityChanged();
    #endregion
		
		public CauseOfCut()
		{
			this._CutAndEstablishes = new EntitySet<CutAndEstablish>(new Action<CutAndEstablish>(this.attach_CutAndEstablishes), new Action<CutAndEstablish>(this.detach_CutAndEstablishes));
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestAbility", DbType="Bit NOT NULL")]
		public bool RequestAbility
		{
			get
			{
				return this._RequestAbility;
			}
			set
			{
				if ((this._RequestAbility != value))
				{
					this.OnRequestAbilityChanging(value);
					this.SendPropertyChanging();
					this._RequestAbility = value;
					this.SendPropertyChanged("RequestAbility");
					this.OnRequestAbilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfCut_CutAndEstablish", Storage="_CutAndEstablishes", ThisKey="ID", OtherKey="CutType")]
		public EntitySet<CutAndEstablish> CutAndEstablishes
		{
			get
			{
				return this._CutAndEstablishes;
			}
			set
			{
				this._CutAndEstablishes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfCut_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="CauseOfCutID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CutAndEstablishes(CutAndEstablish entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfCut = this;
		}
		
		private void detach_CutAndEstablishes(CutAndEstablish entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfCut = null;
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfCut = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfCut = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauseOfRefundDeposit")]
	public partial class CauseOfRefundDeposit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<RefundDeposit> _RefundDeposits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CauseOfRefundDeposit()
		{
			this._RefundDeposits = new EntitySet<RefundDeposit>(new Action<RefundDeposit>(this.attach_RefundDeposits), new Action<RefundDeposit>(this.detach_RefundDeposits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfRefundDeposit_RefundDeposit", Storage="_RefundDeposits", ThisKey="ID", OtherKey="CauseOfRefundDepositID")]
		public EntitySet<RefundDeposit> RefundDeposits
		{
			get
			{
				return this._RefundDeposits;
			}
			set
			{
				this._RefundDeposits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfRefundDeposit = this;
		}
		
		private void detach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfRefundDeposit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauseOfTakePossession")]
	public partial class CauseOfTakePossession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsReadOnly;
		
		private EntitySet<TakePossession> _TakePossessions;
		
		private EntitySet<Telephone> _Telephones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    #endregion
		
		public CauseOfTakePossession()
		{
			this._TakePossessions = new EntitySet<TakePossession>(new Action<TakePossession>(this.attach_TakePossessions), new Action<TakePossession>(this.detach_TakePossessions));
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfTakePossession_TakePossession", Storage="_TakePossessions", ThisKey="ID", OtherKey="CauseOfTakePossessionID")]
		public EntitySet<TakePossession> TakePossessions
		{
			get
			{
				return this._TakePossessions;
			}
			set
			{
				this._TakePossessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfTakePossession_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="CauseOfTakePossessionID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfTakePossession = this;
		}
		
		private void detach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfTakePossession = null;
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfTakePossession = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.CauseOfTakePossession = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Center")]
	public partial class Center : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RegionID;
		
		private System.Nullable<int> _CenterCode;
		
		private System.Nullable<int> _BillingCode;
		
		private string _CenterName;
		
		private System.Nullable<int> _SubsidiaryCodeTelephone;
		
		private System.Nullable<int> _SubsidiaryCodeService;
		
		private System.Nullable<int> _SubsidiaryCodeADSL;
		
		private string _Telephone;
		
		private string _Address;
		
		private bool _IsActive;
		
		private System.Guid _IDInFolder;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _ModifyDate;
		
		private string _Elka_CI_CODE;
		
		private System.Nullable<bool> _Type;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private EntitySet<AdameEmkanat> _AdameEmkanats;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<ADSLChangePlace> _ADSLChangePlaces;
		
		private EntitySet<ADSLChangePlace> _ADSLChangePlaces1;
		
		private EntitySet<ADSLEquipment> _ADSLEquipments;
		
		private EntitySet<ADSLInstalCostCenter> _ADSLInstalCostCenters;
		
		private EntitySet<ADSLModemProperty> _ADSLModemProperties;
		
		private EntitySet<ADSLPAPCabinetAccuracy> _ADSLPAPCabinetAccuracies;
		
		private EntitySet<ADSLPAPPort> _ADSLPAPPorts;
		
		private EntitySet<ADSLServiceCenter> _ADSLServiceCenters;
		
		private EntitySet<ADSLServiceGroupCenter> _ADSLServiceGroupCenters;
		
		private EntitySet<ADSLTelephoneAccuracy> _ADSLTelephoneAccuracies;
		
		private EntitySet<ADSLTelephoneNoHistory> _ADSLTelephoneNoHistories;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<Cabinet> _Cabinets;
		
		private EntitySet<Cable> _Cables;
		
		private EntitySet<CenterToCenterTranslation> _CenterToCenterTranslations;
		
		private EntitySet<CenterToCenterTranslation> _CenterToCenterTranslations1;
		
		private EntitySet<ChangeLocation> _ChangeLocations;
		
		private EntitySet<ChangeLocation> _ChangeLocations1;
		
		private EntitySet<E1DDF> _E1DDFs;
		
		private EntitySet<Failure117CabenitAccuracy> _Failure117CabenitAccuracies;
		
		private EntitySet<Failure117PostAccuracy> _Failure117PostAccuracies;
		
		private EntitySet<Failure117TelephoneAccuracy> _Failure117TelephoneAccuracies;
		
		private EntitySet<Fiche> _Fiches;
		
		private EntitySet<MDF> _MDFs;
		
		private EntitySet<MDFPersonnel> _MDFPersonnels;
		
		private EntitySet<PAPInfoSpaceandPower> _PAPInfoSpaceandPowers;
		
		private EntitySet<PCMRock> _PCMRocks;
		
		private EntitySet<PostGroup> _PostGroups;
		
		private EntitySet<Request> _Requests;
		
		private EntitySet<Rock> _Rocks;
		
		private EntitySet<RoundSaleInfo> _RoundSaleInfos;
		
		private EntitySet<SpecialPrivateCable> _SpecialPrivateCables;
		
		private EntitySet<SpecialWirePoint> _SpecialWirePoints;
		
		private EntitySet<Switch> _Switches;
		
		private EntitySet<SwitchPrecode> _SwitchPrecodes;
		
		private EntitySet<Telephone> _Telephones;
		
		private EntitySet<UserCenter> _UserCenters;
		
		private EntitySet<VacateSpecialWirePoint> _VacateSpecialWirePoints;
		
		private EntitySet<Failure117UB> _Failure117UBs;
		
		private EntityRef<Region> _Region;
		
		private EntityRef<SubsidiaryCode> _SubsidiaryCode;
		
		private EntityRef<SubsidiaryCode> _SubsidiaryCode1;
		
		private EntityRef<SubsidiaryCode> _SubsidiaryCode2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnCenterCodeChanging(System.Nullable<int> value);
    partial void OnCenterCodeChanged();
    partial void OnBillingCodeChanging(System.Nullable<int> value);
    partial void OnBillingCodeChanged();
    partial void OnCenterNameChanging(string value);
    partial void OnCenterNameChanged();
    partial void OnSubsidiaryCodeTelephoneChanging(System.Nullable<int> value);
    partial void OnSubsidiaryCodeTelephoneChanged();
    partial void OnSubsidiaryCodeServiceChanging(System.Nullable<int> value);
    partial void OnSubsidiaryCodeServiceChanged();
    partial void OnSubsidiaryCodeADSLChanging(System.Nullable<int> value);
    partial void OnSubsidiaryCodeADSLChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIDInFolderChanging(System.Guid value);
    partial void OnIDInFolderChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    partial void OnElka_CI_CODEChanging(string value);
    partial void OnElka_CI_CODEChanged();
    partial void OnTypeChanging(System.Nullable<bool> value);
    partial void OnTypeChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    #endregion
		
		public Center()
		{
			this._AdameEmkanats = new EntitySet<AdameEmkanat>(new Action<AdameEmkanat>(this.attach_AdameEmkanats), new Action<AdameEmkanat>(this.detach_AdameEmkanats));
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._ADSLChangePlaces = new EntitySet<ADSLChangePlace>(new Action<ADSLChangePlace>(this.attach_ADSLChangePlaces), new Action<ADSLChangePlace>(this.detach_ADSLChangePlaces));
			this._ADSLChangePlaces1 = new EntitySet<ADSLChangePlace>(new Action<ADSLChangePlace>(this.attach_ADSLChangePlaces1), new Action<ADSLChangePlace>(this.detach_ADSLChangePlaces1));
			this._ADSLEquipments = new EntitySet<ADSLEquipment>(new Action<ADSLEquipment>(this.attach_ADSLEquipments), new Action<ADSLEquipment>(this.detach_ADSLEquipments));
			this._ADSLInstalCostCenters = new EntitySet<ADSLInstalCostCenter>(new Action<ADSLInstalCostCenter>(this.attach_ADSLInstalCostCenters), new Action<ADSLInstalCostCenter>(this.detach_ADSLInstalCostCenters));
			this._ADSLModemProperties = new EntitySet<ADSLModemProperty>(new Action<ADSLModemProperty>(this.attach_ADSLModemProperties), new Action<ADSLModemProperty>(this.detach_ADSLModemProperties));
			this._ADSLPAPCabinetAccuracies = new EntitySet<ADSLPAPCabinetAccuracy>(new Action<ADSLPAPCabinetAccuracy>(this.attach_ADSLPAPCabinetAccuracies), new Action<ADSLPAPCabinetAccuracy>(this.detach_ADSLPAPCabinetAccuracies));
			this._ADSLPAPPorts = new EntitySet<ADSLPAPPort>(new Action<ADSLPAPPort>(this.attach_ADSLPAPPorts), new Action<ADSLPAPPort>(this.detach_ADSLPAPPorts));
			this._ADSLServiceCenters = new EntitySet<ADSLServiceCenter>(new Action<ADSLServiceCenter>(this.attach_ADSLServiceCenters), new Action<ADSLServiceCenter>(this.detach_ADSLServiceCenters));
			this._ADSLServiceGroupCenters = new EntitySet<ADSLServiceGroupCenter>(new Action<ADSLServiceGroupCenter>(this.attach_ADSLServiceGroupCenters), new Action<ADSLServiceGroupCenter>(this.detach_ADSLServiceGroupCenters));
			this._ADSLTelephoneAccuracies = new EntitySet<ADSLTelephoneAccuracy>(new Action<ADSLTelephoneAccuracy>(this.attach_ADSLTelephoneAccuracies), new Action<ADSLTelephoneAccuracy>(this.detach_ADSLTelephoneAccuracies));
			this._ADSLTelephoneNoHistories = new EntitySet<ADSLTelephoneNoHistory>(new Action<ADSLTelephoneNoHistory>(this.attach_ADSLTelephoneNoHistories), new Action<ADSLTelephoneNoHistory>(this.detach_ADSLTelephoneNoHistories));
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._Cabinets = new EntitySet<Cabinet>(new Action<Cabinet>(this.attach_Cabinets), new Action<Cabinet>(this.detach_Cabinets));
			this._Cables = new EntitySet<Cable>(new Action<Cable>(this.attach_Cables), new Action<Cable>(this.detach_Cables));
			this._CenterToCenterTranslations = new EntitySet<CenterToCenterTranslation>(new Action<CenterToCenterTranslation>(this.attach_CenterToCenterTranslations), new Action<CenterToCenterTranslation>(this.detach_CenterToCenterTranslations));
			this._CenterToCenterTranslations1 = new EntitySet<CenterToCenterTranslation>(new Action<CenterToCenterTranslation>(this.attach_CenterToCenterTranslations1), new Action<CenterToCenterTranslation>(this.detach_CenterToCenterTranslations1));
			this._ChangeLocations = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations), new Action<ChangeLocation>(this.detach_ChangeLocations));
			this._ChangeLocations1 = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations1), new Action<ChangeLocation>(this.detach_ChangeLocations1));
			this._E1DDFs = new EntitySet<E1DDF>(new Action<E1DDF>(this.attach_E1DDFs), new Action<E1DDF>(this.detach_E1DDFs));
			this._Failure117CabenitAccuracies = new EntitySet<Failure117CabenitAccuracy>(new Action<Failure117CabenitAccuracy>(this.attach_Failure117CabenitAccuracies), new Action<Failure117CabenitAccuracy>(this.detach_Failure117CabenitAccuracies));
			this._Failure117PostAccuracies = new EntitySet<Failure117PostAccuracy>(new Action<Failure117PostAccuracy>(this.attach_Failure117PostAccuracies), new Action<Failure117PostAccuracy>(this.detach_Failure117PostAccuracies));
			this._Failure117TelephoneAccuracies = new EntitySet<Failure117TelephoneAccuracy>(new Action<Failure117TelephoneAccuracy>(this.attach_Failure117TelephoneAccuracies), new Action<Failure117TelephoneAccuracy>(this.detach_Failure117TelephoneAccuracies));
			this._Fiches = new EntitySet<Fiche>(new Action<Fiche>(this.attach_Fiches), new Action<Fiche>(this.detach_Fiches));
			this._MDFs = new EntitySet<MDF>(new Action<MDF>(this.attach_MDFs), new Action<MDF>(this.detach_MDFs));
			this._MDFPersonnels = new EntitySet<MDFPersonnel>(new Action<MDFPersonnel>(this.attach_MDFPersonnels), new Action<MDFPersonnel>(this.detach_MDFPersonnels));
			this._PAPInfoSpaceandPowers = new EntitySet<PAPInfoSpaceandPower>(new Action<PAPInfoSpaceandPower>(this.attach_PAPInfoSpaceandPowers), new Action<PAPInfoSpaceandPower>(this.detach_PAPInfoSpaceandPowers));
			this._PCMRocks = new EntitySet<PCMRock>(new Action<PCMRock>(this.attach_PCMRocks), new Action<PCMRock>(this.detach_PCMRocks));
			this._PostGroups = new EntitySet<PostGroup>(new Action<PostGroup>(this.attach_PostGroups), new Action<PostGroup>(this.detach_PostGroups));
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._Rocks = new EntitySet<Rock>(new Action<Rock>(this.attach_Rocks), new Action<Rock>(this.detach_Rocks));
			this._RoundSaleInfos = new EntitySet<RoundSaleInfo>(new Action<RoundSaleInfo>(this.attach_RoundSaleInfos), new Action<RoundSaleInfo>(this.detach_RoundSaleInfos));
			this._SpecialPrivateCables = new EntitySet<SpecialPrivateCable>(new Action<SpecialPrivateCable>(this.attach_SpecialPrivateCables), new Action<SpecialPrivateCable>(this.detach_SpecialPrivateCables));
			this._SpecialWirePoints = new EntitySet<SpecialWirePoint>(new Action<SpecialWirePoint>(this.attach_SpecialWirePoints), new Action<SpecialWirePoint>(this.detach_SpecialWirePoints));
			this._Switches = new EntitySet<Switch>(new Action<Switch>(this.attach_Switches), new Action<Switch>(this.detach_Switches));
			this._SwitchPrecodes = new EntitySet<SwitchPrecode>(new Action<SwitchPrecode>(this.attach_SwitchPrecodes), new Action<SwitchPrecode>(this.detach_SwitchPrecodes));
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			this._UserCenters = new EntitySet<UserCenter>(new Action<UserCenter>(this.attach_UserCenters), new Action<UserCenter>(this.detach_UserCenters));
			this._VacateSpecialWirePoints = new EntitySet<VacateSpecialWirePoint>(new Action<VacateSpecialWirePoint>(this.attach_VacateSpecialWirePoints), new Action<VacateSpecialWirePoint>(this.detach_VacateSpecialWirePoints));
			this._Failure117UBs = new EntitySet<Failure117UB>(new Action<Failure117UB>(this.attach_Failure117UBs), new Action<Failure117UB>(this.detach_Failure117UBs));
			this._Region = default(EntityRef<Region>);
			this._SubsidiaryCode = default(EntityRef<SubsidiaryCode>);
			this._SubsidiaryCode1 = default(EntityRef<SubsidiaryCode>);
			this._SubsidiaryCode2 = default(EntityRef<SubsidiaryCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterCode", DbType="Int")]
		public System.Nullable<int> CenterCode
		{
			get
			{
				return this._CenterCode;
			}
			set
			{
				if ((this._CenterCode != value))
				{
					this.OnCenterCodeChanging(value);
					this.SendPropertyChanging();
					this._CenterCode = value;
					this.SendPropertyChanged("CenterCode");
					this.OnCenterCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingCode", DbType="Int")]
		public System.Nullable<int> BillingCode
		{
			get
			{
				return this._BillingCode;
			}
			set
			{
				if ((this._BillingCode != value))
				{
					this.OnBillingCodeChanging(value);
					this.SendPropertyChanging();
					this._BillingCode = value;
					this.SendPropertyChanged("BillingCode");
					this.OnBillingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this.OnCenterNameChanging(value);
					this.SendPropertyChanging();
					this._CenterName = value;
					this.SendPropertyChanged("CenterName");
					this.OnCenterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryCodeTelephone", DbType="Int")]
		public System.Nullable<int> SubsidiaryCodeTelephone
		{
			get
			{
				return this._SubsidiaryCodeTelephone;
			}
			set
			{
				if ((this._SubsidiaryCodeTelephone != value))
				{
					if (this._SubsidiaryCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubsidiaryCodeTelephoneChanging(value);
					this.SendPropertyChanging();
					this._SubsidiaryCodeTelephone = value;
					this.SendPropertyChanged("SubsidiaryCodeTelephone");
					this.OnSubsidiaryCodeTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryCodeService", DbType="Int")]
		public System.Nullable<int> SubsidiaryCodeService
		{
			get
			{
				return this._SubsidiaryCodeService;
			}
			set
			{
				if ((this._SubsidiaryCodeService != value))
				{
					if (this._SubsidiaryCode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubsidiaryCodeServiceChanging(value);
					this.SendPropertyChanging();
					this._SubsidiaryCodeService = value;
					this.SendPropertyChanged("SubsidiaryCodeService");
					this.OnSubsidiaryCodeServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryCodeADSL", DbType="Int")]
		public System.Nullable<int> SubsidiaryCodeADSL
		{
			get
			{
				return this._SubsidiaryCodeADSL;
			}
			set
			{
				if ((this._SubsidiaryCodeADSL != value))
				{
					if (this._SubsidiaryCode2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubsidiaryCodeADSLChanging(value);
					this.SendPropertyChanging();
					this._SubsidiaryCodeADSL = value;
					this.SendPropertyChanged("SubsidiaryCodeADSL");
					this.OnSubsidiaryCodeADSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInFolder", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDInFolder
		{
			get
			{
				return this._IDInFolder;
			}
			set
			{
				if ((this._IDInFolder != value))
				{
					this.OnIDInFolderChanging(value);
					this.SendPropertyChanging();
					this._IDInFolder = value;
					this.SendPropertyChanged("IDInFolder");
					this.OnIDInFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elka_CI_CODE", DbType="NVarChar(50)")]
		public string Elka_CI_CODE
		{
			get
			{
				return this._Elka_CI_CODE;
			}
			set
			{
				if ((this._Elka_CI_CODE != value))
				{
					this.OnElka_CI_CODEChanging(value);
					this.SendPropertyChanging();
					this._Elka_CI_CODE = value;
					this.SendPropertyChanged("Elka_CI_CODE");
					this.OnElka_CI_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Bit")]
		public System.Nullable<bool> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_AdameEmkanat", Storage="_AdameEmkanats", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<AdameEmkanat> AdameEmkanats
		{
			get
			{
				return this._AdameEmkanats;
			}
			set
			{
				this._AdameEmkanats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Address", Storage="_Addresses", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLChangePlace", Storage="_ADSLChangePlaces", ThisKey="ID", OtherKey="OldCenterID")]
		public EntitySet<ADSLChangePlace> ADSLChangePlaces
		{
			get
			{
				return this._ADSLChangePlaces;
			}
			set
			{
				this._ADSLChangePlaces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLChangePlace1", Storage="_ADSLChangePlaces1", ThisKey="ID", OtherKey="NewCenterID")]
		public EntitySet<ADSLChangePlace> ADSLChangePlaces1
		{
			get
			{
				return this._ADSLChangePlaces1;
			}
			set
			{
				this._ADSLChangePlaces1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLEquipment", Storage="_ADSLEquipments", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLEquipment> ADSLEquipments
		{
			get
			{
				return this._ADSLEquipments;
			}
			set
			{
				this._ADSLEquipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLInstalCostCenter", Storage="_ADSLInstalCostCenters", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLInstalCostCenter> ADSLInstalCostCenters
		{
			get
			{
				return this._ADSLInstalCostCenters;
			}
			set
			{
				this._ADSLInstalCostCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLModemProperty", Storage="_ADSLModemProperties", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLModemProperty> ADSLModemProperties
		{
			get
			{
				return this._ADSLModemProperties;
			}
			set
			{
				this._ADSLModemProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLPAPCabinetAccuracy", Storage="_ADSLPAPCabinetAccuracies", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLPAPCabinetAccuracy> ADSLPAPCabinetAccuracies
		{
			get
			{
				return this._ADSLPAPCabinetAccuracies;
			}
			set
			{
				this._ADSLPAPCabinetAccuracies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLPAPPort", Storage="_ADSLPAPPorts", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLPAPPort> ADSLPAPPorts
		{
			get
			{
				return this._ADSLPAPPorts;
			}
			set
			{
				this._ADSLPAPPorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLServiceCenter", Storage="_ADSLServiceCenters", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLServiceCenter> ADSLServiceCenters
		{
			get
			{
				return this._ADSLServiceCenters;
			}
			set
			{
				this._ADSLServiceCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLServiceGroupCenter", Storage="_ADSLServiceGroupCenters", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLServiceGroupCenter> ADSLServiceGroupCenters
		{
			get
			{
				return this._ADSLServiceGroupCenters;
			}
			set
			{
				this._ADSLServiceGroupCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLTelephoneAccuracy", Storage="_ADSLTelephoneAccuracies", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLTelephoneAccuracy> ADSLTelephoneAccuracies
		{
			get
			{
				return this._ADSLTelephoneAccuracies;
			}
			set
			{
				this._ADSLTelephoneAccuracies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ADSLTelephoneNoHistory", Storage="_ADSLTelephoneNoHistories", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<ADSLTelephoneNoHistory> ADSLTelephoneNoHistories
		{
			get
			{
				return this._ADSLTelephoneNoHistories;
			}
			set
			{
				this._ADSLTelephoneNoHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Cabinet", Storage="_Cabinets", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Cabinet> Cabinets
		{
			get
			{
				return this._Cabinets;
			}
			set
			{
				this._Cabinets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Cable", Storage="_Cables", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Cable> Cables
		{
			get
			{
				return this._Cables;
			}
			set
			{
				this._Cables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_CenterToCenterTranslation", Storage="_CenterToCenterTranslations", ThisKey="ID", OtherKey="TargetCenterID")]
		public EntitySet<CenterToCenterTranslation> CenterToCenterTranslations
		{
			get
			{
				return this._CenterToCenterTranslations;
			}
			set
			{
				this._CenterToCenterTranslations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_CenterToCenterTranslation1", Storage="_CenterToCenterTranslations1", ThisKey="ID", OtherKey="SourceCenterID")]
		public EntitySet<CenterToCenterTranslation> CenterToCenterTranslations1
		{
			get
			{
				return this._CenterToCenterTranslations1;
			}
			set
			{
				this._CenterToCenterTranslations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ChangeLocation", Storage="_ChangeLocations", ThisKey="ID", OtherKey="SourceCenter")]
		public EntitySet<ChangeLocation> ChangeLocations
		{
			get
			{
				return this._ChangeLocations;
			}
			set
			{
				this._ChangeLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ChangeLocation1", Storage="_ChangeLocations1", ThisKey="ID", OtherKey="TargetCenter")]
		public EntitySet<ChangeLocation> ChangeLocations1
		{
			get
			{
				return this._ChangeLocations1;
			}
			set
			{
				this._ChangeLocations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_E1DDF", Storage="_E1DDFs", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<E1DDF> E1DDFs
		{
			get
			{
				return this._E1DDFs;
			}
			set
			{
				this._E1DDFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Failure117CabenitAccuracy", Storage="_Failure117CabenitAccuracies", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Failure117CabenitAccuracy> Failure117CabenitAccuracies
		{
			get
			{
				return this._Failure117CabenitAccuracies;
			}
			set
			{
				this._Failure117CabenitAccuracies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Failure117PostAccuracy", Storage="_Failure117PostAccuracies", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Failure117PostAccuracy> Failure117PostAccuracies
		{
			get
			{
				return this._Failure117PostAccuracies;
			}
			set
			{
				this._Failure117PostAccuracies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Failure117TelephoneAccuracy", Storage="_Failure117TelephoneAccuracies", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Failure117TelephoneAccuracy> Failure117TelephoneAccuracies
		{
			get
			{
				return this._Failure117TelephoneAccuracies;
			}
			set
			{
				this._Failure117TelephoneAccuracies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Fiche", Storage="_Fiches", ThisKey="ID", OtherKey="CentreID")]
		public EntitySet<Fiche> Fiches
		{
			get
			{
				return this._Fiches;
			}
			set
			{
				this._Fiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_MDF", Storage="_MDFs", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<MDF> MDFs
		{
			get
			{
				return this._MDFs;
			}
			set
			{
				this._MDFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_MDFPersonnel", Storage="_MDFPersonnels", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<MDFPersonnel> MDFPersonnels
		{
			get
			{
				return this._MDFPersonnels;
			}
			set
			{
				this._MDFPersonnels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_PAPInfoSpaceandPower", Storage="_PAPInfoSpaceandPowers", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<PAPInfoSpaceandPower> PAPInfoSpaceandPowers
		{
			get
			{
				return this._PAPInfoSpaceandPowers;
			}
			set
			{
				this._PAPInfoSpaceandPowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_PCMRock", Storage="_PCMRocks", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<PCMRock> PCMRocks
		{
			get
			{
				return this._PCMRocks;
			}
			set
			{
				this._PCMRocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_PostGroup", Storage="_PostGroups", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<PostGroup> PostGroups
		{
			get
			{
				return this._PostGroups;
			}
			set
			{
				this._PostGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Request", Storage="_Requests", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Rock", Storage="_Rocks", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Rock> Rocks
		{
			get
			{
				return this._Rocks;
			}
			set
			{
				this._Rocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_RoundSaleInfo", Storage="_RoundSaleInfos", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<RoundSaleInfo> RoundSaleInfos
		{
			get
			{
				return this._RoundSaleInfos;
			}
			set
			{
				this._RoundSaleInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_SpecialPrivateCable", Storage="_SpecialPrivateCables", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<SpecialPrivateCable> SpecialPrivateCables
		{
			get
			{
				return this._SpecialPrivateCables;
			}
			set
			{
				this._SpecialPrivateCables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_SpecialWirePoint", Storage="_SpecialWirePoints", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<SpecialWirePoint> SpecialWirePoints
		{
			get
			{
				return this._SpecialWirePoints;
			}
			set
			{
				this._SpecialWirePoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Switch", Storage="_Switches", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Switch> Switches
		{
			get
			{
				return this._Switches;
			}
			set
			{
				this._Switches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_SwitchPrecode", Storage="_SwitchPrecodes", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<SwitchPrecode> SwitchPrecodes
		{
			get
			{
				return this._SwitchPrecodes;
			}
			set
			{
				this._SwitchPrecodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_UserCenter", Storage="_UserCenters", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<UserCenter> UserCenters
		{
			get
			{
				return this._UserCenters;
			}
			set
			{
				this._UserCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_VacateSpecialWirePoint", Storage="_VacateSpecialWirePoints", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<VacateSpecialWirePoint> VacateSpecialWirePoints
		{
			get
			{
				return this._VacateSpecialWirePoints;
			}
			set
			{
				this._VacateSpecialWirePoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Failure117UB", Storage="_Failure117UBs", ThisKey="ID", OtherKey="CenterID")]
		public EntitySet<Failure117UB> Failure117UBs
		{
			get
			{
				return this._Failure117UBs;
			}
			set
			{
				this._Failure117UBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Center", Storage="_Region", ThisKey="RegionID", OtherKey="ID", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Centers.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Centers.Add(this);
						this._RegionID = value.ID;
					}
					else
					{
						this._RegionID = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidiaryCode_Center", Storage="_SubsidiaryCode", ThisKey="SubsidiaryCodeTelephone", OtherKey="ID", IsForeignKey=true)]
		public SubsidiaryCode SubsidiaryCode
		{
			get
			{
				return this._SubsidiaryCode.Entity;
			}
			set
			{
				SubsidiaryCode previousValue = this._SubsidiaryCode.Entity;
				if (((previousValue != value) 
							|| (this._SubsidiaryCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubsidiaryCode.Entity = null;
						previousValue.Centers.Remove(this);
					}
					this._SubsidiaryCode.Entity = value;
					if ((value != null))
					{
						value.Centers.Add(this);
						this._SubsidiaryCodeTelephone = value.ID;
					}
					else
					{
						this._SubsidiaryCodeTelephone = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubsidiaryCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidiaryCode_Center1", Storage="_SubsidiaryCode1", ThisKey="SubsidiaryCodeService", OtherKey="ID", IsForeignKey=true)]
		public SubsidiaryCode SubsidiaryCode1
		{
			get
			{
				return this._SubsidiaryCode1.Entity;
			}
			set
			{
				SubsidiaryCode previousValue = this._SubsidiaryCode1.Entity;
				if (((previousValue != value) 
							|| (this._SubsidiaryCode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubsidiaryCode1.Entity = null;
						previousValue.Centers1.Remove(this);
					}
					this._SubsidiaryCode1.Entity = value;
					if ((value != null))
					{
						value.Centers1.Add(this);
						this._SubsidiaryCodeService = value.ID;
					}
					else
					{
						this._SubsidiaryCodeService = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubsidiaryCode1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidiaryCode_Center2", Storage="_SubsidiaryCode2", ThisKey="SubsidiaryCodeADSL", OtherKey="ID", IsForeignKey=true)]
		public SubsidiaryCode SubsidiaryCode2
		{
			get
			{
				return this._SubsidiaryCode2.Entity;
			}
			set
			{
				SubsidiaryCode previousValue = this._SubsidiaryCode2.Entity;
				if (((previousValue != value) 
							|| (this._SubsidiaryCode2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubsidiaryCode2.Entity = null;
						previousValue.Centers2.Remove(this);
					}
					this._SubsidiaryCode2.Entity = value;
					if ((value != null))
					{
						value.Centers2.Add(this);
						this._SubsidiaryCodeADSL = value.ID;
					}
					else
					{
						this._SubsidiaryCodeADSL = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubsidiaryCode2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdameEmkanats(AdameEmkanat entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_AdameEmkanats(AdameEmkanat entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLChangePlaces(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLChangePlaces(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLChangePlaces1(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.Center1 = this;
		}
		
		private void detach_ADSLChangePlaces1(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.Center1 = null;
		}
		
		private void attach_ADSLEquipments(ADSLEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLEquipments(ADSLEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLInstalCostCenters(ADSLInstalCostCenter entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLInstalCostCenters(ADSLInstalCostCenter entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLModemProperties(ADSLModemProperty entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLModemProperties(ADSLModemProperty entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLPAPCabinetAccuracies(ADSLPAPCabinetAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLPAPCabinetAccuracies(ADSLPAPCabinetAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLPAPPorts(ADSLPAPPort entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLPAPPorts(ADSLPAPPort entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLServiceCenters(ADSLServiceCenter entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLServiceCenters(ADSLServiceCenter entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLServiceGroupCenters(ADSLServiceGroupCenter entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLServiceGroupCenters(ADSLServiceGroupCenter entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLTelephoneAccuracies(ADSLTelephoneAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLTelephoneAccuracies(ADSLTelephoneAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ADSLTelephoneNoHistories(ADSLTelephoneNoHistory entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ADSLTelephoneNoHistories(ADSLTelephoneNoHistory entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.Center1 = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.Center1 = null;
		}
		
		private void attach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Cabinets(Cabinet entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Cables(Cable entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Cables(Cable entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_CenterToCenterTranslations(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_CenterToCenterTranslations(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_CenterToCenterTranslations1(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Center1 = this;
		}
		
		private void detach_CenterToCenterTranslations1(CenterToCenterTranslation entity)
		{
			this.SendPropertyChanging();
			entity.Center1 = null;
		}
		
		private void attach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_ChangeLocations1(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Center1 = this;
		}
		
		private void detach_ChangeLocations1(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Center1 = null;
		}
		
		private void attach_E1DDFs(E1DDF entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_E1DDFs(E1DDF entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Failure117CabenitAccuracies(Failure117CabenitAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Failure117CabenitAccuracies(Failure117CabenitAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Failure117PostAccuracies(Failure117PostAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Failure117PostAccuracies(Failure117PostAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Failure117TelephoneAccuracies(Failure117TelephoneAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Failure117TelephoneAccuracies(Failure117TelephoneAccuracy entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Fiches(Fiche entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Fiches(Fiche entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_MDFs(MDF entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_MDFs(MDF entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_MDFPersonnels(MDFPersonnel entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_MDFPersonnels(MDFPersonnel entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_PAPInfoSpaceandPowers(PAPInfoSpaceandPower entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_PAPInfoSpaceandPowers(PAPInfoSpaceandPower entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_PCMRocks(PCMRock entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_PCMRocks(PCMRock entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_PostGroups(PostGroup entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_PostGroups(PostGroup entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Rocks(Rock entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Rocks(Rock entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_RoundSaleInfos(RoundSaleInfo entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_RoundSaleInfos(RoundSaleInfo entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_SpecialPrivateCables(SpecialPrivateCable entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_SpecialPrivateCables(SpecialPrivateCable entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_SpecialWirePoints(SpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_SpecialWirePoints(SpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Switches(Switch entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Switches(Switch entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_SwitchPrecodes(SwitchPrecode entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_SwitchPrecodes(SwitchPrecode entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_UserCenters(UserCenter entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_UserCenters(UserCenter entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_VacateSpecialWirePoints(VacateSpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_VacateSpecialWirePoints(VacateSpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
		
		private void attach_Failure117UBs(Failure117UB entity)
		{
			this.SendPropertyChanging();
			entity.Center = this;
		}
		
		private void detach_Failure117UBs(Failure117UB entity)
		{
			this.SendPropertyChanging();
			entity.Center = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CenterToCenterTranslation")]
	public partial class CenterToCenterTranslation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _OldCabinetID;
		
		private long _FromOldCabinetInputID;
		
		private long _ToOldCabinetInputID;
		
		private int _NewCabinetID;
		
		private long _FromNewCabinetInputID;
		
		private long _ToNewCabinetInputID;
		
		private int _SourceCenterID;
		
		private int _TargetCenterID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _AccomplishmentDate;
		
		private string _AccomplishmentTime;
		
		private bool _IsCompletion;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<Cabinet> _Cabinet1;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<CabinetInput> _CabinetInput1;
		
		private EntityRef<CabinetInput> _CabinetInput2;
		
		private EntityRef<CabinetInput> _CabinetInput3;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Center> _Center1;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldCabinetIDChanging(int value);
    partial void OnOldCabinetIDChanged();
    partial void OnFromOldCabinetInputIDChanging(long value);
    partial void OnFromOldCabinetInputIDChanged();
    partial void OnToOldCabinetInputIDChanging(long value);
    partial void OnToOldCabinetInputIDChanged();
    partial void OnNewCabinetIDChanging(int value);
    partial void OnNewCabinetIDChanged();
    partial void OnFromNewCabinetInputIDChanging(long value);
    partial void OnFromNewCabinetInputIDChanged();
    partial void OnToNewCabinetInputIDChanging(long value);
    partial void OnToNewCabinetInputIDChanged();
    partial void OnSourceCenterIDChanging(int value);
    partial void OnSourceCenterIDChanged();
    partial void OnTargetCenterIDChanging(int value);
    partial void OnTargetCenterIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccomplishmentDateChanged();
    partial void OnAccomplishmentTimeChanging(string value);
    partial void OnAccomplishmentTimeChanged();
    partial void OnIsCompletionChanging(bool value);
    partial void OnIsCompletionChanged();
    #endregion
		
		public CenterToCenterTranslation()
		{
			this._Cabinet = default(EntityRef<Cabinet>);
			this._Cabinet1 = default(EntityRef<Cabinet>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._CabinetInput1 = default(EntityRef<CabinetInput>);
			this._CabinetInput2 = default(EntityRef<CabinetInput>);
			this._CabinetInput3 = default(EntityRef<CabinetInput>);
			this._Center = default(EntityRef<Center>);
			this._Center1 = default(EntityRef<Center>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetID", DbType="Int NOT NULL")]
		public int OldCabinetID
		{
			get
			{
				return this._OldCabinetID;
			}
			set
			{
				if ((this._OldCabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetID = value;
					this.SendPropertyChanged("OldCabinetID");
					this.OnOldCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromOldCabinetInputID", DbType="BigInt NOT NULL")]
		public long FromOldCabinetInputID
		{
			get
			{
				return this._FromOldCabinetInputID;
			}
			set
			{
				if ((this._FromOldCabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromOldCabinetInputID = value;
					this.SendPropertyChanged("FromOldCabinetInputID");
					this.OnFromOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToOldCabinetInputID", DbType="BigInt NOT NULL")]
		public long ToOldCabinetInputID
		{
			get
			{
				return this._ToOldCabinetInputID;
			}
			set
			{
				if ((this._ToOldCabinetInputID != value))
				{
					if (this._CabinetInput1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToOldCabinetInputID = value;
					this.SendPropertyChanged("ToOldCabinetInputID");
					this.OnToOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetID", DbType="Int NOT NULL")]
		public int NewCabinetID
		{
			get
			{
				return this._NewCabinetID;
			}
			set
			{
				if ((this._NewCabinetID != value))
				{
					if (this._Cabinet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._NewCabinetID = value;
					this.SendPropertyChanged("NewCabinetID");
					this.OnNewCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromNewCabinetInputID", DbType="BigInt NOT NULL")]
		public long FromNewCabinetInputID
		{
			get
			{
				return this._FromNewCabinetInputID;
			}
			set
			{
				if ((this._FromNewCabinetInputID != value))
				{
					if (this._CabinetInput2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromNewCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromNewCabinetInputID = value;
					this.SendPropertyChanged("FromNewCabinetInputID");
					this.OnFromNewCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToNewCabinetInputID", DbType="BigInt NOT NULL")]
		public long ToNewCabinetInputID
		{
			get
			{
				return this._ToNewCabinetInputID;
			}
			set
			{
				if ((this._ToNewCabinetInputID != value))
				{
					if (this._CabinetInput3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToNewCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToNewCabinetInputID = value;
					this.SendPropertyChanged("ToNewCabinetInputID");
					this.OnToNewCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCenterID", DbType="Int NOT NULL")]
		public int SourceCenterID
		{
			get
			{
				return this._SourceCenterID;
			}
			set
			{
				if ((this._SourceCenterID != value))
				{
					if (this._Center1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceCenterIDChanging(value);
					this.SendPropertyChanging();
					this._SourceCenterID = value;
					this.SendPropertyChanged("SourceCenterID");
					this.OnSourceCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCenterID", DbType="Int NOT NULL")]
		public int TargetCenterID
		{
			get
			{
				return this._TargetCenterID;
			}
			set
			{
				if ((this._TargetCenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetCenterIDChanging(value);
					this.SendPropertyChanging();
					this._TargetCenterID = value;
					this.SendPropertyChanged("TargetCenterID");
					this.OnTargetCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AccomplishmentDate
		{
			get
			{
				return this._AccomplishmentDate;
			}
			set
			{
				if ((this._AccomplishmentDate != value))
				{
					this.OnAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentDate = value;
					this.SendPropertyChanged("AccomplishmentDate");
					this.OnAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentTime", DbType="NChar(10)")]
		public string AccomplishmentTime
		{
			get
			{
				return this._AccomplishmentTime;
			}
			set
			{
				if ((this._AccomplishmentTime != value))
				{
					this.OnAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentTime = value;
					this.SendPropertyChanged("AccomplishmentTime");
					this.OnAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompletion", DbType="Bit NOT NULL")]
		public bool IsCompletion
		{
			get
			{
				return this._IsCompletion;
			}
			set
			{
				if ((this._IsCompletion != value))
				{
					this.OnIsCompletionChanging(value);
					this.SendPropertyChanging();
					this._IsCompletion = value;
					this.SendPropertyChanged("IsCompletion");
					this.OnIsCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_CenterToCenterTranslation", Storage="_Cabinet", ThisKey="OldCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.CenterToCenterTranslations.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslations.Add(this);
						this._OldCabinetID = value.ID;
					}
					else
					{
						this._OldCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_CenterToCenterTranslation1", Storage="_Cabinet1", ThisKey="NewCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet1
		{
			get
			{
				return this._Cabinet1.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet1.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet1.Entity = null;
						previousValue.CenterToCenterTranslations1.Remove(this);
					}
					this._Cabinet1.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslations1.Add(this);
						this._NewCabinetID = value.ID;
					}
					else
					{
						this._NewCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CenterToCenterTranslation", Storage="_CabinetInput", ThisKey="FromOldCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.CenterToCenterTranslations.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslations.Add(this);
						this._FromOldCabinetInputID = value.ID;
					}
					else
					{
						this._FromOldCabinetInputID = default(long);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CenterToCenterTranslation1", Storage="_CabinetInput1", ThisKey="ToOldCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput1
		{
			get
			{
				return this._CabinetInput1.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput1.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput1.Entity = null;
						previousValue.CenterToCenterTranslations1.Remove(this);
					}
					this._CabinetInput1.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslations1.Add(this);
						this._ToOldCabinetInputID = value.ID;
					}
					else
					{
						this._ToOldCabinetInputID = default(long);
					}
					this.SendPropertyChanged("CabinetInput1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CenterToCenterTranslation2", Storage="_CabinetInput2", ThisKey="FromNewCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput2
		{
			get
			{
				return this._CabinetInput2.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput2.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput2.Entity = null;
						previousValue.CenterToCenterTranslations2.Remove(this);
					}
					this._CabinetInput2.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslations2.Add(this);
						this._FromNewCabinetInputID = value.ID;
					}
					else
					{
						this._FromNewCabinetInputID = default(long);
					}
					this.SendPropertyChanged("CabinetInput2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_CenterToCenterTranslation3", Storage="_CabinetInput3", ThisKey="ToNewCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput3
		{
			get
			{
				return this._CabinetInput3.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput3.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput3.Entity = null;
						previousValue.CenterToCenterTranslations3.Remove(this);
					}
					this._CabinetInput3.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslations3.Add(this);
						this._ToNewCabinetInputID = value.ID;
					}
					else
					{
						this._ToNewCabinetInputID = default(long);
					}
					this.SendPropertyChanged("CabinetInput3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_CenterToCenterTranslation", Storage="_Center", ThisKey="TargetCenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.CenterToCenterTranslations.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslations.Add(this);
						this._TargetCenterID = value.ID;
					}
					else
					{
						this._TargetCenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_CenterToCenterTranslation1", Storage="_Center1", ThisKey="SourceCenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center1
		{
			get
			{
				return this._Center1.Entity;
			}
			set
			{
				Center previousValue = this._Center1.Entity;
				if (((previousValue != value) 
							|| (this._Center1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center1.Entity = null;
						previousValue.CenterToCenterTranslations1.Remove(this);
					}
					this._Center1.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslations1.Add(this);
						this._SourceCenterID = value.ID;
					}
					else
					{
						this._SourceCenterID = default(int);
					}
					this.SendPropertyChanged("Center1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CenterToCenterTranslation", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.CenterToCenterTranslation = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslation = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CenterToCenterTranslationPCM")]
	public partial class CenterToCenterTranslationPCM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private int _OldPCMID;
		
		private int _NewPCMID;
		
		private EntityRef<PCM> _PCM;
		
		private EntityRef<PCM> _PCM1;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnOldPCMIDChanging(int value);
    partial void OnOldPCMIDChanged();
    partial void OnNewPCMIDChanging(int value);
    partial void OnNewPCMIDChanged();
    #endregion
		
		public CenterToCenterTranslationPCM()
		{
			this._PCM = default(EntityRef<PCM>);
			this._PCM1 = default(EntityRef<PCM>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPCMID", DbType="Int NOT NULL")]
		public int OldPCMID
		{
			get
			{
				return this._OldPCMID;
			}
			set
			{
				if ((this._OldPCMID != value))
				{
					if (this._PCM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPCMIDChanging(value);
					this.SendPropertyChanging();
					this._OldPCMID = value;
					this.SendPropertyChanged("OldPCMID");
					this.OnOldPCMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPCMID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NewPCMID
		{
			get
			{
				return this._NewPCMID;
			}
			set
			{
				if ((this._NewPCMID != value))
				{
					if (this._PCM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewPCMIDChanging(value);
					this.SendPropertyChanging();
					this._NewPCMID = value;
					this.SendPropertyChanged("NewPCMID");
					this.OnNewPCMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_CenterToCenterTranslationPCM", Storage="_PCM", ThisKey="OldPCMID", OtherKey="ID", IsForeignKey=true)]
		public PCM PCM
		{
			get
			{
				return this._PCM.Entity;
			}
			set
			{
				PCM previousValue = this._PCM.Entity;
				if (((previousValue != value) 
							|| (this._PCM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCM.Entity = null;
						previousValue.CenterToCenterTranslationPCMs.Remove(this);
					}
					this._PCM.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslationPCMs.Add(this);
						this._OldPCMID = value.ID;
					}
					else
					{
						this._OldPCMID = default(int);
					}
					this.SendPropertyChanged("PCM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_CenterToCenterTranslationPCM1", Storage="_PCM1", ThisKey="NewPCMID", OtherKey="ID", IsForeignKey=true)]
		public PCM PCM1
		{
			get
			{
				return this._PCM1.Entity;
			}
			set
			{
				PCM previousValue = this._PCM1.Entity;
				if (((previousValue != value) 
							|| (this._PCM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCM1.Entity = null;
						previousValue.CenterToCenterTranslationPCMs1.Remove(this);
					}
					this._PCM1.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslationPCMs1.Add(this);
						this._NewPCMID = value.ID;
					}
					else
					{
						this._NewPCMID = default(int);
					}
					this.SendPropertyChanged("PCM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CenterToCenterTranslationPCM", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.CenterToCenterTranslationPCMs.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslationPCMs.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CenterToCenterTranslationTelephone")]
	public partial class CenterToCenterTranslationTelephone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private long _TelephoneNo;
		
		private long _NewTelephoneNo;
		
		private int _NewSwitchPrecodeID;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnNewTelephoneNoChanging(long value);
    partial void OnNewTelephoneNoChanged();
    partial void OnNewSwitchPrecodeIDChanging(int value);
    partial void OnNewSwitchPrecodeIDChanged();
    #endregion
		
		public CenterToCenterTranslationTelephone()
		{
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTelephoneNo", DbType="BigInt NOT NULL")]
		public long NewTelephoneNo
		{
			get
			{
				return this._NewTelephoneNo;
			}
			set
			{
				if ((this._NewTelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._NewTelephoneNo = value;
					this.SendPropertyChanged("NewTelephoneNo");
					this.OnNewTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSwitchPrecodeID", DbType="Int NOT NULL")]
		public int NewSwitchPrecodeID
		{
			get
			{
				return this._NewSwitchPrecodeID;
			}
			set
			{
				if ((this._NewSwitchPrecodeID != value))
				{
					this.OnNewSwitchPrecodeIDChanging(value);
					this.SendPropertyChanging();
					this._NewSwitchPrecodeID = value;
					this.SendPropertyChanged("NewSwitchPrecodeID");
					this.OnNewSwitchPrecodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CenterToCenterTranslationTelephone", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.CenterToCenterTranslationTelephones.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslationTelephones.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_CenterToCenterTranslationTelephone", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.CenterToCenterTranslationTelephones.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslationTelephones.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_CenterToCenterTranslationTelephone1", Storage="_Telephone1", ThisKey="NewTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.CenterToCenterTranslationTelephones1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.CenterToCenterTranslationTelephones1.Add(this);
						this._NewTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._NewTelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CentralTelType")]
	public partial class CentralTelType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CentralTelTypeID;
		
		private string _CentralModelName;
		
		private int _LineIn;
		
		private int _LineOut;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCentralTelTypeIDChanging(int value);
    partial void OnCentralTelTypeIDChanged();
    partial void OnCentralModelNameChanging(string value);
    partial void OnCentralModelNameChanged();
    partial void OnLineInChanging(int value);
    partial void OnLineInChanged();
    partial void OnLineOutChanging(int value);
    partial void OnLineOutChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public CentralTelType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CentralTelTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CentralTelTypeID
		{
			get
			{
				return this._CentralTelTypeID;
			}
			set
			{
				if ((this._CentralTelTypeID != value))
				{
					this.OnCentralTelTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CentralTelTypeID = value;
					this.SendPropertyChanged("CentralTelTypeID");
					this.OnCentralTelTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CentralModelName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CentralModelName
		{
			get
			{
				return this._CentralModelName;
			}
			set
			{
				if ((this._CentralModelName != value))
				{
					this.OnCentralModelNameChanging(value);
					this.SendPropertyChanging();
					this._CentralModelName = value;
					this.SendPropertyChanged("CentralModelName");
					this.OnCentralModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineIn", DbType="Int NOT NULL")]
		public int LineIn
		{
			get
			{
				return this._LineIn;
			}
			set
			{
				if ((this._LineIn != value))
				{
					this.OnLineInChanging(value);
					this.SendPropertyChanging();
					this._LineIn = value;
					this.SendPropertyChanged("LineIn");
					this.OnLineInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineOut", DbType="Int NOT NULL")]
		public int LineOut
		{
			get
			{
				return this._LineOut;
			}
			set
			{
				if ((this._LineOut != value))
				{
					this.OnLineOutChanging(value);
					this.SendPropertyChanging();
					this._LineOut = value;
					this.SendPropertyChanged("LineOut");
					this.OnLineOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeAddress")]
	public partial class ChangeAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _DataChangeAddreess;
		
		private System.Nullable<bool> _ConfirmVaghozari;
		
		private System.Nullable<bool> _ConfirmCustomer;
		
		private System.Nullable<long> _OldInstallAddressID;
		
		private System.Nullable<long> _OldCorrespondenceAddressID;
		
		private System.Nullable<long> _NewInstallAddressID;
		
		private System.Nullable<long> _NewCorrespondenceAddressID;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Address> _Address2;
		
		private EntityRef<Address> _Address3;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDataChangeAddreessChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChangeAddreessChanged();
    partial void OnConfirmVaghozariChanging(System.Nullable<bool> value);
    partial void OnConfirmVaghozariChanged();
    partial void OnConfirmCustomerChanging(System.Nullable<bool> value);
    partial void OnConfirmCustomerChanged();
    partial void OnOldInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnOldInstallAddressIDChanged();
    partial void OnOldCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnOldCorrespondenceAddressIDChanged();
    partial void OnNewInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnNewInstallAddressIDChanged();
    partial void OnNewCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnNewCorrespondenceAddressIDChanged();
    #endregion
		
		public ChangeAddress()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Address2 = default(EntityRef<Address>);
			this._Address3 = default(EntityRef<Address>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataChangeAddreess", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DataChangeAddreess
		{
			get
			{
				return this._DataChangeAddreess;
			}
			set
			{
				if ((this._DataChangeAddreess != value))
				{
					this.OnDataChangeAddreessChanging(value);
					this.SendPropertyChanging();
					this._DataChangeAddreess = value;
					this.SendPropertyChanged("DataChangeAddreess");
					this.OnDataChangeAddreessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmVaghozari", DbType="Bit")]
		public System.Nullable<bool> ConfirmVaghozari
		{
			get
			{
				return this._ConfirmVaghozari;
			}
			set
			{
				if ((this._ConfirmVaghozari != value))
				{
					this.OnConfirmVaghozariChanging(value);
					this.SendPropertyChanging();
					this._ConfirmVaghozari = value;
					this.SendPropertyChanged("ConfirmVaghozari");
					this.OnConfirmVaghozariChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmCustomer", DbType="Bit")]
		public System.Nullable<bool> ConfirmCustomer
		{
			get
			{
				return this._ConfirmCustomer;
			}
			set
			{
				if ((this._ConfirmCustomer != value))
				{
					this.OnConfirmCustomerChanging(value);
					this.SendPropertyChanging();
					this._ConfirmCustomer = value;
					this.SendPropertyChanged("ConfirmCustomer");
					this.OnConfirmCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInstallAddressID", DbType="BigInt")]
		public System.Nullable<long> OldInstallAddressID
		{
			get
			{
				return this._OldInstallAddressID;
			}
			set
			{
				if ((this._OldInstallAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._OldInstallAddressID = value;
					this.SendPropertyChanged("OldInstallAddressID");
					this.OnOldInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> OldCorrespondenceAddressID
		{
			get
			{
				return this._OldCorrespondenceAddressID;
			}
			set
			{
				if ((this._OldCorrespondenceAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._OldCorrespondenceAddressID = value;
					this.SendPropertyChanged("OldCorrespondenceAddressID");
					this.OnOldCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInstallAddressID", DbType="BigInt")]
		public System.Nullable<long> NewInstallAddressID
		{
			get
			{
				return this._NewInstallAddressID;
			}
			set
			{
				if ((this._NewInstallAddressID != value))
				{
					if (this._Address3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._NewInstallAddressID = value;
					this.SendPropertyChanged("NewInstallAddressID");
					this.OnNewInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> NewCorrespondenceAddressID
		{
			get
			{
				return this._NewCorrespondenceAddressID;
			}
			set
			{
				if ((this._NewCorrespondenceAddressID != value))
				{
					if (this._Address2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._NewCorrespondenceAddressID = value;
					this.SendPropertyChanged("NewCorrespondenceAddressID");
					this.OnNewCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeAddress", Storage="_Address", ThisKey="OldCorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.ChangeAddresses.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.ChangeAddresses.Add(this);
						this._OldCorrespondenceAddressID = value.ID;
					}
					else
					{
						this._OldCorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeAddress1", Storage="_Address1", ThisKey="OldInstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.ChangeAddresses1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.ChangeAddresses1.Add(this);
						this._OldInstallAddressID = value.ID;
					}
					else
					{
						this._OldInstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeAddress2", Storage="_Address2", ThisKey="NewCorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address2
		{
			get
			{
				return this._Address2.Entity;
			}
			set
			{
				Address previousValue = this._Address2.Entity;
				if (((previousValue != value) 
							|| (this._Address2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address2.Entity = null;
						previousValue.ChangeAddresses2.Remove(this);
					}
					this._Address2.Entity = value;
					if ((value != null))
					{
						value.ChangeAddresses2.Add(this);
						this._NewCorrespondenceAddressID = value.ID;
					}
					else
					{
						this._NewCorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeAddress3", Storage="_Address3", ThisKey="NewInstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address3
		{
			get
			{
				return this._Address3.Entity;
			}
			set
			{
				Address previousValue = this._Address3.Entity;
				if (((previousValue != value) 
							|| (this._Address3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address3.Entity = null;
						previousValue.ChangeAddresses3.Remove(this);
					}
					this._Address3.Entity = value;
					if ((value != null))
					{
						value.ChangeAddresses3.Add(this);
						this._NewInstallAddressID = value.ID;
					}
					else
					{
						this._NewInstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeAddress", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ChangeAddress = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ChangeAddress = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeLocation")]
	public partial class ChangeLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<byte> _ChangeLocationTypeID;
		
		private System.Nullable<long> _InvestigatePossibilityID;
		
		private System.Nullable<long> _SubscriberAddressID;
		
		private System.Nullable<long> _DocumentRequestContentID;
		
		private System.Nullable<long> _ChangeLocationReoprtIDTo118;
		
		private System.Nullable<byte> _Equipment;
		
		private System.Nullable<long> _OldBuchtID;
		
		private System.Nullable<long> _OldPostContactID;
		
		private System.Nullable<long> _OldCabinetInputID;
		
		private System.Nullable<long> _ChangeLocationReportID;
		
		private System.Nullable<long> _NewInstallAddressID;
		
		private System.Nullable<long> _NewCorrespondenceAddressID;
		
		private System.Nullable<long> _OldInstallAddressID;
		
		private System.Nullable<long> _OldCorrespondenceAddressID;
		
		private System.Nullable<long> _OldTelephone;
		
		private System.Nullable<int> _OldSwitchPortID;
		
		private System.Nullable<long> _NewTelephone;
		
		private System.Nullable<long> _NearestTelephon;
		
		private System.Nullable<long> _NewCounterID;
		
		private System.Nullable<long> _OldCounterID;
		
		private System.Nullable<int> _SourceCenter;
		
		private System.Nullable<int> _TargetCenter;
		
		private System.Nullable<bool> _ConfirmTheSourceCenter;
		
		private System.Nullable<bool> _ConfirmTheTargetCenter;
		
		private System.Nullable<long> _NewCustomerID;
		
		private System.Nullable<byte> _Status;
		
		private EntitySet<Linesman> _Linesmans;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Address> _Address2;
		
		private EntityRef<Address> _Address3;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Center> _Center1;
		
		private EntityRef<Counter> _Counter;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnChangeLocationTypeIDChanging(System.Nullable<byte> value);
    partial void OnChangeLocationTypeIDChanged();
    partial void OnInvestigatePossibilityIDChanging(System.Nullable<long> value);
    partial void OnInvestigatePossibilityIDChanged();
    partial void OnSubscriberAddressIDChanging(System.Nullable<long> value);
    partial void OnSubscriberAddressIDChanged();
    partial void OnDocumentRequestContentIDChanging(System.Nullable<long> value);
    partial void OnDocumentRequestContentIDChanged();
    partial void OnChangeLocationReoprtIDTo118Changing(System.Nullable<long> value);
    partial void OnChangeLocationReoprtIDTo118Changed();
    partial void OnEquipmentChanging(System.Nullable<byte> value);
    partial void OnEquipmentChanged();
    partial void OnOldBuchtIDChanging(System.Nullable<long> value);
    partial void OnOldBuchtIDChanged();
    partial void OnOldPostContactIDChanging(System.Nullable<long> value);
    partial void OnOldPostContactIDChanged();
    partial void OnOldCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnOldCabinetInputIDChanged();
    partial void OnChangeLocationReportIDChanging(System.Nullable<long> value);
    partial void OnChangeLocationReportIDChanged();
    partial void OnNewInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnNewInstallAddressIDChanged();
    partial void OnNewCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnNewCorrespondenceAddressIDChanged();
    partial void OnOldInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnOldInstallAddressIDChanged();
    partial void OnOldCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnOldCorrespondenceAddressIDChanged();
    partial void OnOldTelephoneChanging(System.Nullable<long> value);
    partial void OnOldTelephoneChanged();
    partial void OnOldSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnOldSwitchPortIDChanged();
    partial void OnNewTelephoneChanging(System.Nullable<long> value);
    partial void OnNewTelephoneChanged();
    partial void OnNearestTelephonChanging(System.Nullable<long> value);
    partial void OnNearestTelephonChanged();
    partial void OnNewCounterIDChanging(System.Nullable<long> value);
    partial void OnNewCounterIDChanged();
    partial void OnOldCounterIDChanging(System.Nullable<long> value);
    partial void OnOldCounterIDChanged();
    partial void OnSourceCenterChanging(System.Nullable<int> value);
    partial void OnSourceCenterChanged();
    partial void OnTargetCenterChanging(System.Nullable<int> value);
    partial void OnTargetCenterChanged();
    partial void OnConfirmTheSourceCenterChanging(System.Nullable<bool> value);
    partial void OnConfirmTheSourceCenterChanged();
    partial void OnConfirmTheTargetCenterChanging(System.Nullable<bool> value);
    partial void OnConfirmTheTargetCenterChanged();
    partial void OnNewCustomerIDChanging(System.Nullable<long> value);
    partial void OnNewCustomerIDChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public ChangeLocation()
		{
			this._Linesmans = new EntitySet<Linesman>(new Action<Linesman>(this.attach_Linesmans), new Action<Linesman>(this.detach_Linesmans));
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Address2 = default(EntityRef<Address>);
			this._Address3 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._Center = default(EntityRef<Center>);
			this._Center1 = default(EntityRef<Center>);
			this._Counter = default(EntityRef<Counter>);
			this._PostContact = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeLocationTypeID", DbType="TinyInt")]
		public System.Nullable<byte> ChangeLocationTypeID
		{
			get
			{
				return this._ChangeLocationTypeID;
			}
			set
			{
				if ((this._ChangeLocationTypeID != value))
				{
					this.OnChangeLocationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ChangeLocationTypeID = value;
					this.SendPropertyChanged("ChangeLocationTypeID");
					this.OnChangeLocationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestigatePossibilityID", DbType="BigInt")]
		public System.Nullable<long> InvestigatePossibilityID
		{
			get
			{
				return this._InvestigatePossibilityID;
			}
			set
			{
				if ((this._InvestigatePossibilityID != value))
				{
					this.OnInvestigatePossibilityIDChanging(value);
					this.SendPropertyChanging();
					this._InvestigatePossibilityID = value;
					this.SendPropertyChanged("InvestigatePossibilityID");
					this.OnInvestigatePossibilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberAddressID", DbType="BigInt")]
		public System.Nullable<long> SubscriberAddressID
		{
			get
			{
				return this._SubscriberAddressID;
			}
			set
			{
				if ((this._SubscriberAddressID != value))
				{
					this.OnSubscriberAddressIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriberAddressID = value;
					this.SendPropertyChanged("SubscriberAddressID");
					this.OnSubscriberAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRequestContentID", DbType="BigInt")]
		public System.Nullable<long> DocumentRequestContentID
		{
			get
			{
				return this._DocumentRequestContentID;
			}
			set
			{
				if ((this._DocumentRequestContentID != value))
				{
					this.OnDocumentRequestContentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentRequestContentID = value;
					this.SendPropertyChanged("DocumentRequestContentID");
					this.OnDocumentRequestContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeLocationReoprtIDTo118", DbType="BigInt")]
		public System.Nullable<long> ChangeLocationReoprtIDTo118
		{
			get
			{
				return this._ChangeLocationReoprtIDTo118;
			}
			set
			{
				if ((this._ChangeLocationReoprtIDTo118 != value))
				{
					this.OnChangeLocationReoprtIDTo118Changing(value);
					this.SendPropertyChanging();
					this._ChangeLocationReoprtIDTo118 = value;
					this.SendPropertyChanged("ChangeLocationReoprtIDTo118");
					this.OnChangeLocationReoprtIDTo118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment", DbType="TinyInt")]
		public System.Nullable<byte> Equipment
		{
			get
			{
				return this._Equipment;
			}
			set
			{
				if ((this._Equipment != value))
				{
					this.OnEquipmentChanging(value);
					this.SendPropertyChanging();
					this._Equipment = value;
					this.SendPropertyChanged("Equipment");
					this.OnEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtID", DbType="BigInt")]
		public System.Nullable<long> OldBuchtID
		{
			get
			{
				return this._OldBuchtID;
			}
			set
			{
				if ((this._OldBuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtID = value;
					this.SendPropertyChanged("OldBuchtID");
					this.OnOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostContactID", DbType="BigInt")]
		public System.Nullable<long> OldPostContactID
		{
			get
			{
				return this._OldPostContactID;
			}
			set
			{
				if ((this._OldPostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostContactID = value;
					this.SendPropertyChanged("OldPostContactID");
					this.OnOldPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> OldCabinetInputID
		{
			get
			{
				return this._OldCabinetInputID;
			}
			set
			{
				if ((this._OldCabinetInputID != value))
				{
					this.OnOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetInputID = value;
					this.SendPropertyChanged("OldCabinetInputID");
					this.OnOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeLocationReportID", DbType="BigInt")]
		public System.Nullable<long> ChangeLocationReportID
		{
			get
			{
				return this._ChangeLocationReportID;
			}
			set
			{
				if ((this._ChangeLocationReportID != value))
				{
					this.OnChangeLocationReportIDChanging(value);
					this.SendPropertyChanging();
					this._ChangeLocationReportID = value;
					this.SendPropertyChanged("ChangeLocationReportID");
					this.OnChangeLocationReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInstallAddressID", DbType="BigInt")]
		public System.Nullable<long> NewInstallAddressID
		{
			get
			{
				return this._NewInstallAddressID;
			}
			set
			{
				if ((this._NewInstallAddressID != value))
				{
					if (this._Address2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._NewInstallAddressID = value;
					this.SendPropertyChanged("NewInstallAddressID");
					this.OnNewInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> NewCorrespondenceAddressID
		{
			get
			{
				return this._NewCorrespondenceAddressID;
			}
			set
			{
				if ((this._NewCorrespondenceAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._NewCorrespondenceAddressID = value;
					this.SendPropertyChanged("NewCorrespondenceAddressID");
					this.OnNewCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInstallAddressID", DbType="BigInt")]
		public System.Nullable<long> OldInstallAddressID
		{
			get
			{
				return this._OldInstallAddressID;
			}
			set
			{
				if ((this._OldInstallAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._OldInstallAddressID = value;
					this.SendPropertyChanged("OldInstallAddressID");
					this.OnOldInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> OldCorrespondenceAddressID
		{
			get
			{
				return this._OldCorrespondenceAddressID;
			}
			set
			{
				if ((this._OldCorrespondenceAddressID != value))
				{
					if (this._Address3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._OldCorrespondenceAddressID = value;
					this.SendPropertyChanged("OldCorrespondenceAddressID");
					this.OnOldCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephone", DbType="BigInt")]
		public System.Nullable<long> OldTelephone
		{
			get
			{
				return this._OldTelephone;
			}
			set
			{
				if ((this._OldTelephone != value))
				{
					this.OnOldTelephoneChanging(value);
					this.SendPropertyChanging();
					this._OldTelephone = value;
					this.SendPropertyChanged("OldTelephone");
					this.OnOldTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSwitchPortID", DbType="Int")]
		public System.Nullable<int> OldSwitchPortID
		{
			get
			{
				return this._OldSwitchPortID;
			}
			set
			{
				if ((this._OldSwitchPortID != value))
				{
					this.OnOldSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._OldSwitchPortID = value;
					this.SendPropertyChanged("OldSwitchPortID");
					this.OnOldSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTelephone", DbType="BigInt")]
		public System.Nullable<long> NewTelephone
		{
			get
			{
				return this._NewTelephone;
			}
			set
			{
				if ((this._NewTelephone != value))
				{
					this.OnNewTelephoneChanging(value);
					this.SendPropertyChanging();
					this._NewTelephone = value;
					this.SendPropertyChanged("NewTelephone");
					this.OnNewTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephon", DbType="BigInt")]
		public System.Nullable<long> NearestTelephon
		{
			get
			{
				return this._NearestTelephon;
			}
			set
			{
				if ((this._NearestTelephon != value))
				{
					this.OnNearestTelephonChanging(value);
					this.SendPropertyChanging();
					this._NearestTelephon = value;
					this.SendPropertyChanged("NearestTelephon");
					this.OnNearestTelephonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCounterID", DbType="BigInt")]
		public System.Nullable<long> NewCounterID
		{
			get
			{
				return this._NewCounterID;
			}
			set
			{
				if ((this._NewCounterID != value))
				{
					if (this._Counter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCounterIDChanging(value);
					this.SendPropertyChanging();
					this._NewCounterID = value;
					this.SendPropertyChanged("NewCounterID");
					this.OnNewCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCounterID", DbType="BigInt")]
		public System.Nullable<long> OldCounterID
		{
			get
			{
				return this._OldCounterID;
			}
			set
			{
				if ((this._OldCounterID != value))
				{
					this.OnOldCounterIDChanging(value);
					this.SendPropertyChanging();
					this._OldCounterID = value;
					this.SendPropertyChanged("OldCounterID");
					this.OnOldCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCenter", DbType="Int")]
		public System.Nullable<int> SourceCenter
		{
			get
			{
				return this._SourceCenter;
			}
			set
			{
				if ((this._SourceCenter != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceCenterChanging(value);
					this.SendPropertyChanging();
					this._SourceCenter = value;
					this.SendPropertyChanged("SourceCenter");
					this.OnSourceCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCenter", DbType="Int")]
		public System.Nullable<int> TargetCenter
		{
			get
			{
				return this._TargetCenter;
			}
			set
			{
				if ((this._TargetCenter != value))
				{
					if (this._Center1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetCenterChanging(value);
					this.SendPropertyChanging();
					this._TargetCenter = value;
					this.SendPropertyChanged("TargetCenter");
					this.OnTargetCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTheSourceCenter", DbType="Bit")]
		public System.Nullable<bool> ConfirmTheSourceCenter
		{
			get
			{
				return this._ConfirmTheSourceCenter;
			}
			set
			{
				if ((this._ConfirmTheSourceCenter != value))
				{
					this.OnConfirmTheSourceCenterChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTheSourceCenter = value;
					this.SendPropertyChanged("ConfirmTheSourceCenter");
					this.OnConfirmTheSourceCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTheTargetCenter", DbType="Bit")]
		public System.Nullable<bool> ConfirmTheTargetCenter
		{
			get
			{
				return this._ConfirmTheTargetCenter;
			}
			set
			{
				if ((this._ConfirmTheTargetCenter != value))
				{
					this.OnConfirmTheTargetCenterChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTheTargetCenter = value;
					this.SendPropertyChanged("ConfirmTheTargetCenter");
					this.OnConfirmTheTargetCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCustomerID", DbType="BigInt")]
		public System.Nullable<long> NewCustomerID
		{
			get
			{
				return this._NewCustomerID;
			}
			set
			{
				if ((this._NewCustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._NewCustomerID = value;
					this.SendPropertyChanged("NewCustomerID");
					this.OnNewCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChangeLocation_Linesman", Storage="_Linesmans", ThisKey="ID", OtherKey="ChangeLocationID")]
		public EntitySet<Linesman> Linesmans
		{
			get
			{
				return this._Linesmans;
			}
			set
			{
				this._Linesmans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocation", Storage="_Address", ThisKey="NewCorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.ChangeLocations.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations.Add(this);
						this._NewCorrespondenceAddressID = value.ID;
					}
					else
					{
						this._NewCorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocation1", Storage="_Address1", ThisKey="OldInstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.ChangeLocations1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations1.Add(this);
						this._OldInstallAddressID = value.ID;
					}
					else
					{
						this._OldInstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocation2", Storage="_Address2", ThisKey="NewInstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address2
		{
			get
			{
				return this._Address2.Entity;
			}
			set
			{
				Address previousValue = this._Address2.Entity;
				if (((previousValue != value) 
							|| (this._Address2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address2.Entity = null;
						previousValue.ChangeLocations2.Remove(this);
					}
					this._Address2.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations2.Add(this);
						this._NewInstallAddressID = value.ID;
					}
					else
					{
						this._NewInstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocation3", Storage="_Address3", ThisKey="OldCorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address3
		{
			get
			{
				return this._Address3.Entity;
			}
			set
			{
				Address previousValue = this._Address3.Entity;
				if (((previousValue != value) 
							|| (this._Address3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address3.Entity = null;
						previousValue.ChangeLocations3.Remove(this);
					}
					this._Address3.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations3.Add(this);
						this._OldCorrespondenceAddressID = value.ID;
					}
					else
					{
						this._OldCorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ChangeLocation", Storage="_Bucht", ThisKey="OldBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.ChangeLocations.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations.Add(this);
						this._OldBuchtID = value.ID;
					}
					else
					{
						this._OldBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ChangeLocation", Storage="_Center", ThisKey="SourceCenter", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.ChangeLocations.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations.Add(this);
						this._SourceCenter = value.ID;
					}
					else
					{
						this._SourceCenter = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_ChangeLocation1", Storage="_Center1", ThisKey="TargetCenter", OtherKey="ID", IsForeignKey=true)]
		public Center Center1
		{
			get
			{
				return this._Center1.Entity;
			}
			set
			{
				Center previousValue = this._Center1.Entity;
				if (((previousValue != value) 
							|| (this._Center1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center1.Entity = null;
						previousValue.ChangeLocations1.Remove(this);
					}
					this._Center1.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations1.Add(this);
						this._TargetCenter = value.ID;
					}
					else
					{
						this._TargetCenter = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counter_ChangeLocation", Storage="_Counter", ThisKey="NewCounterID", OtherKey="ID", IsForeignKey=true)]
		public Counter Counter
		{
			get
			{
				return this._Counter.Entity;
			}
			set
			{
				Counter previousValue = this._Counter.Entity;
				if (((previousValue != value) 
							|| (this._Counter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counter.Entity = null;
						previousValue.ChangeLocations.Remove(this);
					}
					this._Counter.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations.Add(this);
						this._NewCounterID = value.ID;
					}
					else
					{
						this._NewCounterID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Counter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ChangeLocation", Storage="_PostContact", ThisKey="OldPostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.ChangeLocations.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations.Add(this);
						this._OldPostContactID = value.ID;
					}
					else
					{
						this._OldPostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeLocation", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ChangeLocation = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ChangeLocation = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeLocation", Storage="_Customer", ThisKey="NewCustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ChangeLocations.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ChangeLocations.Add(this);
						this._NewCustomerID = value.ID;
					}
					else
					{
						this._NewCustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Linesmans(Linesman entity)
		{
			this.SendPropertyChanging();
			entity.ChangeLocation = this;
		}
		
		private void detach_Linesmans(Linesman entity)
		{
			this.SendPropertyChanging();
			entity.ChangeLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeLocationSpecialWire")]
	public partial class ChangeLocationSpecialWire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private System.Nullable<long> _OldPostContactID;
		
		private System.Nullable<long> _OldCabinetInputID;
		
		private long _OldBuchtID;
		
		private System.Nullable<long> _OldOtherBuchtID;
		
		private System.Nullable<long> _NewOtherBuchtID;
		
		private int _OldSwitchPortID;
		
		private System.Nullable<long> _OldInstallAddressID;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _NearestTelephone;
		
		private System.Nullable<System.DateTime> _SetupDate;
		
		private System.Nullable<int> _SpecialWireTypeID;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<SwitchPort> _SwitchPort;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnOldPostContactIDChanging(System.Nullable<long> value);
    partial void OnOldPostContactIDChanged();
    partial void OnOldCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnOldCabinetInputIDChanged();
    partial void OnOldBuchtIDChanging(long value);
    partial void OnOldBuchtIDChanged();
    partial void OnOldOtherBuchtIDChanging(System.Nullable<long> value);
    partial void OnOldOtherBuchtIDChanged();
    partial void OnNewOtherBuchtIDChanging(System.Nullable<long> value);
    partial void OnNewOtherBuchtIDChanged();
    partial void OnOldSwitchPortIDChanging(int value);
    partial void OnOldSwitchPortIDChanged();
    partial void OnOldInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnOldInstallAddressIDChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnNearestTelephoneChanging(System.Nullable<long> value);
    partial void OnNearestTelephoneChanged();
    partial void OnSetupDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSetupDateChanged();
    partial void OnSpecialWireTypeIDChanging(System.Nullable<int> value);
    partial void OnSpecialWireTypeIDChanged();
    #endregion
		
		public ChangeLocationSpecialWire()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._PostContact = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			this._SwitchPort = default(EntityRef<SwitchPort>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostContactID", DbType="BigInt")]
		public System.Nullable<long> OldPostContactID
		{
			get
			{
				return this._OldPostContactID;
			}
			set
			{
				if ((this._OldPostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostContactID = value;
					this.SendPropertyChanged("OldPostContactID");
					this.OnOldPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> OldCabinetInputID
		{
			get
			{
				return this._OldCabinetInputID;
			}
			set
			{
				if ((this._OldCabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetInputID = value;
					this.SendPropertyChanged("OldCabinetInputID");
					this.OnOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtID", DbType="BigInt NOT NULL")]
		public long OldBuchtID
		{
			get
			{
				return this._OldBuchtID;
			}
			set
			{
				if ((this._OldBuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtID = value;
					this.SendPropertyChanged("OldBuchtID");
					this.OnOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldOtherBuchtID", DbType="BigInt")]
		public System.Nullable<long> OldOtherBuchtID
		{
			get
			{
				return this._OldOtherBuchtID;
			}
			set
			{
				if ((this._OldOtherBuchtID != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldOtherBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldOtherBuchtID = value;
					this.SendPropertyChanged("OldOtherBuchtID");
					this.OnOldOtherBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewOtherBuchtID", DbType="BigInt")]
		public System.Nullable<long> NewOtherBuchtID
		{
			get
			{
				return this._NewOtherBuchtID;
			}
			set
			{
				if ((this._NewOtherBuchtID != value))
				{
					this.OnNewOtherBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._NewOtherBuchtID = value;
					this.SendPropertyChanged("NewOtherBuchtID");
					this.OnNewOtherBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSwitchPortID", DbType="Int NOT NULL")]
		public int OldSwitchPortID
		{
			get
			{
				return this._OldSwitchPortID;
			}
			set
			{
				if ((this._OldSwitchPortID != value))
				{
					if (this._SwitchPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._OldSwitchPortID = value;
					this.SendPropertyChanged("OldSwitchPortID");
					this.OnOldSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInstallAddressID", DbType="BigInt")]
		public System.Nullable<long> OldInstallAddressID
		{
			get
			{
				return this._OldInstallAddressID;
			}
			set
			{
				if ((this._OldInstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._OldInstallAddressID = value;
					this.SendPropertyChanged("OldInstallAddressID");
					this.OnOldInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephone", DbType="BigInt")]
		public System.Nullable<long> NearestTelephone
		{
			get
			{
				return this._NearestTelephone;
			}
			set
			{
				if ((this._NearestTelephone != value))
				{
					this.OnNearestTelephoneChanging(value);
					this.SendPropertyChanging();
					this._NearestTelephone = value;
					this.SendPropertyChanged("NearestTelephone");
					this.OnNearestTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SetupDate
		{
			get
			{
				return this._SetupDate;
			}
			set
			{
				if ((this._SetupDate != value))
				{
					this.OnSetupDateChanging(value);
					this.SendPropertyChanging();
					this._SetupDate = value;
					this.SendPropertyChanged("SetupDate");
					this.OnSetupDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialWireTypeID", DbType="Int")]
		public System.Nullable<int> SpecialWireTypeID
		{
			get
			{
				return this._SpecialWireTypeID;
			}
			set
			{
				if ((this._SpecialWireTypeID != value))
				{
					this.OnSpecialWireTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialWireTypeID = value;
					this.SendPropertyChanged("SpecialWireTypeID");
					this.OnSpecialWireTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocationSpecialWire", Storage="_Address", ThisKey="OldInstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.ChangeLocationSpecialWires.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.ChangeLocationSpecialWires.Add(this);
						this._OldInstallAddressID = value.ID;
					}
					else
					{
						this._OldInstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeLocationSpecialWire1", Storage="_Address1", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.ChangeLocationSpecialWires1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.ChangeLocationSpecialWires1.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ChangeLocationSpecialWire", Storage="_Bucht", ThisKey="OldBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.ChangeLocationSpecialWires.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.ChangeLocationSpecialWires.Add(this);
						this._OldBuchtID = value.ID;
					}
					else
					{
						this._OldBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ChangeLocationSpecialWire1", Storage="_Bucht1", ThisKey="OldOtherBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.ChangeLocationSpecialWires1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.ChangeLocationSpecialWires1.Add(this);
						this._OldOtherBuchtID = value.ID;
					}
					else
					{
						this._OldOtherBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ChangeLocationSpecialWire", Storage="_CabinetInput", ThisKey="OldCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.ChangeLocationSpecialWires.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.ChangeLocationSpecialWires.Add(this);
						this._OldCabinetInputID = value.ID;
					}
					else
					{
						this._OldCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ChangeLocationSpecialWire", Storage="_PostContact", ThisKey="OldPostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.ChangeLocationSpecialWires.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.ChangeLocationSpecialWires.Add(this);
						this._OldPostContactID = value.ID;
					}
					else
					{
						this._OldPostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeLocationSpecialWire", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ChangeLocationSpecialWire = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ChangeLocationSpecialWire = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_ChangeLocationSpecialWire", Storage="_SwitchPort", ThisKey="OldSwitchPortID", OtherKey="ID", IsForeignKey=true)]
		public SwitchPort SwitchPort
		{
			get
			{
				return this._SwitchPort.Entity;
			}
			set
			{
				SwitchPort previousValue = this._SwitchPort.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPort.Entity = null;
						previousValue.ChangeLocationSpecialWires.Remove(this);
					}
					this._SwitchPort.Entity = value;
					if ((value != null))
					{
						value.ChangeLocationSpecialWires.Add(this);
						this._OldSwitchPortID = value.ID;
					}
					else
					{
						this._OldSwitchPortID = default(int);
					}
					this.SendPropertyChanged("SwitchPort");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeLocationSpecialWirePoints")]
	public partial class ChangeLocationSpecialWirePoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private int _CenterID;
		
		private long _BuchtID;
		
		private System.Nullable<long> _NearestTelephoneNo;
		
		private System.Nullable<long> _NewInstallAddressID;
		
		private string _NewPostalCode;
		
		private string _NewAddressContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnBuchtIDChanging(long value);
    partial void OnBuchtIDChanged();
    partial void OnNearestTelephoneNoChanging(System.Nullable<long> value);
    partial void OnNearestTelephoneNoChanged();
    partial void OnNewInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnNewInstallAddressIDChanged();
    partial void OnNewPostalCodeChanging(string value);
    partial void OnNewPostalCodeChanged();
    partial void OnNewAddressContentChanging(string value);
    partial void OnNewAddressContentChanged();
    #endregion
		
		public ChangeLocationSpecialWirePoint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt NOT NULL")]
		public long BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> NearestTelephoneNo
		{
			get
			{
				return this._NearestTelephoneNo;
			}
			set
			{
				if ((this._NearestTelephoneNo != value))
				{
					this.OnNearestTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._NearestTelephoneNo = value;
					this.SendPropertyChanged("NearestTelephoneNo");
					this.OnNearestTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInstallAddressID", DbType="BigInt")]
		public System.Nullable<long> NewInstallAddressID
		{
			get
			{
				return this._NewInstallAddressID;
			}
			set
			{
				if ((this._NewInstallAddressID != value))
				{
					this.OnNewInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._NewInstallAddressID = value;
					this.SendPropertyChanged("NewInstallAddressID");
					this.OnNewInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostalCode", DbType="NVarChar(50)")]
		public string NewPostalCode
		{
			get
			{
				return this._NewPostalCode;
			}
			set
			{
				if ((this._NewPostalCode != value))
				{
					this.OnNewPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._NewPostalCode = value;
					this.SendPropertyChanged("NewPostalCode");
					this.OnNewPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewAddressContent", DbType="NVarChar(MAX)")]
		public string NewAddressContent
		{
			get
			{
				return this._NewAddressContent;
			}
			set
			{
				if ((this._NewAddressContent != value))
				{
					this.OnNewAddressContentChanging(value);
					this.SendPropertyChanging();
					this._NewAddressContent = value;
					this.SendPropertyChanged("NewAddressContent");
					this.OnNewAddressContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeName")]
	public partial class ChangeName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _OldCustomerID;
		
		private long _NewCustomerID;
		
		private System.Nullable<int> _LastCyleID;
		
		private System.Nullable<System.DateTime> _LastBillDate;
		
		private bool _HasCourtLetter;
		
		private string _CourtName;
		
		private string _AgentName;
		
		private string _CourtVerdictNo;
		
		private System.Nullable<System.DateTime> _CourtVerdictDate;
		
		private string _PeaceDocumentNo;
		
		private System.Nullable<System.DateTime> _PeaceDocumentDate;
		
		private System.Nullable<System.DateTime> _PeaceDocumentInsertDate;
		
		private System.Nullable<long> _NoticeID;
		
		private System.Nullable<long> _FileInfoReportID;
		
		private string _AlternativeOfficeCode;
		
		private System.Nullable<long> _PreviousOwnerID;
		
		private System.Nullable<byte> _IsTransferToReletives;
		
		private System.Nullable<System.Guid> _DocumentsFileID;
		
		private EntityRef<Cycle> _Cycle;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Customer> _Customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldCustomerIDChanging(long value);
    partial void OnOldCustomerIDChanged();
    partial void OnNewCustomerIDChanging(long value);
    partial void OnNewCustomerIDChanged();
    partial void OnLastCyleIDChanging(System.Nullable<int> value);
    partial void OnLastCyleIDChanged();
    partial void OnLastBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastBillDateChanged();
    partial void OnHasCourtLetterChanging(bool value);
    partial void OnHasCourtLetterChanged();
    partial void OnCourtNameChanging(string value);
    partial void OnCourtNameChanged();
    partial void OnAgentNameChanging(string value);
    partial void OnAgentNameChanged();
    partial void OnCourtVerdictNoChanging(string value);
    partial void OnCourtVerdictNoChanged();
    partial void OnCourtVerdictDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCourtVerdictDateChanged();
    partial void OnPeaceDocumentNoChanging(string value);
    partial void OnPeaceDocumentNoChanged();
    partial void OnPeaceDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPeaceDocumentDateChanged();
    partial void OnPeaceDocumentInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPeaceDocumentInsertDateChanged();
    partial void OnNoticeIDChanging(System.Nullable<long> value);
    partial void OnNoticeIDChanged();
    partial void OnFileInfoReportIDChanging(System.Nullable<long> value);
    partial void OnFileInfoReportIDChanged();
    partial void OnAlternativeOfficeCodeChanging(string value);
    partial void OnAlternativeOfficeCodeChanged();
    partial void OnPreviousOwnerIDChanging(System.Nullable<long> value);
    partial void OnPreviousOwnerIDChanged();
    partial void OnIsTransferToReletivesChanging(System.Nullable<byte> value);
    partial void OnIsTransferToReletivesChanged();
    partial void OnDocumentsFileIDChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentsFileIDChanged();
    #endregion
		
		public ChangeName()
		{
			this._Cycle = default(EntityRef<Cycle>);
			this._Request = default(EntityRef<Request>);
			this._Customer = default(EntityRef<Customer>);
			this._Customer1 = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCustomerID", DbType="BigInt NOT NULL")]
		public long OldCustomerID
		{
			get
			{
				return this._OldCustomerID;
			}
			set
			{
				if ((this._OldCustomerID != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._OldCustomerID = value;
					this.SendPropertyChanged("OldCustomerID");
					this.OnOldCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCustomerID", DbType="BigInt NOT NULL")]
		public long NewCustomerID
		{
			get
			{
				return this._NewCustomerID;
			}
			set
			{
				if ((this._NewCustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._NewCustomerID = value;
					this.SendPropertyChanged("NewCustomerID");
					this.OnNewCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCyleID", DbType="Int")]
		public System.Nullable<int> LastCyleID
		{
			get
			{
				return this._LastCyleID;
			}
			set
			{
				if ((this._LastCyleID != value))
				{
					if (this._Cycle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastCyleIDChanging(value);
					this.SendPropertyChanging();
					this._LastCyleID = value;
					this.SendPropertyChanged("LastCyleID");
					this.OnLastCyleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastBillDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastBillDate
		{
			get
			{
				return this._LastBillDate;
			}
			set
			{
				if ((this._LastBillDate != value))
				{
					this.OnLastBillDateChanging(value);
					this.SendPropertyChanging();
					this._LastBillDate = value;
					this.SendPropertyChanged("LastBillDate");
					this.OnLastBillDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCourtLetter", DbType="Bit NOT NULL")]
		public bool HasCourtLetter
		{
			get
			{
				return this._HasCourtLetter;
			}
			set
			{
				if ((this._HasCourtLetter != value))
				{
					this.OnHasCourtLetterChanging(value);
					this.SendPropertyChanging();
					this._HasCourtLetter = value;
					this.SendPropertyChanged("HasCourtLetter");
					this.OnHasCourtLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourtName", DbType="NVarChar(200)")]
		public string CourtName
		{
			get
			{
				return this._CourtName;
			}
			set
			{
				if ((this._CourtName != value))
				{
					this.OnCourtNameChanging(value);
					this.SendPropertyChanging();
					this._CourtName = value;
					this.SendPropertyChanged("CourtName");
					this.OnCourtNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentName", DbType="NVarChar(50)")]
		public string AgentName
		{
			get
			{
				return this._AgentName;
			}
			set
			{
				if ((this._AgentName != value))
				{
					this.OnAgentNameChanging(value);
					this.SendPropertyChanging();
					this._AgentName = value;
					this.SendPropertyChanged("AgentName");
					this.OnAgentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourtVerdictNo", DbType="NVarChar(50)")]
		public string CourtVerdictNo
		{
			get
			{
				return this._CourtVerdictNo;
			}
			set
			{
				if ((this._CourtVerdictNo != value))
				{
					this.OnCourtVerdictNoChanging(value);
					this.SendPropertyChanging();
					this._CourtVerdictNo = value;
					this.SendPropertyChanged("CourtVerdictNo");
					this.OnCourtVerdictNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourtVerdictDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CourtVerdictDate
		{
			get
			{
				return this._CourtVerdictDate;
			}
			set
			{
				if ((this._CourtVerdictDate != value))
				{
					this.OnCourtVerdictDateChanging(value);
					this.SendPropertyChanging();
					this._CourtVerdictDate = value;
					this.SendPropertyChanged("CourtVerdictDate");
					this.OnCourtVerdictDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeaceDocumentNo", DbType="NVarChar(50)")]
		public string PeaceDocumentNo
		{
			get
			{
				return this._PeaceDocumentNo;
			}
			set
			{
				if ((this._PeaceDocumentNo != value))
				{
					this.OnPeaceDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._PeaceDocumentNo = value;
					this.SendPropertyChanged("PeaceDocumentNo");
					this.OnPeaceDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeaceDocumentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PeaceDocumentDate
		{
			get
			{
				return this._PeaceDocumentDate;
			}
			set
			{
				if ((this._PeaceDocumentDate != value))
				{
					this.OnPeaceDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._PeaceDocumentDate = value;
					this.SendPropertyChanged("PeaceDocumentDate");
					this.OnPeaceDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeaceDocumentInsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PeaceDocumentInsertDate
		{
			get
			{
				return this._PeaceDocumentInsertDate;
			}
			set
			{
				if ((this._PeaceDocumentInsertDate != value))
				{
					this.OnPeaceDocumentInsertDateChanging(value);
					this.SendPropertyChanging();
					this._PeaceDocumentInsertDate = value;
					this.SendPropertyChanged("PeaceDocumentInsertDate");
					this.OnPeaceDocumentInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", DbType="BigInt")]
		public System.Nullable<long> NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					this.OnNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._NoticeID = value;
					this.SendPropertyChanged("NoticeID");
					this.OnNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileInfoReportID", DbType="BigInt")]
		public System.Nullable<long> FileInfoReportID
		{
			get
			{
				return this._FileInfoReportID;
			}
			set
			{
				if ((this._FileInfoReportID != value))
				{
					this.OnFileInfoReportIDChanging(value);
					this.SendPropertyChanging();
					this._FileInfoReportID = value;
					this.SendPropertyChanged("FileInfoReportID");
					this.OnFileInfoReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeOfficeCode", DbType="NVarChar(200)")]
		public string AlternativeOfficeCode
		{
			get
			{
				return this._AlternativeOfficeCode;
			}
			set
			{
				if ((this._AlternativeOfficeCode != value))
				{
					this.OnAlternativeOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._AlternativeOfficeCode = value;
					this.SendPropertyChanged("AlternativeOfficeCode");
					this.OnAlternativeOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousOwnerID", DbType="BigInt")]
		public System.Nullable<long> PreviousOwnerID
		{
			get
			{
				return this._PreviousOwnerID;
			}
			set
			{
				if ((this._PreviousOwnerID != value))
				{
					this.OnPreviousOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._PreviousOwnerID = value;
					this.SendPropertyChanged("PreviousOwnerID");
					this.OnPreviousOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTransferToReletives", DbType="TinyInt")]
		public System.Nullable<byte> IsTransferToReletives
		{
			get
			{
				return this._IsTransferToReletives;
			}
			set
			{
				if ((this._IsTransferToReletives != value))
				{
					this.OnIsTransferToReletivesChanging(value);
					this.SendPropertyChanging();
					this._IsTransferToReletives = value;
					this.SendPropertyChanged("IsTransferToReletives");
					this.OnIsTransferToReletivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentsFileID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentsFileID
		{
			get
			{
				return this._DocumentsFileID;
			}
			set
			{
				if ((this._DocumentsFileID != value))
				{
					this.OnDocumentsFileIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentsFileID = value;
					this.SendPropertyChanged("DocumentsFileID");
					this.OnDocumentsFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cycle_ChangeName", Storage="_Cycle", ThisKey="LastCyleID", OtherKey="ID", IsForeignKey=true)]
		public Cycle Cycle
		{
			get
			{
				return this._Cycle.Entity;
			}
			set
			{
				Cycle previousValue = this._Cycle.Entity;
				if (((previousValue != value) 
							|| (this._Cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cycle.Entity = null;
						previousValue.ChangeNames.Remove(this);
					}
					this._Cycle.Entity = value;
					if ((value != null))
					{
						value.ChangeNames.Add(this);
						this._LastCyleID = value.ID;
					}
					else
					{
						this._LastCyleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cycle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeName", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ChangeName = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ChangeName = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeName", Storage="_Customer", ThisKey="NewCustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ChangeNames.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ChangeNames.Add(this);
						this._NewCustomerID = value.ID;
					}
					else
					{
						this._NewCustomerID = default(long);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeName1", Storage="_Customer1", ThisKey="OldCustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.ChangeNames1.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.ChangeNames1.Add(this);
						this._OldCustomerID = value.ID;
					}
					else
					{
						this._OldCustomerID = default(long);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeNo")]
	public partial class ChangeNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _InvestigatePossibilityID;
		
		private System.Nullable<long> _OldRequestID;
		
		private int _CauseOfChangeNoID;
		
		private System.Nullable<System.DateTime> _ChangeEntryDate;
		
		private bool _NumberType;
		
		private long _OldTelephoneNo;
		
		private System.Nullable<long> _OldPostContactID;
		
		private System.Nullable<long> _OldCabinetInputID;
		
		private System.Nullable<long> _NewTelephoneNo;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private System.Nullable<int> _OldSwitchPortID;
		
		private System.Nullable<long> _OldBuchtID;
		
		private System.Nullable<int> _NewSwitchPortID;
		
		private string _Description;
		
		private string _DescriptionOfExpenditures;
		
		private long _CustomerID;
		
		private long _InstallAddressID;
		
		private long _CorrespondenceAddressID;
		
		private System.Nullable<byte> _Status;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<CauseOfChangeNo> _CauseOfChangeNo;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInvestigatePossibilityIDChanging(System.Nullable<long> value);
    partial void OnInvestigatePossibilityIDChanged();
    partial void OnOldRequestIDChanging(System.Nullable<long> value);
    partial void OnOldRequestIDChanged();
    partial void OnCauseOfChangeNoIDChanging(int value);
    partial void OnCauseOfChangeNoIDChanged();
    partial void OnChangeEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeEntryDateChanged();
    partial void OnNumberTypeChanging(bool value);
    partial void OnNumberTypeChanged();
    partial void OnOldTelephoneNoChanging(long value);
    partial void OnOldTelephoneNoChanged();
    partial void OnOldPostContactIDChanging(System.Nullable<long> value);
    partial void OnOldPostContactIDChanged();
    partial void OnOldCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnOldCabinetInputIDChanged();
    partial void OnNewTelephoneNoChanging(System.Nullable<long> value);
    partial void OnNewTelephoneNoChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    partial void OnOldSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnOldSwitchPortIDChanged();
    partial void OnOldBuchtIDChanging(System.Nullable<long> value);
    partial void OnOldBuchtIDChanged();
    partial void OnNewSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnNewSwitchPortIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDescriptionOfExpendituresChanging(string value);
    partial void OnDescriptionOfExpendituresChanged();
    partial void OnCustomerIDChanging(long value);
    partial void OnCustomerIDChanged();
    partial void OnInstallAddressIDChanging(long value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(long value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public ChangeNo()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._CauseOfChangeNo = default(EntityRef<CauseOfChangeNo>);
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestigatePossibilityID", DbType="BigInt")]
		public System.Nullable<long> InvestigatePossibilityID
		{
			get
			{
				return this._InvestigatePossibilityID;
			}
			set
			{
				if ((this._InvestigatePossibilityID != value))
				{
					this.OnInvestigatePossibilityIDChanging(value);
					this.SendPropertyChanging();
					this._InvestigatePossibilityID = value;
					this.SendPropertyChanged("InvestigatePossibilityID");
					this.OnInvestigatePossibilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldRequestID", DbType="BigInt")]
		public System.Nullable<long> OldRequestID
		{
			get
			{
				return this._OldRequestID;
			}
			set
			{
				if ((this._OldRequestID != value))
				{
					this.OnOldRequestIDChanging(value);
					this.SendPropertyChanging();
					this._OldRequestID = value;
					this.SendPropertyChanged("OldRequestID");
					this.OnOldRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseOfChangeNoID", DbType="Int NOT NULL")]
		public int CauseOfChangeNoID
		{
			get
			{
				return this._CauseOfChangeNoID;
			}
			set
			{
				if ((this._CauseOfChangeNoID != value))
				{
					if (this._CauseOfChangeNo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauseOfChangeNoIDChanging(value);
					this.SendPropertyChanging();
					this._CauseOfChangeNoID = value;
					this.SendPropertyChanged("CauseOfChangeNoID");
					this.OnCauseOfChangeNoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeEntryDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ChangeEntryDate
		{
			get
			{
				return this._ChangeEntryDate;
			}
			set
			{
				if ((this._ChangeEntryDate != value))
				{
					this.OnChangeEntryDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeEntryDate = value;
					this.SendPropertyChanged("ChangeEntryDate");
					this.OnChangeEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberType", DbType="Bit NOT NULL")]
		public bool NumberType
		{
			get
			{
				return this._NumberType;
			}
			set
			{
				if ((this._NumberType != value))
				{
					this.OnNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._NumberType = value;
					this.SendPropertyChanged("NumberType");
					this.OnNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephoneNo", DbType="BigInt NOT NULL")]
		public long OldTelephoneNo
		{
			get
			{
				return this._OldTelephoneNo;
			}
			set
			{
				if ((this._OldTelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._OldTelephoneNo = value;
					this.SendPropertyChanged("OldTelephoneNo");
					this.OnOldTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostContactID", DbType="BigInt")]
		public System.Nullable<long> OldPostContactID
		{
			get
			{
				return this._OldPostContactID;
			}
			set
			{
				if ((this._OldPostContactID != value))
				{
					this.OnOldPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostContactID = value;
					this.SendPropertyChanged("OldPostContactID");
					this.OnOldPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> OldCabinetInputID
		{
			get
			{
				return this._OldCabinetInputID;
			}
			set
			{
				if ((this._OldCabinetInputID != value))
				{
					this.OnOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetInputID = value;
					this.SendPropertyChanged("OldCabinetInputID");
					this.OnOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> NewTelephoneNo
		{
			get
			{
				return this._NewTelephoneNo;
			}
			set
			{
				if ((this._NewTelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._NewTelephoneNo = value;
					this.SendPropertyChanged("NewTelephoneNo");
					this.OnNewTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSwitchPortID", DbType="Int")]
		public System.Nullable<int> OldSwitchPortID
		{
			get
			{
				return this._OldSwitchPortID;
			}
			set
			{
				if ((this._OldSwitchPortID != value))
				{
					this.OnOldSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._OldSwitchPortID = value;
					this.SendPropertyChanged("OldSwitchPortID");
					this.OnOldSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtID", DbType="BigInt")]
		public System.Nullable<long> OldBuchtID
		{
			get
			{
				return this._OldBuchtID;
			}
			set
			{
				if ((this._OldBuchtID != value))
				{
					this.OnOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtID = value;
					this.SendPropertyChanged("OldBuchtID");
					this.OnOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSwitchPortID", DbType="Int")]
		public System.Nullable<int> NewSwitchPortID
		{
			get
			{
				return this._NewSwitchPortID;
			}
			set
			{
				if ((this._NewSwitchPortID != value))
				{
					this.OnNewSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._NewSwitchPortID = value;
					this.SendPropertyChanged("NewSwitchPortID");
					this.OnNewSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionOfExpenditures", DbType="NVarChar(100)")]
		public string DescriptionOfExpenditures
		{
			get
			{
				return this._DescriptionOfExpenditures;
			}
			set
			{
				if ((this._DescriptionOfExpenditures != value))
				{
					this.OnDescriptionOfExpendituresChanging(value);
					this.SendPropertyChanging();
					this._DescriptionOfExpenditures = value;
					this.SendPropertyChanged("DescriptionOfExpenditures");
					this.OnDescriptionOfExpendituresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt NOT NULL")]
		public long CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt NOT NULL")]
		public long InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt NOT NULL")]
		public long CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeNo", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.ChangeNos.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.ChangeNos.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(long);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ChangeNo1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.ChangeNos1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.ChangeNos1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(long);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfChangeNo_ChangeNo", Storage="_CauseOfChangeNo", ThisKey="CauseOfChangeNoID", OtherKey="ID", IsForeignKey=true)]
		public CauseOfChangeNo CauseOfChangeNo
		{
			get
			{
				return this._CauseOfChangeNo.Entity;
			}
			set
			{
				CauseOfChangeNo previousValue = this._CauseOfChangeNo.Entity;
				if (((previousValue != value) 
							|| (this._CauseOfChangeNo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauseOfChangeNo.Entity = null;
						previousValue.ChangeNos.Remove(this);
					}
					this._CauseOfChangeNo.Entity = value;
					if ((value != null))
					{
						value.ChangeNos.Add(this);
						this._CauseOfChangeNoID = value.ID;
					}
					else
					{
						this._CauseOfChangeNoID = default(int);
					}
					this.SendPropertyChanged("CauseOfChangeNo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeNo", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ChangeNo = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ChangeNo = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ChangeNo", Storage="_Telephone", ThisKey="NewTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.ChangeNos.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.ChangeNos.Add(this);
						this._NewTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._NewTelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ChangeNo1", Storage="_Telephone1", ThisKey="OldTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.ChangeNos1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.ChangeNos1.Add(this);
						this._OldTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._OldTelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeNo", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ChangeNos.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ChangeNos.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(long);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeNoInstallLine")]
	public partial class ChangeNoInstallLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ChangeNoID;
		
		private long _OldInstallID;
		
		private long _NewInstallID;
		
		private System.Nullable<long> _ChangeNoRroprtTo118ID;
		
		private long _InsertDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnChangeNoIDChanging(long value);
    partial void OnChangeNoIDChanged();
    partial void OnOldInstallIDChanging(long value);
    partial void OnOldInstallIDChanged();
    partial void OnNewInstallIDChanging(long value);
    partial void OnNewInstallIDChanged();
    partial void OnChangeNoRroprtTo118IDChanging(System.Nullable<long> value);
    partial void OnChangeNoRroprtTo118IDChanged();
    partial void OnInsertDateChanging(long value);
    partial void OnInsertDateChanged();
    #endregion
		
		public ChangeNoInstallLine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeNoID", DbType="BigInt NOT NULL")]
		public long ChangeNoID
		{
			get
			{
				return this._ChangeNoID;
			}
			set
			{
				if ((this._ChangeNoID != value))
				{
					this.OnChangeNoIDChanging(value);
					this.SendPropertyChanging();
					this._ChangeNoID = value;
					this.SendPropertyChanged("ChangeNoID");
					this.OnChangeNoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInstallID", DbType="BigInt NOT NULL")]
		public long OldInstallID
		{
			get
			{
				return this._OldInstallID;
			}
			set
			{
				if ((this._OldInstallID != value))
				{
					this.OnOldInstallIDChanging(value);
					this.SendPropertyChanging();
					this._OldInstallID = value;
					this.SendPropertyChanged("OldInstallID");
					this.OnOldInstallIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInstallID", DbType="BigInt NOT NULL")]
		public long NewInstallID
		{
			get
			{
				return this._NewInstallID;
			}
			set
			{
				if ((this._NewInstallID != value))
				{
					this.OnNewInstallIDChanging(value);
					this.SendPropertyChanging();
					this._NewInstallID = value;
					this.SendPropertyChanged("NewInstallID");
					this.OnNewInstallIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeNoRroprtTo118ID", DbType="BigInt")]
		public System.Nullable<long> ChangeNoRroprtTo118ID
		{
			get
			{
				return this._ChangeNoRroprtTo118ID;
			}
			set
			{
				if ((this._ChangeNoRroprtTo118ID != value))
				{
					this.OnChangeNoRroprtTo118IDChanging(value);
					this.SendPropertyChanging();
					this._ChangeNoRroprtTo118ID = value;
					this.SendPropertyChanged("ChangeNoRroprtTo118ID");
					this.OnChangeNoRroprtTo118IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="BigInt NOT NULL")]
		public long InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangePreCode")]
	public partial class ChangePreCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _OldPreCodeID;
		
		private long _NewPreCode;
		
		private int _OldSwitchID;
		
		private System.Nullable<int> _NewSwhitchID;
		
		private long _FromTelephonNo;
		
		private long _ToTelephoneNo;
		
		private System.DateTime _InsertDate;
		
		private bool _Completion;
		
		private string _AccomplishmentTime;
		
		private System.Nullable<System.DateTime> _AccomplishmentDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldPreCodeIDChanging(int value);
    partial void OnOldPreCodeIDChanged();
    partial void OnNewPreCodeChanging(long value);
    partial void OnNewPreCodeChanged();
    partial void OnOldSwitchIDChanging(int value);
    partial void OnOldSwitchIDChanged();
    partial void OnNewSwhitchIDChanging(System.Nullable<int> value);
    partial void OnNewSwhitchIDChanged();
    partial void OnFromTelephonNoChanging(long value);
    partial void OnFromTelephonNoChanged();
    partial void OnToTelephoneNoChanging(long value);
    partial void OnToTelephoneNoChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCompletionChanging(bool value);
    partial void OnCompletionChanged();
    partial void OnAccomplishmentTimeChanging(string value);
    partial void OnAccomplishmentTimeChanged();
    partial void OnAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccomplishmentDateChanged();
    #endregion
		
		public ChangePreCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPreCodeID", DbType="Int NOT NULL")]
		public int OldPreCodeID
		{
			get
			{
				return this._OldPreCodeID;
			}
			set
			{
				if ((this._OldPreCodeID != value))
				{
					this.OnOldPreCodeIDChanging(value);
					this.SendPropertyChanging();
					this._OldPreCodeID = value;
					this.SendPropertyChanged("OldPreCodeID");
					this.OnOldPreCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPreCode", DbType="BigInt NOT NULL")]
		public long NewPreCode
		{
			get
			{
				return this._NewPreCode;
			}
			set
			{
				if ((this._NewPreCode != value))
				{
					this.OnNewPreCodeChanging(value);
					this.SendPropertyChanging();
					this._NewPreCode = value;
					this.SendPropertyChanged("NewPreCode");
					this.OnNewPreCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSwitchID", DbType="Int NOT NULL")]
		public int OldSwitchID
		{
			get
			{
				return this._OldSwitchID;
			}
			set
			{
				if ((this._OldSwitchID != value))
				{
					this.OnOldSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._OldSwitchID = value;
					this.SendPropertyChanged("OldSwitchID");
					this.OnOldSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSwhitchID", DbType="Int")]
		public System.Nullable<int> NewSwhitchID
		{
			get
			{
				return this._NewSwhitchID;
			}
			set
			{
				if ((this._NewSwhitchID != value))
				{
					this.OnNewSwhitchIDChanging(value);
					this.SendPropertyChanging();
					this._NewSwhitchID = value;
					this.SendPropertyChanged("NewSwhitchID");
					this.OnNewSwhitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephonNo", DbType="BigInt NOT NULL")]
		public long FromTelephonNo
		{
			get
			{
				return this._FromTelephonNo;
			}
			set
			{
				if ((this._FromTelephonNo != value))
				{
					this.OnFromTelephonNoChanging(value);
					this.SendPropertyChanging();
					this._FromTelephonNo = value;
					this.SendPropertyChanged("FromTelephonNo");
					this.OnFromTelephonNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneNo", DbType="BigInt NOT NULL")]
		public long ToTelephoneNo
		{
			get
			{
				return this._ToTelephoneNo;
			}
			set
			{
				if ((this._ToTelephoneNo != value))
				{
					this.OnToTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ToTelephoneNo = value;
					this.SendPropertyChanged("ToTelephoneNo");
					this.OnToTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completion", DbType="Bit NOT NULL")]
		public bool Completion
		{
			get
			{
				return this._Completion;
			}
			set
			{
				if ((this._Completion != value))
				{
					this.OnCompletionChanging(value);
					this.SendPropertyChanging();
					this._Completion = value;
					this.SendPropertyChanged("Completion");
					this.OnCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentTime", DbType="NChar(10)")]
		public string AccomplishmentTime
		{
			get
			{
				return this._AccomplishmentTime;
			}
			set
			{
				if ((this._AccomplishmentTime != value))
				{
					this.OnAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentTime = value;
					this.SendPropertyChanged("AccomplishmentTime");
					this.OnAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AccomplishmentDate
		{
			get
			{
				return this._AccomplishmentDate;
			}
			set
			{
				if ((this._AccomplishmentDate != value))
				{
					this.OnAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentDate = value;
					this.SendPropertyChanged("AccomplishmentDate");
					this.OnAccomplishmentDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeTelephoneType")]
	public partial class ChangeTelephoneType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _OldFileInfoID;
		
		private int _OldTelephoneTypeID;
		
		private long _NewFileInfoID;
		
		private int _NewTelephoneTypeID;
		
		private System.Nullable<long> _ChangeTelephoneReportIDTo118;
		
		private System.Nullable<long> _DocumentID;
		
		private System.Nullable<long> _ChangeTelephoneTypeReportID;
		
		private System.Nullable<long> _ChangeTelephoneReportIDToFinancialOffice;
		
		private int _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldFileInfoIDChanging(long value);
    partial void OnOldFileInfoIDChanged();
    partial void OnOldTelephoneTypeIDChanging(int value);
    partial void OnOldTelephoneTypeIDChanged();
    partial void OnNewFileInfoIDChanging(long value);
    partial void OnNewFileInfoIDChanged();
    partial void OnNewTelephoneTypeIDChanging(int value);
    partial void OnNewTelephoneTypeIDChanged();
    partial void OnChangeTelephoneReportIDTo118Changing(System.Nullable<long> value);
    partial void OnChangeTelephoneReportIDTo118Changed();
    partial void OnDocumentIDChanging(System.Nullable<long> value);
    partial void OnDocumentIDChanged();
    partial void OnChangeTelephoneTypeReportIDChanging(System.Nullable<long> value);
    partial void OnChangeTelephoneTypeReportIDChanged();
    partial void OnChangeTelephoneReportIDToFinancialOfficeChanging(System.Nullable<long> value);
    partial void OnChangeTelephoneReportIDToFinancialOfficeChanged();
    partial void OnInsertDateChanging(int value);
    partial void OnInsertDateChanged();
    #endregion
		
		public ChangeTelephoneType()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldFileInfoID", DbType="BigInt NOT NULL")]
		public long OldFileInfoID
		{
			get
			{
				return this._OldFileInfoID;
			}
			set
			{
				if ((this._OldFileInfoID != value))
				{
					this.OnOldFileInfoIDChanging(value);
					this.SendPropertyChanging();
					this._OldFileInfoID = value;
					this.SendPropertyChanged("OldFileInfoID");
					this.OnOldFileInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephoneTypeID", DbType="Int NOT NULL")]
		public int OldTelephoneTypeID
		{
			get
			{
				return this._OldTelephoneTypeID;
			}
			set
			{
				if ((this._OldTelephoneTypeID != value))
				{
					this.OnOldTelephoneTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OldTelephoneTypeID = value;
					this.SendPropertyChanged("OldTelephoneTypeID");
					this.OnOldTelephoneTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewFileInfoID", DbType="BigInt NOT NULL")]
		public long NewFileInfoID
		{
			get
			{
				return this._NewFileInfoID;
			}
			set
			{
				if ((this._NewFileInfoID != value))
				{
					this.OnNewFileInfoIDChanging(value);
					this.SendPropertyChanging();
					this._NewFileInfoID = value;
					this.SendPropertyChanged("NewFileInfoID");
					this.OnNewFileInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTelephoneTypeID", DbType="Int NOT NULL")]
		public int NewTelephoneTypeID
		{
			get
			{
				return this._NewTelephoneTypeID;
			}
			set
			{
				if ((this._NewTelephoneTypeID != value))
				{
					this.OnNewTelephoneTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NewTelephoneTypeID = value;
					this.SendPropertyChanged("NewTelephoneTypeID");
					this.OnNewTelephoneTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTelephoneReportIDTo118", DbType="BigInt")]
		public System.Nullable<long> ChangeTelephoneReportIDTo118
		{
			get
			{
				return this._ChangeTelephoneReportIDTo118;
			}
			set
			{
				if ((this._ChangeTelephoneReportIDTo118 != value))
				{
					this.OnChangeTelephoneReportIDTo118Changing(value);
					this.SendPropertyChanging();
					this._ChangeTelephoneReportIDTo118 = value;
					this.SendPropertyChanged("ChangeTelephoneReportIDTo118");
					this.OnChangeTelephoneReportIDTo118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="BigInt")]
		public System.Nullable<long> DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTelephoneTypeReportID", DbType="BigInt")]
		public System.Nullable<long> ChangeTelephoneTypeReportID
		{
			get
			{
				return this._ChangeTelephoneTypeReportID;
			}
			set
			{
				if ((this._ChangeTelephoneTypeReportID != value))
				{
					this.OnChangeTelephoneTypeReportIDChanging(value);
					this.SendPropertyChanging();
					this._ChangeTelephoneTypeReportID = value;
					this.SendPropertyChanged("ChangeTelephoneTypeReportID");
					this.OnChangeTelephoneTypeReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTelephoneReportIDToFinancialOffice", DbType="BigInt")]
		public System.Nullable<long> ChangeTelephoneReportIDToFinancialOffice
		{
			get
			{
				return this._ChangeTelephoneReportIDToFinancialOffice;
			}
			set
			{
				if ((this._ChangeTelephoneReportIDToFinancialOffice != value))
				{
					this.OnChangeTelephoneReportIDToFinancialOfficeChanging(value);
					this.SendPropertyChanging();
					this._ChangeTelephoneReportIDToFinancialOffice = value;
					this.SendPropertyChanged("ChangeTelephoneReportIDToFinancialOffice");
					this.OnChangeTelephoneReportIDToFinancialOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="Int NOT NULL")]
		public int InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeTelephoneType", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ChangeTelephoneType = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ChangeTelephoneType = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProvinceID;
		
		private short _Code;
		
		private string _Name;
		
		private EntitySet<ADSLPAPFeasibility> _ADSLPAPFeasibilities;
		
		private EntitySet<ADSLSellerAgent> _ADSLSellerAgents;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<Office> _Offices;
		
		private EntitySet<PAPInfoLimitation> _PAPInfoLimitations;
		
		private EntitySet<PAPInfoUser> _PAPInfoUsers;
		
		private EntitySet<Region> _Regions;
		
		private EntityRef<Province> _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProvinceIDChanging(int value);
    partial void OnProvinceIDChanged();
    partial void OnCodeChanging(short value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public City()
		{
			this._ADSLPAPFeasibilities = new EntitySet<ADSLPAPFeasibility>(new Action<ADSLPAPFeasibility>(this.attach_ADSLPAPFeasibilities), new Action<ADSLPAPFeasibility>(this.detach_ADSLPAPFeasibilities));
			this._ADSLSellerAgents = new EntitySet<ADSLSellerAgent>(new Action<ADSLSellerAgent>(this.attach_ADSLSellerAgents), new Action<ADSLSellerAgent>(this.detach_ADSLSellerAgents));
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._Offices = new EntitySet<Office>(new Action<Office>(this.attach_Offices), new Action<Office>(this.detach_Offices));
			this._PAPInfoLimitations = new EntitySet<PAPInfoLimitation>(new Action<PAPInfoLimitation>(this.attach_PAPInfoLimitations), new Action<PAPInfoLimitation>(this.detach_PAPInfoLimitations));
			this._PAPInfoUsers = new EntitySet<PAPInfoUser>(new Action<PAPInfoUser>(this.attach_PAPInfoUsers), new Action<PAPInfoUser>(this.detach_PAPInfoUsers));
			this._Regions = new EntitySet<Region>(new Action<Region>(this.attach_Regions), new Action<Region>(this.detach_Regions));
			this._Province = default(EntityRef<Province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="Int NOT NULL")]
		public int ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					if (this._Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="SmallInt NOT NULL")]
		public short Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ADSLPAPFeasibility", Storage="_ADSLPAPFeasibilities", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<ADSLPAPFeasibility> ADSLPAPFeasibilities
		{
			get
			{
				return this._ADSLPAPFeasibilities;
			}
			set
			{
				this._ADSLPAPFeasibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ADSLSellerAgent", Storage="_ADSLSellerAgents", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<ADSLSellerAgent> ADSLSellerAgents
		{
			get
			{
				return this._ADSLSellerAgents;
			}
			set
			{
				this._ADSLSellerAgents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Office", Storage="_Offices", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<Office> Offices
		{
			get
			{
				return this._Offices;
			}
			set
			{
				this._Offices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_PAPInfoLimitation", Storage="_PAPInfoLimitations", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<PAPInfoLimitation> PAPInfoLimitations
		{
			get
			{
				return this._PAPInfoLimitations;
			}
			set
			{
				this._PAPInfoLimitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_PAPInfoUser", Storage="_PAPInfoUsers", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<PAPInfoUser> PAPInfoUsers
		{
			get
			{
				return this._PAPInfoUsers;
			}
			set
			{
				this._PAPInfoUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Region", Storage="_Regions", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<Region> Regions
		{
			get
			{
				return this._Regions;
			}
			set
			{
				this._Regions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Province", ThisKey="ProvinceID", OtherKey="ID", IsForeignKey=true)]
		public Province Province
		{
			get
			{
				return this._Province.Entity;
			}
			set
			{
				Province previousValue = this._Province.Entity;
				if (((previousValue != value) 
							|| (this._Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Province.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._Province.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._ProvinceID = value.ID;
					}
					else
					{
						this._ProvinceID = default(int);
					}
					this.SendPropertyChanged("Province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLPAPFeasibilities(ADSLPAPFeasibility entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_ADSLPAPFeasibilities(ADSLPAPFeasibility entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_ADSLSellerAgents(ADSLSellerAgent entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_ADSLSellerAgents(ADSLSellerAgent entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_PAPInfoLimitations(PAPInfoLimitation entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_PAPInfoLimitations(PAPInfoLimitation entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_PAPInfoUsers(PAPInfoUser entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_PAPInfoUsers(PAPInfoUser entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RequestID;
		
		private System.Nullable<long> _TelRoundSaleID;
		
		private System.Nullable<long> _Price;
		
		private byte _IsExtended;
		
		private System.Nullable<long> _RelatedContractID;
		
		private System.Nullable<System.DateTime> _ContractStartDate;
		
		private System.Nullable<System.DateTime> _ContractEndDate;
		
		private long _RequestDocumentID;
		
		private EntitySet<Contract> _Contracts;
		
		private EntityRef<Contract> _Contract1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<RequestDocument> _RequestDocument;
		
		private EntityRef<TelRoundSale> _TelRoundSale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnTelRoundSaleIDChanging(System.Nullable<long> value);
    partial void OnTelRoundSaleIDChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnIsExtendedChanging(byte value);
    partial void OnIsExtendedChanged();
    partial void OnRelatedContractIDChanging(System.Nullable<long> value);
    partial void OnRelatedContractIDChanged();
    partial void OnContractStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractStartDateChanged();
    partial void OnContractEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractEndDateChanged();
    partial void OnRequestDocumentIDChanging(long value);
    partial void OnRequestDocumentIDChanged();
    #endregion
		
		public Contract()
		{
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Contract1 = default(EntityRef<Contract>);
			this._Request = default(EntityRef<Request>);
			this._RequestDocument = default(EntityRef<RequestDocument>);
			this._TelRoundSale = default(EntityRef<TelRoundSale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelRoundSaleID", DbType="BigInt")]
		public System.Nullable<long> TelRoundSaleID
		{
			get
			{
				return this._TelRoundSaleID;
			}
			set
			{
				if ((this._TelRoundSaleID != value))
				{
					if (this._TelRoundSale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelRoundSaleIDChanging(value);
					this.SendPropertyChanging();
					this._TelRoundSaleID = value;
					this.SendPropertyChanged("TelRoundSaleID");
					this.OnTelRoundSaleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExtended", DbType="TinyInt NOT NULL")]
		public byte IsExtended
		{
			get
			{
				return this._IsExtended;
			}
			set
			{
				if ((this._IsExtended != value))
				{
					this.OnIsExtendedChanging(value);
					this.SendPropertyChanging();
					this._IsExtended = value;
					this.SendPropertyChanged("IsExtended");
					this.OnIsExtendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedContractID", DbType="BigInt")]
		public System.Nullable<long> RelatedContractID
		{
			get
			{
				return this._RelatedContractID;
			}
			set
			{
				if ((this._RelatedContractID != value))
				{
					if (this._Contract1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelatedContractIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedContractID = value;
					this.SendPropertyChanged("RelatedContractID");
					this.OnRelatedContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ContractStartDate
		{
			get
			{
				return this._ContractStartDate;
			}
			set
			{
				if ((this._ContractStartDate != value))
				{
					this.OnContractStartDateChanging(value);
					this.SendPropertyChanging();
					this._ContractStartDate = value;
					this.SendPropertyChanged("ContractStartDate");
					this.OnContractStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractEndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ContractEndDate
		{
			get
			{
				return this._ContractEndDate;
			}
			set
			{
				if ((this._ContractEndDate != value))
				{
					this.OnContractEndDateChanging(value);
					this.SendPropertyChanging();
					this._ContractEndDate = value;
					this.SendPropertyChanged("ContractEndDate");
					this.OnContractEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDocumentID", DbType="BigInt NOT NULL")]
		public long RequestDocumentID
		{
			get
			{
				return this._RequestDocumentID;
			}
			set
			{
				if ((this._RequestDocumentID != value))
				{
					if (this._RequestDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._RequestDocumentID = value;
					this.SendPropertyChanged("RequestDocumentID");
					this.OnRequestDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="RelatedContractID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Contract", Storage="_Contract1", ThisKey="RelatedContractID", OtherKey="ID", IsForeignKey=true)]
		public Contract Contract1
		{
			get
			{
				return this._Contract1.Entity;
			}
			set
			{
				Contract previousValue = this._Contract1.Entity;
				if (((previousValue != value) 
							|| (this._Contract1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract1.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Contract1.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._RelatedContractID = value.ID;
					}
					else
					{
						this._RelatedContractID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Contract1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Contract", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestDocument_Contract", Storage="_RequestDocument", ThisKey="RequestDocumentID", OtherKey="ID", IsForeignKey=true)]
		public RequestDocument RequestDocument
		{
			get
			{
				return this._RequestDocument.Entity;
			}
			set
			{
				RequestDocument previousValue = this._RequestDocument.Entity;
				if (((previousValue != value) 
							|| (this._RequestDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestDocument.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._RequestDocument.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._RequestDocumentID = value.ID;
					}
					else
					{
						this._RequestDocumentID = default(long);
					}
					this.SendPropertyChanged("RequestDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TelRoundSale_Contract", Storage="_TelRoundSale", ThisKey="TelRoundSaleID", OtherKey="ID", IsForeignKey=true)]
		public TelRoundSale TelRoundSale
		{
			get
			{
				return this._TelRoundSale.Entity;
			}
			set
			{
				TelRoundSale previousValue = this._TelRoundSale.Entity;
				if (((previousValue != value) 
							|| (this._TelRoundSale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TelRoundSale.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._TelRoundSale.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._TelRoundSaleID = value.ID;
					}
					else
					{
						this._TelRoundSaleID = default(Nullable<long>);
					}
					this.SendPropertyChanged("TelRoundSale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Contract1 = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Contract1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contractor")]
	public partial class Contractor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _HeaderName;
		
		private string _Address;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Mobile;
		
		private System.Nullable<System.DateTime> _ContractStartDate;
		
		private System.Nullable<System.DateTime> _ContractEndDate;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHeaderNameChanging(string value);
    partial void OnHeaderNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnContractStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractStartDateChanged();
    partial void OnContractEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractEndDateChanged();
    #endregion
		
		public Contractor()
		{
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderName", DbType="NVarChar(50)")]
		public string HeaderName
		{
			get
			{
				return this._HeaderName;
			}
			set
			{
				if ((this._HeaderName != value))
				{
					this.OnHeaderNameChanging(value);
					this.SendPropertyChanging();
					this._HeaderName = value;
					this.SendPropertyChanged("HeaderName");
					this.OnHeaderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ContractStartDate
		{
			get
			{
				return this._ContractStartDate;
			}
			set
			{
				if ((this._ContractStartDate != value))
				{
					this.OnContractStartDateChanging(value);
					this.SendPropertyChanging();
					this._ContractStartDate = value;
					this.SendPropertyChanged("ContractStartDate");
					this.OnContractStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractEndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ContractEndDate
		{
			get
			{
				return this._ContractEndDate;
			}
			set
			{
				if ((this._ContractEndDate != value))
				{
					this.OnContractEndDateChanging(value);
					this.SendPropertyChanging();
					this._ContractEndDate = value;
					this.SendPropertyChanged("ContractEndDate");
					this.OnContractEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="ContractorID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="ContractorID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Control")]
	public partial class Control : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _PermissionLetterNo;
		
		private string _PermissionLetterDate;
		
		private string _IssuingOffice;
		
		private string _IssuingPost;
		
		private string _ParazitTimeInterval;
		
		private string _ParazitType;
		
		private byte _Sex;
		
		private System.Nullable<System.DateTime> _ControlStartDate;
		
		private System.Nullable<System.DateTime> _ParazitExpireDate;
		
		private byte _Status;
		
		private EntitySet<Notice> _Notices;
		
		private EntitySet<ParazitControl> _ParazitControls;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPermissionLetterNoChanging(string value);
    partial void OnPermissionLetterNoChanged();
    partial void OnPermissionLetterDateChanging(string value);
    partial void OnPermissionLetterDateChanged();
    partial void OnIssuingOfficeChanging(string value);
    partial void OnIssuingOfficeChanged();
    partial void OnIssuingPostChanging(string value);
    partial void OnIssuingPostChanged();
    partial void OnParazitTimeIntervalChanging(string value);
    partial void OnParazitTimeIntervalChanged();
    partial void OnParazitTypeChanging(string value);
    partial void OnParazitTypeChanged();
    partial void OnSexChanging(byte value);
    partial void OnSexChanged();
    partial void OnControlStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnControlStartDateChanged();
    partial void OnParazitExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnParazitExpireDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Control()
		{
			this._Notices = new EntitySet<Notice>(new Action<Notice>(this.attach_Notices), new Action<Notice>(this.detach_Notices));
			this._ParazitControls = new EntitySet<ParazitControl>(new Action<ParazitControl>(this.attach_ParazitControls), new Action<ParazitControl>(this.detach_ParazitControls));
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionLetterNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionLetterNo
		{
			get
			{
				return this._PermissionLetterNo;
			}
			set
			{
				if ((this._PermissionLetterNo != value))
				{
					this.OnPermissionLetterNoChanging(value);
					this.SendPropertyChanging();
					this._PermissionLetterNo = value;
					this.SendPropertyChanged("PermissionLetterNo");
					this.OnPermissionLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionLetterDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionLetterDate
		{
			get
			{
				return this._PermissionLetterDate;
			}
			set
			{
				if ((this._PermissionLetterDate != value))
				{
					this.OnPermissionLetterDateChanging(value);
					this.SendPropertyChanging();
					this._PermissionLetterDate = value;
					this.SendPropertyChanged("PermissionLetterDate");
					this.OnPermissionLetterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuingOffice", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string IssuingOffice
		{
			get
			{
				return this._IssuingOffice;
			}
			set
			{
				if ((this._IssuingOffice != value))
				{
					this.OnIssuingOfficeChanging(value);
					this.SendPropertyChanging();
					this._IssuingOffice = value;
					this.SendPropertyChanged("IssuingOffice");
					this.OnIssuingOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuingPost", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string IssuingPost
		{
			get
			{
				return this._IssuingPost;
			}
			set
			{
				if ((this._IssuingPost != value))
				{
					this.OnIssuingPostChanging(value);
					this.SendPropertyChanging();
					this._IssuingPost = value;
					this.SendPropertyChanged("IssuingPost");
					this.OnIssuingPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParazitTimeInterval", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ParazitTimeInterval
		{
			get
			{
				return this._ParazitTimeInterval;
			}
			set
			{
				if ((this._ParazitTimeInterval != value))
				{
					this.OnParazitTimeIntervalChanging(value);
					this.SendPropertyChanging();
					this._ParazitTimeInterval = value;
					this.SendPropertyChanged("ParazitTimeInterval");
					this.OnParazitTimeIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParazitType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ParazitType
		{
			get
			{
				return this._ParazitType;
			}
			set
			{
				if ((this._ParazitType != value))
				{
					this.OnParazitTypeChanging(value);
					this.SendPropertyChanging();
					this._ParazitType = value;
					this.SendPropertyChanged("ParazitType");
					this.OnParazitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="TinyInt NOT NULL")]
		public byte Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ControlStartDate
		{
			get
			{
				return this._ControlStartDate;
			}
			set
			{
				if ((this._ControlStartDate != value))
				{
					this.OnControlStartDateChanging(value);
					this.SendPropertyChanging();
					this._ControlStartDate = value;
					this.SendPropertyChanged("ControlStartDate");
					this.OnControlStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParazitExpireDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ParazitExpireDate
		{
			get
			{
				return this._ParazitExpireDate;
			}
			set
			{
				if ((this._ParazitExpireDate != value))
				{
					this.OnParazitExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ParazitExpireDate = value;
					this.SendPropertyChanged("ParazitExpireDate");
					this.OnParazitExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Control_Notice", Storage="_Notices", ThisKey="ID", OtherKey="ControlID")]
		public EntitySet<Notice> Notices
		{
			get
			{
				return this._Notices;
			}
			set
			{
				this._Notices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Control_ParazitControl", Storage="_ParazitControls", ThisKey="ID", OtherKey="ControlID")]
		public EntitySet<ParazitControl> ParazitControls
		{
			get
			{
				return this._ParazitControls;
			}
			set
			{
				this._ParazitControls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Control", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Control = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Control = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notices(Notice entity)
		{
			this.SendPropertyChanging();
			entity.Control = this;
		}
		
		private void detach_Notices(Notice entity)
		{
			this.SendPropertyChanging();
			entity.Control = null;
		}
		
		private void attach_ParazitControls(ParazitControl entity)
		{
			this.SendPropertyChanging();
			entity.Control = this;
		}
		
		private void detach_ParazitControls(ParazitControl entity)
		{
			this.SendPropertyChanging();
			entity.Control = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Counter")]
	public partial class Counter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private string _CounterNo;
		
		private System.Nullable<int> _CycleID;
		
		private string _CounterReadHour;
		
		private System.DateTime _CounterReadDate;
		
		private System.Nullable<int> _Local;
		
		private System.Nullable<int> _NonLocal;
		
		private System.Nullable<int> _International;
		
		private System.Nullable<int> _BistTalk;
		
		private System.Nullable<int> _IA;
		
		private System.Nullable<System.DateTime> _OperatingDate;
		
		private System.DateTime _InsertDate;
		
		private EntitySet<ChangeLocation> _ChangeLocations;
		
		private EntitySet<InstallLine> _InstallLines;
		
		private EntityRef<Cycle> _Cycle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnCounterNoChanging(string value);
    partial void OnCounterNoChanged();
    partial void OnCycleIDChanging(System.Nullable<int> value);
    partial void OnCycleIDChanged();
    partial void OnCounterReadHourChanging(string value);
    partial void OnCounterReadHourChanged();
    partial void OnCounterReadDateChanging(System.DateTime value);
    partial void OnCounterReadDateChanged();
    partial void OnLocalChanging(System.Nullable<int> value);
    partial void OnLocalChanged();
    partial void OnNonLocalChanging(System.Nullable<int> value);
    partial void OnNonLocalChanged();
    partial void OnInternationalChanging(System.Nullable<int> value);
    partial void OnInternationalChanged();
    partial void OnBistTalkChanging(System.Nullable<int> value);
    partial void OnBistTalkChanged();
    partial void OnIAChanging(System.Nullable<int> value);
    partial void OnIAChanged();
    partial void OnOperatingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOperatingDateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public Counter()
		{
			this._ChangeLocations = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations), new Action<ChangeLocation>(this.detach_ChangeLocations));
			this._InstallLines = new EntitySet<InstallLine>(new Action<InstallLine>(this.attach_InstallLines), new Action<InstallLine>(this.detach_InstallLines));
			this._Cycle = default(EntityRef<Cycle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterNo", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CounterNo
		{
			get
			{
				return this._CounterNo;
			}
			set
			{
				if ((this._CounterNo != value))
				{
					this.OnCounterNoChanging(value);
					this.SendPropertyChanging();
					this._CounterNo = value;
					this.SendPropertyChanged("CounterNo");
					this.OnCounterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleID", DbType="Int")]
		public System.Nullable<int> CycleID
		{
			get
			{
				return this._CycleID;
			}
			set
			{
				if ((this._CycleID != value))
				{
					if (this._Cycle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCycleIDChanging(value);
					this.SendPropertyChanging();
					this._CycleID = value;
					this.SendPropertyChanged("CycleID");
					this.OnCycleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReadHour", DbType="NChar(10)")]
		public string CounterReadHour
		{
			get
			{
				return this._CounterReadHour;
			}
			set
			{
				if ((this._CounterReadHour != value))
				{
					this.OnCounterReadHourChanging(value);
					this.SendPropertyChanging();
					this._CounterReadHour = value;
					this.SendPropertyChanged("CounterReadHour");
					this.OnCounterReadHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterReadDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CounterReadDate
		{
			get
			{
				return this._CounterReadDate;
			}
			set
			{
				if ((this._CounterReadDate != value))
				{
					this.OnCounterReadDateChanging(value);
					this.SendPropertyChanging();
					this._CounterReadDate = value;
					this.SendPropertyChanged("CounterReadDate");
					this.OnCounterReadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Local", DbType="Int")]
		public System.Nullable<int> Local
		{
			get
			{
				return this._Local;
			}
			set
			{
				if ((this._Local != value))
				{
					this.OnLocalChanging(value);
					this.SendPropertyChanging();
					this._Local = value;
					this.SendPropertyChanged("Local");
					this.OnLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonLocal", DbType="Int")]
		public System.Nullable<int> NonLocal
		{
			get
			{
				return this._NonLocal;
			}
			set
			{
				if ((this._NonLocal != value))
				{
					this.OnNonLocalChanging(value);
					this.SendPropertyChanging();
					this._NonLocal = value;
					this.SendPropertyChanged("NonLocal");
					this.OnNonLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_International", DbType="Int")]
		public System.Nullable<int> International
		{
			get
			{
				return this._International;
			}
			set
			{
				if ((this._International != value))
				{
					this.OnInternationalChanging(value);
					this.SendPropertyChanging();
					this._International = value;
					this.SendPropertyChanged("International");
					this.OnInternationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BistTalk", DbType="Int")]
		public System.Nullable<int> BistTalk
		{
			get
			{
				return this._BistTalk;
			}
			set
			{
				if ((this._BistTalk != value))
				{
					this.OnBistTalkChanging(value);
					this.SendPropertyChanging();
					this._BistTalk = value;
					this.SendPropertyChanged("BistTalk");
					this.OnBistTalkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IA", DbType="Int")]
		public System.Nullable<int> IA
		{
			get
			{
				return this._IA;
			}
			set
			{
				if ((this._IA != value))
				{
					this.OnIAChanging(value);
					this.SendPropertyChanging();
					this._IA = value;
					this.SendPropertyChanged("IA");
					this.OnIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatingDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OperatingDate
		{
			get
			{
				return this._OperatingDate;
			}
			set
			{
				if ((this._OperatingDate != value))
				{
					this.OnOperatingDateChanging(value);
					this.SendPropertyChanging();
					this._OperatingDate = value;
					this.SendPropertyChanged("OperatingDate");
					this.OnOperatingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counter_ChangeLocation", Storage="_ChangeLocations", ThisKey="ID", OtherKey="NewCounterID")]
		public EntitySet<ChangeLocation> ChangeLocations
		{
			get
			{
				return this._ChangeLocations;
			}
			set
			{
				this._ChangeLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counter_InstallLine", Storage="_InstallLines", ThisKey="ID", OtherKey="CounterID")]
		public EntitySet<InstallLine> InstallLines
		{
			get
			{
				return this._InstallLines;
			}
			set
			{
				this._InstallLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cycle_Counter", Storage="_Cycle", ThisKey="CycleID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Cycle Cycle
		{
			get
			{
				return this._Cycle.Entity;
			}
			set
			{
				Cycle previousValue = this._Cycle.Entity;
				if (((previousValue != value) 
							|| (this._Cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cycle.Entity = null;
						previousValue.Counters.Remove(this);
					}
					this._Cycle.Entity = value;
					if ((value != null))
					{
						value.Counters.Add(this);
						this._CycleID = value.ID;
					}
					else
					{
						this._CycleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cycle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Counter = this;
		}
		
		private void detach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Counter = null;
		}
		
		private void attach_InstallLines(InstallLine entity)
		{
			this.SendPropertyChanging();
			entity.Counter = this;
		}
		
		private void detach_InstallLines(InstallLine entity)
		{
			this.SendPropertyChanging();
			entity.Counter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerGroup")]
	public partial class CustomerGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerTypeID;
		
		private string _Title;
		
		private string _Description;
		
		private string _KerID;
		
		private EntitySet<Telephone> _Telephones;
		
		private EntitySet<InstallRequest> _InstallRequests;
		
		private EntityRef<CustomerType> _CustomerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerTypeIDChanging(int value);
    partial void OnCustomerTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKerIDChanging(string value);
    partial void OnKerIDChanged();
    #endregion
		
		public CustomerGroup()
		{
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			this._InstallRequests = new EntitySet<InstallRequest>(new Action<InstallRequest>(this.attach_InstallRequests), new Action<InstallRequest>(this.detach_InstallRequests));
			this._CustomerType = default(EntityRef<CustomerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int NOT NULL")]
		public int CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KerID", DbType="NVarChar(50)")]
		public string KerID
		{
			get
			{
				return this._KerID;
			}
			set
			{
				if ((this._KerID != value))
				{
					this.OnKerIDChanging(value);
					this.SendPropertyChanging();
					this._KerID = value;
					this.SendPropertyChanged("KerID");
					this.OnKerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerGroup_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="CustomerGroupID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerGroup_InstallRequest", Storage="_InstallRequests", ThisKey="ID", OtherKey="TelephoneTypeGroup")]
		public EntitySet<InstallRequest> InstallRequests
		{
			get
			{
				return this._InstallRequests;
			}
			set
			{
				this._InstallRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_CustomerGroup", Storage="_CustomerType", ThisKey="CustomerTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.CustomerGroups.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.CustomerGroups.Add(this);
						this._CustomerTypeID = value.ID;
					}
					else
					{
						this._CustomerTypeID = default(int);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.CustomerGroup = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.CustomerGroup = null;
		}
		
		private void attach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.CustomerGroup = this;
		}
		
		private void detach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.CustomerGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerType")]
	public partial class CustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Code;
		
		private string _Title;
		
		private System.Nullable<bool> _Income;
		
		private bool _IsShow;
		
		private bool _IsReadOnly;
		
		private EntitySet<CustomerGroup> _CustomerGroups;
		
		private EntitySet<Telephone> _Telephones;
		
		private EntitySet<InstallRequest> _InstallRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIncomeChanging(System.Nullable<bool> value);
    partial void OnIncomeChanged();
    partial void OnIsShowChanging(bool value);
    partial void OnIsShowChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    #endregion
		
		public CustomerType()
		{
			this._CustomerGroups = new EntitySet<CustomerGroup>(new Action<CustomerGroup>(this.attach_CustomerGroups), new Action<CustomerGroup>(this.detach_CustomerGroups));
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			this._InstallRequests = new EntitySet<InstallRequest>(new Action<InstallRequest>(this.attach_InstallRequests), new Action<InstallRequest>(this.detach_InstallRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="Bit")]
		public System.Nullable<bool> Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this.OnIncomeChanging(value);
					this.SendPropertyChanging();
					this._Income = value;
					this.SendPropertyChanged("Income");
					this.OnIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShow", DbType="Bit NOT NULL")]
		public bool IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this.OnIsShowChanging(value);
					this.SendPropertyChanging();
					this._IsShow = value;
					this.SendPropertyChanged("IsShow");
					this.OnIsShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_CustomerGroup", Storage="_CustomerGroups", ThisKey="ID", OtherKey="CustomerTypeID")]
		public EntitySet<CustomerGroup> CustomerGroups
		{
			get
			{
				return this._CustomerGroups;
			}
			set
			{
				this._CustomerGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="CustomerTypeID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_InstallRequest", Storage="_InstallRequests", ThisKey="ID", OtherKey="TelephoneType")]
		public EntitySet<InstallRequest> InstallRequests
		{
			get
			{
				return this._InstallRequests;
			}
			set
			{
				this._InstallRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerGroups(CustomerGroup entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_CustomerGroups(CustomerGroup entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
		
		private void attach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CutAndEstablish")]
	public partial class CutAndEstablish : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _CutType;
		
		private string _FileNo;
		
		private System.Nullable<long> _Amount;
		
		private System.Nullable<long> _NoticeID;
		
		private string _CutRequesterRef;
		
		private string _EstablishRequesterRef;
		
		private System.Nullable<long> _CutDurationDays;
		
		private System.Nullable<byte> _AutomaticallyEstablish;
		
		private System.Nullable<bool> _EstablishWithOrder;
		
		private System.Nullable<long> _CutReportID;
		
		private System.Nullable<long> _EstablishReportID;
		
		private System.Nullable<System.DateTime> _ActionCutDueDate;
		
		private System.Nullable<System.DateTime> _ActionEstablishDueDate;
		
		private System.Nullable<System.DateTime> _CutDate;
		
		private System.Nullable<System.DateTime> _EstablishDate;
		
		private System.Nullable<System.DateTime> _CutListingDate;
		
		private System.Nullable<System.DateTime> _EstablishListingDate;
		
		private string _CutComment;
		
		private string _EstablishComment;
		
		private string _UnableCutStatusComment;
		
		private string _UnableEstablishStatusComment;
		
		private System.Nullable<long> _DebtAbonman;
		
		private System.Nullable<long> _DebtADeposit;
		
		private string _Counter;
		
		private System.Nullable<byte> _Status;
		
		private string _WiringIllegal;
		
		private System.Nullable<bool> _Vacate;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<CauseOfCut> _CauseOfCut;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCutTypeChanging(System.Nullable<int> value);
    partial void OnCutTypeChanged();
    partial void OnFileNoChanging(string value);
    partial void OnFileNoChanged();
    partial void OnAmountChanging(System.Nullable<long> value);
    partial void OnAmountChanged();
    partial void OnNoticeIDChanging(System.Nullable<long> value);
    partial void OnNoticeIDChanged();
    partial void OnCutRequesterRefChanging(string value);
    partial void OnCutRequesterRefChanged();
    partial void OnEstablishRequesterRefChanging(string value);
    partial void OnEstablishRequesterRefChanged();
    partial void OnCutDurationDaysChanging(System.Nullable<long> value);
    partial void OnCutDurationDaysChanged();
    partial void OnAutomaticallyEstablishChanging(System.Nullable<byte> value);
    partial void OnAutomaticallyEstablishChanged();
    partial void OnEstablishWithOrderChanging(System.Nullable<bool> value);
    partial void OnEstablishWithOrderChanged();
    partial void OnCutReportIDChanging(System.Nullable<long> value);
    partial void OnCutReportIDChanged();
    partial void OnEstablishReportIDChanging(System.Nullable<long> value);
    partial void OnEstablishReportIDChanged();
    partial void OnActionCutDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionCutDueDateChanged();
    partial void OnActionEstablishDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionEstablishDueDateChanged();
    partial void OnCutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCutDateChanged();
    partial void OnEstablishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEstablishDateChanged();
    partial void OnCutListingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCutListingDateChanged();
    partial void OnEstablishListingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEstablishListingDateChanged();
    partial void OnCutCommentChanging(string value);
    partial void OnCutCommentChanged();
    partial void OnEstablishCommentChanging(string value);
    partial void OnEstablishCommentChanged();
    partial void OnUnableCutStatusCommentChanging(string value);
    partial void OnUnableCutStatusCommentChanged();
    partial void OnUnableEstablishStatusCommentChanging(string value);
    partial void OnUnableEstablishStatusCommentChanged();
    partial void OnDebtAbonmanChanging(System.Nullable<long> value);
    partial void OnDebtAbonmanChanged();
    partial void OnDebtADepositChanging(System.Nullable<long> value);
    partial void OnDebtADepositChanged();
    partial void OnCounterChanging(string value);
    partial void OnCounterChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnWiringIllegalChanging(string value);
    partial void OnWiringIllegalChanged();
    partial void OnVacateChanging(System.Nullable<bool> value);
    partial void OnVacateChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public CutAndEstablish()
		{
			this._CauseOfCut = default(EntityRef<CauseOfCut>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutType", DbType="Int")]
		public System.Nullable<int> CutType
		{
			get
			{
				return this._CutType;
			}
			set
			{
				if ((this._CutType != value))
				{
					if (this._CauseOfCut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCutTypeChanging(value);
					this.SendPropertyChanging();
					this._CutType = value;
					this.SendPropertyChanged("CutType");
					this.OnCutTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNo", DbType="NVarChar(20)")]
		public string FileNo
		{
			get
			{
				return this._FileNo;
			}
			set
			{
				if ((this._FileNo != value))
				{
					this.OnFileNoChanging(value);
					this.SendPropertyChanging();
					this._FileNo = value;
					this.SendPropertyChanged("FileNo");
					this.OnFileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="BigInt")]
		public System.Nullable<long> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", DbType="BigInt")]
		public System.Nullable<long> NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					this.OnNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._NoticeID = value;
					this.SendPropertyChanged("NoticeID");
					this.OnNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutRequesterRef", DbType="NVarChar(50)")]
		public string CutRequesterRef
		{
			get
			{
				return this._CutRequesterRef;
			}
			set
			{
				if ((this._CutRequesterRef != value))
				{
					this.OnCutRequesterRefChanging(value);
					this.SendPropertyChanging();
					this._CutRequesterRef = value;
					this.SendPropertyChanged("CutRequesterRef");
					this.OnCutRequesterRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstablishRequesterRef", DbType="NVarChar(50)")]
		public string EstablishRequesterRef
		{
			get
			{
				return this._EstablishRequesterRef;
			}
			set
			{
				if ((this._EstablishRequesterRef != value))
				{
					this.OnEstablishRequesterRefChanging(value);
					this.SendPropertyChanging();
					this._EstablishRequesterRef = value;
					this.SendPropertyChanged("EstablishRequesterRef");
					this.OnEstablishRequesterRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDurationDays", DbType="BigInt")]
		public System.Nullable<long> CutDurationDays
		{
			get
			{
				return this._CutDurationDays;
			}
			set
			{
				if ((this._CutDurationDays != value))
				{
					this.OnCutDurationDaysChanging(value);
					this.SendPropertyChanging();
					this._CutDurationDays = value;
					this.SendPropertyChanged("CutDurationDays");
					this.OnCutDurationDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomaticallyEstablish", DbType="TinyInt")]
		public System.Nullable<byte> AutomaticallyEstablish
		{
			get
			{
				return this._AutomaticallyEstablish;
			}
			set
			{
				if ((this._AutomaticallyEstablish != value))
				{
					this.OnAutomaticallyEstablishChanging(value);
					this.SendPropertyChanging();
					this._AutomaticallyEstablish = value;
					this.SendPropertyChanged("AutomaticallyEstablish");
					this.OnAutomaticallyEstablishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstablishWithOrder", DbType="Bit")]
		public System.Nullable<bool> EstablishWithOrder
		{
			get
			{
				return this._EstablishWithOrder;
			}
			set
			{
				if ((this._EstablishWithOrder != value))
				{
					this.OnEstablishWithOrderChanging(value);
					this.SendPropertyChanging();
					this._EstablishWithOrder = value;
					this.SendPropertyChanged("EstablishWithOrder");
					this.OnEstablishWithOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutReportID", DbType="BigInt")]
		public System.Nullable<long> CutReportID
		{
			get
			{
				return this._CutReportID;
			}
			set
			{
				if ((this._CutReportID != value))
				{
					this.OnCutReportIDChanging(value);
					this.SendPropertyChanging();
					this._CutReportID = value;
					this.SendPropertyChanged("CutReportID");
					this.OnCutReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstablishReportID", DbType="BigInt")]
		public System.Nullable<long> EstablishReportID
		{
			get
			{
				return this._EstablishReportID;
			}
			set
			{
				if ((this._EstablishReportID != value))
				{
					this.OnEstablishReportIDChanging(value);
					this.SendPropertyChanging();
					this._EstablishReportID = value;
					this.SendPropertyChanged("EstablishReportID");
					this.OnEstablishReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionCutDueDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ActionCutDueDate
		{
			get
			{
				return this._ActionCutDueDate;
			}
			set
			{
				if ((this._ActionCutDueDate != value))
				{
					this.OnActionCutDueDateChanging(value);
					this.SendPropertyChanging();
					this._ActionCutDueDate = value;
					this.SendPropertyChanged("ActionCutDueDate");
					this.OnActionCutDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionEstablishDueDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ActionEstablishDueDate
		{
			get
			{
				return this._ActionEstablishDueDate;
			}
			set
			{
				if ((this._ActionEstablishDueDate != value))
				{
					this.OnActionEstablishDueDateChanging(value);
					this.SendPropertyChanging();
					this._ActionEstablishDueDate = value;
					this.SendPropertyChanged("ActionEstablishDueDate");
					this.OnActionEstablishDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CutDate
		{
			get
			{
				return this._CutDate;
			}
			set
			{
				if ((this._CutDate != value))
				{
					this.OnCutDateChanging(value);
					this.SendPropertyChanging();
					this._CutDate = value;
					this.SendPropertyChanged("CutDate");
					this.OnCutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstablishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstablishDate
		{
			get
			{
				return this._EstablishDate;
			}
			set
			{
				if ((this._EstablishDate != value))
				{
					this.OnEstablishDateChanging(value);
					this.SendPropertyChanging();
					this._EstablishDate = value;
					this.SendPropertyChanged("EstablishDate");
					this.OnEstablishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutListingDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CutListingDate
		{
			get
			{
				return this._CutListingDate;
			}
			set
			{
				if ((this._CutListingDate != value))
				{
					this.OnCutListingDateChanging(value);
					this.SendPropertyChanging();
					this._CutListingDate = value;
					this.SendPropertyChanged("CutListingDate");
					this.OnCutListingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstablishListingDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EstablishListingDate
		{
			get
			{
				return this._EstablishListingDate;
			}
			set
			{
				if ((this._EstablishListingDate != value))
				{
					this.OnEstablishListingDateChanging(value);
					this.SendPropertyChanging();
					this._EstablishListingDate = value;
					this.SendPropertyChanged("EstablishListingDate");
					this.OnEstablishListingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutComment", DbType="NVarChar(MAX)")]
		public string CutComment
		{
			get
			{
				return this._CutComment;
			}
			set
			{
				if ((this._CutComment != value))
				{
					this.OnCutCommentChanging(value);
					this.SendPropertyChanging();
					this._CutComment = value;
					this.SendPropertyChanged("CutComment");
					this.OnCutCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstablishComment", DbType="NVarChar(MAX)")]
		public string EstablishComment
		{
			get
			{
				return this._EstablishComment;
			}
			set
			{
				if ((this._EstablishComment != value))
				{
					this.OnEstablishCommentChanging(value);
					this.SendPropertyChanging();
					this._EstablishComment = value;
					this.SendPropertyChanged("EstablishComment");
					this.OnEstablishCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnableCutStatusComment", DbType="NVarChar(500)")]
		public string UnableCutStatusComment
		{
			get
			{
				return this._UnableCutStatusComment;
			}
			set
			{
				if ((this._UnableCutStatusComment != value))
				{
					this.OnUnableCutStatusCommentChanging(value);
					this.SendPropertyChanging();
					this._UnableCutStatusComment = value;
					this.SendPropertyChanged("UnableCutStatusComment");
					this.OnUnableCutStatusCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnableEstablishStatusComment", DbType="NVarChar(500)")]
		public string UnableEstablishStatusComment
		{
			get
			{
				return this._UnableEstablishStatusComment;
			}
			set
			{
				if ((this._UnableEstablishStatusComment != value))
				{
					this.OnUnableEstablishStatusCommentChanging(value);
					this.SendPropertyChanging();
					this._UnableEstablishStatusComment = value;
					this.SendPropertyChanged("UnableEstablishStatusComment");
					this.OnUnableEstablishStatusCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtAbonman", DbType="BigInt")]
		public System.Nullable<long> DebtAbonman
		{
			get
			{
				return this._DebtAbonman;
			}
			set
			{
				if ((this._DebtAbonman != value))
				{
					this.OnDebtAbonmanChanging(value);
					this.SendPropertyChanging();
					this._DebtAbonman = value;
					this.SendPropertyChanged("DebtAbonman");
					this.OnDebtAbonmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtADeposit", DbType="BigInt")]
		public System.Nullable<long> DebtADeposit
		{
			get
			{
				return this._DebtADeposit;
			}
			set
			{
				if ((this._DebtADeposit != value))
				{
					this.OnDebtADepositChanging(value);
					this.SendPropertyChanging();
					this._DebtADeposit = value;
					this.SendPropertyChanged("DebtADeposit");
					this.OnDebtADepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="NVarChar(500)")]
		public string Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this.OnCounterChanging(value);
					this.SendPropertyChanging();
					this._Counter = value;
					this.SendPropertyChanged("Counter");
					this.OnCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringIllegal", DbType="NVarChar(MAX)")]
		public string WiringIllegal
		{
			get
			{
				return this._WiringIllegal;
			}
			set
			{
				if ((this._WiringIllegal != value))
				{
					this.OnWiringIllegalChanging(value);
					this.SendPropertyChanging();
					this._WiringIllegal = value;
					this.SendPropertyChanged("WiringIllegal");
					this.OnWiringIllegalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vacate", DbType="Bit")]
		public System.Nullable<bool> Vacate
		{
			get
			{
				return this._Vacate;
			}
			set
			{
				if ((this._Vacate != value))
				{
					this.OnVacateChanging(value);
					this.SendPropertyChanging();
					this._Vacate = value;
					this.SendPropertyChanged("Vacate");
					this.OnVacateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfCut_CutAndEstablish", Storage="_CauseOfCut", ThisKey="CutType", OtherKey="ID", IsForeignKey=true)]
		public CauseOfCut CauseOfCut
		{
			get
			{
				return this._CauseOfCut.Entity;
			}
			set
			{
				CauseOfCut previousValue = this._CauseOfCut.Entity;
				if (((previousValue != value) 
							|| (this._CauseOfCut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauseOfCut.Entity = null;
						previousValue.CutAndEstablishes.Remove(this);
					}
					this._CauseOfCut.Entity = value;
					if ((value != null))
					{
						value.CutAndEstablishes.Add(this);
						this._CutType = value.ID;
					}
					else
					{
						this._CutType = default(Nullable<int>);
					}
					this.SendPropertyChanged("CauseOfCut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CutAndEstablish", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.CutAndEstablish = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.CutAndEstablish = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cycle")]
	public partial class Cycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CycleYear;
		
		private string _CycleName;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private EntitySet<ChangeName> _ChangeNames;
		
		private EntitySet<Counter> _Counters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCycleYearChanging(string value);
    partial void OnCycleYearChanged();
    partial void OnCycleNameChanging(string value);
    partial void OnCycleNameChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    #endregion
		
		public Cycle()
		{
			this._ChangeNames = new EntitySet<ChangeName>(new Action<ChangeName>(this.attach_ChangeNames), new Action<ChangeName>(this.detach_ChangeNames));
			this._Counters = new EntitySet<Counter>(new Action<Counter>(this.attach_Counters), new Action<Counter>(this.detach_Counters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleYear", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CycleYear
		{
			get
			{
				return this._CycleYear;
			}
			set
			{
				if ((this._CycleYear != value))
				{
					this.OnCycleYearChanging(value);
					this.SendPropertyChanging();
					this._CycleYear = value;
					this.SendPropertyChanged("CycleYear");
					this.OnCycleYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleName", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CycleName
		{
			get
			{
				return this._CycleName;
			}
			set
			{
				if ((this._CycleName != value))
				{
					this.OnCycleNameChanging(value);
					this.SendPropertyChanging();
					this._CycleName = value;
					this.SendPropertyChanged("CycleName");
					this.OnCycleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cycle_ChangeName", Storage="_ChangeNames", ThisKey="ID", OtherKey="LastCyleID")]
		public EntitySet<ChangeName> ChangeNames
		{
			get
			{
				return this._ChangeNames;
			}
			set
			{
				this._ChangeNames.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cycle_Counter", Storage="_Counters", ThisKey="ID", OtherKey="CycleID")]
		public EntitySet<Counter> Counters
		{
			get
			{
				return this._Counters;
			}
			set
			{
				this._Counters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangeNames(ChangeName entity)
		{
			this.SendPropertyChanging();
			entity.Cycle = this;
		}
		
		private void detach_ChangeNames(ChangeName entity)
		{
			this.SendPropertyChanging();
			entity.Cycle = null;
		}
		
		private void attach_Counters(Counter entity)
		{
			this.SendPropertyChanging();
			entity.Cycle = this;
		}
		
		private void detach_Counters(Counter entity)
		{
			this.SendPropertyChanging();
			entity.Cycle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DamageLine")]
	public partial class DamageLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _WiringRequestID;
		
		private System.Nullable<byte> _ISWiringCanceled;
		
		private byte _LineType;
		
		private System.Nullable<long> _BuchtID;
		
		private System.Nullable<long> _PostContactID;
		
		private System.Nullable<long> _CablePairStausID;
		
		private System.Nullable<long> _PostID;
		
		private System.Nullable<long> _CabinetID;
		
		private System.Nullable<long> _NewBuchtID;
		
		private System.Nullable<long> _NewPostContactID;
		
		private System.Nullable<long> _NewCablePairStausID;
		
		private System.Nullable<long> _NewPostID;
		
		private System.Nullable<long> _NewCabinetID;
		
		private System.Nullable<byte> _OldStatus;
		
		private System.Nullable<byte> _NewStatus;
		
		private string _Comment;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWiringRequestIDChanging(System.Nullable<long> value);
    partial void OnWiringRequestIDChanged();
    partial void OnISWiringCanceledChanging(System.Nullable<byte> value);
    partial void OnISWiringCanceledChanged();
    partial void OnLineTypeChanging(byte value);
    partial void OnLineTypeChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    partial void OnCablePairStausIDChanging(System.Nullable<long> value);
    partial void OnCablePairStausIDChanged();
    partial void OnPostIDChanging(System.Nullable<long> value);
    partial void OnPostIDChanged();
    partial void OnCabinetIDChanging(System.Nullable<long> value);
    partial void OnCabinetIDChanged();
    partial void OnNewBuchtIDChanging(System.Nullable<long> value);
    partial void OnNewBuchtIDChanged();
    partial void OnNewPostContactIDChanging(System.Nullable<long> value);
    partial void OnNewPostContactIDChanged();
    partial void OnNewCablePairStausIDChanging(System.Nullable<long> value);
    partial void OnNewCablePairStausIDChanged();
    partial void OnNewPostIDChanging(System.Nullable<long> value);
    partial void OnNewPostIDChanged();
    partial void OnNewCabinetIDChanging(System.Nullable<long> value);
    partial void OnNewCabinetIDChanged();
    partial void OnOldStatusChanging(System.Nullable<byte> value);
    partial void OnOldStatusChanged();
    partial void OnNewStatusChanging(System.Nullable<byte> value);
    partial void OnNewStatusChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public DamageLine()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringRequestID", DbType="BigInt")]
		public System.Nullable<long> WiringRequestID
		{
			get
			{
				return this._WiringRequestID;
			}
			set
			{
				if ((this._WiringRequestID != value))
				{
					this.OnWiringRequestIDChanging(value);
					this.SendPropertyChanging();
					this._WiringRequestID = value;
					this.SendPropertyChanged("WiringRequestID");
					this.OnWiringRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISWiringCanceled", DbType="TinyInt")]
		public System.Nullable<byte> ISWiringCanceled
		{
			get
			{
				return this._ISWiringCanceled;
			}
			set
			{
				if ((this._ISWiringCanceled != value))
				{
					this.OnISWiringCanceledChanging(value);
					this.SendPropertyChanging();
					this._ISWiringCanceled = value;
					this.SendPropertyChanged("ISWiringCanceled");
					this.OnISWiringCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineType", DbType="TinyInt NOT NULL")]
		public byte LineType
		{
			get
			{
				return this._LineType;
			}
			set
			{
				if ((this._LineType != value))
				{
					this.OnLineTypeChanging(value);
					this.SendPropertyChanging();
					this._LineType = value;
					this.SendPropertyChanged("LineType");
					this.OnLineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CablePairStausID", DbType="BigInt")]
		public System.Nullable<long> CablePairStausID
		{
			get
			{
				return this._CablePairStausID;
			}
			set
			{
				if ((this._CablePairStausID != value))
				{
					this.OnCablePairStausIDChanging(value);
					this.SendPropertyChanging();
					this._CablePairStausID = value;
					this.SendPropertyChanged("CablePairStausID");
					this.OnCablePairStausIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="BigInt")]
		public System.Nullable<long> PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="BigInt")]
		public System.Nullable<long> CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewBuchtID", DbType="BigInt")]
		public System.Nullable<long> NewBuchtID
		{
			get
			{
				return this._NewBuchtID;
			}
			set
			{
				if ((this._NewBuchtID != value))
				{
					this.OnNewBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._NewBuchtID = value;
					this.SendPropertyChanged("NewBuchtID");
					this.OnNewBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostContactID", DbType="BigInt")]
		public System.Nullable<long> NewPostContactID
		{
			get
			{
				return this._NewPostContactID;
			}
			set
			{
				if ((this._NewPostContactID != value))
				{
					this.OnNewPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._NewPostContactID = value;
					this.SendPropertyChanged("NewPostContactID");
					this.OnNewPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCablePairStausID", DbType="BigInt")]
		public System.Nullable<long> NewCablePairStausID
		{
			get
			{
				return this._NewCablePairStausID;
			}
			set
			{
				if ((this._NewCablePairStausID != value))
				{
					this.OnNewCablePairStausIDChanging(value);
					this.SendPropertyChanging();
					this._NewCablePairStausID = value;
					this.SendPropertyChanged("NewCablePairStausID");
					this.OnNewCablePairStausIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostID", DbType="BigInt")]
		public System.Nullable<long> NewPostID
		{
			get
			{
				return this._NewPostID;
			}
			set
			{
				if ((this._NewPostID != value))
				{
					this.OnNewPostIDChanging(value);
					this.SendPropertyChanging();
					this._NewPostID = value;
					this.SendPropertyChanged("NewPostID");
					this.OnNewPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetID", DbType="BigInt")]
		public System.Nullable<long> NewCabinetID
		{
			get
			{
				return this._NewCabinetID;
			}
			set
			{
				if ((this._NewCabinetID != value))
				{
					this.OnNewCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._NewCabinetID = value;
					this.SendPropertyChanged("NewCabinetID");
					this.OnNewCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStatus", DbType="TinyInt")]
		public System.Nullable<byte> OldStatus
		{
			get
			{
				return this._OldStatus;
			}
			set
			{
				if ((this._OldStatus != value))
				{
					this.OnOldStatusChanging(value);
					this.SendPropertyChanging();
					this._OldStatus = value;
					this.SendPropertyChanged("OldStatus");
					this.OnOldStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewStatus", DbType="TinyInt")]
		public System.Nullable<byte> NewStatus
		{
			get
			{
				return this._NewStatus;
			}
			set
			{
				if ((this._NewStatus != value))
				{
					this.OnNewStatusChanging(value);
					this.SendPropertyChanging();
					this._NewStatus = value;
					this.SendPropertyChanged("NewStatus");
					this.OnNewStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_DamageLine", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.DamageLine = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.DamageLine = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataChangesLog")]
	public partial class DataChangesLog
	{
		
		private System.Xml.Linq.XElement _Extension;
		
		private string _TableName;
		
		private long _TableID;
		
		private System.DateTime _InsertDate;
		
		public DataChangesLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableID", DbType="BigInt NOT NULL")]
		public long TableID
		{
			get
			{
				return this._TableID;
			}
			set
			{
				if ((this._TableID != value))
				{
					this._TableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataGridColumnConfig")]
	public partial class DataGridColumnConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _UserID;
		
		private string _FormName;
		
		private string _DataGridName;
		
		private System.Xml.Linq.XElement _SelectedColumns;
		
		private System.Xml.Linq.XElement _DisplayIndexColumns;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnDataGridNameChanging(string value);
    partial void OnDataGridNameChanged();
    partial void OnSelectedColumnsChanging(System.Xml.Linq.XElement value);
    partial void OnSelectedColumnsChanged();
    partial void OnDisplayIndexColumnsChanging(System.Xml.Linq.XElement value);
    partial void OnDisplayIndexColumnsChanged();
    #endregion
		
		public DataGridColumnConfig()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="NVarChar(50)")]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataGridName", DbType="NVarChar(50)")]
		public string DataGridName
		{
			get
			{
				return this._DataGridName;
			}
			set
			{
				if ((this._DataGridName != value))
				{
					this.OnDataGridNameChanging(value);
					this.SendPropertyChanging();
					this._DataGridName = value;
					this.SendPropertyChanged("DataGridName");
					this.OnDataGridNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedColumns", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement SelectedColumns
		{
			get
			{
				return this._SelectedColumns;
			}
			set
			{
				if ((this._SelectedColumns != value))
				{
					this.OnSelectedColumnsChanging(value);
					this.SendPropertyChanging();
					this._SelectedColumns = value;
					this.SendPropertyChanged("SelectedColumns");
					this.OnSelectedColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndexColumns", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement DisplayIndexColumns
		{
			get
			{
				return this._DisplayIndexColumns;
			}
			set
			{
				if ((this._DisplayIndexColumns != value))
				{
					this.OnDisplayIndexColumnsChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndexColumns = value;
					this.SendPropertyChanged("DisplayIndexColumns");
					this.OnDisplayIndexColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DataGridColumnConfig", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DataGridColumnConfigs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DataGridColumnConfigs.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentRequestType")]
	public partial class DocumentRequestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _AnnounceID;
		
		private int _DocumentTypeID;
		
		private int _RequestTypeID;
		
		private byte _NeedForCustomerType;
		
		private System.Nullable<byte> _TelephoneType;
		
		private System.Nullable<byte> _OrderType;
		
		private System.Nullable<byte> _TelephonePosessionType;
		
		private System.Nullable<byte> _ChargingType;
		
		private bool _IsForcible;
		
		private System.DateTime _InsertDate;
		
		private byte _Status;
		
		private EntitySet<RequestDocument> _RequestDocuments;
		
		private EntityRef<Announce> _Announce;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<RequestType> _RequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAnnounceIDChanging(System.Nullable<int> value);
    partial void OnAnnounceIDChanged();
    partial void OnDocumentTypeIDChanging(int value);
    partial void OnDocumentTypeIDChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnNeedForCustomerTypeChanging(byte value);
    partial void OnNeedForCustomerTypeChanged();
    partial void OnTelephoneTypeChanging(System.Nullable<byte> value);
    partial void OnTelephoneTypeChanged();
    partial void OnOrderTypeChanging(System.Nullable<byte> value);
    partial void OnOrderTypeChanged();
    partial void OnTelephonePosessionTypeChanging(System.Nullable<byte> value);
    partial void OnTelephonePosessionTypeChanged();
    partial void OnChargingTypeChanging(System.Nullable<byte> value);
    partial void OnChargingTypeChanged();
    partial void OnIsForcibleChanging(bool value);
    partial void OnIsForcibleChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public DocumentRequestType()
		{
			this._RequestDocuments = new EntitySet<RequestDocument>(new Action<RequestDocument>(this.attach_RequestDocuments), new Action<RequestDocument>(this.detach_RequestDocuments));
			this._Announce = default(EntityRef<Announce>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._RequestType = default(EntityRef<RequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceID", DbType="Int")]
		public System.Nullable<int> AnnounceID
		{
			get
			{
				return this._AnnounceID;
			}
			set
			{
				if ((this._AnnounceID != value))
				{
					if (this._Announce.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnnounceIDChanging(value);
					this.SendPropertyChanging();
					this._AnnounceID = value;
					this.SendPropertyChanged("AnnounceID");
					this.OnAnnounceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int NOT NULL")]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedForCustomerType", DbType="TinyInt NOT NULL")]
		public byte NeedForCustomerType
		{
			get
			{
				return this._NeedForCustomerType;
			}
			set
			{
				if ((this._NeedForCustomerType != value))
				{
					this.OnNeedForCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._NeedForCustomerType = value;
					this.SendPropertyChanged("NeedForCustomerType");
					this.OnNeedForCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="TinyInt")]
		public System.Nullable<byte> TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					this.OnTelephoneTypeChanging(value);
					this.SendPropertyChanging();
					this._TelephoneType = value;
					this.SendPropertyChanged("TelephoneType");
					this.OnTelephoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="TinyInt")]
		public System.Nullable<byte> OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephonePosessionType", DbType="TinyInt")]
		public System.Nullable<byte> TelephonePosessionType
		{
			get
			{
				return this._TelephonePosessionType;
			}
			set
			{
				if ((this._TelephonePosessionType != value))
				{
					this.OnTelephonePosessionTypeChanging(value);
					this.SendPropertyChanging();
					this._TelephonePosessionType = value;
					this.SendPropertyChanged("TelephonePosessionType");
					this.OnTelephonePosessionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargingType", DbType="TinyInt")]
		public System.Nullable<byte> ChargingType
		{
			get
			{
				return this._ChargingType;
			}
			set
			{
				if ((this._ChargingType != value))
				{
					this.OnChargingTypeChanging(value);
					this.SendPropertyChanging();
					this._ChargingType = value;
					this.SendPropertyChanged("ChargingType");
					this.OnChargingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForcible", DbType="Bit NOT NULL")]
		public bool IsForcible
		{
			get
			{
				return this._IsForcible;
			}
			set
			{
				if ((this._IsForcible != value))
				{
					this.OnIsForcibleChanging(value);
					this.SendPropertyChanging();
					this._IsForcible = value;
					this.SendPropertyChanged("IsForcible");
					this.OnIsForcibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentRequestType_RequestDocument", Storage="_RequestDocuments", ThisKey="ID", OtherKey="DocumentRequestTypeID")]
		public EntitySet<RequestDocument> RequestDocuments
		{
			get
			{
				return this._RequestDocuments;
			}
			set
			{
				this._RequestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Announce_DocumentRequestType", Storage="_Announce", ThisKey="AnnounceID", OtherKey="ID", IsForeignKey=true)]
		public Announce Announce
		{
			get
			{
				return this._Announce.Entity;
			}
			set
			{
				Announce previousValue = this._Announce.Entity;
				if (((previousValue != value) 
							|| (this._Announce.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Announce.Entity = null;
						previousValue.DocumentRequestTypes.Remove(this);
					}
					this._Announce.Entity = value;
					if ((value != null))
					{
						value.DocumentRequestTypes.Add(this);
						this._AnnounceID = value.ID;
					}
					else
					{
						this._AnnounceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Announce");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentRequestType", Storage="_DocumentType", ThisKey="DocumentTypeID", OtherKey="ID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.DocumentRequestTypes.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.DocumentRequestTypes.Add(this);
						this._DocumentTypeID = value.ID;
					}
					else
					{
						this._DocumentTypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_DocumentRequestType", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.DocumentRequestTypes.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.DocumentRequestTypes.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(int);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestDocuments(RequestDocument entity)
		{
			this.SendPropertyChanging();
			entity.DocumentRequestType = this;
		}
		
		private void detach_RequestDocuments(RequestDocument entity)
		{
			this.SendPropertyChanging();
			entity.DocumentRequestType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentsFiletemp")]
	public partial class DocumentsFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _stream_id;
		
		private System.Data.Linq.Binary _file_stream;
		
		private string _name;
		
		private string _file_type;
		
		private System.Nullable<long> _cached_file_size;
		
		private System.DateTimeOffset _creation_time;
		
		private System.DateTimeOffset _last_write_time;
		
		private System.Nullable<System.DateTimeOffset> _last_access_time;
		
		private bool _is_directory;
		
		private bool _is_offline;
		
		private bool _is_hidden;
		
		private bool _is_readonly;
		
		private bool _is_archive;
		
		private bool _is_system;
		
		private bool _is_temporary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstream_idChanging(System.Guid value);
    partial void Onstream_idChanged();
    partial void Onfile_streamChanging(System.Data.Linq.Binary value);
    partial void Onfile_streamChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onfile_typeChanging(string value);
    partial void Onfile_typeChanged();
    partial void Oncached_file_sizeChanging(System.Nullable<long> value);
    partial void Oncached_file_sizeChanged();
    partial void Oncreation_timeChanging(System.DateTimeOffset value);
    partial void Oncreation_timeChanged();
    partial void Onlast_write_timeChanging(System.DateTimeOffset value);
    partial void Onlast_write_timeChanged();
    partial void Onlast_access_timeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void Onlast_access_timeChanged();
    partial void Onis_directoryChanging(bool value);
    partial void Onis_directoryChanged();
    partial void Onis_offlineChanging(bool value);
    partial void Onis_offlineChanged();
    partial void Onis_hiddenChanging(bool value);
    partial void Onis_hiddenChanged();
    partial void Onis_readonlyChanging(bool value);
    partial void Onis_readonlyChanged();
    partial void Onis_archiveChanging(bool value);
    partial void Onis_archiveChanged();
    partial void Onis_systemChanging(bool value);
    partial void Onis_systemChanged();
    partial void Onis_temporaryChanging(bool value);
    partial void Onis_temporaryChanged();
    #endregion
		
		public DocumentsFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stream_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid stream_id
		{
			get
			{
				return this._stream_id;
			}
			set
			{
				if ((this._stream_id != value))
				{
					this.Onstream_idChanging(value);
					this.SendPropertyChanging();
					this._stream_id = value;
					this.SendPropertyChanged("stream_id");
					this.Onstream_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_stream", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary file_stream
		{
			get
			{
				return this._file_stream;
			}
			set
			{
				if ((this._file_stream != value))
				{
					this.Onfile_streamChanging(value);
					this.SendPropertyChanging();
					this._file_stream = value;
					this.SendPropertyChanged("file_stream");
					this.Onfile_streamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string file_type
		{
			get
			{
				return this._file_type;
			}
			set
			{
				if ((this._file_type != value))
				{
					this.Onfile_typeChanging(value);
					this.SendPropertyChanging();
					this._file_type = value;
					this.SendPropertyChanged("file_type");
					this.Onfile_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cached_file_size", DbType="BigInt")]
		public System.Nullable<long> cached_file_size
		{
			get
			{
				return this._cached_file_size;
			}
			set
			{
				if ((this._cached_file_size != value))
				{
					this.Oncached_file_sizeChanging(value);
					this.SendPropertyChanging();
					this._cached_file_size = value;
					this.SendPropertyChanged("cached_file_size");
					this.Oncached_file_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation_time", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset creation_time
		{
			get
			{
				return this._creation_time;
			}
			set
			{
				if ((this._creation_time != value))
				{
					this.Oncreation_timeChanging(value);
					this.SendPropertyChanging();
					this._creation_time = value;
					this.SendPropertyChanged("creation_time");
					this.Oncreation_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_write_time", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset last_write_time
		{
			get
			{
				return this._last_write_time;
			}
			set
			{
				if ((this._last_write_time != value))
				{
					this.Onlast_write_timeChanging(value);
					this.SendPropertyChanging();
					this._last_write_time = value;
					this.SendPropertyChanged("last_write_time");
					this.Onlast_write_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_access_time", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> last_access_time
		{
			get
			{
				return this._last_access_time;
			}
			set
			{
				if ((this._last_access_time != value))
				{
					this.Onlast_access_timeChanging(value);
					this.SendPropertyChanging();
					this._last_access_time = value;
					this.SendPropertyChanged("last_access_time");
					this.Onlast_access_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_directory", DbType="Bit NOT NULL")]
		public bool is_directory
		{
			get
			{
				return this._is_directory;
			}
			set
			{
				if ((this._is_directory != value))
				{
					this.Onis_directoryChanging(value);
					this.SendPropertyChanging();
					this._is_directory = value;
					this.SendPropertyChanged("is_directory");
					this.Onis_directoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_offline", DbType="Bit NOT NULL")]
		public bool is_offline
		{
			get
			{
				return this._is_offline;
			}
			set
			{
				if ((this._is_offline != value))
				{
					this.Onis_offlineChanging(value);
					this.SendPropertyChanging();
					this._is_offline = value;
					this.SendPropertyChanged("is_offline");
					this.Onis_offlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_hidden", DbType="Bit NOT NULL")]
		public bool is_hidden
		{
			get
			{
				return this._is_hidden;
			}
			set
			{
				if ((this._is_hidden != value))
				{
					this.Onis_hiddenChanging(value);
					this.SendPropertyChanging();
					this._is_hidden = value;
					this.SendPropertyChanged("is_hidden");
					this.Onis_hiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_readonly", DbType="Bit NOT NULL")]
		public bool is_readonly
		{
			get
			{
				return this._is_readonly;
			}
			set
			{
				if ((this._is_readonly != value))
				{
					this.Onis_readonlyChanging(value);
					this.SendPropertyChanging();
					this._is_readonly = value;
					this.SendPropertyChanged("is_readonly");
					this.Onis_readonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_archive", DbType="Bit NOT NULL")]
		public bool is_archive
		{
			get
			{
				return this._is_archive;
			}
			set
			{
				if ((this._is_archive != value))
				{
					this.Onis_archiveChanging(value);
					this.SendPropertyChanging();
					this._is_archive = value;
					this.SendPropertyChanged("is_archive");
					this.Onis_archiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_system", DbType="Bit NOT NULL")]
		public bool is_system
		{
			get
			{
				return this._is_system;
			}
			set
			{
				if ((this._is_system != value))
				{
					this.Onis_systemChanging(value);
					this.SendPropertyChanging();
					this._is_system = value;
					this.SendPropertyChanged("is_system");
					this.Onis_systemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_temporary", DbType="Bit NOT NULL")]
		public bool is_temporary
		{
			get
			{
				return this._is_temporary;
			}
			set
			{
				if ((this._is_temporary != value))
				{
					this.Onis_temporaryChanging(value);
					this.SendPropertyChanging();
					this._is_temporary = value;
					this.SendPropertyChanged("is_temporary");
					this.Onis_temporaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentType")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private byte _TypeID;
		
		private string _DocumentName;
		
		private bool _ExistOnce;
		
		private System.Nullable<bool> _IsRelatedToRoundContract;
		
		private System.Nullable<bool> _IsRelatedTo3PercentQuota;
		
		private EntitySet<DocumentRequestType> _DocumentRequestTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeIDChanging(byte value);
    partial void OnTypeIDChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnExistOnceChanging(bool value);
    partial void OnExistOnceChanged();
    partial void OnIsRelatedToRoundContractChanging(System.Nullable<bool> value);
    partial void OnIsRelatedToRoundContractChanged();
    partial void OnIsRelatedTo3PercentQuotaChanging(System.Nullable<bool> value);
    partial void OnIsRelatedTo3PercentQuotaChanged();
    #endregion
		
		public DocumentType()
		{
			this._DocumentRequestTypes = new EntitySet<DocumentRequestType>(new Action<DocumentRequestType>(this.attach_DocumentRequestTypes), new Action<DocumentRequestType>(this.detach_DocumentRequestTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="TinyInt NOT NULL")]
		public byte TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistOnce", DbType="Bit NOT NULL")]
		public bool ExistOnce
		{
			get
			{
				return this._ExistOnce;
			}
			set
			{
				if ((this._ExistOnce != value))
				{
					this.OnExistOnceChanging(value);
					this.SendPropertyChanging();
					this._ExistOnce = value;
					this.SendPropertyChanged("ExistOnce");
					this.OnExistOnceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedToRoundContract", DbType="Bit")]
		public System.Nullable<bool> IsRelatedToRoundContract
		{
			get
			{
				return this._IsRelatedToRoundContract;
			}
			set
			{
				if ((this._IsRelatedToRoundContract != value))
				{
					this.OnIsRelatedToRoundContractChanging(value);
					this.SendPropertyChanging();
					this._IsRelatedToRoundContract = value;
					this.SendPropertyChanged("IsRelatedToRoundContract");
					this.OnIsRelatedToRoundContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedTo3PercentQuota", DbType="Bit")]
		public System.Nullable<bool> IsRelatedTo3PercentQuota
		{
			get
			{
				return this._IsRelatedTo3PercentQuota;
			}
			set
			{
				if ((this._IsRelatedTo3PercentQuota != value))
				{
					this.OnIsRelatedTo3PercentQuotaChanging(value);
					this.SendPropertyChanging();
					this._IsRelatedTo3PercentQuota = value;
					this.SendPropertyChanged("IsRelatedTo3PercentQuota");
					this.OnIsRelatedTo3PercentQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentRequestType", Storage="_DocumentRequestTypes", ThisKey="ID", OtherKey="DocumentTypeID")]
		public EntitySet<DocumentRequestType> DocumentRequestTypes
		{
			get
			{
				return this._DocumentRequestTypes;
			}
			set
			{
				this._DocumentRequestTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentRequestTypes(DocumentRequestType entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_DocumentRequestTypes(DocumentRequestType entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1")]
	public partial class E1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private System.Nullable<int> _LinkTypeID;
		
		private System.Nullable<int> _CodeTypeID;
		
		private System.Nullable<int> _TelephoneType;
		
		private System.Nullable<int> _TelephoneTypeGroup;
		
		private System.Nullable<int> _ChanalType;
		
		private string _CompanyCode;
		
		private string _ConnectionNo;
		
		private System.Nullable<int> _NumberOfLine;
		
		private System.Nullable<int> _SwitchID;
		
		private System.Nullable<int> _SwitchPrecodeID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _TechnicalSupportDepartmentDescription;
		
		private System.Nullable<int> _ModemTypeID;
		
		private System.Nullable<long> _ConnectionID;
		
		private System.Nullable<long> _BuchtID;
		
		private string _DDFAcessAdress;
		
		private string _MDFPortAddressOfE1;
		
		private string _DDFConnectingSwitch;
		
		private string _DDFConnectingInterface;
		
		private string _DDFMacrowaveAdress;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private System.Nullable<byte> _E1Type;
		
		private string _TargetDDF;
		
		private string _DesignDirectorDescription;
		
		private string _TransferDepartmentDescription;
		
		private string _PowerDescription;
		
		private string _InstallingDepartmentDescription;
		
		private string _MonitoringDepartmentDescription;
		
		private System.Nullable<long> _TargetInstallAddressID;
		
		private System.Nullable<System.DateTime> _ExploitationDate;
		
		private System.Nullable<byte> _LineType;
		
		private EntitySet<E1Link> _E1Links;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Address> _Address2;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<E1CodeType> _E1CodeType;
		
		private EntityRef<E1LinkType> _E1LinkType;
		
		private EntityRef<E1Modem> _E1Modem;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Switch> _Switch;
		
		private EntityRef<SwitchPrecode> _SwitchPrecode;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnLinkTypeIDChanging(System.Nullable<int> value);
    partial void OnLinkTypeIDChanged();
    partial void OnCodeTypeIDChanging(System.Nullable<int> value);
    partial void OnCodeTypeIDChanged();
    partial void OnTelephoneTypeChanging(System.Nullable<int> value);
    partial void OnTelephoneTypeChanged();
    partial void OnTelephoneTypeGroupChanging(System.Nullable<int> value);
    partial void OnTelephoneTypeGroupChanged();
    partial void OnChanalTypeChanging(System.Nullable<int> value);
    partial void OnChanalTypeChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnConnectionNoChanging(string value);
    partial void OnConnectionNoChanged();
    partial void OnNumberOfLineChanging(System.Nullable<int> value);
    partial void OnNumberOfLineChanged();
    partial void OnSwitchIDChanging(System.Nullable<int> value);
    partial void OnSwitchIDChanged();
    partial void OnSwitchPrecodeIDChanging(System.Nullable<int> value);
    partial void OnSwitchPrecodeIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnTechnicalSupportDepartmentDescriptionChanging(string value);
    partial void OnTechnicalSupportDepartmentDescriptionChanged();
    partial void OnModemTypeIDChanging(System.Nullable<int> value);
    partial void OnModemTypeIDChanged();
    partial void OnConnectionIDChanging(System.Nullable<long> value);
    partial void OnConnectionIDChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnDDFAcessAdressChanging(string value);
    partial void OnDDFAcessAdressChanged();
    partial void OnMDFPortAddressOfE1Changing(string value);
    partial void OnMDFPortAddressOfE1Changed();
    partial void OnDDFConnectingSwitchChanging(string value);
    partial void OnDDFConnectingSwitchChanged();
    partial void OnDDFConnectingInterfaceChanging(string value);
    partial void OnDDFConnectingInterfaceChanged();
    partial void OnDDFMacrowaveAdressChanging(string value);
    partial void OnDDFMacrowaveAdressChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnE1TypeChanging(System.Nullable<byte> value);
    partial void OnE1TypeChanged();
    partial void OnTargetDDFChanging(string value);
    partial void OnTargetDDFChanged();
    partial void OnDesignDirectorDescriptionChanging(string value);
    partial void OnDesignDirectorDescriptionChanged();
    partial void OnTransferDepartmentDescriptionChanging(string value);
    partial void OnTransferDepartmentDescriptionChanged();
    partial void OnPowerDescriptionChanging(string value);
    partial void OnPowerDescriptionChanged();
    partial void OnInstallingDepartmentDescriptionChanging(string value);
    partial void OnInstallingDepartmentDescriptionChanged();
    partial void OnMonitoringDepartmentDescriptionChanging(string value);
    partial void OnMonitoringDepartmentDescriptionChanged();
    partial void OnTargetInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnTargetInstallAddressIDChanged();
    partial void OnExploitationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExploitationDateChanged();
    partial void OnLineTypeChanging(System.Nullable<byte> value);
    partial void OnLineTypeChanged();
    #endregion
		
		public E1()
		{
			this._E1Links = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links), new Action<E1Link>(this.detach_E1Links));
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Address2 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._E1CodeType = default(EntityRef<E1CodeType>);
			this._E1LinkType = default(EntityRef<E1LinkType>);
			this._E1Modem = default(EntityRef<E1Modem>);
			this._PostContact = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			this._Switch = default(EntityRef<Switch>);
			this._SwitchPrecode = default(EntityRef<SwitchPrecode>);
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTypeID", DbType="Int")]
		public System.Nullable<int> LinkTypeID
		{
			get
			{
				return this._LinkTypeID;
			}
			set
			{
				if ((this._LinkTypeID != value))
				{
					if (this._E1LinkType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LinkTypeID = value;
					this.SendPropertyChanged("LinkTypeID");
					this.OnLinkTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTypeID", DbType="Int")]
		public System.Nullable<int> CodeTypeID
		{
			get
			{
				return this._CodeTypeID;
			}
			set
			{
				if ((this._CodeTypeID != value))
				{
					if (this._E1CodeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CodeTypeID = value;
					this.SendPropertyChanged("CodeTypeID");
					this.OnCodeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="Int")]
		public System.Nullable<int> TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					this.OnTelephoneTypeChanging(value);
					this.SendPropertyChanging();
					this._TelephoneType = value;
					this.SendPropertyChanged("TelephoneType");
					this.OnTelephoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneTypeGroup", DbType="Int")]
		public System.Nullable<int> TelephoneTypeGroup
		{
			get
			{
				return this._TelephoneTypeGroup;
			}
			set
			{
				if ((this._TelephoneTypeGroup != value))
				{
					this.OnTelephoneTypeGroupChanging(value);
					this.SendPropertyChanging();
					this._TelephoneTypeGroup = value;
					this.SendPropertyChanged("TelephoneTypeGroup");
					this.OnTelephoneTypeGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChanalType", DbType="Int")]
		public System.Nullable<int> ChanalType
		{
			get
			{
				return this._ChanalType;
			}
			set
			{
				if ((this._ChanalType != value))
				{
					this.OnChanalTypeChanging(value);
					this.SendPropertyChanging();
					this._ChanalType = value;
					this.SendPropertyChanged("ChanalType");
					this.OnChanalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionNo", DbType="NVarChar(50)")]
		public string ConnectionNo
		{
			get
			{
				return this._ConnectionNo;
			}
			set
			{
				if ((this._ConnectionNo != value))
				{
					this.OnConnectionNoChanging(value);
					this.SendPropertyChanging();
					this._ConnectionNo = value;
					this.SendPropertyChanged("ConnectionNo");
					this.OnConnectionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfLine", DbType="Int")]
		public System.Nullable<int> NumberOfLine
		{
			get
			{
				return this._NumberOfLine;
			}
			set
			{
				if ((this._NumberOfLine != value))
				{
					this.OnNumberOfLineChanging(value);
					this.SendPropertyChanging();
					this._NumberOfLine = value;
					this.SendPropertyChanged("NumberOfLine");
					this.OnNumberOfLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchID", DbType="Int")]
		public System.Nullable<int> SwitchID
		{
			get
			{
				return this._SwitchID;
			}
			set
			{
				if ((this._SwitchID != value))
				{
					if (this._Switch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchID = value;
					this.SendPropertyChanged("SwitchID");
					this.OnSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPrecodeID", DbType="Int")]
		public System.Nullable<int> SwitchPrecodeID
		{
			get
			{
				return this._SwitchPrecodeID;
			}
			set
			{
				if ((this._SwitchPrecodeID != value))
				{
					if (this._SwitchPrecode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchPrecodeIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPrecodeID = value;
					this.SendPropertyChanged("SwitchPrecodeID");
					this.OnSwitchPrecodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalSupportDepartmentDescription", DbType="NVarChar(200)")]
		public string TechnicalSupportDepartmentDescription
		{
			get
			{
				return this._TechnicalSupportDepartmentDescription;
			}
			set
			{
				if ((this._TechnicalSupportDepartmentDescription != value))
				{
					this.OnTechnicalSupportDepartmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TechnicalSupportDepartmentDescription = value;
					this.SendPropertyChanged("TechnicalSupportDepartmentDescription");
					this.OnTechnicalSupportDepartmentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemTypeID", DbType="Int")]
		public System.Nullable<int> ModemTypeID
		{
			get
			{
				return this._ModemTypeID;
			}
			set
			{
				if ((this._ModemTypeID != value))
				{
					if (this._E1Modem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ModemTypeID = value;
					this.SendPropertyChanged("ModemTypeID");
					this.OnModemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionID", DbType="BigInt")]
		public System.Nullable<long> ConnectionID
		{
			get
			{
				return this._ConnectionID;
			}
			set
			{
				if ((this._ConnectionID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConnectionIDChanging(value);
					this.SendPropertyChanging();
					this._ConnectionID = value;
					this.SendPropertyChanged("ConnectionID");
					this.OnConnectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDFAcessAdress", DbType="NVarChar(50)")]
		public string DDFAcessAdress
		{
			get
			{
				return this._DDFAcessAdress;
			}
			set
			{
				if ((this._DDFAcessAdress != value))
				{
					this.OnDDFAcessAdressChanging(value);
					this.SendPropertyChanging();
					this._DDFAcessAdress = value;
					this.SendPropertyChanged("DDFAcessAdress");
					this.OnDDFAcessAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFPortAddressOfE1", DbType="NVarChar(50)")]
		public string MDFPortAddressOfE1
		{
			get
			{
				return this._MDFPortAddressOfE1;
			}
			set
			{
				if ((this._MDFPortAddressOfE1 != value))
				{
					this.OnMDFPortAddressOfE1Changing(value);
					this.SendPropertyChanging();
					this._MDFPortAddressOfE1 = value;
					this.SendPropertyChanged("MDFPortAddressOfE1");
					this.OnMDFPortAddressOfE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDFConnectingSwitch", DbType="NVarChar(50)")]
		public string DDFConnectingSwitch
		{
			get
			{
				return this._DDFConnectingSwitch;
			}
			set
			{
				if ((this._DDFConnectingSwitch != value))
				{
					this.OnDDFConnectingSwitchChanging(value);
					this.SendPropertyChanging();
					this._DDFConnectingSwitch = value;
					this.SendPropertyChanged("DDFConnectingSwitch");
					this.OnDDFConnectingSwitchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDFConnectingInterface", DbType="NVarChar(50)")]
		public string DDFConnectingInterface
		{
			get
			{
				return this._DDFConnectingInterface;
			}
			set
			{
				if ((this._DDFConnectingInterface != value))
				{
					this.OnDDFConnectingInterfaceChanging(value);
					this.SendPropertyChanging();
					this._DDFConnectingInterface = value;
					this.SendPropertyChanged("DDFConnectingInterface");
					this.OnDDFConnectingInterfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDFMacrowaveAdress", DbType="NVarChar(50)")]
		public string DDFMacrowaveAdress
		{
			get
			{
				return this._DDFMacrowaveAdress;
			}
			set
			{
				if ((this._DDFMacrowaveAdress != value))
				{
					this.OnDDFMacrowaveAdressChanging(value);
					this.SendPropertyChanging();
					this._DDFMacrowaveAdress = value;
					this.SendPropertyChanged("DDFMacrowaveAdress");
					this.OnDDFMacrowaveAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E1Type", DbType="TinyInt")]
		public System.Nullable<byte> E1Type
		{
			get
			{
				return this._E1Type;
			}
			set
			{
				if ((this._E1Type != value))
				{
					this.OnE1TypeChanging(value);
					this.SendPropertyChanging();
					this._E1Type = value;
					this.SendPropertyChanged("E1Type");
					this.OnE1TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDDF", DbType="NVarChar(50)")]
		public string TargetDDF
		{
			get
			{
				return this._TargetDDF;
			}
			set
			{
				if ((this._TargetDDF != value))
				{
					this.OnTargetDDFChanging(value);
					this.SendPropertyChanging();
					this._TargetDDF = value;
					this.SendPropertyChanged("TargetDDF");
					this.OnTargetDDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignDirectorDescription", DbType="NVarChar(200)")]
		public string DesignDirectorDescription
		{
			get
			{
				return this._DesignDirectorDescription;
			}
			set
			{
				if ((this._DesignDirectorDescription != value))
				{
					this.OnDesignDirectorDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DesignDirectorDescription = value;
					this.SendPropertyChanged("DesignDirectorDescription");
					this.OnDesignDirectorDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDepartmentDescription", DbType="NVarChar(200)")]
		public string TransferDepartmentDescription
		{
			get
			{
				return this._TransferDepartmentDescription;
			}
			set
			{
				if ((this._TransferDepartmentDescription != value))
				{
					this.OnTransferDepartmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TransferDepartmentDescription = value;
					this.SendPropertyChanged("TransferDepartmentDescription");
					this.OnTransferDepartmentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerDescription", DbType="NVarChar(200)")]
		public string PowerDescription
		{
			get
			{
				return this._PowerDescription;
			}
			set
			{
				if ((this._PowerDescription != value))
				{
					this.OnPowerDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PowerDescription = value;
					this.SendPropertyChanged("PowerDescription");
					this.OnPowerDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallingDepartmentDescription", DbType="NVarChar(200)")]
		public string InstallingDepartmentDescription
		{
			get
			{
				return this._InstallingDepartmentDescription;
			}
			set
			{
				if ((this._InstallingDepartmentDescription != value))
				{
					this.OnInstallingDepartmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._InstallingDepartmentDescription = value;
					this.SendPropertyChanged("InstallingDepartmentDescription");
					this.OnInstallingDepartmentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitoringDepartmentDescription", DbType="NVarChar(200)")]
		public string MonitoringDepartmentDescription
		{
			get
			{
				return this._MonitoringDepartmentDescription;
			}
			set
			{
				if ((this._MonitoringDepartmentDescription != value))
				{
					this.OnMonitoringDepartmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MonitoringDepartmentDescription = value;
					this.SendPropertyChanged("MonitoringDepartmentDescription");
					this.OnMonitoringDepartmentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetInstallAddressID", DbType="BigInt")]
		public System.Nullable<long> TargetInstallAddressID
		{
			get
			{
				return this._TargetInstallAddressID;
			}
			set
			{
				if ((this._TargetInstallAddressID != value))
				{
					if (this._Address2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._TargetInstallAddressID = value;
					this.SendPropertyChanged("TargetInstallAddressID");
					this.OnTargetInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExploitationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExploitationDate
		{
			get
			{
				return this._ExploitationDate;
			}
			set
			{
				if ((this._ExploitationDate != value))
				{
					this.OnExploitationDateChanging(value);
					this.SendPropertyChanging();
					this._ExploitationDate = value;
					this.SendPropertyChanged("ExploitationDate");
					this.OnExploitationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineType", DbType="TinyInt")]
		public System.Nullable<byte> LineType
		{
			get
			{
				return this._LineType;
			}
			set
			{
				if ((this._LineType != value))
				{
					this.OnLineTypeChanging(value);
					this.SendPropertyChanging();
					this._LineType = value;
					this.SendPropertyChanged("LineType");
					this.OnLineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1_E1Link", Storage="_E1Links", ThisKey="RequestID", OtherKey="ReqeustID")]
		public EntitySet<E1Link> E1Links
		{
			get
			{
				return this._E1Links;
			}
			set
			{
				this._E1Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_E1", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_E11", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.E1s1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.E1s1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_E12", Storage="_Address2", ThisKey="TargetInstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address2
		{
			get
			{
				return this._Address2.Entity;
			}
			set
			{
				Address previousValue = this._Address2.Entity;
				if (((previousValue != value) 
							|| (this._Address2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address2.Entity = null;
						previousValue.E1s2.Remove(this);
					}
					this._Address2.Entity = value;
					if ((value != null))
					{
						value.E1s2.Add(this);
						this._TargetInstallAddressID = value.ID;
					}
					else
					{
						this._TargetInstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_E1", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1CodeType_E1", Storage="_E1CodeType", ThisKey="CodeTypeID", OtherKey="ID", IsForeignKey=true)]
		public E1CodeType E1CodeType
		{
			get
			{
				return this._E1CodeType.Entity;
			}
			set
			{
				E1CodeType previousValue = this._E1CodeType.Entity;
				if (((previousValue != value) 
							|| (this._E1CodeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1CodeType.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._E1CodeType.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._CodeTypeID = value.ID;
					}
					else
					{
						this._CodeTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("E1CodeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1LinkType_E1", Storage="_E1LinkType", ThisKey="LinkTypeID", OtherKey="ID", IsForeignKey=true)]
		public E1LinkType E1LinkType
		{
			get
			{
				return this._E1LinkType.Entity;
			}
			set
			{
				E1LinkType previousValue = this._E1LinkType.Entity;
				if (((previousValue != value) 
							|| (this._E1LinkType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1LinkType.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._E1LinkType.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._LinkTypeID = value.ID;
					}
					else
					{
						this._LinkTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("E1LinkType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Modem_E1", Storage="_E1Modem", ThisKey="ModemTypeID", OtherKey="ID", IsForeignKey=true)]
		public E1Modem E1Modem
		{
			get
			{
				return this._E1Modem.Entity;
			}
			set
			{
				E1Modem previousValue = this._E1Modem.Entity;
				if (((previousValue != value) 
							|| (this._E1Modem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Modem.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._E1Modem.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._ModemTypeID = value.ID;
					}
					else
					{
						this._ModemTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("E1Modem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_E1", Storage="_PostContact", ThisKey="ConnectionID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._ConnectionID = value.ID;
					}
					else
					{
						this._ConnectionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_E1", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.E1 = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.E1 = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_E1", Storage="_Switch", ThisKey="SwitchID", OtherKey="ID", IsForeignKey=true)]
		public Switch Switch
		{
			get
			{
				return this._Switch.Entity;
			}
			set
			{
				Switch previousValue = this._Switch.Entity;
				if (((previousValue != value) 
							|| (this._Switch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Switch.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._Switch.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._SwitchID = value.ID;
					}
					else
					{
						this._SwitchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Switch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPrecode_E1", Storage="_SwitchPrecode", ThisKey="SwitchPrecodeID", OtherKey="ID", IsForeignKey=true)]
		public SwitchPrecode SwitchPrecode
		{
			get
			{
				return this._SwitchPrecode.Entity;
			}
			set
			{
				SwitchPrecode previousValue = this._SwitchPrecode.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPrecode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPrecode.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._SwitchPrecode.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._SwitchPrecodeID = value.ID;
					}
					else
					{
						this._SwitchPrecodeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SwitchPrecode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_E1", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.E1s.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.E1s.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.E1 = this;
		}
		
		private void detach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.E1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1Bay")]
	public partial class E1Bay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DDFID;
		
		private int _Number;
		
		private EntitySet<E1Position> _E1Positions;
		
		private EntityRef<E1DDF> _E1DDF;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDDFIDChanging(int value);
    partial void OnDDFIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    #endregion
		
		public E1Bay()
		{
			this._E1Positions = new EntitySet<E1Position>(new Action<E1Position>(this.attach_E1Positions), new Action<E1Position>(this.detach_E1Positions));
			this._E1DDF = default(EntityRef<E1DDF>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDFID", DbType="Int NOT NULL")]
		public int DDFID
		{
			get
			{
				return this._DDFID;
			}
			set
			{
				if ((this._DDFID != value))
				{
					if (this._E1DDF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDFIDChanging(value);
					this.SendPropertyChanging();
					this._DDFID = value;
					this.SendPropertyChanged("DDFID");
					this.OnDDFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Bay_E1Position", Storage="_E1Positions", ThisKey="ID", OtherKey="BayID")]
		public EntitySet<E1Position> E1Positions
		{
			get
			{
				return this._E1Positions;
			}
			set
			{
				this._E1Positions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1DDF_E1Bay", Storage="_E1DDF", ThisKey="DDFID", OtherKey="ID", IsForeignKey=true)]
		public E1DDF E1DDF
		{
			get
			{
				return this._E1DDF.Entity;
			}
			set
			{
				E1DDF previousValue = this._E1DDF.Entity;
				if (((previousValue != value) 
							|| (this._E1DDF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1DDF.Entity = null;
						previousValue.E1Bays.Remove(this);
					}
					this._E1DDF.Entity = value;
					if ((value != null))
					{
						value.E1Bays.Add(this);
						this._DDFID = value.ID;
					}
					else
					{
						this._DDFID = default(int);
					}
					this.SendPropertyChanged("E1DDF");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1Positions(E1Position entity)
		{
			this.SendPropertyChanging();
			entity.E1Bay = this;
		}
		
		private void detach_E1Positions(E1Position entity)
		{
			this.SendPropertyChanging();
			entity.E1Bay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1CodeType")]
	public partial class E1CodeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<E1> _E1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public E1CodeType()
		{
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1CodeType_E1", Storage="_E1s", ThisKey="ID", OtherKey="CodeTypeID")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.E1CodeType = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.E1CodeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1DDF")]
	public partial class E1DDF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private int _Number;
		
		private byte _DDFType;
		
		private EntitySet<E1Bay> _E1Bays;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnDDFTypeChanging(byte value);
    partial void OnDDFTypeChanged();
    #endregion
		
		public E1DDF()
		{
			this._E1Bays = new EntitySet<E1Bay>(new Action<E1Bay>(this.attach_E1Bays), new Action<E1Bay>(this.detach_E1Bays));
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDFType", DbType="TinyInt NOT NULL")]
		public byte DDFType
		{
			get
			{
				return this._DDFType;
			}
			set
			{
				if ((this._DDFType != value))
				{
					this.OnDDFTypeChanging(value);
					this.SendPropertyChanging();
					this._DDFType = value;
					this.SendPropertyChanged("DDFType");
					this.OnDDFTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1DDF_E1Bay", Storage="_E1Bays", ThisKey="ID", OtherKey="DDFID")]
		public EntitySet<E1Bay> E1Bays
		{
			get
			{
				return this._E1Bays;
			}
			set
			{
				this._E1Bays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_E1DDF", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.E1DDFs.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.E1DDFs.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1Bays(E1Bay entity)
		{
			this.SendPropertyChanging();
			entity.E1DDF = this;
		}
		
		private void detach_E1Bays(E1Bay entity)
		{
			this.SendPropertyChanging();
			entity.E1DDF = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1Link")]
	public partial class E1Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ReqeustID;
		
		private System.Nullable<long> _BuchtID;
		
		private System.Nullable<int> _AcessE1NumberID;
		
		private System.Nullable<long> _AcessBuchtID;
		
		private System.Nullable<long> _OtherBuchtID;
		
		private System.Nullable<int> _SwitchE1NumberID;
		
		private System.Nullable<int> _SwitchInterfaceE1NumberID;
		
		private System.Nullable<long> _PostContactID;
		
		private int _LinkNumber;
		
		private System.Nullable<int> _ModemTypeID;
		
		private string _TechnicalSupportDepartmentDescription;
		
		private System.Nullable<System.DateTime> _MDFDate;
		
		private System.Nullable<System.DateTime> _NetworkDate;
		
		private System.Nullable<System.DateTime> _SwitchDate;
		
		private System.Nullable<System.DateTime> _TechnicalSupportDate;
		
		private System.Nullable<long> _InvestigatePossibilityID;
		
		private EntityRef<E1Link> _E1Link2;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<Bucht> _Bucht2;
		
		private EntityRef<E1> _E1;
		
		private EntityRef<E1Link> _E1Link1;
		
		private EntityRef<E1Number> _E1Number;
		
		private EntityRef<E1Number> _E1Number1;
		
		private EntityRef<E1Number> _E1Number2;
		
		private EntityRef<InvestigatePossibility> _InvestigatePossibility;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnReqeustIDChanging(long value);
    partial void OnReqeustIDChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnAcessE1NumberIDChanging(System.Nullable<int> value);
    partial void OnAcessE1NumberIDChanged();
    partial void OnAcessBuchtIDChanging(System.Nullable<long> value);
    partial void OnAcessBuchtIDChanged();
    partial void OnOtherBuchtIDChanging(System.Nullable<long> value);
    partial void OnOtherBuchtIDChanged();
    partial void OnSwitchE1NumberIDChanging(System.Nullable<int> value);
    partial void OnSwitchE1NumberIDChanged();
    partial void OnSwitchInterfaceE1NumberIDChanging(System.Nullable<int> value);
    partial void OnSwitchInterfaceE1NumberIDChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    partial void OnLinkNumberChanging(int value);
    partial void OnLinkNumberChanged();
    partial void OnModemTypeIDChanging(System.Nullable<int> value);
    partial void OnModemTypeIDChanged();
    partial void OnTechnicalSupportDepartmentDescriptionChanging(string value);
    partial void OnTechnicalSupportDepartmentDescriptionChanged();
    partial void OnMDFDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFDateChanged();
    partial void OnNetworkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkDateChanged();
    partial void OnSwitchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSwitchDateChanged();
    partial void OnTechnicalSupportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTechnicalSupportDateChanged();
    partial void OnInvestigatePossibilityIDChanging(System.Nullable<long> value);
    partial void OnInvestigatePossibilityIDChanged();
    #endregion
		
		public E1Link()
		{
			this._E1Link2 = default(EntityRef<E1Link>);
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._Bucht2 = default(EntityRef<Bucht>);
			this._E1 = default(EntityRef<E1>);
			this._E1Link1 = default(EntityRef<E1Link>);
			this._E1Number = default(EntityRef<E1Number>);
			this._E1Number1 = default(EntityRef<E1Number>);
			this._E1Number2 = default(EntityRef<E1Number>);
			this._InvestigatePossibility = default(EntityRef<InvestigatePossibility>);
			this._PostContact = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._E1Link1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqeustID", DbType="BigInt NOT NULL")]
		public long ReqeustID
		{
			get
			{
				return this._ReqeustID;
			}
			set
			{
				if ((this._ReqeustID != value))
				{
					if ((this._E1.HasLoadedOrAssignedValue || this._Request.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReqeustIDChanging(value);
					this.SendPropertyChanging();
					this._ReqeustID = value;
					this.SendPropertyChanged("ReqeustID");
					this.OnReqeustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcessE1NumberID", DbType="Int")]
		public System.Nullable<int> AcessE1NumberID
		{
			get
			{
				return this._AcessE1NumberID;
			}
			set
			{
				if ((this._AcessE1NumberID != value))
				{
					if (this._E1Number2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcessE1NumberIDChanging(value);
					this.SendPropertyChanging();
					this._AcessE1NumberID = value;
					this.SendPropertyChanged("AcessE1NumberID");
					this.OnAcessE1NumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcessBuchtID", DbType="BigInt")]
		public System.Nullable<long> AcessBuchtID
		{
			get
			{
				return this._AcessBuchtID;
			}
			set
			{
				if ((this._AcessBuchtID != value))
				{
					if (this._Bucht2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcessBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._AcessBuchtID = value;
					this.SendPropertyChanged("AcessBuchtID");
					this.OnAcessBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtID", DbType="BigInt")]
		public System.Nullable<long> OtherBuchtID
		{
			get
			{
				return this._OtherBuchtID;
			}
			set
			{
				if ((this._OtherBuchtID != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OtherBuchtID = value;
					this.SendPropertyChanged("OtherBuchtID");
					this.OnOtherBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchE1NumberID", DbType="Int")]
		public System.Nullable<int> SwitchE1NumberID
		{
			get
			{
				return this._SwitchE1NumberID;
			}
			set
			{
				if ((this._SwitchE1NumberID != value))
				{
					if (this._E1Number.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchE1NumberIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchE1NumberID = value;
					this.SendPropertyChanged("SwitchE1NumberID");
					this.OnSwitchE1NumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchInterfaceE1NumberID", DbType="Int")]
		public System.Nullable<int> SwitchInterfaceE1NumberID
		{
			get
			{
				return this._SwitchInterfaceE1NumberID;
			}
			set
			{
				if ((this._SwitchInterfaceE1NumberID != value))
				{
					if (this._E1Number1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchInterfaceE1NumberIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchInterfaceE1NumberID = value;
					this.SendPropertyChanged("SwitchInterfaceE1NumberID");
					this.OnSwitchInterfaceE1NumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkNumber", DbType="Int NOT NULL")]
		public int LinkNumber
		{
			get
			{
				return this._LinkNumber;
			}
			set
			{
				if ((this._LinkNumber != value))
				{
					this.OnLinkNumberChanging(value);
					this.SendPropertyChanging();
					this._LinkNumber = value;
					this.SendPropertyChanged("LinkNumber");
					this.OnLinkNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemTypeID", DbType="Int")]
		public System.Nullable<int> ModemTypeID
		{
			get
			{
				return this._ModemTypeID;
			}
			set
			{
				if ((this._ModemTypeID != value))
				{
					this.OnModemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ModemTypeID = value;
					this.SendPropertyChanged("ModemTypeID");
					this.OnModemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalSupportDepartmentDescription", DbType="NVarChar(MAX)")]
		public string TechnicalSupportDepartmentDescription
		{
			get
			{
				return this._TechnicalSupportDepartmentDescription;
			}
			set
			{
				if ((this._TechnicalSupportDepartmentDescription != value))
				{
					this.OnTechnicalSupportDepartmentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TechnicalSupportDepartmentDescription = value;
					this.SendPropertyChanged("TechnicalSupportDepartmentDescription");
					this.OnTechnicalSupportDepartmentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFDate
		{
			get
			{
				return this._MDFDate;
			}
			set
			{
				if ((this._MDFDate != value))
				{
					this.OnMDFDateChanging(value);
					this.SendPropertyChanging();
					this._MDFDate = value;
					this.SendPropertyChanged("MDFDate");
					this.OnMDFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkDate
		{
			get
			{
				return this._NetworkDate;
			}
			set
			{
				if ((this._NetworkDate != value))
				{
					this.OnNetworkDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkDate = value;
					this.SendPropertyChanged("NetworkDate");
					this.OnNetworkDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SwitchDate
		{
			get
			{
				return this._SwitchDate;
			}
			set
			{
				if ((this._SwitchDate != value))
				{
					this.OnSwitchDateChanging(value);
					this.SendPropertyChanging();
					this._SwitchDate = value;
					this.SendPropertyChanged("SwitchDate");
					this.OnSwitchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalSupportDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TechnicalSupportDate
		{
			get
			{
				return this._TechnicalSupportDate;
			}
			set
			{
				if ((this._TechnicalSupportDate != value))
				{
					this.OnTechnicalSupportDateChanging(value);
					this.SendPropertyChanging();
					this._TechnicalSupportDate = value;
					this.SendPropertyChanged("TechnicalSupportDate");
					this.OnTechnicalSupportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestigatePossibilityID", DbType="BigInt")]
		public System.Nullable<long> InvestigatePossibilityID
		{
			get
			{
				return this._InvestigatePossibilityID;
			}
			set
			{
				if ((this._InvestigatePossibilityID != value))
				{
					if (this._InvestigatePossibility.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvestigatePossibilityIDChanging(value);
					this.SendPropertyChanging();
					this._InvestigatePossibilityID = value;
					this.SendPropertyChanged("InvestigatePossibilityID");
					this.OnInvestigatePossibilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Link_E1Link", Storage="_E1Link2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public E1Link E1Link2
		{
			get
			{
				return this._E1Link2.Entity;
			}
			set
			{
				E1Link previousValue = this._E1Link2.Entity;
				if (((previousValue != value) 
							|| (this._E1Link2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Link2.Entity = null;
						previousValue.E1Link1 = null;
					}
					this._E1Link2.Entity = value;
					if ((value != null))
					{
						value.E1Link1 = this;
					}
					this.SendPropertyChanged("E1Link2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_E1Link", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.E1Links.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.E1Links.Add(this);
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_E1Link1", Storage="_Bucht1", ThisKey="OtherBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.E1Links1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.E1Links1.Add(this);
						this._OtherBuchtID = value.ID;
					}
					else
					{
						this._OtherBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_E1Link2", Storage="_Bucht2", ThisKey="AcessBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht2
		{
			get
			{
				return this._Bucht2.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht2.Entity;
				if (((previousValue != value) 
							|| (this._Bucht2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht2.Entity = null;
						previousValue.E1Links2.Remove(this);
					}
					this._Bucht2.Entity = value;
					if ((value != null))
					{
						value.E1Links2.Add(this);
						this._AcessBuchtID = value.ID;
					}
					else
					{
						this._AcessBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1_E1Link", Storage="_E1", ThisKey="ReqeustID", OtherKey="RequestID", IsForeignKey=true)]
		public E1 E1
		{
			get
			{
				return this._E1.Entity;
			}
			set
			{
				E1 previousValue = this._E1.Entity;
				if (((previousValue != value) 
							|| (this._E1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1.Entity = null;
						previousValue.E1Links.Remove(this);
					}
					this._E1.Entity = value;
					if ((value != null))
					{
						value.E1Links.Add(this);
						this._ReqeustID = value.RequestID;
					}
					else
					{
						this._ReqeustID = default(long);
					}
					this.SendPropertyChanged("E1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Link_E1Link", Storage="_E1Link1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public E1Link E1Link1
		{
			get
			{
				return this._E1Link1.Entity;
			}
			set
			{
				E1Link previousValue = this._E1Link1.Entity;
				if (((previousValue != value) 
							|| (this._E1Link1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Link1.Entity = null;
						previousValue.E1Link2 = null;
					}
					this._E1Link1.Entity = value;
					if ((value != null))
					{
						value.E1Link2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("E1Link1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_E1Link", Storage="_E1Number", ThisKey="SwitchE1NumberID", OtherKey="ID", IsForeignKey=true)]
		public E1Number E1Number
		{
			get
			{
				return this._E1Number.Entity;
			}
			set
			{
				E1Number previousValue = this._E1Number.Entity;
				if (((previousValue != value) 
							|| (this._E1Number.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Number.Entity = null;
						previousValue.E1Links.Remove(this);
					}
					this._E1Number.Entity = value;
					if ((value != null))
					{
						value.E1Links.Add(this);
						this._SwitchE1NumberID = value.ID;
					}
					else
					{
						this._SwitchE1NumberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("E1Number");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_E1Link1", Storage="_E1Number1", ThisKey="SwitchInterfaceE1NumberID", OtherKey="ID", IsForeignKey=true)]
		public E1Number E1Number1
		{
			get
			{
				return this._E1Number1.Entity;
			}
			set
			{
				E1Number previousValue = this._E1Number1.Entity;
				if (((previousValue != value) 
							|| (this._E1Number1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Number1.Entity = null;
						previousValue.E1Links1.Remove(this);
					}
					this._E1Number1.Entity = value;
					if ((value != null))
					{
						value.E1Links1.Add(this);
						this._SwitchInterfaceE1NumberID = value.ID;
					}
					else
					{
						this._SwitchInterfaceE1NumberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("E1Number1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_E1Link2", Storage="_E1Number2", ThisKey="AcessE1NumberID", OtherKey="ID", IsForeignKey=true)]
		public E1Number E1Number2
		{
			get
			{
				return this._E1Number2.Entity;
			}
			set
			{
				E1Number previousValue = this._E1Number2.Entity;
				if (((previousValue != value) 
							|| (this._E1Number2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Number2.Entity = null;
						previousValue.E1Links2.Remove(this);
					}
					this._E1Number2.Entity = value;
					if ((value != null))
					{
						value.E1Links2.Add(this);
						this._AcessE1NumberID = value.ID;
					}
					else
					{
						this._AcessE1NumberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("E1Number2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvestigatePossibility_E1Link", Storage="_InvestigatePossibility", ThisKey="InvestigatePossibilityID", OtherKey="ID", IsForeignKey=true)]
		public InvestigatePossibility InvestigatePossibility
		{
			get
			{
				return this._InvestigatePossibility.Entity;
			}
			set
			{
				InvestigatePossibility previousValue = this._InvestigatePossibility.Entity;
				if (((previousValue != value) 
							|| (this._InvestigatePossibility.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvestigatePossibility.Entity = null;
						previousValue.E1Links.Remove(this);
					}
					this._InvestigatePossibility.Entity = value;
					if ((value != null))
					{
						value.E1Links.Add(this);
						this._InvestigatePossibilityID = value.ID;
					}
					else
					{
						this._InvestigatePossibilityID = default(Nullable<long>);
					}
					this.SendPropertyChanged("InvestigatePossibility");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_E1Link", Storage="_PostContact", ThisKey="PostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.E1Links.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.E1Links.Add(this);
						this._PostContactID = value.ID;
					}
					else
					{
						this._PostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_E1Link", Storage="_Request", ThisKey="ReqeustID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.E1Links.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.E1Links.Add(this);
						this._ReqeustID = value.ID;
					}
					else
					{
						this._ReqeustID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1LinkType")]
	public partial class E1LinkType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<E1> _E1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public E1LinkType()
		{
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(10)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1LinkType_E1", Storage="_E1s", ThisKey="ID", OtherKey="LinkTypeID")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.E1LinkType = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.E1LinkType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1Modem")]
	public partial class E1Modem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<E1> _E1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public E1Modem()
		{
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Modem_E1", Storage="_E1s", ThisKey="ID", OtherKey="ModemTypeID")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.E1Modem = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.E1Modem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1Number")]
	public partial class E1Number : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SwitchPortID;
		
		private int _PositionID;
		
		private int _Number;
		
		private System.Nullable<int> _OtherNumberID;
		
		private byte _Status;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<E1Link> _E1Links;
		
		private EntitySet<E1Link> _E1Links1;
		
		private EntitySet<E1Link> _E1Links2;
		
		private EntitySet<E1Number> _E1Numbers;
		
		private EntityRef<E1Number> _E1Number1;
		
		private EntityRef<E1Position> _E1Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnSwitchPortIDChanged();
    partial void OnPositionIDChanging(int value);
    partial void OnPositionIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnOtherNumberIDChanging(System.Nullable<int> value);
    partial void OnOtherNumberIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public E1Number()
		{
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._E1Links = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links), new Action<E1Link>(this.detach_E1Links));
			this._E1Links1 = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links1), new Action<E1Link>(this.detach_E1Links1));
			this._E1Links2 = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links2), new Action<E1Link>(this.detach_E1Links2));
			this._E1Numbers = new EntitySet<E1Number>(new Action<E1Number>(this.attach_E1Numbers), new Action<E1Number>(this.detach_E1Numbers));
			this._E1Number1 = default(EntityRef<E1Number>);
			this._E1Position = default(EntityRef<E1Position>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPortID", DbType="Int")]
		public System.Nullable<int> SwitchPortID
		{
			get
			{
				return this._SwitchPortID;
			}
			set
			{
				if ((this._SwitchPortID != value))
				{
					this.OnSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPortID = value;
					this.SendPropertyChanged("SwitchPortID");
					this.OnSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int NOT NULL")]
		public int PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					if (this._E1Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherNumberID", DbType="Int")]
		public System.Nullable<int> OtherNumberID
		{
			get
			{
				return this._OtherNumberID;
			}
			set
			{
				if ((this._OtherNumberID != value))
				{
					if (this._E1Number1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherNumberIDChanging(value);
					this.SendPropertyChanging();
					this._OtherNumberID = value;
					this.SendPropertyChanged("OtherNumberID");
					this.OnOtherNumberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="E1NumberID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_E1Link", Storage="_E1Links", ThisKey="ID", OtherKey="SwitchE1NumberID")]
		public EntitySet<E1Link> E1Links
		{
			get
			{
				return this._E1Links;
			}
			set
			{
				this._E1Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_E1Link1", Storage="_E1Links1", ThisKey="ID", OtherKey="SwitchInterfaceE1NumberID")]
		public EntitySet<E1Link> E1Links1
		{
			get
			{
				return this._E1Links1;
			}
			set
			{
				this._E1Links1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_E1Link2", Storage="_E1Links2", ThisKey="ID", OtherKey="AcessE1NumberID")]
		public EntitySet<E1Link> E1Links2
		{
			get
			{
				return this._E1Links2;
			}
			set
			{
				this._E1Links2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_E1Number", Storage="_E1Numbers", ThisKey="ID", OtherKey="OtherNumberID")]
		public EntitySet<E1Number> E1Numbers
		{
			get
			{
				return this._E1Numbers;
			}
			set
			{
				this._E1Numbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Number_E1Number", Storage="_E1Number1", ThisKey="OtherNumberID", OtherKey="ID", IsForeignKey=true)]
		public E1Number E1Number1
		{
			get
			{
				return this._E1Number1.Entity;
			}
			set
			{
				E1Number previousValue = this._E1Number1.Entity;
				if (((previousValue != value) 
							|| (this._E1Number1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Number1.Entity = null;
						previousValue.E1Numbers.Remove(this);
					}
					this._E1Number1.Entity = value;
					if ((value != null))
					{
						value.E1Numbers.Add(this);
						this._OtherNumberID = value.ID;
					}
					else
					{
						this._OtherNumberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("E1Number1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Position_E1Number", Storage="_E1Position", ThisKey="PositionID", OtherKey="ID", IsForeignKey=true)]
		public E1Position E1Position
		{
			get
			{
				return this._E1Position.Entity;
			}
			set
			{
				E1Position previousValue = this._E1Position.Entity;
				if (((previousValue != value) 
							|| (this._E1Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Position.Entity = null;
						previousValue.E1Numbers.Remove(this);
					}
					this._E1Position.Entity = value;
					if ((value != null))
					{
						value.E1Numbers.Add(this);
						this._PositionID = value.ID;
					}
					else
					{
						this._PositionID = default(int);
					}
					this.SendPropertyChanged("E1Position");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.E1Number = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.E1Number = null;
		}
		
		private void attach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.E1Number = this;
		}
		
		private void detach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.E1Number = null;
		}
		
		private void attach_E1Links1(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.E1Number1 = this;
		}
		
		private void detach_E1Links1(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.E1Number1 = null;
		}
		
		private void attach_E1Links2(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.E1Number2 = this;
		}
		
		private void detach_E1Links2(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.E1Number2 = null;
		}
		
		private void attach_E1Numbers(E1Number entity)
		{
			this.SendPropertyChanging();
			entity.E1Number1 = this;
		}
		
		private void detach_E1Numbers(E1Number entity)
		{
			this.SendPropertyChanging();
			entity.E1Number1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.E1Position")]
	public partial class E1Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BayID;
		
		private int _Number;
		
		private EntitySet<E1Number> _E1Numbers;
		
		private EntityRef<E1Bay> _E1Bay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBayIDChanging(int value);
    partial void OnBayIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    #endregion
		
		public E1Position()
		{
			this._E1Numbers = new EntitySet<E1Number>(new Action<E1Number>(this.attach_E1Numbers), new Action<E1Number>(this.detach_E1Numbers));
			this._E1Bay = default(EntityRef<E1Bay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BayID", DbType="Int NOT NULL")]
		public int BayID
		{
			get
			{
				return this._BayID;
			}
			set
			{
				if ((this._BayID != value))
				{
					if (this._E1Bay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBayIDChanging(value);
					this.SendPropertyChanging();
					this._BayID = value;
					this.SendPropertyChanged("BayID");
					this.OnBayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Position_E1Number", Storage="_E1Numbers", ThisKey="ID", OtherKey="PositionID")]
		public EntitySet<E1Number> E1Numbers
		{
			get
			{
				return this._E1Numbers;
			}
			set
			{
				this._E1Numbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="E1Bay_E1Position", Storage="_E1Bay", ThisKey="BayID", OtherKey="ID", IsForeignKey=true)]
		public E1Bay E1Bay
		{
			get
			{
				return this._E1Bay.Entity;
			}
			set
			{
				E1Bay previousValue = this._E1Bay.Entity;
				if (((previousValue != value) 
							|| (this._E1Bay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1Bay.Entity = null;
						previousValue.E1Positions.Remove(this);
					}
					this._E1Bay.Entity = value;
					if ((value != null))
					{
						value.E1Positions.Add(this);
						this._BayID = value.ID;
					}
					else
					{
						this._BayID = default(int);
					}
					this.SendPropertyChanged("E1Bay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1Numbers(E1Number entity)
		{
			this.SendPropertyChanging();
			entity.E1Position = this;
		}
		
		private void detach_E1Numbers(E1Number entity)
		{
			this.SendPropertyChanging();
			entity.E1Position = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipment")]
	public partial class Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EquipmentID;
		
		private string _EquipmentName;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipmentIDChanging(int value);
    partial void OnEquipmentIDChanged();
    partial void OnEquipmentNameChanging(string value);
    partial void OnEquipmentNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Equipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EquipmentID
		{
			get
			{
				return this._EquipmentID;
			}
			set
			{
				if ((this._EquipmentID != value))
				{
					this.OnEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._EquipmentID = value;
					this.SendPropertyChanged("EquipmentID");
					this.OnEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this.OnEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._EquipmentName = value;
					this.SendPropertyChanged("EquipmentName");
					this.OnEquipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorLog")]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorLogID;
		
		private System.DateTime _ErrorTime;
		
		private string _UserName;
		
		private int _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _ErrorMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorLogIDChanging(int value);
    partial void OnErrorLogIDChanged();
    partial void OnErrorTimeChanging(System.DateTime value);
    partial void OnErrorTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnErrorNumberChanging(int value);
    partial void OnErrorNumberChanged();
    partial void OnErrorSeverityChanging(System.Nullable<int> value);
    partial void OnErrorSeverityChanged();
    partial void OnErrorStateChanging(System.Nullable<int> value);
    partial void OnErrorStateChanged();
    partial void OnErrorProcedureChanging(string value);
    partial void OnErrorProcedureChanged();
    partial void OnErrorLineChanging(System.Nullable<int> value);
    partial void OnErrorLineChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    #endregion
		
		public ErrorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorLogID
		{
			get
			{
				return this._ErrorLogID;
			}
			set
			{
				if ((this._ErrorLogID != value))
				{
					this.OnErrorLogIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorLogID = value;
					this.SendPropertyChanged("ErrorLogID");
					this.OnErrorLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorTime", DbType="DateTime NOT NULL")]
		public System.DateTime ErrorTime
		{
			get
			{
				return this._ErrorTime;
			}
			set
			{
				if ((this._ErrorTime != value))
				{
					this.OnErrorTimeChanging(value);
					this.SendPropertyChanging();
					this._ErrorTime = value;
					this.SendPropertyChanged("ErrorTime");
					this.OnErrorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int NOT NULL")]
		public int ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this.OnErrorNumberChanging(value);
					this.SendPropertyChanging();
					this._ErrorNumber = value;
					this.SendPropertyChanged("ErrorNumber");
					this.OnErrorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this.OnErrorSeverityChanging(value);
					this.SendPropertyChanging();
					this._ErrorSeverity = value;
					this.SendPropertyChanged("ErrorSeverity");
					this.OnErrorSeverityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this.OnErrorStateChanging(value);
					this.SendPropertyChanging();
					this._ErrorState = value;
					this.SendPropertyChanged("ErrorState");
					this.OnErrorStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(250)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this.OnErrorProcedureChanging(value);
					this.SendPropertyChanging();
					this._ErrorProcedure = value;
					this.SendPropertyChanged("ErrorProcedure");
					this.OnErrorProcedureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this.OnErrorLineChanging(value);
					this.SendPropertyChanging();
					this._ErrorLine = value;
					this.SendPropertyChanged("ErrorLine");
					this.OnErrorLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeBrokenPCM")]
	public partial class ExchangeBrokenPCM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private long _OldBuchtID;
		
		private byte _OldBuchtStatus;
		
		private byte _OldPostContactStatus;
		
		private System.Nullable<long> _TelephoneNo;
		
		private int _OldPCMID;
		
		private int _NewPCMID;
		
		private long _NewBuchtID;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<PCM> _PCM;
		
		private EntityRef<PCM> _PCM1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnOldBuchtIDChanging(long value);
    partial void OnOldBuchtIDChanged();
    partial void OnOldBuchtStatusChanging(byte value);
    partial void OnOldBuchtStatusChanged();
    partial void OnOldPostContactStatusChanging(byte value);
    partial void OnOldPostContactStatusChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnOldPCMIDChanging(int value);
    partial void OnOldPCMIDChanged();
    partial void OnNewPCMIDChanging(int value);
    partial void OnNewPCMIDChanged();
    partial void OnNewBuchtIDChanging(long value);
    partial void OnNewBuchtIDChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    #endregion
		
		public ExchangeBrokenPCM()
		{
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._PCM = default(EntityRef<PCM>);
			this._PCM1 = default(EntityRef<PCM>);
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtID", DbType="BigInt NOT NULL")]
		public long OldBuchtID
		{
			get
			{
				return this._OldBuchtID;
			}
			set
			{
				if ((this._OldBuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtID = value;
					this.SendPropertyChanged("OldBuchtID");
					this.OnOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtStatus", DbType="TinyInt NOT NULL")]
		public byte OldBuchtStatus
		{
			get
			{
				return this._OldBuchtStatus;
			}
			set
			{
				if ((this._OldBuchtStatus != value))
				{
					this.OnOldBuchtStatusChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtStatus = value;
					this.SendPropertyChanged("OldBuchtStatus");
					this.OnOldBuchtStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostContactStatus", DbType="TinyInt NOT NULL")]
		public byte OldPostContactStatus
		{
			get
			{
				return this._OldPostContactStatus;
			}
			set
			{
				if ((this._OldPostContactStatus != value))
				{
					this.OnOldPostContactStatusChanging(value);
					this.SendPropertyChanging();
					this._OldPostContactStatus = value;
					this.SendPropertyChanged("OldPostContactStatus");
					this.OnOldPostContactStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPCMID", DbType="Int NOT NULL")]
		public int OldPCMID
		{
			get
			{
				return this._OldPCMID;
			}
			set
			{
				if ((this._OldPCMID != value))
				{
					if (this._PCM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPCMIDChanging(value);
					this.SendPropertyChanging();
					this._OldPCMID = value;
					this.SendPropertyChanged("OldPCMID");
					this.OnOldPCMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPCMID", DbType="Int NOT NULL")]
		public int NewPCMID
		{
			get
			{
				return this._NewPCMID;
			}
			set
			{
				if ((this._NewPCMID != value))
				{
					if (this._PCM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewPCMIDChanging(value);
					this.SendPropertyChanging();
					this._NewPCMID = value;
					this.SendPropertyChanged("NewPCMID");
					this.OnNewPCMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewBuchtID", DbType="BigInt NOT NULL")]
		public long NewBuchtID
		{
			get
			{
				return this._NewBuchtID;
			}
			set
			{
				if ((this._NewBuchtID != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._NewBuchtID = value;
					this.SendPropertyChanged("NewBuchtID");
					this.OnNewBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeBrokenPCM", Storage="_Bucht", ThisKey="OldBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.ExchangeBrokenPCMs.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.ExchangeBrokenPCMs.Add(this);
						this._OldBuchtID = value.ID;
					}
					else
					{
						this._OldBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeBrokenPCM1", Storage="_Bucht1", ThisKey="NewBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.ExchangeBrokenPCMs1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.ExchangeBrokenPCMs1.Add(this);
						this._NewBuchtID = value.ID;
					}
					else
					{
						this._NewBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_ExchangeBrokenPCM", Storage="_PCM", ThisKey="OldPCMID", OtherKey="ID", IsForeignKey=true)]
		public PCM PCM
		{
			get
			{
				return this._PCM.Entity;
			}
			set
			{
				PCM previousValue = this._PCM.Entity;
				if (((previousValue != value) 
							|| (this._PCM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCM.Entity = null;
						previousValue.ExchangeBrokenPCMs.Remove(this);
					}
					this._PCM.Entity = value;
					if ((value != null))
					{
						value.ExchangeBrokenPCMs.Add(this);
						this._OldPCMID = value.ID;
					}
					else
					{
						this._OldPCMID = default(int);
					}
					this.SendPropertyChanged("PCM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_ExchangeBrokenPCM1", Storage="_PCM1", ThisKey="NewPCMID", OtherKey="ID", IsForeignKey=true)]
		public PCM PCM1
		{
			get
			{
				return this._PCM1.Entity;
			}
			set
			{
				PCM previousValue = this._PCM1.Entity;
				if (((previousValue != value) 
							|| (this._PCM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCM1.Entity = null;
						previousValue.ExchangeBrokenPCMs1.Remove(this);
					}
					this._PCM1.Entity = value;
					if ((value != null))
					{
						value.ExchangeBrokenPCMs1.Add(this);
						this._NewPCMID = value.ID;
					}
					else
					{
						this._NewPCMID = default(int);
					}
					this.SendPropertyChanged("PCM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeBrokenPCM", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ExchangeBrokenPCMs.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ExchangeBrokenPCMs.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeBrokenPCM", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.ExchangeBrokenPCMs.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.ExchangeBrokenPCMs.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeCabinetInput")]
	public partial class ExchangeCabinetInput : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _OldCabinetID;
		
		private int _NewCabinetID;
		
		private System.Nullable<long> _FromOldCabinetInputID;
		
		private System.Nullable<long> _ToOldCabinetInputID;
		
		private System.Nullable<long> _FromNewCabinetInputID;
		
		private System.Nullable<long> _ToNewCabinetInputID;
		
		private System.Nullable<int> _FromNewPostID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _MDFAccomplishmentDate;
		
		private string _MDFAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private bool _IsChangePost;
		
		private System.Nullable<System.DateTime> _NetworkAccomplishmentDate;
		
		private string _NetworkAccomplishmentTime;
		
		private byte _Type;
		
		private bool _TransferWaitingList;
		
		private bool _TransferBrokenPostContact;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<Cabinet> _Cabinet1;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<CabinetInput> _CabinetInput1;
		
		private EntityRef<CabinetInput> _CabinetInput2;
		
		private EntityRef<CabinetInput> _CabinetInput3;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldCabinetIDChanging(int value);
    partial void OnOldCabinetIDChanged();
    partial void OnNewCabinetIDChanging(int value);
    partial void OnNewCabinetIDChanged();
    partial void OnFromOldCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnFromOldCabinetInputIDChanged();
    partial void OnToOldCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnToOldCabinetInputIDChanged();
    partial void OnFromNewCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnFromNewCabinetInputIDChanged();
    partial void OnToNewCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnToNewCabinetInputIDChanged();
    partial void OnFromNewPostIDChanging(System.Nullable<int> value);
    partial void OnFromNewPostIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnMDFAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFAccomplishmentDateChanged();
    partial void OnMDFAccomplishmentTimeChanging(string value);
    partial void OnMDFAccomplishmentTimeChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnIsChangePostChanging(bool value);
    partial void OnIsChangePostChanged();
    partial void OnNetworkAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkAccomplishmentDateChanged();
    partial void OnNetworkAccomplishmentTimeChanging(string value);
    partial void OnNetworkAccomplishmentTimeChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnTransferWaitingListChanging(bool value);
    partial void OnTransferWaitingListChanged();
    partial void OnTransferBrokenPostContactChanging(bool value);
    partial void OnTransferBrokenPostContactChanged();
    #endregion
		
		public ExchangeCabinetInput()
		{
			this._Cabinet = default(EntityRef<Cabinet>);
			this._Cabinet1 = default(EntityRef<Cabinet>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._CabinetInput1 = default(EntityRef<CabinetInput>);
			this._CabinetInput2 = default(EntityRef<CabinetInput>);
			this._CabinetInput3 = default(EntityRef<CabinetInput>);
			this._Post = default(EntityRef<Post>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetID", DbType="Int NOT NULL")]
		public int OldCabinetID
		{
			get
			{
				return this._OldCabinetID;
			}
			set
			{
				if ((this._OldCabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetID = value;
					this.SendPropertyChanged("OldCabinetID");
					this.OnOldCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetID", DbType="Int NOT NULL")]
		public int NewCabinetID
		{
			get
			{
				return this._NewCabinetID;
			}
			set
			{
				if ((this._NewCabinetID != value))
				{
					if (this._Cabinet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._NewCabinetID = value;
					this.SendPropertyChanged("NewCabinetID");
					this.OnNewCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromOldCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> FromOldCabinetInputID
		{
			get
			{
				return this._FromOldCabinetInputID;
			}
			set
			{
				if ((this._FromOldCabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromOldCabinetInputID = value;
					this.SendPropertyChanged("FromOldCabinetInputID");
					this.OnFromOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToOldCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> ToOldCabinetInputID
		{
			get
			{
				return this._ToOldCabinetInputID;
			}
			set
			{
				if ((this._ToOldCabinetInputID != value))
				{
					if (this._CabinetInput1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToOldCabinetInputID = value;
					this.SendPropertyChanged("ToOldCabinetInputID");
					this.OnToOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromNewCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> FromNewCabinetInputID
		{
			get
			{
				return this._FromNewCabinetInputID;
			}
			set
			{
				if ((this._FromNewCabinetInputID != value))
				{
					if (this._CabinetInput2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromNewCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromNewCabinetInputID = value;
					this.SendPropertyChanged("FromNewCabinetInputID");
					this.OnFromNewCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToNewCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> ToNewCabinetInputID
		{
			get
			{
				return this._ToNewCabinetInputID;
			}
			set
			{
				if ((this._ToNewCabinetInputID != value))
				{
					if (this._CabinetInput3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToNewCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToNewCabinetInputID = value;
					this.SendPropertyChanged("ToNewCabinetInputID");
					this.OnToNewCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromNewPostID", DbType="Int")]
		public System.Nullable<int> FromNewPostID
		{
			get
			{
				return this._FromNewPostID;
			}
			set
			{
				if ((this._FromNewPostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromNewPostIDChanging(value);
					this.SendPropertyChanging();
					this._FromNewPostID = value;
					this.SendPropertyChanged("FromNewPostID");
					this.OnFromNewPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFAccomplishmentDate
		{
			get
			{
				return this._MDFAccomplishmentDate;
			}
			set
			{
				if ((this._MDFAccomplishmentDate != value))
				{
					this.OnMDFAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentDate = value;
					this.SendPropertyChanged("MDFAccomplishmentDate");
					this.OnMDFAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentTime", DbType="NChar(10)")]
		public string MDFAccomplishmentTime
		{
			get
			{
				return this._MDFAccomplishmentTime;
			}
			set
			{
				if ((this._MDFAccomplishmentTime != value))
				{
					this.OnMDFAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentTime = value;
					this.SendPropertyChanged("MDFAccomplishmentTime");
					this.OnMDFAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChangePost", DbType="Bit NOT NULL")]
		public bool IsChangePost
		{
			get
			{
				return this._IsChangePost;
			}
			set
			{
				if ((this._IsChangePost != value))
				{
					this.OnIsChangePostChanging(value);
					this.SendPropertyChanging();
					this._IsChangePost = value;
					this.SendPropertyChanged("IsChangePost");
					this.OnIsChangePostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkAccomplishmentDate
		{
			get
			{
				return this._NetworkAccomplishmentDate;
			}
			set
			{
				if ((this._NetworkAccomplishmentDate != value))
				{
					this.OnNetworkAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentDate = value;
					this.SendPropertyChanged("NetworkAccomplishmentDate");
					this.OnNetworkAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentTime", DbType="NChar(10)")]
		public string NetworkAccomplishmentTime
		{
			get
			{
				return this._NetworkAccomplishmentTime;
			}
			set
			{
				if ((this._NetworkAccomplishmentTime != value))
				{
					this.OnNetworkAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentTime = value;
					this.SendPropertyChanged("NetworkAccomplishmentTime");
					this.OnNetworkAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferWaitingList", DbType="Bit NOT NULL")]
		public bool TransferWaitingList
		{
			get
			{
				return this._TransferWaitingList;
			}
			set
			{
				if ((this._TransferWaitingList != value))
				{
					this.OnTransferWaitingListChanging(value);
					this.SendPropertyChanging();
					this._TransferWaitingList = value;
					this.SendPropertyChanged("TransferWaitingList");
					this.OnTransferWaitingListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferBrokenPostContact", DbType="Bit NOT NULL")]
		public bool TransferBrokenPostContact
		{
			get
			{
				return this._TransferBrokenPostContact;
			}
			set
			{
				if ((this._TransferBrokenPostContact != value))
				{
					this.OnTransferBrokenPostContactChanging(value);
					this.SendPropertyChanging();
					this._TransferBrokenPostContact = value;
					this.SendPropertyChanged("TransferBrokenPostContact");
					this.OnTransferBrokenPostContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangeCabinetInput", Storage="_Cabinet", ThisKey="OldCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.ExchangeCabinetInputs.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputs.Add(this);
						this._OldCabinetID = value.ID;
					}
					else
					{
						this._OldCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangeCabinetInput1", Storage="_Cabinet1", ThisKey="NewCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet1
		{
			get
			{
				return this._Cabinet1.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet1.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet1.Entity = null;
						previousValue.ExchangeCabinetInputs1.Remove(this);
					}
					this._Cabinet1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputs1.Add(this);
						this._NewCabinetID = value.ID;
					}
					else
					{
						this._NewCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInput", Storage="_CabinetInput", ThisKey="FromOldCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.ExchangeCabinetInputs.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputs.Add(this);
						this._FromOldCabinetInputID = value.ID;
					}
					else
					{
						this._FromOldCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInput1", Storage="_CabinetInput1", ThisKey="ToOldCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput1
		{
			get
			{
				return this._CabinetInput1.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput1.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput1.Entity = null;
						previousValue.ExchangeCabinetInputs1.Remove(this);
					}
					this._CabinetInput1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputs1.Add(this);
						this._ToOldCabinetInputID = value.ID;
					}
					else
					{
						this._ToOldCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInput2", Storage="_CabinetInput2", ThisKey="FromNewCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput2
		{
			get
			{
				return this._CabinetInput2.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput2.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput2.Entity = null;
						previousValue.ExchangeCabinetInputs2.Remove(this);
					}
					this._CabinetInput2.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputs2.Add(this);
						this._FromNewCabinetInputID = value.ID;
					}
					else
					{
						this._FromNewCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInput3", Storage="_CabinetInput3", ThisKey="ToNewCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput3
		{
			get
			{
				return this._CabinetInput3.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput3.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput3.Entity = null;
						previousValue.ExchangeCabinetInputs3.Remove(this);
					}
					this._CabinetInput3.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputs3.Add(this);
						this._ToNewCabinetInputID = value.ID;
					}
					else
					{
						this._ToNewCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangeCabinetInput", Storage="_Post", ThisKey="FromNewPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.ExchangeCabinetInputs.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputs.Add(this);
						this._FromNewPostID = value.ID;
					}
					else
					{
						this._FromNewPostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeCabinetInput", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ExchangeCabinetInput = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInput = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeCabinetInputConncetions")]
	public partial class ExchangeCabinetInputConncetion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private System.Nullable<long> _CustomerID;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private int _FromPostID;
		
		private long _FromPostContactID;
		
		private System.Nullable<long> _FromCabinetInputID;
		
		private System.Nullable<long> _FromTelephoneNo;
		
		private System.Nullable<long> _FromBucht;
		
		private System.Nullable<int> _ToPostID;
		
		private System.Nullable<long> _ToPostConntactID;
		
		private long _ToCabinetInputID;
		
		private System.Nullable<long> _ToBucht;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<CabinetInput> _CabinetInput1;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Post> _Post1;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<PostContact> _PostContact1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnFromPostIDChanging(int value);
    partial void OnFromPostIDChanged();
    partial void OnFromPostContactIDChanging(long value);
    partial void OnFromPostContactIDChanged();
    partial void OnFromCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnFromCabinetInputIDChanged();
    partial void OnFromTelephoneNoChanging(System.Nullable<long> value);
    partial void OnFromTelephoneNoChanged();
    partial void OnFromBuchtChanging(System.Nullable<long> value);
    partial void OnFromBuchtChanged();
    partial void OnToPostIDChanging(System.Nullable<int> value);
    partial void OnToPostIDChanged();
    partial void OnToPostConntactIDChanging(System.Nullable<long> value);
    partial void OnToPostConntactIDChanged();
    partial void OnToCabinetInputIDChanging(long value);
    partial void OnToCabinetInputIDChanged();
    partial void OnToBuchtChanging(System.Nullable<long> value);
    partial void OnToBuchtChanged();
    #endregion
		
		public ExchangeCabinetInputConncetion()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._CabinetInput1 = default(EntityRef<CabinetInput>);
			this._Post = default(EntityRef<Post>);
			this._Post1 = default(EntityRef<Post>);
			this._PostContact = default(EntityRef<PostContact>);
			this._PostContact1 = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPostID", DbType="Int NOT NULL")]
		public int FromPostID
		{
			get
			{
				return this._FromPostID;
			}
			set
			{
				if ((this._FromPostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromPostIDChanging(value);
					this.SendPropertyChanging();
					this._FromPostID = value;
					this.SendPropertyChanged("FromPostID");
					this.OnFromPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPostContactID", DbType="BigInt NOT NULL")]
		public long FromPostContactID
		{
			get
			{
				return this._FromPostContactID;
			}
			set
			{
				if ((this._FromPostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._FromPostContactID = value;
					this.SendPropertyChanged("FromPostContactID");
					this.OnFromPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> FromCabinetInputID
		{
			get
			{
				return this._FromCabinetInputID;
			}
			set
			{
				if ((this._FromCabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromCabinetInputID = value;
					this.SendPropertyChanged("FromCabinetInputID");
					this.OnFromCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> FromTelephoneNo
		{
			get
			{
				return this._FromTelephoneNo;
			}
			set
			{
				if ((this._FromTelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._FromTelephoneNo = value;
					this.SendPropertyChanged("FromTelephoneNo");
					this.OnFromTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromBucht", DbType="BigInt")]
		public System.Nullable<long> FromBucht
		{
			get
			{
				return this._FromBucht;
			}
			set
			{
				if ((this._FromBucht != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromBuchtChanging(value);
					this.SendPropertyChanging();
					this._FromBucht = value;
					this.SendPropertyChanged("FromBucht");
					this.OnFromBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPostID", DbType="Int")]
		public System.Nullable<int> ToPostID
		{
			get
			{
				return this._ToPostID;
			}
			set
			{
				if ((this._ToPostID != value))
				{
					if (this._Post1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToPostIDChanging(value);
					this.SendPropertyChanging();
					this._ToPostID = value;
					this.SendPropertyChanged("ToPostID");
					this.OnToPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPostConntactID", DbType="BigInt")]
		public System.Nullable<long> ToPostConntactID
		{
			get
			{
				return this._ToPostConntactID;
			}
			set
			{
				if ((this._ToPostConntactID != value))
				{
					if (this._PostContact1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToPostConntactIDChanging(value);
					this.SendPropertyChanging();
					this._ToPostConntactID = value;
					this.SendPropertyChanged("ToPostConntactID");
					this.OnToPostConntactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCabinetInputID", DbType="BigInt NOT NULL")]
		public long ToCabinetInputID
		{
			get
			{
				return this._ToCabinetInputID;
			}
			set
			{
				if ((this._ToCabinetInputID != value))
				{
					if (this._CabinetInput1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToCabinetInputID = value;
					this.SendPropertyChanged("ToCabinetInputID");
					this.OnToCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToBucht", DbType="BigInt")]
		public System.Nullable<long> ToBucht
		{
			get
			{
				return this._ToBucht;
			}
			set
			{
				if ((this._ToBucht != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToBuchtChanging(value);
					this.SendPropertyChanging();
					this._ToBucht = value;
					this.SendPropertyChanged("ToBucht");
					this.OnToBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ExchangeCabinetInputConncetion", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.ExchangeCabinetInputConncetions.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ExchangeCabinetInputConncetion1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.ExchangeCabinetInputConncetions1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCabinetInputConncetion", Storage="_Bucht", ThisKey="FromBucht", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.ExchangeCabinetInputConncetions.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions.Add(this);
						this._FromBucht = value.ID;
					}
					else
					{
						this._FromBucht = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCabinetInputConncetion1", Storage="_Bucht1", ThisKey="ToBucht", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.ExchangeCabinetInputConncetions1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions1.Add(this);
						this._ToBucht = value.ID;
					}
					else
					{
						this._ToBucht = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInputConncetion", Storage="_CabinetInput", ThisKey="FromCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.ExchangeCabinetInputConncetions.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions.Add(this);
						this._FromCabinetInputID = value.ID;
					}
					else
					{
						this._FromCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeCabinetInputConncetion1", Storage="_CabinetInput1", ThisKey="ToCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput1
		{
			get
			{
				return this._CabinetInput1.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput1.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput1.Entity = null;
						previousValue.ExchangeCabinetInputConncetions1.Remove(this);
					}
					this._CabinetInput1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions1.Add(this);
						this._ToCabinetInputID = value.ID;
					}
					else
					{
						this._ToCabinetInputID = default(long);
					}
					this.SendPropertyChanged("CabinetInput1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangeCabinetInputConncetion", Storage="_Post", ThisKey="FromPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.ExchangeCabinetInputConncetions.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions.Add(this);
						this._FromPostID = value.ID;
					}
					else
					{
						this._FromPostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangeCabinetInputConncetion1", Storage="_Post1", ThisKey="ToPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post1
		{
			get
			{
				return this._Post1.Entity;
			}
			set
			{
				Post previousValue = this._Post1.Entity;
				if (((previousValue != value) 
							|| (this._Post1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post1.Entity = null;
						previousValue.ExchangeCabinetInputConncetions1.Remove(this);
					}
					this._Post1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions1.Add(this);
						this._ToPostID = value.ID;
					}
					else
					{
						this._ToPostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangeCabinetInputConncetion", Storage="_PostContact", ThisKey="FromPostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.ExchangeCabinetInputConncetions.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions.Add(this);
						this._FromPostContactID = value.ID;
					}
					else
					{
						this._FromPostContactID = default(long);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangeCabinetInputConncetion1", Storage="_PostContact1", ThisKey="ToPostConntactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact1
		{
			get
			{
				return this._PostContact1.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact1.Entity;
				if (((previousValue != value) 
							|| (this._PostContact1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact1.Entity = null;
						previousValue.ExchangeCabinetInputConncetions1.Remove(this);
					}
					this._PostContact1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions1.Add(this);
						this._ToPostConntactID = value.ID;
					}
					else
					{
						this._ToPostConntactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeCabinetInputConncetion", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ExchangeCabinetInputConncetions.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeCabinetInputConncetion", Storage="_Telephone", ThisKey="FromTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.ExchangeCabinetInputConncetions.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions.Add(this);
						this._FromTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._FromTelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ExchangeCabinetInputConncetion", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ExchangeCabinetInputConncetions.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ExchangeCabinetInputConncetions.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeCentralCableMDF")]
	public partial class ExchangeCentralCableMDF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _FromNewBuchtID;
		
		private long _ToNewBuchtID;
		
		private long _FromOldBuchtID;
		
		private long _ToOldBuchtID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _MDFAccomplishmentDate;
		
		private string _MDFAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private System.Nullable<System.DateTime> _NetworkAccomplishmentDate;
		
		private string _NetworkAccomplishmentTime;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<Bucht> _Bucht2;
		
		private EntityRef<Bucht> _Bucht3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnFromNewBuchtIDChanging(long value);
    partial void OnFromNewBuchtIDChanged();
    partial void OnToNewBuchtIDChanging(long value);
    partial void OnToNewBuchtIDChanged();
    partial void OnFromOldBuchtIDChanging(long value);
    partial void OnFromOldBuchtIDChanged();
    partial void OnToOldBuchtIDChanging(long value);
    partial void OnToOldBuchtIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnMDFAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFAccomplishmentDateChanged();
    partial void OnMDFAccomplishmentTimeChanging(string value);
    partial void OnMDFAccomplishmentTimeChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnNetworkAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkAccomplishmentDateChanged();
    partial void OnNetworkAccomplishmentTimeChanging(string value);
    partial void OnNetworkAccomplishmentTimeChanged();
    #endregion
		
		public ExchangeCentralCableMDF()
		{
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._Bucht2 = default(EntityRef<Bucht>);
			this._Bucht3 = default(EntityRef<Bucht>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromNewBuchtID", DbType="BigInt NOT NULL")]
		public long FromNewBuchtID
		{
			get
			{
				return this._FromNewBuchtID;
			}
			set
			{
				if ((this._FromNewBuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromNewBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._FromNewBuchtID = value;
					this.SendPropertyChanged("FromNewBuchtID");
					this.OnFromNewBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToNewBuchtID", DbType="BigInt NOT NULL")]
		public long ToNewBuchtID
		{
			get
			{
				return this._ToNewBuchtID;
			}
			set
			{
				if ((this._ToNewBuchtID != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToNewBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._ToNewBuchtID = value;
					this.SendPropertyChanged("ToNewBuchtID");
					this.OnToNewBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromOldBuchtID", DbType="BigInt NOT NULL")]
		public long FromOldBuchtID
		{
			get
			{
				return this._FromOldBuchtID;
			}
			set
			{
				if ((this._FromOldBuchtID != value))
				{
					if (this._Bucht2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._FromOldBuchtID = value;
					this.SendPropertyChanged("FromOldBuchtID");
					this.OnFromOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToOldBuchtID", DbType="BigInt NOT NULL")]
		public long ToOldBuchtID
		{
			get
			{
				return this._ToOldBuchtID;
			}
			set
			{
				if ((this._ToOldBuchtID != value))
				{
					if (this._Bucht3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._ToOldBuchtID = value;
					this.SendPropertyChanged("ToOldBuchtID");
					this.OnToOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFAccomplishmentDate
		{
			get
			{
				return this._MDFAccomplishmentDate;
			}
			set
			{
				if ((this._MDFAccomplishmentDate != value))
				{
					this.OnMDFAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentDate = value;
					this.SendPropertyChanged("MDFAccomplishmentDate");
					this.OnMDFAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentTime", DbType="NChar(10)")]
		public string MDFAccomplishmentTime
		{
			get
			{
				return this._MDFAccomplishmentTime;
			}
			set
			{
				if ((this._MDFAccomplishmentTime != value))
				{
					this.OnMDFAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentTime = value;
					this.SendPropertyChanged("MDFAccomplishmentTime");
					this.OnMDFAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkAccomplishmentDate
		{
			get
			{
				return this._NetworkAccomplishmentDate;
			}
			set
			{
				if ((this._NetworkAccomplishmentDate != value))
				{
					this.OnNetworkAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentDate = value;
					this.SendPropertyChanged("NetworkAccomplishmentDate");
					this.OnNetworkAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentTime", DbType="NChar(10)")]
		public string NetworkAccomplishmentTime
		{
			get
			{
				return this._NetworkAccomplishmentTime;
			}
			set
			{
				if ((this._NetworkAccomplishmentTime != value))
				{
					this.OnNetworkAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentTime = value;
					this.SendPropertyChanged("NetworkAccomplishmentTime");
					this.OnNetworkAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDF", Storage="_Bucht", ThisKey="FromNewBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.ExchangeCentralCableMDFs.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.ExchangeCentralCableMDFs.Add(this);
						this._FromNewBuchtID = value.ID;
					}
					else
					{
						this._FromNewBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDF1", Storage="_Bucht1", ThisKey="ToNewBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.ExchangeCentralCableMDFs1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCentralCableMDFs1.Add(this);
						this._ToNewBuchtID = value.ID;
					}
					else
					{
						this._ToNewBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDF2", Storage="_Bucht2", ThisKey="FromOldBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht2
		{
			get
			{
				return this._Bucht2.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht2.Entity;
				if (((previousValue != value) 
							|| (this._Bucht2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht2.Entity = null;
						previousValue.ExchangeCentralCableMDFs2.Remove(this);
					}
					this._Bucht2.Entity = value;
					if ((value != null))
					{
						value.ExchangeCentralCableMDFs2.Add(this);
						this._FromOldBuchtID = value.ID;
					}
					else
					{
						this._FromOldBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDF3", Storage="_Bucht3", ThisKey="ToOldBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht3
		{
			get
			{
				return this._Bucht3.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht3.Entity;
				if (((previousValue != value) 
							|| (this._Bucht3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht3.Entity = null;
						previousValue.ExchangeCentralCableMDFs3.Remove(this);
					}
					this._Bucht3.Entity = value;
					if ((value != null))
					{
						value.ExchangeCentralCableMDFs3.Add(this);
						this._ToOldBuchtID = value.ID;
					}
					else
					{
						this._ToOldBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeCentralCableMDFConncetions")]
	public partial class ExchangeCentralCableMDFConncetion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _RequestID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private long _OldBuchtID;
		
		private byte _OldStatusID;
		
		private long _NewBuchtID;
		
		private byte _NewStatusID;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnOldBuchtIDChanging(long value);
    partial void OnOldBuchtIDChanged();
    partial void OnOldStatusIDChanging(byte value);
    partial void OnOldStatusIDChanged();
    partial void OnNewBuchtIDChanging(long value);
    partial void OnNewBuchtIDChanged();
    partial void OnNewStatusIDChanging(byte value);
    partial void OnNewStatusIDChanged();
    #endregion
		
		public ExchangeCentralCableMDFConncetion()
		{
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtID", DbType="BigInt NOT NULL")]
		public long OldBuchtID
		{
			get
			{
				return this._OldBuchtID;
			}
			set
			{
				if ((this._OldBuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtID = value;
					this.SendPropertyChanged("OldBuchtID");
					this.OnOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStatusID", DbType="TinyInt NOT NULL")]
		public byte OldStatusID
		{
			get
			{
				return this._OldStatusID;
			}
			set
			{
				if ((this._OldStatusID != value))
				{
					this.OnOldStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OldStatusID = value;
					this.SendPropertyChanged("OldStatusID");
					this.OnOldStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewBuchtID", DbType="BigInt NOT NULL")]
		public long NewBuchtID
		{
			get
			{
				return this._NewBuchtID;
			}
			set
			{
				if ((this._NewBuchtID != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._NewBuchtID = value;
					this.SendPropertyChanged("NewBuchtID");
					this.OnNewBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewStatusID", DbType="TinyInt NOT NULL")]
		public byte NewStatusID
		{
			get
			{
				return this._NewStatusID;
			}
			set
			{
				if ((this._NewStatusID != value))
				{
					this.OnNewStatusIDChanging(value);
					this.SendPropertyChanging();
					this._NewStatusID = value;
					this.SendPropertyChanged("NewStatusID");
					this.OnNewStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDFConncetion", Storage="_Bucht", ThisKey="OldBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.ExchangeCentralCableMDFConncetions.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.ExchangeCentralCableMDFConncetions.Add(this);
						this._OldBuchtID = value.ID;
					}
					else
					{
						this._OldBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeCentralCableMDFConncetion1", Storage="_Bucht1", ThisKey="NewBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.ExchangeCentralCableMDFConncetions1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.ExchangeCentralCableMDFConncetions1.Add(this);
						this._NewBuchtID = value.ID;
					}
					else
					{
						this._NewBuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeCentralCableMDFConncetion", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ExchangeCentralCableMDFConncetions.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ExchangeCentralCableMDFConncetions.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeCentralCableMDFConncetion", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.ExchangeCentralCableMDFConncetions.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.ExchangeCentralCableMDFConncetions.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangePost")]
	public partial class ExchangePost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _OldCabinetID;
		
		private int _NewCabinetID;
		
		private int _OldPostID;
		
		private int _NewPostID;
		
		private System.Nullable<long> _FromOldConnectionID;
		
		private System.Nullable<long> _ToOldConnectionID;
		
		private System.Nullable<long> _FromCabinetInputID;
		
		private System.Nullable<long> _ToCabinetInputID;
		
		private System.Nullable<bool> _OverallTransfer;
		
		private System.Nullable<bool> _WithChangeCabinetInput;
		
		private System.Nullable<System.DateTime> _AccomplishmentDate;
		
		private string _AccomplishmentTime;
		
		private System.Nullable<bool> _Completion;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<Cabinet> _Cabinet1;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<CabinetInput> _CabinetInput1;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Post> _Post1;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<PostContact> _PostContact1;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOldCabinetIDChanging(int value);
    partial void OnOldCabinetIDChanged();
    partial void OnNewCabinetIDChanging(int value);
    partial void OnNewCabinetIDChanged();
    partial void OnOldPostIDChanging(int value);
    partial void OnOldPostIDChanged();
    partial void OnNewPostIDChanging(int value);
    partial void OnNewPostIDChanged();
    partial void OnFromOldConnectionIDChanging(System.Nullable<long> value);
    partial void OnFromOldConnectionIDChanged();
    partial void OnToOldConnectionIDChanging(System.Nullable<long> value);
    partial void OnToOldConnectionIDChanged();
    partial void OnFromCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnFromCabinetInputIDChanged();
    partial void OnToCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnToCabinetInputIDChanged();
    partial void OnOverallTransferChanging(System.Nullable<bool> value);
    partial void OnOverallTransferChanged();
    partial void OnWithChangeCabinetInputChanging(System.Nullable<bool> value);
    partial void OnWithChangeCabinetInputChanged();
    partial void OnAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccomplishmentDateChanged();
    partial void OnAccomplishmentTimeChanging(string value);
    partial void OnAccomplishmentTimeChanged();
    partial void OnCompletionChanging(System.Nullable<bool> value);
    partial void OnCompletionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public ExchangePost()
		{
			this._Cabinet = default(EntityRef<Cabinet>);
			this._Cabinet1 = default(EntityRef<Cabinet>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._CabinetInput1 = default(EntityRef<CabinetInput>);
			this._Post = default(EntityRef<Post>);
			this._Post1 = default(EntityRef<Post>);
			this._PostContact = default(EntityRef<PostContact>);
			this._PostContact1 = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetID", DbType="Int NOT NULL")]
		public int OldCabinetID
		{
			get
			{
				return this._OldCabinetID;
			}
			set
			{
				if ((this._OldCabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetID = value;
					this.SendPropertyChanged("OldCabinetID");
					this.OnOldCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetID", DbType="Int NOT NULL")]
		public int NewCabinetID
		{
			get
			{
				return this._NewCabinetID;
			}
			set
			{
				if ((this._NewCabinetID != value))
				{
					if (this._Cabinet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._NewCabinetID = value;
					this.SendPropertyChanged("NewCabinetID");
					this.OnNewCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostID", DbType="Int NOT NULL")]
		public int OldPostID
		{
			get
			{
				return this._OldPostID;
			}
			set
			{
				if ((this._OldPostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPostIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostID = value;
					this.SendPropertyChanged("OldPostID");
					this.OnOldPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostID", DbType="Int NOT NULL")]
		public int NewPostID
		{
			get
			{
				return this._NewPostID;
			}
			set
			{
				if ((this._NewPostID != value))
				{
					if (this._Post1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewPostIDChanging(value);
					this.SendPropertyChanging();
					this._NewPostID = value;
					this.SendPropertyChanged("NewPostID");
					this.OnNewPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromOldConnectionID", DbType="BigInt")]
		public System.Nullable<long> FromOldConnectionID
		{
			get
			{
				return this._FromOldConnectionID;
			}
			set
			{
				if ((this._FromOldConnectionID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromOldConnectionIDChanging(value);
					this.SendPropertyChanging();
					this._FromOldConnectionID = value;
					this.SendPropertyChanged("FromOldConnectionID");
					this.OnFromOldConnectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToOldConnectionID", DbType="BigInt")]
		public System.Nullable<long> ToOldConnectionID
		{
			get
			{
				return this._ToOldConnectionID;
			}
			set
			{
				if ((this._ToOldConnectionID != value))
				{
					if (this._PostContact1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToOldConnectionIDChanging(value);
					this.SendPropertyChanging();
					this._ToOldConnectionID = value;
					this.SendPropertyChanged("ToOldConnectionID");
					this.OnToOldConnectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> FromCabinetInputID
		{
			get
			{
				return this._FromCabinetInputID;
			}
			set
			{
				if ((this._FromCabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromCabinetInputID = value;
					this.SendPropertyChanged("FromCabinetInputID");
					this.OnFromCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> ToCabinetInputID
		{
			get
			{
				return this._ToCabinetInputID;
			}
			set
			{
				if ((this._ToCabinetInputID != value))
				{
					if (this._CabinetInput1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToCabinetInputID = value;
					this.SendPropertyChanged("ToCabinetInputID");
					this.OnToCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallTransfer", DbType="Bit")]
		public System.Nullable<bool> OverallTransfer
		{
			get
			{
				return this._OverallTransfer;
			}
			set
			{
				if ((this._OverallTransfer != value))
				{
					this.OnOverallTransferChanging(value);
					this.SendPropertyChanging();
					this._OverallTransfer = value;
					this.SendPropertyChanged("OverallTransfer");
					this.OnOverallTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithChangeCabinetInput", DbType="Bit")]
		public System.Nullable<bool> WithChangeCabinetInput
		{
			get
			{
				return this._WithChangeCabinetInput;
			}
			set
			{
				if ((this._WithChangeCabinetInput != value))
				{
					this.OnWithChangeCabinetInputChanging(value);
					this.SendPropertyChanging();
					this._WithChangeCabinetInput = value;
					this.SendPropertyChanged("WithChangeCabinetInput");
					this.OnWithChangeCabinetInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AccomplishmentDate
		{
			get
			{
				return this._AccomplishmentDate;
			}
			set
			{
				if ((this._AccomplishmentDate != value))
				{
					this.OnAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentDate = value;
					this.SendPropertyChanged("AccomplishmentDate");
					this.OnAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentTime", DbType="NChar(10)")]
		public string AccomplishmentTime
		{
			get
			{
				return this._AccomplishmentTime;
			}
			set
			{
				if ((this._AccomplishmentTime != value))
				{
					this.OnAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentTime = value;
					this.SendPropertyChanged("AccomplishmentTime");
					this.OnAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completion", DbType="Bit")]
		public System.Nullable<bool> Completion
		{
			get
			{
				return this._Completion;
			}
			set
			{
				if ((this._Completion != value))
				{
					this.OnCompletionChanging(value);
					this.SendPropertyChanging();
					this._Completion = value;
					this.SendPropertyChanged("Completion");
					this.OnCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangePost", Storage="_Cabinet", ThisKey="OldCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.ExchangePosts.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.ExchangePosts.Add(this);
						this._OldCabinetID = value.ID;
					}
					else
					{
						this._OldCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangePost1", Storage="_Cabinet1", ThisKey="NewCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet1
		{
			get
			{
				return this._Cabinet1.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet1.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet1.Entity = null;
						previousValue.ExchangePosts1.Remove(this);
					}
					this._Cabinet1.Entity = value;
					if ((value != null))
					{
						value.ExchangePosts1.Add(this);
						this._NewCabinetID = value.ID;
					}
					else
					{
						this._NewCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangePost", Storage="_CabinetInput", ThisKey="FromCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.ExchangePosts.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.ExchangePosts.Add(this);
						this._FromCabinetInputID = value.ID;
					}
					else
					{
						this._FromCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangePost1", Storage="_CabinetInput1", ThisKey="ToCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput1
		{
			get
			{
				return this._CabinetInput1.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput1.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput1.Entity = null;
						previousValue.ExchangePosts1.Remove(this);
					}
					this._CabinetInput1.Entity = value;
					if ((value != null))
					{
						value.ExchangePosts1.Add(this);
						this._ToCabinetInputID = value.ID;
					}
					else
					{
						this._ToCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangePost", Storage="_Post", ThisKey="OldPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.ExchangePosts.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.ExchangePosts.Add(this);
						this._OldPostID = value.ID;
					}
					else
					{
						this._OldPostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangePost1", Storage="_Post1", ThisKey="NewPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post1
		{
			get
			{
				return this._Post1.Entity;
			}
			set
			{
				Post previousValue = this._Post1.Entity;
				if (((previousValue != value) 
							|| (this._Post1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post1.Entity = null;
						previousValue.ExchangePosts1.Remove(this);
					}
					this._Post1.Entity = value;
					if ((value != null))
					{
						value.ExchangePosts1.Add(this);
						this._NewPostID = value.ID;
					}
					else
					{
						this._NewPostID = default(int);
					}
					this.SendPropertyChanged("Post1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangePost", Storage="_PostContact", ThisKey="FromOldConnectionID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.ExchangePosts.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.ExchangePosts.Add(this);
						this._FromOldConnectionID = value.ID;
					}
					else
					{
						this._FromOldConnectionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangePost1", Storage="_PostContact1", ThisKey="ToOldConnectionID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact1
		{
			get
			{
				return this._PostContact1.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact1.Entity;
				if (((previousValue != value) 
							|| (this._PostContact1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact1.Entity = null;
						previousValue.ExchangePosts1.Remove(this);
					}
					this._PostContact1.Entity = value;
					if ((value != null))
					{
						value.ExchangePosts1.Add(this);
						this._ToOldConnectionID = value.ID;
					}
					else
					{
						this._ToOldConnectionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangePost", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ExchangePost = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ExchangePost = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeTelephoneNo")]
	public partial class ExchangeTelephoneNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private int _FromSwitchID;
		
		private int _ToSwitchID;
		
		private int _FromSwitchPreCode;
		
		private int _ToSwitchPreCode;
		
		private long _FirstTelephoneNo;
		
		private long _LastTelephoneNo;
		
		private System.Nullable<int> _TelephoneCount;
		
		private System.Nullable<System.DateTime> _AccomplishmentDate;
		
		private string _AccomplishmentTime;
		
		private byte _Status;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<ExchangeTelephoneNo> _ExchangeTelephoneNo2;
		
		private EntityRef<ExchangeTelephoneNo> _ExchangeTelephoneNo1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Switch> _Switch;
		
		private EntityRef<Switch> _Switch1;
		
		private EntityRef<SwitchPrecode> _SwitchPrecode;
		
		private EntityRef<SwitchPrecode> _SwitchPrecode1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnFromSwitchIDChanging(int value);
    partial void OnFromSwitchIDChanged();
    partial void OnToSwitchIDChanging(int value);
    partial void OnToSwitchIDChanged();
    partial void OnFromSwitchPreCodeChanging(int value);
    partial void OnFromSwitchPreCodeChanged();
    partial void OnToSwitchPreCodeChanging(int value);
    partial void OnToSwitchPreCodeChanged();
    partial void OnFirstTelephoneNoChanging(long value);
    partial void OnFirstTelephoneNoChanged();
    partial void OnLastTelephoneNoChanging(long value);
    partial void OnLastTelephoneNoChanged();
    partial void OnTelephoneCountChanging(System.Nullable<int> value);
    partial void OnTelephoneCountChanged();
    partial void OnAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccomplishmentDateChanged();
    partial void OnAccomplishmentTimeChanging(string value);
    partial void OnAccomplishmentTimeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public ExchangeTelephoneNo()
		{
			this._ExchangeTelephoneNo2 = default(EntityRef<ExchangeTelephoneNo>);
			this._ExchangeTelephoneNo1 = default(EntityRef<ExchangeTelephoneNo>);
			this._Request = default(EntityRef<Request>);
			this._Switch = default(EntityRef<Switch>);
			this._Switch1 = default(EntityRef<Switch>);
			this._SwitchPrecode = default(EntityRef<SwitchPrecode>);
			this._SwitchPrecode1 = default(EntityRef<SwitchPrecode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._ExchangeTelephoneNo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSwitchID", DbType="Int NOT NULL")]
		public int FromSwitchID
		{
			get
			{
				return this._FromSwitchID;
			}
			set
			{
				if ((this._FromSwitchID != value))
				{
					if (this._Switch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._FromSwitchID = value;
					this.SendPropertyChanged("FromSwitchID");
					this.OnFromSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToSwitchID", DbType="Int NOT NULL")]
		public int ToSwitchID
		{
			get
			{
				return this._ToSwitchID;
			}
			set
			{
				if ((this._ToSwitchID != value))
				{
					if (this._Switch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._ToSwitchID = value;
					this.SendPropertyChanged("ToSwitchID");
					this.OnToSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSwitchPreCode", DbType="Int NOT NULL")]
		public int FromSwitchPreCode
		{
			get
			{
				return this._FromSwitchPreCode;
			}
			set
			{
				if ((this._FromSwitchPreCode != value))
				{
					if (this._SwitchPrecode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromSwitchPreCodeChanging(value);
					this.SendPropertyChanging();
					this._FromSwitchPreCode = value;
					this.SendPropertyChanged("FromSwitchPreCode");
					this.OnFromSwitchPreCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToSwitchPreCode", DbType="Int NOT NULL")]
		public int ToSwitchPreCode
		{
			get
			{
				return this._ToSwitchPreCode;
			}
			set
			{
				if ((this._ToSwitchPreCode != value))
				{
					if (this._SwitchPrecode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToSwitchPreCodeChanging(value);
					this.SendPropertyChanging();
					this._ToSwitchPreCode = value;
					this.SendPropertyChanged("ToSwitchPreCode");
					this.OnToSwitchPreCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstTelephoneNo", DbType="BigInt NOT NULL")]
		public long FirstTelephoneNo
		{
			get
			{
				return this._FirstTelephoneNo;
			}
			set
			{
				if ((this._FirstTelephoneNo != value))
				{
					this.OnFirstTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._FirstTelephoneNo = value;
					this.SendPropertyChanged("FirstTelephoneNo");
					this.OnFirstTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTelephoneNo", DbType="BigInt NOT NULL")]
		public long LastTelephoneNo
		{
			get
			{
				return this._LastTelephoneNo;
			}
			set
			{
				if ((this._LastTelephoneNo != value))
				{
					this.OnLastTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._LastTelephoneNo = value;
					this.SendPropertyChanged("LastTelephoneNo");
					this.OnLastTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneCount", DbType="Int")]
		public System.Nullable<int> TelephoneCount
		{
			get
			{
				return this._TelephoneCount;
			}
			set
			{
				if ((this._TelephoneCount != value))
				{
					this.OnTelephoneCountChanging(value);
					this.SendPropertyChanging();
					this._TelephoneCount = value;
					this.SendPropertyChanged("TelephoneCount");
					this.OnTelephoneCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AccomplishmentDate
		{
			get
			{
				return this._AccomplishmentDate;
			}
			set
			{
				if ((this._AccomplishmentDate != value))
				{
					this.OnAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentDate = value;
					this.SendPropertyChanged("AccomplishmentDate");
					this.OnAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentTime", DbType="NChar(10)")]
		public string AccomplishmentTime
		{
			get
			{
				return this._AccomplishmentTime;
			}
			set
			{
				if ((this._AccomplishmentTime != value))
				{
					this.OnAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentTime = value;
					this.SendPropertyChanged("AccomplishmentTime");
					this.OnAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExchangeTelephoneNo_ExchangeTelephoneNo", Storage="_ExchangeTelephoneNo2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ExchangeTelephoneNo ExchangeTelephoneNo2
		{
			get
			{
				return this._ExchangeTelephoneNo2.Entity;
			}
			set
			{
				ExchangeTelephoneNo previousValue = this._ExchangeTelephoneNo2.Entity;
				if (((previousValue != value) 
							|| (this._ExchangeTelephoneNo2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExchangeTelephoneNo2.Entity = null;
						previousValue.ExchangeTelephoneNo1 = null;
					}
					this._ExchangeTelephoneNo2.Entity = value;
					if ((value != null))
					{
						value.ExchangeTelephoneNo1 = this;
					}
					this.SendPropertyChanged("ExchangeTelephoneNo2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExchangeTelephoneNo_ExchangeTelephoneNo", Storage="_ExchangeTelephoneNo1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public ExchangeTelephoneNo ExchangeTelephoneNo1
		{
			get
			{
				return this._ExchangeTelephoneNo1.Entity;
			}
			set
			{
				ExchangeTelephoneNo previousValue = this._ExchangeTelephoneNo1.Entity;
				if (((previousValue != value) 
							|| (this._ExchangeTelephoneNo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExchangeTelephoneNo1.Entity = null;
						previousValue.ExchangeTelephoneNo2 = null;
					}
					this._ExchangeTelephoneNo1.Entity = value;
					if ((value != null))
					{
						value.ExchangeTelephoneNo2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("ExchangeTelephoneNo1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeTelephoneNo", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ExchangeTelephoneNos.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ExchangeTelephoneNos.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_ExchangeTelephoneNo", Storage="_Switch", ThisKey="ToSwitchID", OtherKey="ID", IsForeignKey=true)]
		public Switch Switch
		{
			get
			{
				return this._Switch.Entity;
			}
			set
			{
				Switch previousValue = this._Switch.Entity;
				if (((previousValue != value) 
							|| (this._Switch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Switch.Entity = null;
						previousValue.ExchangeTelephoneNos.Remove(this);
					}
					this._Switch.Entity = value;
					if ((value != null))
					{
						value.ExchangeTelephoneNos.Add(this);
						this._ToSwitchID = value.ID;
					}
					else
					{
						this._ToSwitchID = default(int);
					}
					this.SendPropertyChanged("Switch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_ExchangeTelephoneNo1", Storage="_Switch1", ThisKey="FromSwitchID", OtherKey="ID", IsForeignKey=true)]
		public Switch Switch1
		{
			get
			{
				return this._Switch1.Entity;
			}
			set
			{
				Switch previousValue = this._Switch1.Entity;
				if (((previousValue != value) 
							|| (this._Switch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Switch1.Entity = null;
						previousValue.ExchangeTelephoneNos1.Remove(this);
					}
					this._Switch1.Entity = value;
					if ((value != null))
					{
						value.ExchangeTelephoneNos1.Add(this);
						this._FromSwitchID = value.ID;
					}
					else
					{
						this._FromSwitchID = default(int);
					}
					this.SendPropertyChanged("Switch1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPrecode_ExchangeTelephoneNo", Storage="_SwitchPrecode", ThisKey="FromSwitchPreCode", OtherKey="ID", IsForeignKey=true)]
		public SwitchPrecode SwitchPrecode
		{
			get
			{
				return this._SwitchPrecode.Entity;
			}
			set
			{
				SwitchPrecode previousValue = this._SwitchPrecode.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPrecode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPrecode.Entity = null;
						previousValue.ExchangeTelephoneNos.Remove(this);
					}
					this._SwitchPrecode.Entity = value;
					if ((value != null))
					{
						value.ExchangeTelephoneNos.Add(this);
						this._FromSwitchPreCode = value.ID;
					}
					else
					{
						this._FromSwitchPreCode = default(int);
					}
					this.SendPropertyChanged("SwitchPrecode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPrecode_ExchangeTelephoneNo1", Storage="_SwitchPrecode1", ThisKey="ToSwitchPreCode", OtherKey="ID", IsForeignKey=true)]
		public SwitchPrecode SwitchPrecode1
		{
			get
			{
				return this._SwitchPrecode1.Entity;
			}
			set
			{
				SwitchPrecode previousValue = this._SwitchPrecode1.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPrecode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPrecode1.Entity = null;
						previousValue.ExchangeTelephoneNos1.Remove(this);
					}
					this._SwitchPrecode1.Entity = value;
					if ((value != null))
					{
						value.ExchangeTelephoneNos1.Add(this);
						this._ToSwitchPreCode = value.ID;
					}
					else
					{
						this._ToSwitchPreCode = default(int);
					}
					this.SendPropertyChanged("SwitchPrecode1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117")]
	public partial class Failure117 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _CabinetNo;
		
		private string _CabinetMarkazi;
		
		private string _PostNo;
		
		private string _PostEtesali;
		
		private System.Nullable<long> _CallingNo;
		
		private System.Nullable<long> _AdjacentTelephoneNo;
		
		private System.Nullable<long> _HearingTelephoneNo;
		
		private System.Data.Linq.Binary _RecordeSound;
		
		private System.Nullable<int> _LineStatusID;
		
		private System.Nullable<byte> _ActionStatusID;
		
		private System.Nullable<int> _FailureStatusID;
		
		private System.Nullable<byte> _MDFSpeed;
		
		private System.Nullable<int> _MDFPesonnelID;
		
		private System.Nullable<int> _MDFUserID;
		
		private System.Nullable<System.DateTime> _MDFDate;
		
		private string _MDFCommnet;
		
		private System.Nullable<int> _NetworkUserID;
		
		private System.Nullable<System.DateTime> _NetworkDate;
		
		private string _NetworkComment;
		
		private System.Nullable<int> _SaloonUserID;
		
		private System.Nullable<System.DateTime> _SaloonDate;
		
		private string _SaloonComment;
		
		private System.Nullable<int> _CableUserID;
		
		private System.Nullable<System.DateTime> _CableDate;
		
		private string _CableComment;
		
		private System.Nullable<int> _EndMDFPersonnelID;
		
		private System.Nullable<int> _EndMDFUserID;
		
		private System.Nullable<System.DateTime> _EndMDFDate;
		
		private string _EndMDFComment;
		
		private System.Nullable<byte> _ResultAfterReturn;
		
		private System.Nullable<long> _HelpDeskTicketID;
		
		private string _HelpDeskDescription;
		
		private EntitySet<FailureForm> _FailureForms;
		
		private EntityRef<Failure117FailureStatus> _Failure117FailureStatus;
		
		private EntityRef<Failure117LineStatus> _Failure117LineStatus;
		
		private EntityRef<MDFPersonnel> _MDFPersonnel;
		
		private EntityRef<MDFPersonnel> _MDFPersonnel1;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCabinetNoChanging(string value);
    partial void OnCabinetNoChanged();
    partial void OnCabinetMarkaziChanging(string value);
    partial void OnCabinetMarkaziChanged();
    partial void OnPostNoChanging(string value);
    partial void OnPostNoChanged();
    partial void OnPostEtesaliChanging(string value);
    partial void OnPostEtesaliChanged();
    partial void OnCallingNoChanging(System.Nullable<long> value);
    partial void OnCallingNoChanged();
    partial void OnAdjacentTelephoneNoChanging(System.Nullable<long> value);
    partial void OnAdjacentTelephoneNoChanged();
    partial void OnHearingTelephoneNoChanging(System.Nullable<long> value);
    partial void OnHearingTelephoneNoChanged();
    partial void OnRecordeSoundChanging(System.Data.Linq.Binary value);
    partial void OnRecordeSoundChanged();
    partial void OnLineStatusIDChanging(System.Nullable<int> value);
    partial void OnLineStatusIDChanged();
    partial void OnActionStatusIDChanging(System.Nullable<byte> value);
    partial void OnActionStatusIDChanged();
    partial void OnFailureStatusIDChanging(System.Nullable<int> value);
    partial void OnFailureStatusIDChanged();
    partial void OnMDFSpeedChanging(System.Nullable<byte> value);
    partial void OnMDFSpeedChanged();
    partial void OnMDFPesonnelIDChanging(System.Nullable<int> value);
    partial void OnMDFPesonnelIDChanged();
    partial void OnMDFUserIDChanging(System.Nullable<int> value);
    partial void OnMDFUserIDChanged();
    partial void OnMDFDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFDateChanged();
    partial void OnMDFCommnetChanging(string value);
    partial void OnMDFCommnetChanged();
    partial void OnNetworkUserIDChanging(System.Nullable<int> value);
    partial void OnNetworkUserIDChanged();
    partial void OnNetworkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkDateChanged();
    partial void OnNetworkCommentChanging(string value);
    partial void OnNetworkCommentChanged();
    partial void OnSaloonUserIDChanging(System.Nullable<int> value);
    partial void OnSaloonUserIDChanged();
    partial void OnSaloonDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaloonDateChanged();
    partial void OnSaloonCommentChanging(string value);
    partial void OnSaloonCommentChanged();
    partial void OnCableUserIDChanging(System.Nullable<int> value);
    partial void OnCableUserIDChanged();
    partial void OnCableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCableDateChanged();
    partial void OnCableCommentChanging(string value);
    partial void OnCableCommentChanged();
    partial void OnEndMDFPersonnelIDChanging(System.Nullable<int> value);
    partial void OnEndMDFPersonnelIDChanged();
    partial void OnEndMDFUserIDChanging(System.Nullable<int> value);
    partial void OnEndMDFUserIDChanged();
    partial void OnEndMDFDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndMDFDateChanged();
    partial void OnEndMDFCommentChanging(string value);
    partial void OnEndMDFCommentChanged();
    partial void OnResultAfterReturnChanging(System.Nullable<byte> value);
    partial void OnResultAfterReturnChanged();
    partial void OnHelpDeskTicketIDChanging(System.Nullable<long> value);
    partial void OnHelpDeskTicketIDChanged();
    partial void OnHelpDeskDescriptionChanging(string value);
    partial void OnHelpDeskDescriptionChanged();
    #endregion
		
		public Failure117()
		{
			this._FailureForms = new EntitySet<FailureForm>(new Action<FailureForm>(this.attach_FailureForms), new Action<FailureForm>(this.detach_FailureForms));
			this._Failure117FailureStatus = default(EntityRef<Failure117FailureStatus>);
			this._Failure117LineStatus = default(EntityRef<Failure117LineStatus>);
			this._MDFPersonnel = default(EntityRef<MDFPersonnel>);
			this._MDFPersonnel1 = default(EntityRef<MDFPersonnel>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="NVarChar(10)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this.OnCabinetNoChanging(value);
					this.SendPropertyChanging();
					this._CabinetNo = value;
					this.SendPropertyChanged("CabinetNo");
					this.OnCabinetNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetMarkazi", DbType="NVarChar(10)")]
		public string CabinetMarkazi
		{
			get
			{
				return this._CabinetMarkazi;
			}
			set
			{
				if ((this._CabinetMarkazi != value))
				{
					this.OnCabinetMarkaziChanging(value);
					this.SendPropertyChanging();
					this._CabinetMarkazi = value;
					this.SendPropertyChanged("CabinetMarkazi");
					this.OnCabinetMarkaziChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="NVarChar(10)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this.OnPostNoChanging(value);
					this.SendPropertyChanging();
					this._PostNo = value;
					this.SendPropertyChanged("PostNo");
					this.OnPostNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesali", DbType="NVarChar(10)")]
		public string PostEtesali
		{
			get
			{
				return this._PostEtesali;
			}
			set
			{
				if ((this._PostEtesali != value))
				{
					this.OnPostEtesaliChanging(value);
					this.SendPropertyChanging();
					this._PostEtesali = value;
					this.SendPropertyChanged("PostEtesali");
					this.OnPostEtesaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallingNo", DbType="BigInt")]
		public System.Nullable<long> CallingNo
		{
			get
			{
				return this._CallingNo;
			}
			set
			{
				if ((this._CallingNo != value))
				{
					this.OnCallingNoChanging(value);
					this.SendPropertyChanging();
					this._CallingNo = value;
					this.SendPropertyChanged("CallingNo");
					this.OnCallingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjacentTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> AdjacentTelephoneNo
		{
			get
			{
				return this._AdjacentTelephoneNo;
			}
			set
			{
				if ((this._AdjacentTelephoneNo != value))
				{
					this.OnAdjacentTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._AdjacentTelephoneNo = value;
					this.SendPropertyChanged("AdjacentTelephoneNo");
					this.OnAdjacentTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearingTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> HearingTelephoneNo
		{
			get
			{
				return this._HearingTelephoneNo;
			}
			set
			{
				if ((this._HearingTelephoneNo != value))
				{
					this.OnHearingTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._HearingTelephoneNo = value;
					this.SendPropertyChanged("HearingTelephoneNo");
					this.OnHearingTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordeSound", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RecordeSound
		{
			get
			{
				return this._RecordeSound;
			}
			set
			{
				if ((this._RecordeSound != value))
				{
					this.OnRecordeSoundChanging(value);
					this.SendPropertyChanging();
					this._RecordeSound = value;
					this.SendPropertyChanged("RecordeSound");
					this.OnRecordeSoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineStatusID", DbType="Int")]
		public System.Nullable<int> LineStatusID
		{
			get
			{
				return this._LineStatusID;
			}
			set
			{
				if ((this._LineStatusID != value))
				{
					if (this._Failure117LineStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineStatusIDChanging(value);
					this.SendPropertyChanging();
					this._LineStatusID = value;
					this.SendPropertyChanged("LineStatusID");
					this.OnLineStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionStatusID", DbType="TinyInt")]
		public System.Nullable<byte> ActionStatusID
		{
			get
			{
				return this._ActionStatusID;
			}
			set
			{
				if ((this._ActionStatusID != value))
				{
					this.OnActionStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ActionStatusID = value;
					this.SendPropertyChanged("ActionStatusID");
					this.OnActionStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureStatusID", DbType="Int")]
		public System.Nullable<int> FailureStatusID
		{
			get
			{
				return this._FailureStatusID;
			}
			set
			{
				if ((this._FailureStatusID != value))
				{
					if (this._Failure117FailureStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFailureStatusIDChanging(value);
					this.SendPropertyChanging();
					this._FailureStatusID = value;
					this.SendPropertyChanged("FailureStatusID");
					this.OnFailureStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFSpeed", DbType="TinyInt")]
		public System.Nullable<byte> MDFSpeed
		{
			get
			{
				return this._MDFSpeed;
			}
			set
			{
				if ((this._MDFSpeed != value))
				{
					this.OnMDFSpeedChanging(value);
					this.SendPropertyChanging();
					this._MDFSpeed = value;
					this.SendPropertyChanged("MDFSpeed");
					this.OnMDFSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFPesonnelID", DbType="Int")]
		public System.Nullable<int> MDFPesonnelID
		{
			get
			{
				return this._MDFPesonnelID;
			}
			set
			{
				if ((this._MDFPesonnelID != value))
				{
					if (this._MDFPersonnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDFPesonnelIDChanging(value);
					this.SendPropertyChanging();
					this._MDFPesonnelID = value;
					this.SendPropertyChanged("MDFPesonnelID");
					this.OnMDFPesonnelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFUserID", DbType="Int")]
		public System.Nullable<int> MDFUserID
		{
			get
			{
				return this._MDFUserID;
			}
			set
			{
				if ((this._MDFUserID != value))
				{
					this.OnMDFUserIDChanging(value);
					this.SendPropertyChanging();
					this._MDFUserID = value;
					this.SendPropertyChanged("MDFUserID");
					this.OnMDFUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFDate
		{
			get
			{
				return this._MDFDate;
			}
			set
			{
				if ((this._MDFDate != value))
				{
					this.OnMDFDateChanging(value);
					this.SendPropertyChanging();
					this._MDFDate = value;
					this.SendPropertyChanged("MDFDate");
					this.OnMDFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFCommnet", DbType="NVarChar(MAX)")]
		public string MDFCommnet
		{
			get
			{
				return this._MDFCommnet;
			}
			set
			{
				if ((this._MDFCommnet != value))
				{
					this.OnMDFCommnetChanging(value);
					this.SendPropertyChanging();
					this._MDFCommnet = value;
					this.SendPropertyChanged("MDFCommnet");
					this.OnMDFCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkUserID", DbType="Int")]
		public System.Nullable<int> NetworkUserID
		{
			get
			{
				return this._NetworkUserID;
			}
			set
			{
				if ((this._NetworkUserID != value))
				{
					this.OnNetworkUserIDChanging(value);
					this.SendPropertyChanging();
					this._NetworkUserID = value;
					this.SendPropertyChanged("NetworkUserID");
					this.OnNetworkUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkDate
		{
			get
			{
				return this._NetworkDate;
			}
			set
			{
				if ((this._NetworkDate != value))
				{
					this.OnNetworkDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkDate = value;
					this.SendPropertyChanged("NetworkDate");
					this.OnNetworkDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkComment", DbType="NVarChar(MAX)")]
		public string NetworkComment
		{
			get
			{
				return this._NetworkComment;
			}
			set
			{
				if ((this._NetworkComment != value))
				{
					this.OnNetworkCommentChanging(value);
					this.SendPropertyChanging();
					this._NetworkComment = value;
					this.SendPropertyChanged("NetworkComment");
					this.OnNetworkCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaloonUserID", DbType="Int")]
		public System.Nullable<int> SaloonUserID
		{
			get
			{
				return this._SaloonUserID;
			}
			set
			{
				if ((this._SaloonUserID != value))
				{
					this.OnSaloonUserIDChanging(value);
					this.SendPropertyChanging();
					this._SaloonUserID = value;
					this.SendPropertyChanged("SaloonUserID");
					this.OnSaloonUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaloonDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SaloonDate
		{
			get
			{
				return this._SaloonDate;
			}
			set
			{
				if ((this._SaloonDate != value))
				{
					this.OnSaloonDateChanging(value);
					this.SendPropertyChanging();
					this._SaloonDate = value;
					this.SendPropertyChanged("SaloonDate");
					this.OnSaloonDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaloonComment", DbType="NVarChar(MAX)")]
		public string SaloonComment
		{
			get
			{
				return this._SaloonComment;
			}
			set
			{
				if ((this._SaloonComment != value))
				{
					this.OnSaloonCommentChanging(value);
					this.SendPropertyChanging();
					this._SaloonComment = value;
					this.SendPropertyChanged("SaloonComment");
					this.OnSaloonCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableUserID", DbType="Int")]
		public System.Nullable<int> CableUserID
		{
			get
			{
				return this._CableUserID;
			}
			set
			{
				if ((this._CableUserID != value))
				{
					this.OnCableUserIDChanging(value);
					this.SendPropertyChanging();
					this._CableUserID = value;
					this.SendPropertyChanged("CableUserID");
					this.OnCableUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CableDate
		{
			get
			{
				return this._CableDate;
			}
			set
			{
				if ((this._CableDate != value))
				{
					this.OnCableDateChanging(value);
					this.SendPropertyChanging();
					this._CableDate = value;
					this.SendPropertyChanged("CableDate");
					this.OnCableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableComment", DbType="NVarChar(MAX)")]
		public string CableComment
		{
			get
			{
				return this._CableComment;
			}
			set
			{
				if ((this._CableComment != value))
				{
					this.OnCableCommentChanging(value);
					this.SendPropertyChanging();
					this._CableComment = value;
					this.SendPropertyChanged("CableComment");
					this.OnCableCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndMDFPersonnelID", DbType="Int")]
		public System.Nullable<int> EndMDFPersonnelID
		{
			get
			{
				return this._EndMDFPersonnelID;
			}
			set
			{
				if ((this._EndMDFPersonnelID != value))
				{
					if (this._MDFPersonnel1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEndMDFPersonnelIDChanging(value);
					this.SendPropertyChanging();
					this._EndMDFPersonnelID = value;
					this.SendPropertyChanged("EndMDFPersonnelID");
					this.OnEndMDFPersonnelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndMDFUserID", DbType="Int")]
		public System.Nullable<int> EndMDFUserID
		{
			get
			{
				return this._EndMDFUserID;
			}
			set
			{
				if ((this._EndMDFUserID != value))
				{
					this.OnEndMDFUserIDChanging(value);
					this.SendPropertyChanging();
					this._EndMDFUserID = value;
					this.SendPropertyChanged("EndMDFUserID");
					this.OnEndMDFUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndMDFDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndMDFDate
		{
			get
			{
				return this._EndMDFDate;
			}
			set
			{
				if ((this._EndMDFDate != value))
				{
					this.OnEndMDFDateChanging(value);
					this.SendPropertyChanging();
					this._EndMDFDate = value;
					this.SendPropertyChanged("EndMDFDate");
					this.OnEndMDFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndMDFComment", DbType="NVarChar(MAX)")]
		public string EndMDFComment
		{
			get
			{
				return this._EndMDFComment;
			}
			set
			{
				if ((this._EndMDFComment != value))
				{
					this.OnEndMDFCommentChanging(value);
					this.SendPropertyChanging();
					this._EndMDFComment = value;
					this.SendPropertyChanged("EndMDFComment");
					this.OnEndMDFCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultAfterReturn", DbType="TinyInt")]
		public System.Nullable<byte> ResultAfterReturn
		{
			get
			{
				return this._ResultAfterReturn;
			}
			set
			{
				if ((this._ResultAfterReturn != value))
				{
					this.OnResultAfterReturnChanging(value);
					this.SendPropertyChanging();
					this._ResultAfterReturn = value;
					this.SendPropertyChanged("ResultAfterReturn");
					this.OnResultAfterReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpDeskTicketID", DbType="BigInt")]
		public System.Nullable<long> HelpDeskTicketID
		{
			get
			{
				return this._HelpDeskTicketID;
			}
			set
			{
				if ((this._HelpDeskTicketID != value))
				{
					this.OnHelpDeskTicketIDChanging(value);
					this.SendPropertyChanging();
					this._HelpDeskTicketID = value;
					this.SendPropertyChanged("HelpDeskTicketID");
					this.OnHelpDeskTicketIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpDeskDescription", DbType="NVarChar(MAX)")]
		public string HelpDeskDescription
		{
			get
			{
				return this._HelpDeskDescription;
			}
			set
			{
				if ((this._HelpDeskDescription != value))
				{
					this.OnHelpDeskDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HelpDeskDescription = value;
					this.SendPropertyChanged("HelpDeskDescription");
					this.OnHelpDeskDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117_FailureForm", Storage="_FailureForms", ThisKey="ID", OtherKey="FailureRequestID")]
		public EntitySet<FailureForm> FailureForms
		{
			get
			{
				return this._FailureForms;
			}
			set
			{
				this._FailureForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117FailureStatus_Failure117", Storage="_Failure117FailureStatus", ThisKey="FailureStatusID", OtherKey="ID", IsForeignKey=true)]
		public Failure117FailureStatus Failure117FailureStatus
		{
			get
			{
				return this._Failure117FailureStatus.Entity;
			}
			set
			{
				Failure117FailureStatus previousValue = this._Failure117FailureStatus.Entity;
				if (((previousValue != value) 
							|| (this._Failure117FailureStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117FailureStatus.Entity = null;
						previousValue.Failure117s.Remove(this);
					}
					this._Failure117FailureStatus.Entity = value;
					if ((value != null))
					{
						value.Failure117s.Add(this);
						this._FailureStatusID = value.ID;
					}
					else
					{
						this._FailureStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Failure117FailureStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117LineStatus_Failure117", Storage="_Failure117LineStatus", ThisKey="LineStatusID", OtherKey="ID", IsForeignKey=true)]
		public Failure117LineStatus Failure117LineStatus
		{
			get
			{
				return this._Failure117LineStatus.Entity;
			}
			set
			{
				Failure117LineStatus previousValue = this._Failure117LineStatus.Entity;
				if (((previousValue != value) 
							|| (this._Failure117LineStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117LineStatus.Entity = null;
						previousValue.Failure117s.Remove(this);
					}
					this._Failure117LineStatus.Entity = value;
					if ((value != null))
					{
						value.Failure117s.Add(this);
						this._LineStatusID = value.ID;
					}
					else
					{
						this._LineStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Failure117LineStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDFPersonnel_Failure117", Storage="_MDFPersonnel", ThisKey="MDFPesonnelID", OtherKey="ID", IsForeignKey=true)]
		public MDFPersonnel MDFPersonnel
		{
			get
			{
				return this._MDFPersonnel.Entity;
			}
			set
			{
				MDFPersonnel previousValue = this._MDFPersonnel.Entity;
				if (((previousValue != value) 
							|| (this._MDFPersonnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MDFPersonnel.Entity = null;
						previousValue.Failure117s.Remove(this);
					}
					this._MDFPersonnel.Entity = value;
					if ((value != null))
					{
						value.Failure117s.Add(this);
						this._MDFPesonnelID = value.ID;
					}
					else
					{
						this._MDFPesonnelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MDFPersonnel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDFPersonnel_Failure1171", Storage="_MDFPersonnel1", ThisKey="EndMDFPersonnelID", OtherKey="ID", IsForeignKey=true)]
		public MDFPersonnel MDFPersonnel1
		{
			get
			{
				return this._MDFPersonnel1.Entity;
			}
			set
			{
				MDFPersonnel previousValue = this._MDFPersonnel1.Entity;
				if (((previousValue != value) 
							|| (this._MDFPersonnel1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MDFPersonnel1.Entity = null;
						previousValue.Failure117s1.Remove(this);
					}
					this._MDFPersonnel1.Entity = value;
					if ((value != null))
					{
						value.Failure117s1.Add(this);
						this._EndMDFPersonnelID = value.ID;
					}
					else
					{
						this._EndMDFPersonnelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MDFPersonnel1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Failure117", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Failure117 = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Failure117 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.Failure117 = this;
		}
		
		private void detach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.Failure117 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117CabenitAccuracy")]
	public partial class Failure117CabenitAccuracy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CabinetID;
		
		private int _CenterID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _CorrectDate;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCabinetIDChanging(int value);
    partial void OnCabinetIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCorrectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCorrectDateChanged();
    #endregion
		
		public Failure117CabenitAccuracy()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int NOT NULL")]
		public int CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CorrectDate
		{
			get
			{
				return this._CorrectDate;
			}
			set
			{
				if ((this._CorrectDate != value))
				{
					this.OnCorrectDateChanging(value);
					this.SendPropertyChanging();
					this._CorrectDate = value;
					this.SendPropertyChanged("CorrectDate");
					this.OnCorrectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Failure117CabenitAccuracy", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Failure117CabenitAccuracies.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Failure117CabenitAccuracies.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117CableType")]
	public partial class Failure117CableType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private EntitySet<FailureForm> _FailureForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Failure117CableType()
		{
			this._FailureForms = new EntitySet<FailureForm>(new Action<FailureForm>(this.attach_FailureForms), new Action<FailureForm>(this.detach_FailureForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117CableType_FailureForm", Storage="_FailureForms", ThisKey="ID", OtherKey="CableTypeID")]
		public EntitySet<FailureForm> FailureForms
		{
			get
			{
				return this._FailureForms;
			}
			set
			{
				this._FailureForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.Failure117CableType = this;
		}
		
		private void detach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.Failure117CableType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117FailureStatus")]
	public partial class Failure117FailureStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Title;
		
		private string _Availablity;
		
		private System.Nullable<int> _ArchivedTime;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<Failure117> _Failure117s;
		
		private EntitySet<Failure117FailureStatus> _Failure117FailureStatus2;
		
		private EntitySet<FailureForm> _FailureForms;
		
		private EntityRef<Failure117FailureStatus> _Failure117FailureStatus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAvailablityChanging(string value);
    partial void OnAvailablityChanged();
    partial void OnArchivedTimeChanging(System.Nullable<int> value);
    partial void OnArchivedTimeChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Failure117FailureStatus()
		{
			this._Failure117s = new EntitySet<Failure117>(new Action<Failure117>(this.attach_Failure117s), new Action<Failure117>(this.detach_Failure117s));
			this._Failure117FailureStatus2 = new EntitySet<Failure117FailureStatus>(new Action<Failure117FailureStatus>(this.attach_Failure117FailureStatus2), new Action<Failure117FailureStatus>(this.detach_Failure117FailureStatus2));
			this._FailureForms = new EntitySet<FailureForm>(new Action<FailureForm>(this.attach_FailureForms), new Action<FailureForm>(this.detach_FailureForms));
			this._Failure117FailureStatus1 = default(EntityRef<Failure117FailureStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Failure117FailureStatus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Availablity", DbType="NVarChar(10)")]
		public string Availablity
		{
			get
			{
				return this._Availablity;
			}
			set
			{
				if ((this._Availablity != value))
				{
					this.OnAvailablityChanging(value);
					this.SendPropertyChanging();
					this._Availablity = value;
					this.SendPropertyChanged("Availablity");
					this.OnAvailablityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchivedTime", DbType="Int")]
		public System.Nullable<int> ArchivedTime
		{
			get
			{
				return this._ArchivedTime;
			}
			set
			{
				if ((this._ArchivedTime != value))
				{
					this.OnArchivedTimeChanging(value);
					this.SendPropertyChanging();
					this._ArchivedTime = value;
					this.SendPropertyChanged("ArchivedTime");
					this.OnArchivedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117FailureStatus_Failure117", Storage="_Failure117s", ThisKey="ID", OtherKey="FailureStatusID")]
		public EntitySet<Failure117> Failure117s
		{
			get
			{
				return this._Failure117s;
			}
			set
			{
				this._Failure117s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117FailureStatus_Failure117FailureStatus", Storage="_Failure117FailureStatus2", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Failure117FailureStatus> Failure117FailureStatus2
		{
			get
			{
				return this._Failure117FailureStatus2;
			}
			set
			{
				this._Failure117FailureStatus2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117FailureStatus_FailureForm", Storage="_FailureForms", ThisKey="ID", OtherKey="FailureStatusID")]
		public EntitySet<FailureForm> FailureForms
		{
			get
			{
				return this._FailureForms;
			}
			set
			{
				this._FailureForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117FailureStatus_Failure117FailureStatus", Storage="_Failure117FailureStatus1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Failure117FailureStatus Failure117FailureStatus1
		{
			get
			{
				return this._Failure117FailureStatus1.Entity;
			}
			set
			{
				Failure117FailureStatus previousValue = this._Failure117FailureStatus1.Entity;
				if (((previousValue != value) 
							|| (this._Failure117FailureStatus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117FailureStatus1.Entity = null;
						previousValue.Failure117FailureStatus2.Remove(this);
					}
					this._Failure117FailureStatus1.Entity = value;
					if ((value != null))
					{
						value.Failure117FailureStatus2.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Failure117FailureStatus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Failure117s(Failure117 entity)
		{
			this.SendPropertyChanging();
			entity.Failure117FailureStatus = this;
		}
		
		private void detach_Failure117s(Failure117 entity)
		{
			this.SendPropertyChanging();
			entity.Failure117FailureStatus = null;
		}
		
		private void attach_Failure117FailureStatus2(Failure117FailureStatus entity)
		{
			this.SendPropertyChanging();
			entity.Failure117FailureStatus1 = this;
		}
		
		private void detach_Failure117FailureStatus2(Failure117FailureStatus entity)
		{
			this.SendPropertyChanging();
			entity.Failure117FailureStatus1 = null;
		}
		
		private void attach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.Failure117FailureStatus = this;
		}
		
		private void detach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.Failure117FailureStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117LineStatus")]
	public partial class Failure117LineStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private byte _Type;
		
		private string _Title;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<Failure117> _Failure117s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Failure117LineStatus()
		{
			this._Failure117s = new EntitySet<Failure117>(new Action<Failure117>(this.attach_Failure117s), new Action<Failure117>(this.detach_Failure117s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117LineStatus_Failure117", Storage="_Failure117s", ThisKey="ID", OtherKey="LineStatusID")]
		public EntitySet<Failure117> Failure117s
		{
			get
			{
				return this._Failure117s;
			}
			set
			{
				this._Failure117s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Failure117s(Failure117 entity)
		{
			this.SendPropertyChanging();
			entity.Failure117LineStatus = this;
		}
		
		private void detach_Failure117s(Failure117 entity)
		{
			this.SendPropertyChanging();
			entity.Failure117LineStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117NetworkContractor")]
	public partial class Failure117NetworkContractor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Manager;
		
		private string _TelephoneNo;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Address;
		
		private EntitySet<Failure117NetworkContractorCenter> _Failure117NetworkContractorCenters;
		
		private EntitySet<Failure117NetworkContractorOfficer> _Failure117NetworkContractorOfficers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public Failure117NetworkContractor()
		{
			this._Failure117NetworkContractorCenters = new EntitySet<Failure117NetworkContractorCenter>(new Action<Failure117NetworkContractorCenter>(this.attach_Failure117NetworkContractorCenters), new Action<Failure117NetworkContractorCenter>(this.detach_Failure117NetworkContractorCenters));
			this._Failure117NetworkContractorOfficers = new EntitySet<Failure117NetworkContractorOfficer>(new Action<Failure117NetworkContractorOfficer>(this.attach_Failure117NetworkContractorOfficers), new Action<Failure117NetworkContractorOfficer>(this.detach_Failure117NetworkContractorOfficers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(100)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="NVarChar(50)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117NetworkContractor_Failure117NetworkContractorCenter", Storage="_Failure117NetworkContractorCenters", ThisKey="ID", OtherKey="ContractorID")]
		public EntitySet<Failure117NetworkContractorCenter> Failure117NetworkContractorCenters
		{
			get
			{
				return this._Failure117NetworkContractorCenters;
			}
			set
			{
				this._Failure117NetworkContractorCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117NetworkContractor_Failure117NetworkContractorOfficer", Storage="_Failure117NetworkContractorOfficers", ThisKey="ID", OtherKey="ContractorID")]
		public EntitySet<Failure117NetworkContractorOfficer> Failure117NetworkContractorOfficers
		{
			get
			{
				return this._Failure117NetworkContractorOfficers;
			}
			set
			{
				this._Failure117NetworkContractorOfficers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Failure117NetworkContractorCenters(Failure117NetworkContractorCenter entity)
		{
			this.SendPropertyChanging();
			entity.Failure117NetworkContractor = this;
		}
		
		private void detach_Failure117NetworkContractorCenters(Failure117NetworkContractorCenter entity)
		{
			this.SendPropertyChanging();
			entity.Failure117NetworkContractor = null;
		}
		
		private void attach_Failure117NetworkContractorOfficers(Failure117NetworkContractorOfficer entity)
		{
			this.SendPropertyChanging();
			entity.Failure117NetworkContractor = this;
		}
		
		private void detach_Failure117NetworkContractorOfficers(Failure117NetworkContractorOfficer entity)
		{
			this.SendPropertyChanging();
			entity.Failure117NetworkContractor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117NetworkContractorCenter")]
	public partial class Failure117NetworkContractorCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContractorID;
		
		private int _CenterID;
		
		private EntityRef<Failure117NetworkContractor> _Failure117NetworkContractor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContractorIDChanging(int value);
    partial void OnContractorIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    #endregion
		
		public Failure117NetworkContractorCenter()
		{
			this._Failure117NetworkContractor = default(EntityRef<Failure117NetworkContractor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorID", DbType="Int NOT NULL")]
		public int ContractorID
		{
			get
			{
				return this._ContractorID;
			}
			set
			{
				if ((this._ContractorID != value))
				{
					if (this._Failure117NetworkContractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIDChanging(value);
					this.SendPropertyChanging();
					this._ContractorID = value;
					this.SendPropertyChanged("ContractorID");
					this.OnContractorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117NetworkContractor_Failure117NetworkContractorCenter", Storage="_Failure117NetworkContractor", ThisKey="ContractorID", OtherKey="ID", IsForeignKey=true)]
		public Failure117NetworkContractor Failure117NetworkContractor
		{
			get
			{
				return this._Failure117NetworkContractor.Entity;
			}
			set
			{
				Failure117NetworkContractor previousValue = this._Failure117NetworkContractor.Entity;
				if (((previousValue != value) 
							|| (this._Failure117NetworkContractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117NetworkContractor.Entity = null;
						previousValue.Failure117NetworkContractorCenters.Remove(this);
					}
					this._Failure117NetworkContractor.Entity = value;
					if ((value != null))
					{
						value.Failure117NetworkContractorCenters.Add(this);
						this._ContractorID = value.ID;
					}
					else
					{
						this._ContractorID = default(int);
					}
					this.SendPropertyChanged("Failure117NetworkContractor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117NetworkContractorOfficer")]
	public partial class Failure117NetworkContractorOfficer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContractorID;
		
		private string _Name;
		
		private string _TelephoneNo;
		
		private EntitySet<FailureForm> _FailureForms;
		
		private EntitySet<Wiring> _Wirings;
		
		private EntityRef<Failure117NetworkContractor> _Failure117NetworkContractor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContractorIDChanging(int value);
    partial void OnContractorIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    #endregion
		
		public Failure117NetworkContractorOfficer()
		{
			this._FailureForms = new EntitySet<FailureForm>(new Action<FailureForm>(this.attach_FailureForms), new Action<FailureForm>(this.detach_FailureForms));
			this._Wirings = new EntitySet<Wiring>(new Action<Wiring>(this.attach_Wirings), new Action<Wiring>(this.detach_Wirings));
			this._Failure117NetworkContractor = default(EntityRef<Failure117NetworkContractor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorID", DbType="Int NOT NULL")]
		public int ContractorID
		{
			get
			{
				return this._ContractorID;
			}
			set
			{
				if ((this._ContractorID != value))
				{
					if (this._Failure117NetworkContractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIDChanging(value);
					this.SendPropertyChanging();
					this._ContractorID = value;
					this.SendPropertyChanged("ContractorID");
					this.OnContractorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="NVarChar(50)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117NetworkContractorOfficer_FailureForm", Storage="_FailureForms", ThisKey="ID", OtherKey="Failure117NetworkContractorOfficerID")]
		public EntitySet<FailureForm> FailureForms
		{
			get
			{
				return this._FailureForms;
			}
			set
			{
				this._FailureForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117NetworkContractorOfficer_Wiring", Storage="_Wirings", ThisKey="ID", OtherKey="NetworkOfficerID")]
		public EntitySet<Wiring> Wirings
		{
			get
			{
				return this._Wirings;
			}
			set
			{
				this._Wirings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117NetworkContractor_Failure117NetworkContractorOfficer", Storage="_Failure117NetworkContractor", ThisKey="ContractorID", OtherKey="ID", IsForeignKey=true)]
		public Failure117NetworkContractor Failure117NetworkContractor
		{
			get
			{
				return this._Failure117NetworkContractor.Entity;
			}
			set
			{
				Failure117NetworkContractor previousValue = this._Failure117NetworkContractor.Entity;
				if (((previousValue != value) 
							|| (this._Failure117NetworkContractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117NetworkContractor.Entity = null;
						previousValue.Failure117NetworkContractorOfficers.Remove(this);
					}
					this._Failure117NetworkContractor.Entity = value;
					if ((value != null))
					{
						value.Failure117NetworkContractorOfficers.Add(this);
						this._ContractorID = value.ID;
					}
					else
					{
						this._ContractorID = default(int);
					}
					this.SendPropertyChanged("Failure117NetworkContractor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.Failure117NetworkContractorOfficer = this;
		}
		
		private void detach_FailureForms(FailureForm entity)
		{
			this.SendPropertyChanging();
			entity.Failure117NetworkContractorOfficer = null;
		}
		
		private void attach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Failure117NetworkContractorOfficer = this;
		}
		
		private void detach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Failure117NetworkContractorOfficer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117PostAccuracy")]
	public partial class Failure117PostAccuracy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PostID;
		
		private int _CabinetID;
		
		private int _CenterID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _CorrectDate;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPostIDChanging(int value);
    partial void OnPostIDChanged();
    partial void OnCabinetIDChanging(int value);
    partial void OnCabinetIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCorrectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCorrectDateChanged();
    #endregion
		
		public Failure117PostAccuracy()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int NOT NULL")]
		public int PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int NOT NULL")]
		public int CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CorrectDate
		{
			get
			{
				return this._CorrectDate;
			}
			set
			{
				if ((this._CorrectDate != value))
				{
					this.OnCorrectDateChanging(value);
					this.SendPropertyChanging();
					this._CorrectDate = value;
					this.SendPropertyChanged("CorrectDate");
					this.OnCorrectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Failure117PostAccuracy", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Failure117PostAccuracies.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Failure117PostAccuracies.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117TelephoneAccuracy")]
	public partial class Failure117TelephoneAccuracy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _TelephoneNo;
		
		private int _CenterID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _CorrectDate;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCorrectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCorrectDateChanged();
    #endregion
		
		public Failure117TelephoneAccuracy()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CorrectDate
		{
			get
			{
				return this._CorrectDate;
			}
			set
			{
				if ((this._CorrectDate != value))
				{
					this.OnCorrectDateChanging(value);
					this.SendPropertyChanging();
					this._CorrectDate = value;
					this.SendPropertyChanged("CorrectDate");
					this.OnCorrectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Failure117TelephoneAccuracy", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Failure117TelephoneAccuracies.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Failure117TelephoneAccuracies.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FailureForm")]
	public partial class FailureForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _FailureRequestID;
		
		private int _RowNo;
		
		private System.Nullable<int> _FailureStatusID;
		
		private System.Nullable<int> _CableColor1;
		
		private System.Nullable<int> _CableColor2;
		
		private int _CableTypeID;
		
		private System.Nullable<int> _Failure117NetworkContractorOfficerID;
		
		private System.Nullable<byte> _FailureSpeed;
		
		private System.Nullable<System.DateTime> _GiveNetworkFormDate;
		
		private string _GiveNetworkFormTime;
		
		private System.Nullable<System.DateTime> _GetNetworkFormDate;
		
		private string _GetNetworkFormTime;
		
		private System.Nullable<System.DateTime> _SendToCabelDate;
		
		private string _SendToCabelTime;
		
		private System.Nullable<System.DateTime> _CabelDate;
		
		private string _CabelTime;
		
		private System.Nullable<System.DateTime> _FormInsertDate;
		
		private string _Description;
		
		private EntityRef<CableColor> _CableColor;
		
		private EntityRef<CableColor> _CableColor3;
		
		private EntityRef<Failure117> _Failure117;
		
		private EntityRef<Failure117CableType> _Failure117CableType;
		
		private EntityRef<Failure117FailureStatus> _Failure117FailureStatus;
		
		private EntityRef<Failure117NetworkContractorOfficer> _Failure117NetworkContractorOfficer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFailureRequestIDChanging(long value);
    partial void OnFailureRequestIDChanged();
    partial void OnRowNoChanging(int value);
    partial void OnRowNoChanged();
    partial void OnFailureStatusIDChanging(System.Nullable<int> value);
    partial void OnFailureStatusIDChanged();
    partial void OnCableColor1Changing(System.Nullable<int> value);
    partial void OnCableColor1Changed();
    partial void OnCableColor2Changing(System.Nullable<int> value);
    partial void OnCableColor2Changed();
    partial void OnCableTypeIDChanging(int value);
    partial void OnCableTypeIDChanged();
    partial void OnFailure117NetworkContractorOfficerIDChanging(System.Nullable<int> value);
    partial void OnFailure117NetworkContractorOfficerIDChanged();
    partial void OnFailureSpeedChanging(System.Nullable<byte> value);
    partial void OnFailureSpeedChanged();
    partial void OnGiveNetworkFormDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGiveNetworkFormDateChanged();
    partial void OnGiveNetworkFormTimeChanging(string value);
    partial void OnGiveNetworkFormTimeChanged();
    partial void OnGetNetworkFormDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGetNetworkFormDateChanged();
    partial void OnGetNetworkFormTimeChanging(string value);
    partial void OnGetNetworkFormTimeChanged();
    partial void OnSendToCabelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendToCabelDateChanged();
    partial void OnSendToCabelTimeChanging(string value);
    partial void OnSendToCabelTimeChanged();
    partial void OnCabelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCabelDateChanged();
    partial void OnCabelTimeChanging(string value);
    partial void OnCabelTimeChanged();
    partial void OnFormInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFormInsertDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public FailureForm()
		{
			this._CableColor = default(EntityRef<CableColor>);
			this._CableColor3 = default(EntityRef<CableColor>);
			this._Failure117 = default(EntityRef<Failure117>);
			this._Failure117CableType = default(EntityRef<Failure117CableType>);
			this._Failure117FailureStatus = default(EntityRef<Failure117FailureStatus>);
			this._Failure117NetworkContractorOfficer = default(EntityRef<Failure117NetworkContractorOfficer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureRequestID", DbType="BigInt NOT NULL")]
		public long FailureRequestID
		{
			get
			{
				return this._FailureRequestID;
			}
			set
			{
				if ((this._FailureRequestID != value))
				{
					if (this._Failure117.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFailureRequestIDChanging(value);
					this.SendPropertyChanging();
					this._FailureRequestID = value;
					this.SendPropertyChanged("FailureRequestID");
					this.OnFailureRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNo", DbType="Int NOT NULL")]
		public int RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this.OnRowNoChanging(value);
					this.SendPropertyChanging();
					this._RowNo = value;
					this.SendPropertyChanged("RowNo");
					this.OnRowNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureStatusID", DbType="Int")]
		public System.Nullable<int> FailureStatusID
		{
			get
			{
				return this._FailureStatusID;
			}
			set
			{
				if ((this._FailureStatusID != value))
				{
					if (this._Failure117FailureStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFailureStatusIDChanging(value);
					this.SendPropertyChanging();
					this._FailureStatusID = value;
					this.SendPropertyChanged("FailureStatusID");
					this.OnFailureStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableColor1", DbType="Int")]
		public System.Nullable<int> CableColor1
		{
			get
			{
				return this._CableColor1;
			}
			set
			{
				if ((this._CableColor1 != value))
				{
					if (this._CableColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCableColor1Changing(value);
					this.SendPropertyChanging();
					this._CableColor1 = value;
					this.SendPropertyChanged("CableColor1");
					this.OnCableColor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableColor2", DbType="Int")]
		public System.Nullable<int> CableColor2
		{
			get
			{
				return this._CableColor2;
			}
			set
			{
				if ((this._CableColor2 != value))
				{
					if (this._CableColor3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCableColor2Changing(value);
					this.SendPropertyChanging();
					this._CableColor2 = value;
					this.SendPropertyChanged("CableColor2");
					this.OnCableColor2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableTypeID", DbType="Int NOT NULL")]
		public int CableTypeID
		{
			get
			{
				return this._CableTypeID;
			}
			set
			{
				if ((this._CableTypeID != value))
				{
					if (this._Failure117CableType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCableTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CableTypeID = value;
					this.SendPropertyChanged("CableTypeID");
					this.OnCableTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Failure117NetworkContractorOfficerID", DbType="Int")]
		public System.Nullable<int> Failure117NetworkContractorOfficerID
		{
			get
			{
				return this._Failure117NetworkContractorOfficerID;
			}
			set
			{
				if ((this._Failure117NetworkContractorOfficerID != value))
				{
					if (this._Failure117NetworkContractorOfficer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFailure117NetworkContractorOfficerIDChanging(value);
					this.SendPropertyChanging();
					this._Failure117NetworkContractorOfficerID = value;
					this.SendPropertyChanged("Failure117NetworkContractorOfficerID");
					this.OnFailure117NetworkContractorOfficerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureSpeed", DbType="TinyInt")]
		public System.Nullable<byte> FailureSpeed
		{
			get
			{
				return this._FailureSpeed;
			}
			set
			{
				if ((this._FailureSpeed != value))
				{
					this.OnFailureSpeedChanging(value);
					this.SendPropertyChanging();
					this._FailureSpeed = value;
					this.SendPropertyChanged("FailureSpeed");
					this.OnFailureSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiveNetworkFormDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> GiveNetworkFormDate
		{
			get
			{
				return this._GiveNetworkFormDate;
			}
			set
			{
				if ((this._GiveNetworkFormDate != value))
				{
					this.OnGiveNetworkFormDateChanging(value);
					this.SendPropertyChanging();
					this._GiveNetworkFormDate = value;
					this.SendPropertyChanged("GiveNetworkFormDate");
					this.OnGiveNetworkFormDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiveNetworkFormTime", DbType="NVarChar(20)")]
		public string GiveNetworkFormTime
		{
			get
			{
				return this._GiveNetworkFormTime;
			}
			set
			{
				if ((this._GiveNetworkFormTime != value))
				{
					this.OnGiveNetworkFormTimeChanging(value);
					this.SendPropertyChanging();
					this._GiveNetworkFormTime = value;
					this.SendPropertyChanged("GiveNetworkFormTime");
					this.OnGiveNetworkFormTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetNetworkFormDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> GetNetworkFormDate
		{
			get
			{
				return this._GetNetworkFormDate;
			}
			set
			{
				if ((this._GetNetworkFormDate != value))
				{
					this.OnGetNetworkFormDateChanging(value);
					this.SendPropertyChanging();
					this._GetNetworkFormDate = value;
					this.SendPropertyChanged("GetNetworkFormDate");
					this.OnGetNetworkFormDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetNetworkFormTime", DbType="NVarChar(20)")]
		public string GetNetworkFormTime
		{
			get
			{
				return this._GetNetworkFormTime;
			}
			set
			{
				if ((this._GetNetworkFormTime != value))
				{
					this.OnGetNetworkFormTimeChanging(value);
					this.SendPropertyChanging();
					this._GetNetworkFormTime = value;
					this.SendPropertyChanged("GetNetworkFormTime");
					this.OnGetNetworkFormTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToCabelDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SendToCabelDate
		{
			get
			{
				return this._SendToCabelDate;
			}
			set
			{
				if ((this._SendToCabelDate != value))
				{
					this.OnSendToCabelDateChanging(value);
					this.SendPropertyChanging();
					this._SendToCabelDate = value;
					this.SendPropertyChanged("SendToCabelDate");
					this.OnSendToCabelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToCabelTime", DbType="NVarChar(20)")]
		public string SendToCabelTime
		{
			get
			{
				return this._SendToCabelTime;
			}
			set
			{
				if ((this._SendToCabelTime != value))
				{
					this.OnSendToCabelTimeChanging(value);
					this.SendPropertyChanging();
					this._SendToCabelTime = value;
					this.SendPropertyChanged("SendToCabelTime");
					this.OnSendToCabelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabelDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CabelDate
		{
			get
			{
				return this._CabelDate;
			}
			set
			{
				if ((this._CabelDate != value))
				{
					this.OnCabelDateChanging(value);
					this.SendPropertyChanging();
					this._CabelDate = value;
					this.SendPropertyChanged("CabelDate");
					this.OnCabelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabelTime", DbType="NVarChar(20)")]
		public string CabelTime
		{
			get
			{
				return this._CabelTime;
			}
			set
			{
				if ((this._CabelTime != value))
				{
					this.OnCabelTimeChanging(value);
					this.SendPropertyChanging();
					this._CabelTime = value;
					this.SendPropertyChanged("CabelTime");
					this.OnCabelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormInsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FormInsertDate
		{
			get
			{
				return this._FormInsertDate;
			}
			set
			{
				if ((this._FormInsertDate != value))
				{
					this.OnFormInsertDateChanging(value);
					this.SendPropertyChanging();
					this._FormInsertDate = value;
					this.SendPropertyChanged("FormInsertDate");
					this.OnFormInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableColor_FailureForm", Storage="_CableColor", ThisKey="CableColor1", OtherKey="ID", IsForeignKey=true)]
		public CableColor CableColor
		{
			get
			{
				return this._CableColor.Entity;
			}
			set
			{
				CableColor previousValue = this._CableColor.Entity;
				if (((previousValue != value) 
							|| (this._CableColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CableColor.Entity = null;
						previousValue.FailureForms.Remove(this);
					}
					this._CableColor.Entity = value;
					if ((value != null))
					{
						value.FailureForms.Add(this);
						this._CableColor1 = value.ID;
					}
					else
					{
						this._CableColor1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("CableColor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableColor_FailureForm1", Storage="_CableColor3", ThisKey="CableColor2", OtherKey="ID", IsForeignKey=true)]
		public CableColor CableColor3
		{
			get
			{
				return this._CableColor3.Entity;
			}
			set
			{
				CableColor previousValue = this._CableColor3.Entity;
				if (((previousValue != value) 
							|| (this._CableColor3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CableColor3.Entity = null;
						previousValue.FailureForms1.Remove(this);
					}
					this._CableColor3.Entity = value;
					if ((value != null))
					{
						value.FailureForms1.Add(this);
						this._CableColor2 = value.ID;
					}
					else
					{
						this._CableColor2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("CableColor3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117_FailureForm", Storage="_Failure117", ThisKey="FailureRequestID", OtherKey="ID", IsForeignKey=true)]
		public Failure117 Failure117
		{
			get
			{
				return this._Failure117.Entity;
			}
			set
			{
				Failure117 previousValue = this._Failure117.Entity;
				if (((previousValue != value) 
							|| (this._Failure117.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117.Entity = null;
						previousValue.FailureForms.Remove(this);
					}
					this._Failure117.Entity = value;
					if ((value != null))
					{
						value.FailureForms.Add(this);
						this._FailureRequestID = value.ID;
					}
					else
					{
						this._FailureRequestID = default(long);
					}
					this.SendPropertyChanged("Failure117");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117CableType_FailureForm", Storage="_Failure117CableType", ThisKey="CableTypeID", OtherKey="ID", IsForeignKey=true)]
		public Failure117CableType Failure117CableType
		{
			get
			{
				return this._Failure117CableType.Entity;
			}
			set
			{
				Failure117CableType previousValue = this._Failure117CableType.Entity;
				if (((previousValue != value) 
							|| (this._Failure117CableType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117CableType.Entity = null;
						previousValue.FailureForms.Remove(this);
					}
					this._Failure117CableType.Entity = value;
					if ((value != null))
					{
						value.FailureForms.Add(this);
						this._CableTypeID = value.ID;
					}
					else
					{
						this._CableTypeID = default(int);
					}
					this.SendPropertyChanged("Failure117CableType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117FailureStatus_FailureForm", Storage="_Failure117FailureStatus", ThisKey="FailureStatusID", OtherKey="ID", IsForeignKey=true)]
		public Failure117FailureStatus Failure117FailureStatus
		{
			get
			{
				return this._Failure117FailureStatus.Entity;
			}
			set
			{
				Failure117FailureStatus previousValue = this._Failure117FailureStatus.Entity;
				if (((previousValue != value) 
							|| (this._Failure117FailureStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117FailureStatus.Entity = null;
						previousValue.FailureForms.Remove(this);
					}
					this._Failure117FailureStatus.Entity = value;
					if ((value != null))
					{
						value.FailureForms.Add(this);
						this._FailureStatusID = value.ID;
					}
					else
					{
						this._FailureStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Failure117FailureStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117NetworkContractorOfficer_FailureForm", Storage="_Failure117NetworkContractorOfficer", ThisKey="Failure117NetworkContractorOfficerID", OtherKey="ID", IsForeignKey=true)]
		public Failure117NetworkContractorOfficer Failure117NetworkContractorOfficer
		{
			get
			{
				return this._Failure117NetworkContractorOfficer.Entity;
			}
			set
			{
				Failure117NetworkContractorOfficer previousValue = this._Failure117NetworkContractorOfficer.Entity;
				if (((previousValue != value) 
							|| (this._Failure117NetworkContractorOfficer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117NetworkContractorOfficer.Entity = null;
						previousValue.FailureForms.Remove(this);
					}
					this._Failure117NetworkContractorOfficer.Entity = value;
					if ((value != null))
					{
						value.FailureForms.Add(this);
						this._Failure117NetworkContractorOfficerID = value.ID;
					}
					else
					{
						this._Failure117NetworkContractorOfficerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Failure117NetworkContractorOfficer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fiche")]
	public partial class Fiche : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FicheName;
		
		private System.Nullable<int> _CentreID;
		
		private System.Nullable<System.DateTime> _SaleStartDate;
		
		private System.Nullable<System.DateTime> _SaleEndDate;
		
		private System.Nullable<System.DateTime> _TransferStartDate;
		
		private System.Nullable<System.DateTime> _TransferEndDate;
		
		private System.Nullable<byte> _Status;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFicheNameChanging(string value);
    partial void OnFicheNameChanged();
    partial void OnCentreIDChanging(System.Nullable<int> value);
    partial void OnCentreIDChanged();
    partial void OnSaleStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleStartDateChanged();
    partial void OnSaleEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleEndDateChanged();
    partial void OnTransferStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferStartDateChanged();
    partial void OnTransferEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferEndDateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public Fiche()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicheName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FicheName
		{
			get
			{
				return this._FicheName;
			}
			set
			{
				if ((this._FicheName != value))
				{
					this.OnFicheNameChanging(value);
					this.SendPropertyChanging();
					this._FicheName = value;
					this.SendPropertyChanged("FicheName");
					this.OnFicheNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CentreID", DbType="Int")]
		public System.Nullable<int> CentreID
		{
			get
			{
				return this._CentreID;
			}
			set
			{
				if ((this._CentreID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCentreIDChanging(value);
					this.SendPropertyChanging();
					this._CentreID = value;
					this.SendPropertyChanged("CentreID");
					this.OnCentreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SaleStartDate
		{
			get
			{
				return this._SaleStartDate;
			}
			set
			{
				if ((this._SaleStartDate != value))
				{
					this.OnSaleStartDateChanging(value);
					this.SendPropertyChanging();
					this._SaleStartDate = value;
					this.SendPropertyChanged("SaleStartDate");
					this.OnSaleStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleEndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SaleEndDate
		{
			get
			{
				return this._SaleEndDate;
			}
			set
			{
				if ((this._SaleEndDate != value))
				{
					this.OnSaleEndDateChanging(value);
					this.SendPropertyChanging();
					this._SaleEndDate = value;
					this.SendPropertyChanged("SaleEndDate");
					this.OnSaleEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TransferStartDate
		{
			get
			{
				return this._TransferStartDate;
			}
			set
			{
				if ((this._TransferStartDate != value))
				{
					this.OnTransferStartDateChanging(value);
					this.SendPropertyChanging();
					this._TransferStartDate = value;
					this.SendPropertyChanged("TransferStartDate");
					this.OnTransferStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferEndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TransferEndDate
		{
			get
			{
				return this._TransferEndDate;
			}
			set
			{
				if ((this._TransferEndDate != value))
				{
					this.OnTransferEndDateChanging(value);
					this.SendPropertyChanging();
					this._TransferEndDate = value;
					this.SendPropertyChanged("TransferEndDate");
					this.OnTransferEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Fiche", Storage="_Center", ThisKey="CentreID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Fiches.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Fiches.Add(this);
						this._CentreID = value.ID;
					}
					else
					{
						this._CentreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Filter")]
	public partial class Filter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FilterId;
		
		private string _Entity;
		
		private string _FilterName;
		
		private int _UserId;
		
		private EntitySet<FilterRule> _FilterRules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFilterIdChanging(int value);
    partial void OnFilterIdChanged();
    partial void OnEntityChanging(string value);
    partial void OnEntityChanged();
    partial void OnFilterNameChanging(string value);
    partial void OnFilterNameChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public Filter()
		{
			this._FilterRules = new EntitySet<FilterRule>(new Action<FilterRule>(this.attach_FilterRules), new Action<FilterRule>(this.detach_FilterRules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FilterId
		{
			get
			{
				return this._FilterId;
			}
			set
			{
				if ((this._FilterId != value))
				{
					this.OnFilterIdChanging(value);
					this.SendPropertyChanging();
					this._FilterId = value;
					this.SendPropertyChanged("FilterId");
					this.OnFilterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity", DbType="VarChar(100)")]
		public string Entity
		{
			get
			{
				return this._Entity;
			}
			set
			{
				if ((this._Entity != value))
				{
					this.OnEntityChanging(value);
					this.SendPropertyChanging();
					this._Entity = value;
					this.SendPropertyChanged("Entity");
					this.OnEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FilterName
		{
			get
			{
				return this._FilterName;
			}
			set
			{
				if ((this._FilterName != value))
				{
					this.OnFilterNameChanging(value);
					this.SendPropertyChanging();
					this._FilterName = value;
					this.SendPropertyChanged("FilterName");
					this.OnFilterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filter_FilterRule", Storage="_FilterRules", ThisKey="FilterId", OtherKey="FilterId")]
		public EntitySet<FilterRule> FilterRules
		{
			get
			{
				return this._FilterRules;
			}
			set
			{
				this._FilterRules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FilterRules(FilterRule entity)
		{
			this.SendPropertyChanging();
			entity.Filter = this;
		}
		
		private void detach_FilterRules(FilterRule entity)
		{
			this.SendPropertyChanging();
			entity.Filter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FilterColumn")]
	public partial class FilterColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FilterColumnId;
		
		private string _FilterColumnName;
		
		private string _Entity;
		
		private EntitySet<FilterRule> _FilterRules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFilterColumnIdChanging(int value);
    partial void OnFilterColumnIdChanged();
    partial void OnFilterColumnNameChanging(string value);
    partial void OnFilterColumnNameChanged();
    partial void OnEntityChanging(string value);
    partial void OnEntityChanged();
    #endregion
		
		public FilterColumn()
		{
			this._FilterRules = new EntitySet<FilterRule>(new Action<FilterRule>(this.attach_FilterRules), new Action<FilterRule>(this.detach_FilterRules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterColumnId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FilterColumnId
		{
			get
			{
				return this._FilterColumnId;
			}
			set
			{
				if ((this._FilterColumnId != value))
				{
					this.OnFilterColumnIdChanging(value);
					this.SendPropertyChanging();
					this._FilterColumnId = value;
					this.SendPropertyChanged("FilterColumnId");
					this.OnFilterColumnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterColumnName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FilterColumnName
		{
			get
			{
				return this._FilterColumnName;
			}
			set
			{
				if ((this._FilterColumnName != value))
				{
					this.OnFilterColumnNameChanging(value);
					this.SendPropertyChanging();
					this._FilterColumnName = value;
					this.SendPropertyChanged("FilterColumnName");
					this.OnFilterColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Entity
		{
			get
			{
				return this._Entity;
			}
			set
			{
				if ((this._Entity != value))
				{
					this.OnEntityChanging(value);
					this.SendPropertyChanging();
					this._Entity = value;
					this.SendPropertyChanged("Entity");
					this.OnEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FilterColumn_FilterRule", Storage="_FilterRules", ThisKey="FilterColumnId", OtherKey="FilterColumnId")]
		public EntitySet<FilterRule> FilterRules
		{
			get
			{
				return this._FilterRules;
			}
			set
			{
				this._FilterRules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FilterRules(FilterRule entity)
		{
			this.SendPropertyChanging();
			entity.FilterColumn = this;
		}
		
		private void detach_FilterRules(FilterRule entity)
		{
			this.SendPropertyChanging();
			entity.FilterColumn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FilterRule")]
	public partial class FilterRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FilterRuleId;
		
		private int _FilterId;
		
		private int _FilterColumnId;
		
		private int _RelationalOperatorId;
		
		private System.Nullable<int> _LogicalOperatorId;
		
		private string _ColumnValue;
		
		private EntityRef<Filter> _Filter;
		
		private EntityRef<FilterColumn> _FilterColumn;
		
		private EntityRef<LogicalOperator> _LogicalOperator;
		
		private EntityRef<RelationalOperator> _RelationalOperator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFilterRuleIdChanging(int value);
    partial void OnFilterRuleIdChanged();
    partial void OnFilterIdChanging(int value);
    partial void OnFilterIdChanged();
    partial void OnFilterColumnIdChanging(int value);
    partial void OnFilterColumnIdChanged();
    partial void OnRelationalOperatorIdChanging(int value);
    partial void OnRelationalOperatorIdChanged();
    partial void OnLogicalOperatorIdChanging(System.Nullable<int> value);
    partial void OnLogicalOperatorIdChanged();
    partial void OnColumnValueChanging(string value);
    partial void OnColumnValueChanged();
    #endregion
		
		public FilterRule()
		{
			this._Filter = default(EntityRef<Filter>);
			this._FilterColumn = default(EntityRef<FilterColumn>);
			this._LogicalOperator = default(EntityRef<LogicalOperator>);
			this._RelationalOperator = default(EntityRef<RelationalOperator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterRuleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FilterRuleId
		{
			get
			{
				return this._FilterRuleId;
			}
			set
			{
				if ((this._FilterRuleId != value))
				{
					this.OnFilterRuleIdChanging(value);
					this.SendPropertyChanging();
					this._FilterRuleId = value;
					this.SendPropertyChanged("FilterRuleId");
					this.OnFilterRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterId", DbType="Int NOT NULL")]
		public int FilterId
		{
			get
			{
				return this._FilterId;
			}
			set
			{
				if ((this._FilterId != value))
				{
					if (this._Filter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilterIdChanging(value);
					this.SendPropertyChanging();
					this._FilterId = value;
					this.SendPropertyChanged("FilterId");
					this.OnFilterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterColumnId", DbType="Int NOT NULL")]
		public int FilterColumnId
		{
			get
			{
				return this._FilterColumnId;
			}
			set
			{
				if ((this._FilterColumnId != value))
				{
					if (this._FilterColumn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilterColumnIdChanging(value);
					this.SendPropertyChanging();
					this._FilterColumnId = value;
					this.SendPropertyChanged("FilterColumnId");
					this.OnFilterColumnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationalOperatorId", DbType="Int NOT NULL")]
		public int RelationalOperatorId
		{
			get
			{
				return this._RelationalOperatorId;
			}
			set
			{
				if ((this._RelationalOperatorId != value))
				{
					if (this._RelationalOperator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationalOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._RelationalOperatorId = value;
					this.SendPropertyChanged("RelationalOperatorId");
					this.OnRelationalOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicalOperatorId", DbType="Int")]
		public System.Nullable<int> LogicalOperatorId
		{
			get
			{
				return this._LogicalOperatorId;
			}
			set
			{
				if ((this._LogicalOperatorId != value))
				{
					if (this._LogicalOperator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogicalOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._LogicalOperatorId = value;
					this.SendPropertyChanged("LogicalOperatorId");
					this.OnLogicalOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnValue", DbType="VarChar(100)")]
		public string ColumnValue
		{
			get
			{
				return this._ColumnValue;
			}
			set
			{
				if ((this._ColumnValue != value))
				{
					this.OnColumnValueChanging(value);
					this.SendPropertyChanging();
					this._ColumnValue = value;
					this.SendPropertyChanged("ColumnValue");
					this.OnColumnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filter_FilterRule", Storage="_Filter", ThisKey="FilterId", OtherKey="FilterId", IsForeignKey=true)]
		public Filter Filter
		{
			get
			{
				return this._Filter.Entity;
			}
			set
			{
				Filter previousValue = this._Filter.Entity;
				if (((previousValue != value) 
							|| (this._Filter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filter.Entity = null;
						previousValue.FilterRules.Remove(this);
					}
					this._Filter.Entity = value;
					if ((value != null))
					{
						value.FilterRules.Add(this);
						this._FilterId = value.FilterId;
					}
					else
					{
						this._FilterId = default(int);
					}
					this.SendPropertyChanged("Filter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FilterColumn_FilterRule", Storage="_FilterColumn", ThisKey="FilterColumnId", OtherKey="FilterColumnId", IsForeignKey=true)]
		public FilterColumn FilterColumn
		{
			get
			{
				return this._FilterColumn.Entity;
			}
			set
			{
				FilterColumn previousValue = this._FilterColumn.Entity;
				if (((previousValue != value) 
							|| (this._FilterColumn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FilterColumn.Entity = null;
						previousValue.FilterRules.Remove(this);
					}
					this._FilterColumn.Entity = value;
					if ((value != null))
					{
						value.FilterRules.Add(this);
						this._FilterColumnId = value.FilterColumnId;
					}
					else
					{
						this._FilterColumnId = default(int);
					}
					this.SendPropertyChanged("FilterColumn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogicalOperator_FilterRule", Storage="_LogicalOperator", ThisKey="LogicalOperatorId", OtherKey="LogicalOperatorId", IsForeignKey=true)]
		public LogicalOperator LogicalOperator
		{
			get
			{
				return this._LogicalOperator.Entity;
			}
			set
			{
				LogicalOperator previousValue = this._LogicalOperator.Entity;
				if (((previousValue != value) 
							|| (this._LogicalOperator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogicalOperator.Entity = null;
						previousValue.FilterRules.Remove(this);
					}
					this._LogicalOperator.Entity = value;
					if ((value != null))
					{
						value.FilterRules.Add(this);
						this._LogicalOperatorId = value.LogicalOperatorId;
					}
					else
					{
						this._LogicalOperatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("LogicalOperator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RelationalOperator_FilterRule", Storage="_RelationalOperator", ThisKey="RelationalOperatorId", OtherKey="RelationalOperatorId", IsForeignKey=true)]
		public RelationalOperator RelationalOperator
		{
			get
			{
				return this._RelationalOperator.Entity;
			}
			set
			{
				RelationalOperator previousValue = this._RelationalOperator.Entity;
				if (((previousValue != value) 
							|| (this._RelationalOperator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RelationalOperator.Entity = null;
						previousValue.FilterRules.Remove(this);
					}
					this._RelationalOperator.Entity = value;
					if ((value != null))
					{
						value.FilterRules.Add(this);
						this._RelationalOperatorId = value.RelationalOperatorId;
					}
					else
					{
						this._RelationalOperatorId = default(int);
					}
					this.SendPropertyChanged("RelationalOperator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormTemplate")]
	public partial class FormTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RequestTypeID;
		
		private string _Title;
		
		private System.Data.Linq.Binary _Template;
		
		private string _TimeStamp;
		
		private EntitySet<RequestForm> _RequestForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTemplateChanging(System.Data.Linq.Binary value);
    partial void OnTemplateChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    #endregion
		
		public FormTemplate()
		{
			this._RequestForms = new EntitySet<RequestForm>(new Action<RequestForm>(this.attach_RequestForms), new Action<RequestForm>(this.detach_RequestForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="NVarChar(50)")]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormTemplate_RequestForm", Storage="_RequestForms", ThisKey="ID", OtherKey="FormID")]
		public EntitySet<RequestForm> RequestForms
		{
			get
			{
				return this._RequestForms;
			}
			set
			{
				this._RequestForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestForms(RequestForm entity)
		{
			this.SendPropertyChanging();
			entity.FormTemplate = this;
		}
		
		private void detach_RequestForms(RequestForm entity)
		{
			this.SendPropertyChanging();
			entity.FormTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GH_TelephonePAPState")]
	public partial class GH_TelephonePAPState
	{
		
		private int _ID;
		
		private string _Telephone;
		
		private string _State;
		
		private string _Period;
		
		private string _Pdate;
		
		private string _Company;
		
		private string _LinePort;
		
		private System.Nullable<int> _Active;
		
		private string _CompanyCode;
		
		public GH_TelephonePAPState()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="NVarChar(10)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdate", DbType="NVarChar(50)")]
		public string Pdate
		{
			get
			{
				return this._Pdate;
			}
			set
			{
				if ((this._Pdate != value))
				{
					this._Pdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinePort", DbType="NVarChar(10)")]
		public string LinePort
		{
			get
			{
				return this._LinePort;
			}
			set
			{
				if ((this._LinePort != value))
				{
					this._LinePort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int")]
		public System.Nullable<int> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ghandi$")]
	public partial class ghandi_
	{
		
		private System.Nullable<double> _tel;
		
		private System.Nullable<double> _port;
		
		public ghandi_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="Float")]
		public System.Nullable<double> tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this._tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Float")]
		public System.Nullable<double> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this._port = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inquiry")]
	public partial class Inquiry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private System.Nullable<System.DateTime> _InquiryResponseDate;
		
		private string _InquiryResponseNo;
		
		private System.Nullable<byte> _InquiryReportID;
		
		private string _CounterNo;
		
		private string _Debt;
		
		private string _Commnet;
		
		private System.DateTime _Insertdate;
		
		private System.Nullable<byte> _Status;
		
		private EntitySet<InquiryType1> _InquiryType1s;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnInquiryResponseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInquiryResponseDateChanged();
    partial void OnInquiryResponseNoChanging(string value);
    partial void OnInquiryResponseNoChanged();
    partial void OnInquiryReportIDChanging(System.Nullable<byte> value);
    partial void OnInquiryReportIDChanged();
    partial void OnCounterNoChanging(string value);
    partial void OnCounterNoChanged();
    partial void OnDebtChanging(string value);
    partial void OnDebtChanged();
    partial void OnCommnetChanging(string value);
    partial void OnCommnetChanged();
    partial void OnInsertdateChanging(System.DateTime value);
    partial void OnInsertdateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public Inquiry()
		{
			this._InquiryType1s = new EntitySet<InquiryType1>(new Action<InquiryType1>(this.attach_InquiryType1s), new Action<InquiryType1>(this.detach_InquiryType1s));
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InquiryResponseDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InquiryResponseDate
		{
			get
			{
				return this._InquiryResponseDate;
			}
			set
			{
				if ((this._InquiryResponseDate != value))
				{
					this.OnInquiryResponseDateChanging(value);
					this.SendPropertyChanging();
					this._InquiryResponseDate = value;
					this.SendPropertyChanged("InquiryResponseDate");
					this.OnInquiryResponseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InquiryResponseNo", DbType="NVarChar(20)")]
		public string InquiryResponseNo
		{
			get
			{
				return this._InquiryResponseNo;
			}
			set
			{
				if ((this._InquiryResponseNo != value))
				{
					this.OnInquiryResponseNoChanging(value);
					this.SendPropertyChanging();
					this._InquiryResponseNo = value;
					this.SendPropertyChanged("InquiryResponseNo");
					this.OnInquiryResponseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InquiryReportID", DbType="TinyInt")]
		public System.Nullable<byte> InquiryReportID
		{
			get
			{
				return this._InquiryReportID;
			}
			set
			{
				if ((this._InquiryReportID != value))
				{
					this.OnInquiryReportIDChanging(value);
					this.SendPropertyChanging();
					this._InquiryReportID = value;
					this.SendPropertyChanged("InquiryReportID");
					this.OnInquiryReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterNo", DbType="NVarChar(500)")]
		public string CounterNo
		{
			get
			{
				return this._CounterNo;
			}
			set
			{
				if ((this._CounterNo != value))
				{
					this.OnCounterNoChanging(value);
					this.SendPropertyChanging();
					this._CounterNo = value;
					this.SendPropertyChanged("CounterNo");
					this.OnCounterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debt", DbType="NVarChar(500)")]
		public string Debt
		{
			get
			{
				return this._Debt;
			}
			set
			{
				if ((this._Debt != value))
				{
					this.OnDebtChanging(value);
					this.SendPropertyChanging();
					this._Debt = value;
					this.SendPropertyChanged("Debt");
					this.OnDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commnet", DbType="NVarChar(MAX)")]
		public string Commnet
		{
			get
			{
				return this._Commnet;
			}
			set
			{
				if ((this._Commnet != value))
				{
					this.OnCommnetChanging(value);
					this.SendPropertyChanging();
					this._Commnet = value;
					this.SendPropertyChanged("Commnet");
					this.OnCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertdate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Insertdate
		{
			get
			{
				return this._Insertdate;
			}
			set
			{
				if ((this._Insertdate != value))
				{
					this.OnInsertdateChanging(value);
					this.SendPropertyChanging();
					this._Insertdate = value;
					this.SendPropertyChanged("Insertdate");
					this.OnInsertdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquiry_InquiryType1", Storage="_InquiryType1s", ThisKey="ID", OtherKey="InquiryID")]
		public EntitySet<InquiryType1> InquiryType1s
		{
			get
			{
				return this._InquiryType1s;
			}
			set
			{
				this._InquiryType1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Inquiry", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Inquiries.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Inquiries.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InquiryType1s(InquiryType1 entity)
		{
			this.SendPropertyChanging();
			entity.Inquiry = this;
		}
		
		private void detach_InquiryType1s(InquiryType1 entity)
		{
			this.SendPropertyChanging();
			entity.Inquiry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InquiryType")]
	public partial class InquiryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ReportTitleType;
		
		private string _TableName;
		
		private string _FieldsOrTemplate;
		
		private string _Status;
		
		private EntitySet<InquiryType1> _InquiryType1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReportTitleTypeChanging(string value);
    partial void OnReportTitleTypeChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnFieldsOrTemplateChanging(string value);
    partial void OnFieldsOrTemplateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public InquiryType()
		{
			this._InquiryType1s = new EntitySet<InquiryType1>(new Action<InquiryType1>(this.attach_InquiryType1s), new Action<InquiryType1>(this.detach_InquiryType1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTitleType", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ReportTitleType
		{
			get
			{
				return this._ReportTitleType;
			}
			set
			{
				if ((this._ReportTitleType != value))
				{
					this.OnReportTitleTypeChanging(value);
					this.SendPropertyChanging();
					this._ReportTitleType = value;
					this.SendPropertyChanged("ReportTitleType");
					this.OnReportTitleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(100)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldsOrTemplate", DbType="NVarChar(4000)")]
		public string FieldsOrTemplate
		{
			get
			{
				return this._FieldsOrTemplate;
			}
			set
			{
				if ((this._FieldsOrTemplate != value))
				{
					this.OnFieldsOrTemplateChanging(value);
					this.SendPropertyChanging();
					this._FieldsOrTemplate = value;
					this.SendPropertyChanged("FieldsOrTemplate");
					this.OnFieldsOrTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InquiryType_InquiryType1", Storage="_InquiryType1s", ThisKey="ID", OtherKey="InquiryTypeID")]
		public EntitySet<InquiryType1> InquiryType1s
		{
			get
			{
				return this._InquiryType1s;
			}
			set
			{
				this._InquiryType1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InquiryType1s(InquiryType1 entity)
		{
			this.SendPropertyChanging();
			entity.InquiryType = this;
		}
		
		private void detach_InquiryType1s(InquiryType1 entity)
		{
			this.SendPropertyChanging();
			entity.InquiryType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InquiryTypes")]
	public partial class InquiryType1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _InquiryID;
		
		private int _InquiryTypeID;
		
		private EntityRef<Inquiry> _Inquiry;
		
		private EntityRef<InquiryType> _InquiryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInquiryIDChanging(long value);
    partial void OnInquiryIDChanged();
    partial void OnInquiryTypeIDChanging(int value);
    partial void OnInquiryTypeIDChanged();
    #endregion
		
		public InquiryType1()
		{
			this._Inquiry = default(EntityRef<Inquiry>);
			this._InquiryType = default(EntityRef<InquiryType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InquiryID", DbType="BigInt NOT NULL")]
		public long InquiryID
		{
			get
			{
				return this._InquiryID;
			}
			set
			{
				if ((this._InquiryID != value))
				{
					if (this._Inquiry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInquiryIDChanging(value);
					this.SendPropertyChanging();
					this._InquiryID = value;
					this.SendPropertyChanged("InquiryID");
					this.OnInquiryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InquiryTypeID", DbType="Int NOT NULL")]
		public int InquiryTypeID
		{
			get
			{
				return this._InquiryTypeID;
			}
			set
			{
				if ((this._InquiryTypeID != value))
				{
					if (this._InquiryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInquiryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InquiryTypeID = value;
					this.SendPropertyChanged("InquiryTypeID");
					this.OnInquiryTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inquiry_InquiryType1", Storage="_Inquiry", ThisKey="InquiryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inquiry Inquiry
		{
			get
			{
				return this._Inquiry.Entity;
			}
			set
			{
				Inquiry previousValue = this._Inquiry.Entity;
				if (((previousValue != value) 
							|| (this._Inquiry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inquiry.Entity = null;
						previousValue.InquiryType1s.Remove(this);
					}
					this._Inquiry.Entity = value;
					if ((value != null))
					{
						value.InquiryType1s.Add(this);
						this._InquiryID = value.ID;
					}
					else
					{
						this._InquiryID = default(long);
					}
					this.SendPropertyChanged("Inquiry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InquiryType_InquiryType1", Storage="_InquiryType", ThisKey="InquiryTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InquiryType InquiryType
		{
			get
			{
				return this._InquiryType.Entity;
			}
			set
			{
				InquiryType previousValue = this._InquiryType.Entity;
				if (((previousValue != value) 
							|| (this._InquiryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InquiryType.Entity = null;
						previousValue.InquiryType1s.Remove(this);
					}
					this._InquiryType.Entity = value;
					if ((value != null))
					{
						value.InquiryType1s.Add(this);
						this._InquiryTypeID = value.ID;
					}
					else
					{
						this._InquiryTypeID = default(int);
					}
					this.SendPropertyChanged("InquiryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallLine")]
	public partial class InstallLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _WiringID;
		
		private System.DateTime _SwitchEstablishDate;
		
		private string _SwitchEstablishTime;
		
		private long _CounterID;
		
		private bool _HasReport;
		
		private int _Status;
		
		private EntityRef<Counter> _Counter;
		
		private EntityRef<Status> _Status1;
		
		private EntityRef<Wiring> _Wiring;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWiringIDChanging(long value);
    partial void OnWiringIDChanged();
    partial void OnSwitchEstablishDateChanging(System.DateTime value);
    partial void OnSwitchEstablishDateChanged();
    partial void OnSwitchEstablishTimeChanging(string value);
    partial void OnSwitchEstablishTimeChanged();
    partial void OnCounterIDChanging(long value);
    partial void OnCounterIDChanged();
    partial void OnHasReportChanging(bool value);
    partial void OnHasReportChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public InstallLine()
		{
			this._Counter = default(EntityRef<Counter>);
			this._Status1 = default(EntityRef<Status>);
			this._Wiring = default(EntityRef<Wiring>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringID", DbType="BigInt NOT NULL")]
		public long WiringID
		{
			get
			{
				return this._WiringID;
			}
			set
			{
				if ((this._WiringID != value))
				{
					if (this._Wiring.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWiringIDChanging(value);
					this.SendPropertyChanging();
					this._WiringID = value;
					this.SendPropertyChanged("WiringID");
					this.OnWiringIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchEstablishDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime SwitchEstablishDate
		{
			get
			{
				return this._SwitchEstablishDate;
			}
			set
			{
				if ((this._SwitchEstablishDate != value))
				{
					this.OnSwitchEstablishDateChanging(value);
					this.SendPropertyChanging();
					this._SwitchEstablishDate = value;
					this.SendPropertyChanged("SwitchEstablishDate");
					this.OnSwitchEstablishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchEstablishTime", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string SwitchEstablishTime
		{
			get
			{
				return this._SwitchEstablishTime;
			}
			set
			{
				if ((this._SwitchEstablishTime != value))
				{
					this.OnSwitchEstablishTimeChanging(value);
					this.SendPropertyChanging();
					this._SwitchEstablishTime = value;
					this.SendPropertyChanged("SwitchEstablishTime");
					this.OnSwitchEstablishTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterID", DbType="BigInt NOT NULL")]
		public long CounterID
		{
			get
			{
				return this._CounterID;
			}
			set
			{
				if ((this._CounterID != value))
				{
					if (this._Counter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCounterIDChanging(value);
					this.SendPropertyChanging();
					this._CounterID = value;
					this.SendPropertyChanged("CounterID");
					this.OnCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasReport", DbType="Bit NOT NULL")]
		public bool HasReport
		{
			get
			{
				return this._HasReport;
			}
			set
			{
				if ((this._HasReport != value))
				{
					this.OnHasReportChanging(value);
					this.SendPropertyChanging();
					this._HasReport = value;
					this.SendPropertyChanged("HasReport");
					this.OnHasReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counter_InstallLine", Storage="_Counter", ThisKey="CounterID", OtherKey="ID", IsForeignKey=true)]
		public Counter Counter
		{
			get
			{
				return this._Counter.Entity;
			}
			set
			{
				Counter previousValue = this._Counter.Entity;
				if (((previousValue != value) 
							|| (this._Counter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counter.Entity = null;
						previousValue.InstallLines.Remove(this);
					}
					this._Counter.Entity = value;
					if ((value != null))
					{
						value.InstallLines.Add(this);
						this._CounterID = value.ID;
					}
					else
					{
						this._CounterID = default(long);
					}
					this.SendPropertyChanged("Counter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_InstallLine", Storage="_Status1", ThisKey="Status", OtherKey="ID", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.InstallLines.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.InstallLines.Add(this);
						this._Status = value.ID;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wiring_InstallLine", Storage="_Wiring", ThisKey="WiringID", OtherKey="ID", IsForeignKey=true)]
		public Wiring Wiring
		{
			get
			{
				return this._Wiring.Entity;
			}
			set
			{
				Wiring previousValue = this._Wiring.Entity;
				if (((previousValue != value) 
							|| (this._Wiring.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wiring.Entity = null;
						previousValue.InstallLines.Remove(this);
					}
					this._Wiring.Entity = value;
					if ((value != null))
					{
						value.InstallLines.Add(this);
						this._WiringID = value.ID;
					}
					else
					{
						this._WiringID = default(long);
					}
					this.SendPropertyChanged("Wiring");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Installment")]
	public partial class Installment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _BaseCostID;
		
		private System.Nullable<int> _OtherCostID;
		
		private int _PrePaymentAmount;
		
		private int _Amount;
		
		private int _InstallmentCount;
		
		private int _DayDuration;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.DateTime _InsertDate;
		
		private EntitySet<PaymentFiche> _PaymentFiches;
		
		private EntityRef<BaseCost> _BaseCost;
		
		private EntityRef<OtherCost> _OtherCost;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnBaseCostIDChanging(System.Nullable<int> value);
    partial void OnBaseCostIDChanged();
    partial void OnOtherCostIDChanging(System.Nullable<int> value);
    partial void OnOtherCostIDChanged();
    partial void OnPrePaymentAmountChanging(int value);
    partial void OnPrePaymentAmountChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnInstallmentCountChanging(int value);
    partial void OnInstallmentCountChanged();
    partial void OnDayDurationChanging(int value);
    partial void OnDayDurationChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public Installment()
		{
			this._PaymentFiches = new EntitySet<PaymentFiche>(new Action<PaymentFiche>(this.attach_PaymentFiches), new Action<PaymentFiche>(this.detach_PaymentFiches));
			this._BaseCost = default(EntityRef<BaseCost>);
			this._OtherCost = default(EntityRef<OtherCost>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCostID", DbType="Int")]
		public System.Nullable<int> BaseCostID
		{
			get
			{
				return this._BaseCostID;
			}
			set
			{
				if ((this._BaseCostID != value))
				{
					if (this._BaseCost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseCostIDChanging(value);
					this.SendPropertyChanging();
					this._BaseCostID = value;
					this.SendPropertyChanged("BaseCostID");
					this.OnBaseCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCostID", DbType="Int")]
		public System.Nullable<int> OtherCostID
		{
			get
			{
				return this._OtherCostID;
			}
			set
			{
				if ((this._OtherCostID != value))
				{
					if (this._OtherCost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherCostIDChanging(value);
					this.SendPropertyChanging();
					this._OtherCostID = value;
					this.SendPropertyChanged("OtherCostID");
					this.OnOtherCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrePaymentAmount", DbType="Int NOT NULL")]
		public int PrePaymentAmount
		{
			get
			{
				return this._PrePaymentAmount;
			}
			set
			{
				if ((this._PrePaymentAmount != value))
				{
					this.OnPrePaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PrePaymentAmount = value;
					this.SendPropertyChanged("PrePaymentAmount");
					this.OnPrePaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallmentCount", DbType="Int NOT NULL")]
		public int InstallmentCount
		{
			get
			{
				return this._InstallmentCount;
			}
			set
			{
				if ((this._InstallmentCount != value))
				{
					this.OnInstallmentCountChanging(value);
					this.SendPropertyChanging();
					this._InstallmentCount = value;
					this.SendPropertyChanged("InstallmentCount");
					this.OnInstallmentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayDuration", DbType="Int NOT NULL")]
		public int DayDuration
		{
			get
			{
				return this._DayDuration;
			}
			set
			{
				if ((this._DayDuration != value))
				{
					this.OnDayDurationChanging(value);
					this.SendPropertyChanging();
					this._DayDuration = value;
					this.SendPropertyChanged("DayDuration");
					this.OnDayDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Installment_PaymentFiche", Storage="_PaymentFiches", ThisKey="ID", OtherKey="InstallmentID")]
		public EntitySet<PaymentFiche> PaymentFiches
		{
			get
			{
				return this._PaymentFiches;
			}
			set
			{
				this._PaymentFiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseCost_Installment", Storage="_BaseCost", ThisKey="BaseCostID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public BaseCost BaseCost
		{
			get
			{
				return this._BaseCost.Entity;
			}
			set
			{
				BaseCost previousValue = this._BaseCost.Entity;
				if (((previousValue != value) 
							|| (this._BaseCost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaseCost.Entity = null;
						previousValue.Installments.Remove(this);
					}
					this._BaseCost.Entity = value;
					if ((value != null))
					{
						value.Installments.Add(this);
						this._BaseCostID = value.ID;
					}
					else
					{
						this._BaseCostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BaseCost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OtherCost_Installment", Storage="_OtherCost", ThisKey="OtherCostID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public OtherCost OtherCost
		{
			get
			{
				return this._OtherCost.Entity;
			}
			set
			{
				OtherCost previousValue = this._OtherCost.Entity;
				if (((previousValue != value) 
							|| (this._OtherCost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OtherCost.Entity = null;
						previousValue.Installments.Remove(this);
					}
					this._OtherCost.Entity = value;
					if ((value != null))
					{
						value.Installments.Add(this);
						this._OtherCostID = value.ID;
					}
					else
					{
						this._OtherCostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OtherCost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Installment", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Installment = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Installment = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentFiches(PaymentFiche entity)
		{
			this.SendPropertyChanging();
			entity.Installment = this;
		}
		
		private void detach_PaymentFiches(PaymentFiche entity)
		{
			this.SendPropertyChanging();
			entity.Installment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallmentRequestPayment")]
	public partial class InstallmentRequestPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RequestPaymentID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private long _Cost;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private bool _IsCheque;
		
		private string _ChequeNumber;
		
		private System.Nullable<bool> _IsPaid;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private EntityRef<RequestPayment> _RequestPayment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestPaymentIDChanging(System.Nullable<long> value);
    partial void OnRequestPaymentIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnCostChanging(long value);
    partial void OnCostChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnIsChequeChanging(bool value);
    partial void OnIsChequeChanged();
    partial void OnChequeNumberChanging(string value);
    partial void OnChequeNumberChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    #endregion
		
		public InstallmentRequestPayment()
		{
			this._RequestPayment = default(EntityRef<RequestPayment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPaymentID", DbType="BigInt")]
		public System.Nullable<long> RequestPaymentID
		{
			get
			{
				return this._RequestPaymentID;
			}
			set
			{
				if ((this._RequestPaymentID != value))
				{
					if (this._RequestPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._RequestPaymentID = value;
					this.SendPropertyChanged("RequestPaymentID");
					this.OnRequestPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt NOT NULL")]
		public long Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheque", DbType="Bit NOT NULL")]
		public bool IsCheque
		{
			get
			{
				return this._IsCheque;
			}
			set
			{
				if ((this._IsCheque != value))
				{
					this.OnIsChequeChanging(value);
					this.SendPropertyChanging();
					this._IsCheque = value;
					this.SendPropertyChanged("IsCheque");
					this.OnIsChequeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNumber", DbType="NVarChar(50)")]
		public string ChequeNumber
		{
			get
			{
				return this._ChequeNumber;
			}
			set
			{
				if ((this._ChequeNumber != value))
				{
					this.OnChequeNumberChanging(value);
					this.SendPropertyChanging();
					this._ChequeNumber = value;
					this.SendPropertyChanged("ChequeNumber");
					this.OnChequeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestPayment_InstallmentRequestPayment", Storage="_RequestPayment", ThisKey="RequestPaymentID", OtherKey="ID", IsForeignKey=true)]
		public RequestPayment RequestPayment
		{
			get
			{
				return this._RequestPayment.Entity;
			}
			set
			{
				RequestPayment previousValue = this._RequestPayment.Entity;
				if (((previousValue != value) 
							|| (this._RequestPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestPayment.Entity = null;
						previousValue.InstallmentRequestPayments.Remove(this);
					}
					this._RequestPayment.Entity = value;
					if ((value != null))
					{
						value.InstallmentRequestPayments.Add(this);
						this._RequestPaymentID = value.ID;
					}
					else
					{
						this._RequestPaymentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("RequestPayment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallmentRequestPayment_Temp")]
	public partial class InstallmentRequestPayment_Temp
	{
		
		private System.Nullable<long> _Phone;
		
		private System.Nullable<double> @__924;
		
		private System.Nullable<double> @__923;
		
		private System.Nullable<double> @__922;
		
		private System.Nullable<double> @__921;
		
		private System.Nullable<double> @__916;
		
		private System.Nullable<double> @__915;
		
		private string _F8;
		
		private System.Nullable<double> _SUMPaid;
		
		public InstallmentRequestPayment_Temp()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[924]", Storage="__924", DbType="Float")]
		public System.Nullable<double> _924
		{
			get
			{
				return this.@__924;
			}
			set
			{
				if ((this.@__924 != value))
				{
					this.@__924 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[923]", Storage="__923", DbType="Float")]
		public System.Nullable<double> _923
		{
			get
			{
				return this.@__923;
			}
			set
			{
				if ((this.@__923 != value))
				{
					this.@__923 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[922]", Storage="__922", DbType="Float")]
		public System.Nullable<double> _922
		{
			get
			{
				return this.@__922;
			}
			set
			{
				if ((this.@__922 != value))
				{
					this.@__922 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[921]", Storage="__921", DbType="Float")]
		public System.Nullable<double> _921
		{
			get
			{
				return this.@__921;
			}
			set
			{
				if ((this.@__921 != value))
				{
					this.@__921 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[916]", Storage="__916", DbType="Float")]
		public System.Nullable<double> _916
		{
			get
			{
				return this.@__916;
			}
			set
			{
				if ((this.@__916 != value))
				{
					this.@__916 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[915]", Storage="__915", DbType="Float")]
		public System.Nullable<double> _915
		{
			get
			{
				return this.@__915;
			}
			set
			{
				if ((this.@__915 != value))
				{
					this.@__915 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F8", DbType="NVarChar(255)")]
		public string F8
		{
			get
			{
				return this._F8;
			}
			set
			{
				if ((this._F8 != value))
				{
					this._F8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMPaid", DbType="Float")]
		public System.Nullable<double> SUMPaid
		{
			get
			{
				return this._SUMPaid;
			}
			set
			{
				if ((this._SUMPaid != value))
				{
					this._SUMPaid = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallmentRequestPaymentCorrection")]
	public partial class InstallmentRequestPaymentCorrection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _TelephoneNo;
		
		private System.Nullable<long> _OldSumInstalmentCost;
		
		private System.Nullable<long> _NewSumInstalmentCost;
		
		private System.Nullable<int> _OldMonth;
		
		private System.Nullable<int> _NewMonth;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnOldSumInstalmentCostChanging(System.Nullable<long> value);
    partial void OnOldSumInstalmentCostChanged();
    partial void OnNewSumInstalmentCostChanging(System.Nullable<long> value);
    partial void OnNewSumInstalmentCostChanged();
    partial void OnOldMonthChanging(System.Nullable<int> value);
    partial void OnOldMonthChanged();
    partial void OnNewMonthChanging(System.Nullable<int> value);
    partial void OnNewMonthChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public InstallmentRequestPaymentCorrection()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSumInstalmentCost", DbType="BigInt")]
		public System.Nullable<long> OldSumInstalmentCost
		{
			get
			{
				return this._OldSumInstalmentCost;
			}
			set
			{
				if ((this._OldSumInstalmentCost != value))
				{
					this.OnOldSumInstalmentCostChanging(value);
					this.SendPropertyChanging();
					this._OldSumInstalmentCost = value;
					this.SendPropertyChanged("OldSumInstalmentCost");
					this.OnOldSumInstalmentCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSumInstalmentCost", DbType="BigInt")]
		public System.Nullable<long> NewSumInstalmentCost
		{
			get
			{
				return this._NewSumInstalmentCost;
			}
			set
			{
				if ((this._NewSumInstalmentCost != value))
				{
					this.OnNewSumInstalmentCostChanging(value);
					this.SendPropertyChanging();
					this._NewSumInstalmentCost = value;
					this.SendPropertyChanged("NewSumInstalmentCost");
					this.OnNewSumInstalmentCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMonth", DbType="Int")]
		public System.Nullable<int> OldMonth
		{
			get
			{
				return this._OldMonth;
			}
			set
			{
				if ((this._OldMonth != value))
				{
					this.OnOldMonthChanging(value);
					this.SendPropertyChanging();
					this._OldMonth = value;
					this.SendPropertyChanged("OldMonth");
					this.OnOldMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMonth", DbType="Int")]
		public System.Nullable<int> NewMonth
		{
			get
			{
				return this._NewMonth;
			}
			set
			{
				if ((this._NewMonth != value))
				{
					this.OnNewMonthChanging(value);
					this.SendPropertyChanging();
					this._NewMonth = value;
					this.SendPropertyChanged("NewMonth");
					this.OnNewMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvestigatePossibility")]
	public partial class InvestigatePossibility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RequestID;
		
		private System.Nullable<long> _RelatedInvestigatePossibilityID;
		
		private System.Nullable<long> _BuchtID;
		
		private System.Nullable<System.DateTime> _ConnectionReserveDate;
		
		private string _Comment;
		
		private System.Nullable<long> _PostContactID;
		
		private EntitySet<E1Link> _E1Links;
		
		private EntitySet<InvestigatePossibility> _InvestigatePossibilities;
		
		private EntitySet<Wiring> _Wirings;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<InvestigatePossibility> _InvestigatePossibility1;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnRelatedInvestigatePossibilityIDChanging(System.Nullable<long> value);
    partial void OnRelatedInvestigatePossibilityIDChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnConnectionReserveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConnectionReserveDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    #endregion
		
		public InvestigatePossibility()
		{
			this._E1Links = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links), new Action<E1Link>(this.detach_E1Links));
			this._InvestigatePossibilities = new EntitySet<InvestigatePossibility>(new Action<InvestigatePossibility>(this.attach_InvestigatePossibilities), new Action<InvestigatePossibility>(this.detach_InvestigatePossibilities));
			this._Wirings = new EntitySet<Wiring>(new Action<Wiring>(this.attach_Wirings), new Action<Wiring>(this.detach_Wirings));
			this._Bucht = default(EntityRef<Bucht>);
			this._InvestigatePossibility1 = default(EntityRef<InvestigatePossibility>);
			this._PostContact = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedInvestigatePossibilityID", DbType="BigInt")]
		public System.Nullable<long> RelatedInvestigatePossibilityID
		{
			get
			{
				return this._RelatedInvestigatePossibilityID;
			}
			set
			{
				if ((this._RelatedInvestigatePossibilityID != value))
				{
					if (this._InvestigatePossibility1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelatedInvestigatePossibilityIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedInvestigatePossibilityID = value;
					this.SendPropertyChanged("RelatedInvestigatePossibilityID");
					this.OnRelatedInvestigatePossibilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionReserveDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ConnectionReserveDate
		{
			get
			{
				return this._ConnectionReserveDate;
			}
			set
			{
				if ((this._ConnectionReserveDate != value))
				{
					this.OnConnectionReserveDateChanging(value);
					this.SendPropertyChanging();
					this._ConnectionReserveDate = value;
					this.SendPropertyChanged("ConnectionReserveDate");
					this.OnConnectionReserveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvestigatePossibility_E1Link", Storage="_E1Links", ThisKey="ID", OtherKey="InvestigatePossibilityID")]
		public EntitySet<E1Link> E1Links
		{
			get
			{
				return this._E1Links;
			}
			set
			{
				this._E1Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvestigatePossibility_InvestigatePossibility", Storage="_InvestigatePossibilities", ThisKey="ID", OtherKey="RelatedInvestigatePossibilityID")]
		public EntitySet<InvestigatePossibility> InvestigatePossibilities
		{
			get
			{
				return this._InvestigatePossibilities;
			}
			set
			{
				this._InvestigatePossibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvestigatePossibility_Wiring", Storage="_Wirings", ThisKey="ID", OtherKey="InvestigatePossibilityID")]
		public EntitySet<Wiring> Wirings
		{
			get
			{
				return this._Wirings;
			}
			set
			{
				this._Wirings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_InvestigatePossibility", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.InvestigatePossibilities.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilities.Add(this);
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvestigatePossibility_InvestigatePossibility", Storage="_InvestigatePossibility1", ThisKey="RelatedInvestigatePossibilityID", OtherKey="ID", IsForeignKey=true)]
		public InvestigatePossibility InvestigatePossibility1
		{
			get
			{
				return this._InvestigatePossibility1.Entity;
			}
			set
			{
				InvestigatePossibility previousValue = this._InvestigatePossibility1.Entity;
				if (((previousValue != value) 
							|| (this._InvestigatePossibility1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvestigatePossibility1.Entity = null;
						previousValue.InvestigatePossibilities.Remove(this);
					}
					this._InvestigatePossibility1.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilities.Add(this);
						this._RelatedInvestigatePossibilityID = value.ID;
					}
					else
					{
						this._RelatedInvestigatePossibilityID = default(Nullable<long>);
					}
					this.SendPropertyChanged("InvestigatePossibility1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_InvestigatePossibility", Storage="_PostContact", ThisKey="PostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.InvestigatePossibilities.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilities.Add(this);
						this._PostContactID = value.ID;
					}
					else
					{
						this._PostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_InvestigatePossibility", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.InvestigatePossibilities.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilities.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.InvestigatePossibility = this;
		}
		
		private void detach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.InvestigatePossibility = null;
		}
		
		private void attach_InvestigatePossibilities(InvestigatePossibility entity)
		{
			this.SendPropertyChanging();
			entity.InvestigatePossibility1 = this;
		}
		
		private void detach_InvestigatePossibilities(InvestigatePossibility entity)
		{
			this.SendPropertyChanging();
			entity.InvestigatePossibility1 = null;
		}
		
		private void attach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.InvestigatePossibility = this;
		}
		
		private void detach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.InvestigatePossibility = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvestigatePossibilityWaitinglist")]
	public partial class InvestigatePossibilityWaitinglist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CustomerID;
		
		private System.Nullable<int> _CabinetID;
		
		private System.Nullable<int> _PostID;
		
		private System.Nullable<long> _InstallAdressID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<WaitingList> _WaitingList;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnCabinetIDChanging(System.Nullable<int> value);
    partial void OnCabinetIDChanged();
    partial void OnPostIDChanging(System.Nullable<int> value);
    partial void OnPostIDChanged();
    partial void OnInstallAdressIDChanging(System.Nullable<long> value);
    partial void OnInstallAdressIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    #endregion
		
		public InvestigatePossibilityWaitinglist()
		{
			this._Address = default(EntityRef<Address>);
			this._Cabinet = default(EntityRef<Cabinet>);
			this._Post = default(EntityRef<Post>);
			this._Telephone = default(EntityRef<Telephone>);
			this._WaitingList = default(EntityRef<WaitingList>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._WaitingList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int")]
		public System.Nullable<int> CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int")]
		public System.Nullable<int> PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAdressID", DbType="BigInt")]
		public System.Nullable<long> InstallAdressID
		{
			get
			{
				return this._InstallAdressID;
			}
			set
			{
				if ((this._InstallAdressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAdressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAdressID = value;
					this.SendPropertyChanged("InstallAdressID");
					this.OnInstallAdressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_InvestigatePossibilityWaitinglist", Storage="_Address", ThisKey="InstallAdressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.InvestigatePossibilityWaitinglists.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilityWaitinglists.Add(this);
						this._InstallAdressID = value.ID;
					}
					else
					{
						this._InstallAdressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_InvestigatePossibilityWaitinglist", Storage="_Cabinet", ThisKey="CabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.InvestigatePossibilityWaitinglists.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilityWaitinglists.Add(this);
						this._CabinetID = value.ID;
					}
					else
					{
						this._CabinetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_InvestigatePossibilityWaitinglist", Storage="_Post", ThisKey="PostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.InvestigatePossibilityWaitinglists.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilityWaitinglists.Add(this);
						this._PostID = value.ID;
					}
					else
					{
						this._PostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_InvestigatePossibilityWaitinglist", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true, DeleteRule="CASCADE")]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.InvestigatePossibilityWaitinglists.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilityWaitinglists.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WaitingList_InvestigatePossibilityWaitinglist", Storage="_WaitingList", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public WaitingList WaitingList
		{
			get
			{
				return this._WaitingList.Entity;
			}
			set
			{
				WaitingList previousValue = this._WaitingList.Entity;
				if (((previousValue != value) 
							|| (this._WaitingList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WaitingList.Entity = null;
						previousValue.InvestigatePossibilityWaitinglist = null;
					}
					this._WaitingList.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilityWaitinglist = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("WaitingList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_InvestigatePossibilityWaitinglist", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.InvestigatePossibilityWaitinglists.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.InvestigatePossibilityWaitinglists.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IssueWiring")]
	public partial class IssueWiring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private string _WiringNo;
		
		private byte _WiringTypeID;
		
		private System.DateTime _WiringIssueDate;
		
		private System.DateTime _InsertDate;
		
		private bool _IsPrinted;
		
		private byte _PrintCount;
		
		private System.Nullable<System.DateTime> _LastPrintDate;
		
		private string _CommentStatus;
		
		private int _Status;
		
		private EntitySet<Wiring> _Wirings;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnWiringNoChanging(string value);
    partial void OnWiringNoChanged();
    partial void OnWiringTypeIDChanging(byte value);
    partial void OnWiringTypeIDChanged();
    partial void OnWiringIssueDateChanging(System.DateTime value);
    partial void OnWiringIssueDateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    partial void OnPrintCountChanging(byte value);
    partial void OnPrintCountChanged();
    partial void OnLastPrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPrintDateChanged();
    partial void OnCommentStatusChanging(string value);
    partial void OnCommentStatusChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public IssueWiring()
		{
			this._Wirings = new EntitySet<Wiring>(new Action<Wiring>(this.attach_Wirings), new Action<Wiring>(this.detach_Wirings));
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WiringNo
		{
			get
			{
				return this._WiringNo;
			}
			set
			{
				if ((this._WiringNo != value))
				{
					this.OnWiringNoChanging(value);
					this.SendPropertyChanging();
					this._WiringNo = value;
					this.SendPropertyChanged("WiringNo");
					this.OnWiringNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringTypeID", DbType="TinyInt NOT NULL")]
		public byte WiringTypeID
		{
			get
			{
				return this._WiringTypeID;
			}
			set
			{
				if ((this._WiringTypeID != value))
				{
					this.OnWiringTypeIDChanging(value);
					this.SendPropertyChanging();
					this._WiringTypeID = value;
					this.SendPropertyChanged("WiringTypeID");
					this.OnWiringTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringIssueDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime WiringIssueDate
		{
			get
			{
				return this._WiringIssueDate;
			}
			set
			{
				if ((this._WiringIssueDate != value))
				{
					this.OnWiringIssueDateChanging(value);
					this.SendPropertyChanging();
					this._WiringIssueDate = value;
					this.SendPropertyChanged("WiringIssueDate");
					this.OnWiringIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
		public bool IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintCount", DbType="TinyInt NOT NULL")]
		public byte PrintCount
		{
			get
			{
				return this._PrintCount;
			}
			set
			{
				if ((this._PrintCount != value))
				{
					this.OnPrintCountChanging(value);
					this.SendPropertyChanging();
					this._PrintCount = value;
					this.SendPropertyChanged("PrintCount");
					this.OnPrintCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPrintDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastPrintDate
		{
			get
			{
				return this._LastPrintDate;
			}
			set
			{
				if ((this._LastPrintDate != value))
				{
					this.OnLastPrintDateChanging(value);
					this.SendPropertyChanging();
					this._LastPrintDate = value;
					this.SendPropertyChanged("LastPrintDate");
					this.OnLastPrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentStatus", DbType="NVarChar(1000)")]
		public string CommentStatus
		{
			get
			{
				return this._CommentStatus;
			}
			set
			{
				if ((this._CommentStatus != value))
				{
					this.OnCommentStatusChanging(value);
					this.SendPropertyChanging();
					this._CommentStatus = value;
					this.SendPropertyChanged("CommentStatus");
					this.OnCommentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IssueWiring_Wiring", Storage="_Wirings", ThisKey="ID", OtherKey="IssueWiringID")]
		public EntitySet<Wiring> Wirings
		{
			get
			{
				return this._Wirings;
			}
			set
			{
				this._Wirings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_IssueWiring", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.IssueWirings.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.IssueWirings.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.IssueWiring = this;
		}
		
		private void detach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.IssueWiring = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobGroup")]
	public partial class JobGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public JobGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KermanshahReportTemplateBackup")]
	public partial class KermanshahReportTemplateBackup
	{
		
		private int _ID;
		
		private string _Title;
		
		private System.Data.Linq.Binary _Template;
		
		private string _IconName;
		
		private string _Category;
		
		private string _TimeStamp;
		
		private string _UserControlName;
		
		private System.Nullable<bool> _IsVisible;
		
		public KermanshahReportTemplateBackup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this._Template = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconName", DbType="NVarChar(127)")]
		public string IconName
		{
			get
			{
				return this._IconName;
			}
			set
			{
				if ((this._IconName != value))
				{
					this._IconName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(127)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="Char(15)")]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this._TimeStamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserControlName", DbType="NVarChar(227)")]
		public string UserControlName
		{
			get
			{
				return this._UserControlName;
			}
			set
			{
				if ((this._UserControlName != value))
				{
					this._UserControlName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this._IsVisible = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Linesman")]
	public partial class Linesman : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _ChangeLocationID;
		
		private int _CabinetID;
		
		private int _PostID;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<ChangeLocation> _ChangeLocation;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnChangeLocationIDChanging(long value);
    partial void OnChangeLocationIDChanged();
    partial void OnCabinetIDChanging(int value);
    partial void OnCabinetIDChanged();
    partial void OnPostIDChanging(int value);
    partial void OnPostIDChanged();
    #endregion
		
		public Linesman()
		{
			this._Cabinet = default(EntityRef<Cabinet>);
			this._ChangeLocation = default(EntityRef<ChangeLocation>);
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeLocationID", DbType="BigInt NOT NULL")]
		public long ChangeLocationID
		{
			get
			{
				return this._ChangeLocationID;
			}
			set
			{
				if ((this._ChangeLocationID != value))
				{
					if (this._ChangeLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangeLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ChangeLocationID = value;
					this.SendPropertyChanged("ChangeLocationID");
					this.OnChangeLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int NOT NULL")]
		public int CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int NOT NULL")]
		public int PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_Linesman", Storage="_Cabinet", ThisKey="CabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.Linesmans.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.Linesmans.Add(this);
						this._CabinetID = value.ID;
					}
					else
					{
						this._CabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChangeLocation_Linesman", Storage="_ChangeLocation", ThisKey="ChangeLocationID", OtherKey="ID", IsForeignKey=true)]
		public ChangeLocation ChangeLocation
		{
			get
			{
				return this._ChangeLocation.Entity;
			}
			set
			{
				ChangeLocation previousValue = this._ChangeLocation.Entity;
				if (((previousValue != value) 
							|| (this._ChangeLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangeLocation.Entity = null;
						previousValue.Linesmans.Remove(this);
					}
					this._ChangeLocation.Entity = value;
					if ((value != null))
					{
						value.Linesmans.Add(this);
						this._ChangeLocationID = value.ID;
					}
					else
					{
						this._ChangeLocationID = default(long);
					}
					this.SendPropertyChanged("ChangeLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Linesman", Storage="_Post", ThisKey="PostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Linesmans.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Linesmans.Add(this);
						this._PostID = value.ID;
					}
					else
					{
						this._PostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TableName;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<int> _UserID;
		
		private string _IdentityName;
		
		private string _IdentityValue;
		
		private System.Nullable<long> _RequestID;
		
		private System.Xml.Linq.XElement _Changes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIdentityNameChanging(string value);
    partial void OnIdentityNameChanged();
    partial void OnIdentityValueChanging(string value);
    partial void OnIdentityValueChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnChangesChanging(System.Xml.Linq.XElement value);
    partial void OnChangesChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityName", DbType="NVarChar(50)")]
		public string IdentityName
		{
			get
			{
				return this._IdentityName;
			}
			set
			{
				if ((this._IdentityName != value))
				{
					this.OnIdentityNameChanging(value);
					this.SendPropertyChanging();
					this._IdentityName = value;
					this.SendPropertyChanged("IdentityName");
					this.OnIdentityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityValue", DbType="NVarChar(50)")]
		public string IdentityValue
		{
			get
			{
				return this._IdentityValue;
			}
			set
			{
				if ((this._IdentityValue != value))
				{
					this.OnIdentityValueChanging(value);
					this.SendPropertyChanging();
					this._IdentityValue = value;
					this.SendPropertyChanged("IdentityValue");
					this.OnIdentityValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changes", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Changes
		{
			get
			{
				return this._Changes;
			}
			set
			{
				if ((this._Changes != value))
				{
					this.OnChangesChanging(value);
					this.SendPropertyChanging();
					this._Changes = value;
					this.SendPropertyChanged("Changes");
					this.OnChangesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogicalOperator")]
	public partial class LogicalOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogicalOperatorId;
		
		private string _LogicalOperatorName;
		
		private EntitySet<FilterRule> _FilterRules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogicalOperatorIdChanging(int value);
    partial void OnLogicalOperatorIdChanged();
    partial void OnLogicalOperatorNameChanging(string value);
    partial void OnLogicalOperatorNameChanged();
    #endregion
		
		public LogicalOperator()
		{
			this._FilterRules = new EntitySet<FilterRule>(new Action<FilterRule>(this.attach_FilterRules), new Action<FilterRule>(this.detach_FilterRules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicalOperatorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LogicalOperatorId
		{
			get
			{
				return this._LogicalOperatorId;
			}
			set
			{
				if ((this._LogicalOperatorId != value))
				{
					this.OnLogicalOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._LogicalOperatorId = value;
					this.SendPropertyChanged("LogicalOperatorId");
					this.OnLogicalOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicalOperatorName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LogicalOperatorName
		{
			get
			{
				return this._LogicalOperatorName;
			}
			set
			{
				if ((this._LogicalOperatorName != value))
				{
					this.OnLogicalOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._LogicalOperatorName = value;
					this.SendPropertyChanged("LogicalOperatorName");
					this.OnLogicalOperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogicalOperator_FilterRule", Storage="_FilterRules", ThisKey="LogicalOperatorId", OtherKey="LogicalOperatorId")]
		public EntitySet<FilterRule> FilterRules
		{
			get
			{
				return this._FilterRules;
			}
			set
			{
				this._FilterRules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FilterRules(FilterRule entity)
		{
			this.SendPropertyChanging();
			entity.LogicalOperator = this;
		}
		
		private void detach_FilterRules(FilterRule entity)
		{
			this.SendPropertyChanging();
			entity.LogicalOperator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Malfuction")]
	public partial class Malfuction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _MalfuctionType;
		
		private System.Nullable<long> _CabinetInputID;
		
		private System.Nullable<long> _PostContactID;
		
		private System.Nullable<int> _PCMID;
		
		private System.Nullable<int> _PCMPortID;
		
		private byte _MalfuctionOrhealthy;
		
		private System.DateTime _DateMalfunction;
		
		private string _TimeMalfunction;
		
		private byte _TypeMalfunction;
		
		private string _LicenseNumber;
		
		private System.Data.Linq.Binary _LicenseFile;
		
		private string _DistanceFromMDF;
		
		private string _DistanceFromCabinet;
		
		private string _Description;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<PCMPort> _PCMPort;
		
		private EntityRef<PostContact> _PostContact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMalfuctionTypeChanging(byte value);
    partial void OnMalfuctionTypeChanged();
    partial void OnCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnCabinetInputIDChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    partial void OnPCMIDChanging(System.Nullable<int> value);
    partial void OnPCMIDChanged();
    partial void OnPCMPortIDChanging(System.Nullable<int> value);
    partial void OnPCMPortIDChanged();
    partial void OnMalfuctionOrhealthyChanging(byte value);
    partial void OnMalfuctionOrhealthyChanged();
    partial void OnDateMalfunctionChanging(System.DateTime value);
    partial void OnDateMalfunctionChanged();
    partial void OnTimeMalfunctionChanging(string value);
    partial void OnTimeMalfunctionChanged();
    partial void OnTypeMalfunctionChanging(byte value);
    partial void OnTypeMalfunctionChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnLicenseFileChanging(System.Data.Linq.Binary value);
    partial void OnLicenseFileChanged();
    partial void OnDistanceFromMDFChanging(string value);
    partial void OnDistanceFromMDFChanged();
    partial void OnDistanceFromCabinetChanging(string value);
    partial void OnDistanceFromCabinetChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Malfuction()
		{
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._PCMPort = default(EntityRef<PCMPort>);
			this._PostContact = default(EntityRef<PostContact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MalfuctionType", DbType="TinyInt NOT NULL")]
		public byte MalfuctionType
		{
			get
			{
				return this._MalfuctionType;
			}
			set
			{
				if ((this._MalfuctionType != value))
				{
					this.OnMalfuctionTypeChanging(value);
					this.SendPropertyChanging();
					this._MalfuctionType = value;
					this.SendPropertyChanged("MalfuctionType");
					this.OnMalfuctionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt")]
		public System.Nullable<long> CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMID", DbType="Int")]
		public System.Nullable<int> PCMID
		{
			get
			{
				return this._PCMID;
			}
			set
			{
				if ((this._PCMID != value))
				{
					this.OnPCMIDChanging(value);
					this.SendPropertyChanging();
					this._PCMID = value;
					this.SendPropertyChanged("PCMID");
					this.OnPCMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMPortID", DbType="Int")]
		public System.Nullable<int> PCMPortID
		{
			get
			{
				return this._PCMPortID;
			}
			set
			{
				if ((this._PCMPortID != value))
				{
					if (this._PCMPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCMPortIDChanging(value);
					this.SendPropertyChanging();
					this._PCMPortID = value;
					this.SendPropertyChanged("PCMPortID");
					this.OnPCMPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MalfuctionOrhealthy", DbType="TinyInt NOT NULL")]
		public byte MalfuctionOrhealthy
		{
			get
			{
				return this._MalfuctionOrhealthy;
			}
			set
			{
				if ((this._MalfuctionOrhealthy != value))
				{
					this.OnMalfuctionOrhealthyChanging(value);
					this.SendPropertyChanging();
					this._MalfuctionOrhealthy = value;
					this.SendPropertyChanged("MalfuctionOrhealthy");
					this.OnMalfuctionOrhealthyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateMalfunction", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateMalfunction
		{
			get
			{
				return this._DateMalfunction;
			}
			set
			{
				if ((this._DateMalfunction != value))
				{
					this.OnDateMalfunctionChanging(value);
					this.SendPropertyChanging();
					this._DateMalfunction = value;
					this.SendPropertyChanged("DateMalfunction");
					this.OnDateMalfunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeMalfunction", DbType="NVarChar(50)")]
		public string TimeMalfunction
		{
			get
			{
				return this._TimeMalfunction;
			}
			set
			{
				if ((this._TimeMalfunction != value))
				{
					this.OnTimeMalfunctionChanging(value);
					this.SendPropertyChanging();
					this._TimeMalfunction = value;
					this.SendPropertyChanged("TimeMalfunction");
					this.OnTimeMalfunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMalfunction", DbType="TinyInt NOT NULL")]
		public byte TypeMalfunction
		{
			get
			{
				return this._TypeMalfunction;
			}
			set
			{
				if ((this._TypeMalfunction != value))
				{
					this.OnTypeMalfunctionChanging(value);
					this.SendPropertyChanging();
					this._TypeMalfunction = value;
					this.SendPropertyChanged("TypeMalfunction");
					this.OnTypeMalfunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="NVarChar(50)")]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseFile", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LicenseFile
		{
			get
			{
				return this._LicenseFile;
			}
			set
			{
				if ((this._LicenseFile != value))
				{
					this.OnLicenseFileChanging(value);
					this.SendPropertyChanging();
					this._LicenseFile = value;
					this.SendPropertyChanged("LicenseFile");
					this.OnLicenseFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromMDF", DbType="NVarChar(50)")]
		public string DistanceFromMDF
		{
			get
			{
				return this._DistanceFromMDF;
			}
			set
			{
				if ((this._DistanceFromMDF != value))
				{
					this.OnDistanceFromMDFChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromMDF = value;
					this.SendPropertyChanged("DistanceFromMDF");
					this.OnDistanceFromMDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromCabinet", DbType="NVarChar(50)")]
		public string DistanceFromCabinet
		{
			get
			{
				return this._DistanceFromCabinet;
			}
			set
			{
				if ((this._DistanceFromCabinet != value))
				{
					this.OnDistanceFromCabinetChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromCabinet = value;
					this.SendPropertyChanged("DistanceFromCabinet");
					this.OnDistanceFromCabinetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_Malfuction", Storage="_CabinetInput", ThisKey="CabinetInputID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.Malfuctions.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.Malfuctions.Add(this);
						this._CabinetInputID = value.ID;
					}
					else
					{
						this._CabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMPort_Malfuction", Storage="_PCMPort", ThisKey="PCMPortID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PCMPort PCMPort
		{
			get
			{
				return this._PCMPort.Entity;
			}
			set
			{
				PCMPort previousValue = this._PCMPort.Entity;
				if (((previousValue != value) 
							|| (this._PCMPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCMPort.Entity = null;
						previousValue.Malfuctions.Remove(this);
					}
					this._PCMPort.Entity = value;
					if ((value != null))
					{
						value.Malfuctions.Add(this);
						this._PCMPortID = value.ID;
					}
					else
					{
						this._PCMPortID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PCMPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_Malfuction", Storage="_PostContact", ThisKey="PostContactID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.Malfuctions.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.Malfuctions.Add(this);
						this._PostContactID = value.ID;
					}
					else
					{
						this._PostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatchPossibility")]
	public partial class MatchPossibility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _MatchDate;
		
		private long _WaitingListID;
		
		private long _SugesstionPossibilityID;
		
		private int _MatchCount;
		
		private EntityRef<SugesstionPossibility> _SugesstionPossibility;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMatchDateChanging(System.DateTime value);
    partial void OnMatchDateChanged();
    partial void OnWaitingListIDChanging(long value);
    partial void OnWaitingListIDChanged();
    partial void OnSugesstionPossibilityIDChanging(long value);
    partial void OnSugesstionPossibilityIDChanged();
    partial void OnMatchCountChanging(int value);
    partial void OnMatchCountChanged();
    #endregion
		
		public MatchPossibility()
		{
			this._SugesstionPossibility = default(EntityRef<SugesstionPossibility>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime MatchDate
		{
			get
			{
				return this._MatchDate;
			}
			set
			{
				if ((this._MatchDate != value))
				{
					this.OnMatchDateChanging(value);
					this.SendPropertyChanging();
					this._MatchDate = value;
					this.SendPropertyChanged("MatchDate");
					this.OnMatchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingListID", DbType="BigInt NOT NULL")]
		public long WaitingListID
		{
			get
			{
				return this._WaitingListID;
			}
			set
			{
				if ((this._WaitingListID != value))
				{
					this.OnWaitingListIDChanging(value);
					this.SendPropertyChanging();
					this._WaitingListID = value;
					this.SendPropertyChanged("WaitingListID");
					this.OnWaitingListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SugesstionPossibilityID", DbType="BigInt NOT NULL")]
		public long SugesstionPossibilityID
		{
			get
			{
				return this._SugesstionPossibilityID;
			}
			set
			{
				if ((this._SugesstionPossibilityID != value))
				{
					if (this._SugesstionPossibility.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSugesstionPossibilityIDChanging(value);
					this.SendPropertyChanging();
					this._SugesstionPossibilityID = value;
					this.SendPropertyChanged("SugesstionPossibilityID");
					this.OnSugesstionPossibilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchCount", DbType="Int NOT NULL")]
		public int MatchCount
		{
			get
			{
				return this._MatchCount;
			}
			set
			{
				if ((this._MatchCount != value))
				{
					this.OnMatchCountChanging(value);
					this.SendPropertyChanging();
					this._MatchCount = value;
					this.SendPropertyChanged("MatchCount");
					this.OnMatchCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SugesstionPossibility_MatchPossibility", Storage="_SugesstionPossibility", ThisKey="SugesstionPossibilityID", OtherKey="ID", IsForeignKey=true)]
		public SugesstionPossibility SugesstionPossibility
		{
			get
			{
				return this._SugesstionPossibility.Entity;
			}
			set
			{
				SugesstionPossibility previousValue = this._SugesstionPossibility.Entity;
				if (((previousValue != value) 
							|| (this._SugesstionPossibility.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SugesstionPossibility.Entity = null;
						previousValue.MatchPossibilities.Remove(this);
					}
					this._SugesstionPossibility.Entity = value;
					if ((value != null))
					{
						value.MatchPossibilities.Add(this);
						this._SugesstionPossibilityID = value.ID;
					}
					else
					{
						this._SugesstionPossibilityID = default(long);
					}
					this.SendPropertyChanged("SugesstionPossibility");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MDF")]
	public partial class MDF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private byte _Type;
		
		private int _Number;
		
		private System.Nullable<int> _LastNoVerticalFrames;
		
		private System.Nullable<int> _LastNoHorizontalFrames;
		
		private string _Description;
		
		private System.Nullable<int> _ElkaBuchtTypeID;
		
		private EntitySet<ADSLMDFRange> _ADSLMDFRanges;
		
		private EntitySet<MDFFrame> _MDFFrames;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnLastNoVerticalFramesChanging(System.Nullable<int> value);
    partial void OnLastNoVerticalFramesChanged();
    partial void OnLastNoHorizontalFramesChanging(System.Nullable<int> value);
    partial void OnLastNoHorizontalFramesChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnElkaBuchtTypeIDChanging(System.Nullable<int> value);
    partial void OnElkaBuchtTypeIDChanged();
    #endregion
		
		public MDF()
		{
			this._ADSLMDFRanges = new EntitySet<ADSLMDFRange>(new Action<ADSLMDFRange>(this.attach_ADSLMDFRanges), new Action<ADSLMDFRange>(this.detach_ADSLMDFRanges));
			this._MDFFrames = new EntitySet<MDFFrame>(new Action<MDFFrame>(this.attach_MDFFrames), new Action<MDFFrame>(this.detach_MDFFrames));
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNoVerticalFrames", DbType="Int")]
		public System.Nullable<int> LastNoVerticalFrames
		{
			get
			{
				return this._LastNoVerticalFrames;
			}
			set
			{
				if ((this._LastNoVerticalFrames != value))
				{
					this.OnLastNoVerticalFramesChanging(value);
					this.SendPropertyChanging();
					this._LastNoVerticalFrames = value;
					this.SendPropertyChanged("LastNoVerticalFrames");
					this.OnLastNoVerticalFramesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNoHorizontalFrames", DbType="Int")]
		public System.Nullable<int> LastNoHorizontalFrames
		{
			get
			{
				return this._LastNoHorizontalFrames;
			}
			set
			{
				if ((this._LastNoHorizontalFrames != value))
				{
					this.OnLastNoHorizontalFramesChanging(value);
					this.SendPropertyChanging();
					this._LastNoHorizontalFrames = value;
					this.SendPropertyChanged("LastNoHorizontalFrames");
					this.OnLastNoHorizontalFramesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaBuchtTypeID", DbType="Int")]
		public System.Nullable<int> ElkaBuchtTypeID
		{
			get
			{
				return this._ElkaBuchtTypeID;
			}
			set
			{
				if ((this._ElkaBuchtTypeID != value))
				{
					this.OnElkaBuchtTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaBuchtTypeID = value;
					this.SendPropertyChanged("ElkaBuchtTypeID");
					this.OnElkaBuchtTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDF_ADSLMDFRange", Storage="_ADSLMDFRanges", ThisKey="ID", OtherKey="MDFID")]
		public EntitySet<ADSLMDFRange> ADSLMDFRanges
		{
			get
			{
				return this._ADSLMDFRanges;
			}
			set
			{
				this._ADSLMDFRanges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDF_MDFFrame", Storage="_MDFFrames", ThisKey="ID", OtherKey="MDFID")]
		public EntitySet<MDFFrame> MDFFrames
		{
			get
			{
				return this._MDFFrames;
			}
			set
			{
				this._MDFFrames.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_MDF", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.MDFs.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.MDFs.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLMDFRanges(ADSLMDFRange entity)
		{
			this.SendPropertyChanging();
			entity.MDF = this;
		}
		
		private void detach_ADSLMDFRanges(ADSLMDFRange entity)
		{
			this.SendPropertyChanging();
			entity.MDF = null;
		}
		
		private void attach_MDFFrames(MDFFrame entity)
		{
			this.SendPropertyChanging();
			entity.MDF = this;
		}
		
		private void detach_MDFFrames(MDFFrame entity)
		{
			this.SendPropertyChanging();
			entity.MDF = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MDF1")]
	public partial class MDF1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private byte _Type;
		
		private int _Number;
		
		private System.Nullable<int> _LastNoVerticalFrames;
		
		private System.Nullable<int> _LastNoHorizontalFrames;
		
		private string _Description;
		
		private System.Nullable<int> _ElkaBuchtTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnLastNoVerticalFramesChanging(System.Nullable<int> value);
    partial void OnLastNoVerticalFramesChanged();
    partial void OnLastNoHorizontalFramesChanging(System.Nullable<int> value);
    partial void OnLastNoHorizontalFramesChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnElkaBuchtTypeIDChanging(System.Nullable<int> value);
    partial void OnElkaBuchtTypeIDChanged();
    #endregion
		
		public MDF1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNoVerticalFrames", DbType="Int")]
		public System.Nullable<int> LastNoVerticalFrames
		{
			get
			{
				return this._LastNoVerticalFrames;
			}
			set
			{
				if ((this._LastNoVerticalFrames != value))
				{
					this.OnLastNoVerticalFramesChanging(value);
					this.SendPropertyChanging();
					this._LastNoVerticalFrames = value;
					this.SendPropertyChanged("LastNoVerticalFrames");
					this.OnLastNoVerticalFramesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNoHorizontalFrames", DbType="Int")]
		public System.Nullable<int> LastNoHorizontalFrames
		{
			get
			{
				return this._LastNoHorizontalFrames;
			}
			set
			{
				if ((this._LastNoHorizontalFrames != value))
				{
					this.OnLastNoHorizontalFramesChanging(value);
					this.SendPropertyChanging();
					this._LastNoHorizontalFrames = value;
					this.SendPropertyChanged("LastNoHorizontalFrames");
					this.OnLastNoHorizontalFramesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaBuchtTypeID", DbType="Int")]
		public System.Nullable<int> ElkaBuchtTypeID
		{
			get
			{
				return this._ElkaBuchtTypeID;
			}
			set
			{
				if ((this._ElkaBuchtTypeID != value))
				{
					this.OnElkaBuchtTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaBuchtTypeID = value;
					this.SendPropertyChanged("ElkaBuchtTypeID");
					this.OnElkaBuchtTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MDFFrame")]
	public partial class MDFFrame : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MDFID;
		
		private System.Nullable<int> _FrameNo;
		
		private System.Nullable<int> _VerticalRowsCount;
		
		private System.Nullable<int> _VerticalRowCapacity;
		
		private System.Nullable<int> _VerticalFirstColumn;
		
		private System.Nullable<int> _VerticalLastColumn;
		
		private EntitySet<VerticalMDFColumn> _VerticalMDFColumns;
		
		private EntityRef<MDF> _MDF;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMDFIDChanging(int value);
    partial void OnMDFIDChanged();
    partial void OnFrameNoChanging(System.Nullable<int> value);
    partial void OnFrameNoChanged();
    partial void OnVerticalRowsCountChanging(System.Nullable<int> value);
    partial void OnVerticalRowsCountChanged();
    partial void OnVerticalRowCapacityChanging(System.Nullable<int> value);
    partial void OnVerticalRowCapacityChanged();
    partial void OnVerticalFirstColumnChanging(System.Nullable<int> value);
    partial void OnVerticalFirstColumnChanged();
    partial void OnVerticalLastColumnChanging(System.Nullable<int> value);
    partial void OnVerticalLastColumnChanged();
    #endregion
		
		public MDFFrame()
		{
			this._VerticalMDFColumns = new EntitySet<VerticalMDFColumn>(new Action<VerticalMDFColumn>(this.attach_VerticalMDFColumns), new Action<VerticalMDFColumn>(this.detach_VerticalMDFColumns));
			this._MDF = default(EntityRef<MDF>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFID", DbType="Int NOT NULL")]
		public int MDFID
		{
			get
			{
				return this._MDFID;
			}
			set
			{
				if ((this._MDFID != value))
				{
					if (this._MDF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDFIDChanging(value);
					this.SendPropertyChanging();
					this._MDFID = value;
					this.SendPropertyChanged("MDFID");
					this.OnMDFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrameNo", DbType="Int")]
		public System.Nullable<int> FrameNo
		{
			get
			{
				return this._FrameNo;
			}
			set
			{
				if ((this._FrameNo != value))
				{
					this.OnFrameNoChanging(value);
					this.SendPropertyChanging();
					this._FrameNo = value;
					this.SendPropertyChanged("FrameNo");
					this.OnFrameNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalRowsCount", DbType="Int")]
		public System.Nullable<int> VerticalRowsCount
		{
			get
			{
				return this._VerticalRowsCount;
			}
			set
			{
				if ((this._VerticalRowsCount != value))
				{
					this.OnVerticalRowsCountChanging(value);
					this.SendPropertyChanging();
					this._VerticalRowsCount = value;
					this.SendPropertyChanged("VerticalRowsCount");
					this.OnVerticalRowsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalRowCapacity", DbType="Int")]
		public System.Nullable<int> VerticalRowCapacity
		{
			get
			{
				return this._VerticalRowCapacity;
			}
			set
			{
				if ((this._VerticalRowCapacity != value))
				{
					this.OnVerticalRowCapacityChanging(value);
					this.SendPropertyChanging();
					this._VerticalRowCapacity = value;
					this.SendPropertyChanged("VerticalRowCapacity");
					this.OnVerticalRowCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalFirstColumn", DbType="Int")]
		public System.Nullable<int> VerticalFirstColumn
		{
			get
			{
				return this._VerticalFirstColumn;
			}
			set
			{
				if ((this._VerticalFirstColumn != value))
				{
					this.OnVerticalFirstColumnChanging(value);
					this.SendPropertyChanging();
					this._VerticalFirstColumn = value;
					this.SendPropertyChanged("VerticalFirstColumn");
					this.OnVerticalFirstColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalLastColumn", DbType="Int")]
		public System.Nullable<int> VerticalLastColumn
		{
			get
			{
				return this._VerticalLastColumn;
			}
			set
			{
				if ((this._VerticalLastColumn != value))
				{
					this.OnVerticalLastColumnChanging(value);
					this.SendPropertyChanging();
					this._VerticalLastColumn = value;
					this.SendPropertyChanged("VerticalLastColumn");
					this.OnVerticalLastColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDFFrame_VerticalMDFColumn", Storage="_VerticalMDFColumns", ThisKey="ID", OtherKey="MDFFrameID")]
		public EntitySet<VerticalMDFColumn> VerticalMDFColumns
		{
			get
			{
				return this._VerticalMDFColumns;
			}
			set
			{
				this._VerticalMDFColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDF_MDFFrame", Storage="_MDF", ThisKey="MDFID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MDF MDF
		{
			get
			{
				return this._MDF.Entity;
			}
			set
			{
				MDF previousValue = this._MDF.Entity;
				if (((previousValue != value) 
							|| (this._MDF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MDF.Entity = null;
						previousValue.MDFFrames.Remove(this);
					}
					this._MDF.Entity = value;
					if ((value != null))
					{
						value.MDFFrames.Add(this);
						this._MDFID = value.ID;
					}
					else
					{
						this._MDFID = default(int);
					}
					this.SendPropertyChanged("MDF");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VerticalMDFColumns(VerticalMDFColumn entity)
		{
			this.SendPropertyChanging();
			entity.MDFFrame = this;
		}
		
		private void detach_VerticalMDFColumns(VerticalMDFColumn entity)
		{
			this.SendPropertyChanging();
			entity.MDFFrame = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MDFPersonnel")]
	public partial class MDFPersonnel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _CenterID;
		
		private EntitySet<Failure117> _Failure117s;
		
		private EntitySet<Failure117> _Failure117s1;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    #endregion
		
		public MDFPersonnel()
		{
			this._Failure117s = new EntitySet<Failure117>(new Action<Failure117>(this.attach_Failure117s), new Action<Failure117>(this.detach_Failure117s));
			this._Failure117s1 = new EntitySet<Failure117>(new Action<Failure117>(this.attach_Failure117s1), new Action<Failure117>(this.detach_Failure117s1));
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDFPersonnel_Failure117", Storage="_Failure117s", ThisKey="ID", OtherKey="MDFPesonnelID")]
		public EntitySet<Failure117> Failure117s
		{
			get
			{
				return this._Failure117s;
			}
			set
			{
				this._Failure117s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDFPersonnel_Failure1171", Storage="_Failure117s1", ThisKey="ID", OtherKey="EndMDFPersonnelID")]
		public EntitySet<Failure117> Failure117s1
		{
			get
			{
				return this._Failure117s1;
			}
			set
			{
				this._Failure117s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_MDFPersonnel", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.MDFPersonnels.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.MDFPersonnels.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Failure117s(Failure117 entity)
		{
			this.SendPropertyChanging();
			entity.MDFPersonnel = this;
		}
		
		private void detach_Failure117s(Failure117 entity)
		{
			this.SendPropertyChanging();
			entity.MDFPersonnel = null;
		}
		
		private void attach_Failure117s1(Failure117 entity)
		{
			this.SendPropertyChanging();
			entity.MDFPersonnel1 = this;
		}
		
		private void detach_Failure117s1(Failure117 entity)
		{
			this.SendPropertyChanging();
			entity.MDFPersonnel1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MDFWiring")]
	public partial class MDFWiring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _MDFWiringDate;
		
		private string _MDFWiringHour;
		
		private string _MDFComment;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMDFWiringDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFWiringDateChanged();
    partial void OnMDFWiringHourChanging(string value);
    partial void OnMDFWiringHourChanged();
    partial void OnMDFCommentChanging(string value);
    partial void OnMDFCommentChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public MDFWiring()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFWiringDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFWiringDate
		{
			get
			{
				return this._MDFWiringDate;
			}
			set
			{
				if ((this._MDFWiringDate != value))
				{
					this.OnMDFWiringDateChanging(value);
					this.SendPropertyChanging();
					this._MDFWiringDate = value;
					this.SendPropertyChanged("MDFWiringDate");
					this.OnMDFWiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFWiringHour", DbType="NVarChar(50)")]
		public string MDFWiringHour
		{
			get
			{
				return this._MDFWiringHour;
			}
			set
			{
				if ((this._MDFWiringHour != value))
				{
					this.OnMDFWiringHourChanging(value);
					this.SendPropertyChanging();
					this._MDFWiringHour = value;
					this.SendPropertyChanged("MDFWiringHour");
					this.OnMDFWiringHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFComment", DbType="NVarChar(200)")]
		public string MDFComment
		{
			get
			{
				return this._MDFComment;
			}
			set
			{
				if ((this._MDFComment != value))
				{
					this.OnMDFCommentChanging(value);
					this.SendPropertyChanging();
					this._MDFComment = value;
					this.SendPropertyChanged("MDFComment");
					this.OnMDFCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_MDFWiring", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.MDFWiring = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.MDFWiring = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MDFWorkingHour")]
	public partial class MDFWorkingHour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Day;
		
		private int _StartTime;
		
		private int _FinishTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnStartTimeChanging(int value);
    partial void OnStartTimeChanged();
    partial void OnFinishTimeChanging(int value);
    partial void OnFinishTimeChanged();
    #endregion
		
		public MDFWorkingHour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Int NOT NULL")]
		public int StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishTime", DbType="Int NOT NULL")]
		public int FinishTime
		{
			get
			{
				return this._FinishTime;
			}
			set
			{
				if ((this._FinishTime != value))
				{
					this.OnFinishTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishTime = value;
					this.SendPropertyChanged("FinishTime");
					this.OnFinishTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModifyProfile")]
	public partial class ModifyProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _TelephoneNo;
		
		private System.Nullable<long> _OldBuchtID;
		
		private System.Nullable<int> _OldCabinetID;
		
		private System.Nullable<int> _OldPostID;
		
		private System.Nullable<long> _OldPostContact;
		
		private System.Nullable<long> _NewBuchtID;
		
		private System.Nullable<int> _NewCabinetID;
		
		private System.Nullable<int> _NewPostID;
		
		private System.Nullable<long> _NewPostContact;
		
		private System.Nullable<int> _OldCustomerID;
		
		private System.Nullable<int> _NewCustomerID;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnOldBuchtIDChanging(System.Nullable<long> value);
    partial void OnOldBuchtIDChanged();
    partial void OnOldCabinetIDChanging(System.Nullable<int> value);
    partial void OnOldCabinetIDChanged();
    partial void OnOldPostIDChanging(System.Nullable<int> value);
    partial void OnOldPostIDChanged();
    partial void OnOldPostContactChanging(System.Nullable<long> value);
    partial void OnOldPostContactChanged();
    partial void OnNewBuchtIDChanging(System.Nullable<long> value);
    partial void OnNewBuchtIDChanged();
    partial void OnNewCabinetIDChanging(System.Nullable<int> value);
    partial void OnNewCabinetIDChanged();
    partial void OnNewPostIDChanging(System.Nullable<int> value);
    partial void OnNewPostIDChanged();
    partial void OnNewPostContactChanging(System.Nullable<long> value);
    partial void OnNewPostContactChanged();
    partial void OnOldCustomerIDChanging(System.Nullable<int> value);
    partial void OnOldCustomerIDChanged();
    partial void OnNewCustomerIDChanging(System.Nullable<int> value);
    partial void OnNewCustomerIDChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public ModifyProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtID", DbType="BigInt")]
		public System.Nullable<long> OldBuchtID
		{
			get
			{
				return this._OldBuchtID;
			}
			set
			{
				if ((this._OldBuchtID != value))
				{
					this.OnOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtID = value;
					this.SendPropertyChanged("OldBuchtID");
					this.OnOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetID", DbType="Int")]
		public System.Nullable<int> OldCabinetID
		{
			get
			{
				return this._OldCabinetID;
			}
			set
			{
				if ((this._OldCabinetID != value))
				{
					this.OnOldCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetID = value;
					this.SendPropertyChanged("OldCabinetID");
					this.OnOldCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostID", DbType="Int")]
		public System.Nullable<int> OldPostID
		{
			get
			{
				return this._OldPostID;
			}
			set
			{
				if ((this._OldPostID != value))
				{
					this.OnOldPostIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostID = value;
					this.SendPropertyChanged("OldPostID");
					this.OnOldPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostContact", DbType="BigInt")]
		public System.Nullable<long> OldPostContact
		{
			get
			{
				return this._OldPostContact;
			}
			set
			{
				if ((this._OldPostContact != value))
				{
					this.OnOldPostContactChanging(value);
					this.SendPropertyChanging();
					this._OldPostContact = value;
					this.SendPropertyChanged("OldPostContact");
					this.OnOldPostContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewBuchtID", DbType="BigInt")]
		public System.Nullable<long> NewBuchtID
		{
			get
			{
				return this._NewBuchtID;
			}
			set
			{
				if ((this._NewBuchtID != value))
				{
					this.OnNewBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._NewBuchtID = value;
					this.SendPropertyChanged("NewBuchtID");
					this.OnNewBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetID", DbType="Int")]
		public System.Nullable<int> NewCabinetID
		{
			get
			{
				return this._NewCabinetID;
			}
			set
			{
				if ((this._NewCabinetID != value))
				{
					this.OnNewCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._NewCabinetID = value;
					this.SendPropertyChanged("NewCabinetID");
					this.OnNewCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostID", DbType="Int")]
		public System.Nullable<int> NewPostID
		{
			get
			{
				return this._NewPostID;
			}
			set
			{
				if ((this._NewPostID != value))
				{
					this.OnNewPostIDChanging(value);
					this.SendPropertyChanging();
					this._NewPostID = value;
					this.SendPropertyChanged("NewPostID");
					this.OnNewPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostContact", DbType="BigInt")]
		public System.Nullable<long> NewPostContact
		{
			get
			{
				return this._NewPostContact;
			}
			set
			{
				if ((this._NewPostContact != value))
				{
					this.OnNewPostContactChanging(value);
					this.SendPropertyChanging();
					this._NewPostContact = value;
					this.SendPropertyChanged("NewPostContact");
					this.OnNewPostContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCustomerID", DbType="Int")]
		public System.Nullable<int> OldCustomerID
		{
			get
			{
				return this._OldCustomerID;
			}
			set
			{
				if ((this._OldCustomerID != value))
				{
					this.OnOldCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._OldCustomerID = value;
					this.SendPropertyChanged("OldCustomerID");
					this.OnOldCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCustomerID", DbType="Int")]
		public System.Nullable<int> NewCustomerID
		{
			get
			{
				return this._NewCustomerID;
			}
			set
			{
				if ((this._NewCustomerID != value))
				{
					this.OnNewCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._NewCustomerID = value;
					this.SendPropertyChanged("NewCustomerID");
					this.OnNewCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mortgage")]
	public partial class Mortgage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _MortgageRequestID;
		
		private System.Nullable<long> _MortgageReleseRequestID;
		
		private System.Nullable<System.DateTime> _MortgageDate;
		
		private string _MortgageNo;
		
		private System.Nullable<System.DateTime> _ReleaseMortgageDate;
		
		private string _ReleaseMortgageNo;
		
		private string _OfficeNo;
		
		private System.Nullable<int> _BankBranchID;
		
		private System.Nullable<int> _BankID;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Request> _Request1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMortgageRequestIDChanging(long value);
    partial void OnMortgageRequestIDChanged();
    partial void OnMortgageReleseRequestIDChanging(System.Nullable<long> value);
    partial void OnMortgageReleseRequestIDChanged();
    partial void OnMortgageDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMortgageDateChanged();
    partial void OnMortgageNoChanging(string value);
    partial void OnMortgageNoChanged();
    partial void OnReleaseMortgageDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseMortgageDateChanged();
    partial void OnReleaseMortgageNoChanging(string value);
    partial void OnReleaseMortgageNoChanged();
    partial void OnOfficeNoChanging(string value);
    partial void OnOfficeNoChanged();
    partial void OnBankBranchIDChanging(System.Nullable<int> value);
    partial void OnBankBranchIDChanged();
    partial void OnBankIDChanging(System.Nullable<int> value);
    partial void OnBankIDChanged();
    #endregion
		
		public Mortgage()
		{
			this._Request = default(EntityRef<Request>);
			this._Request1 = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageRequestID", DbType="BigInt NOT NULL")]
		public long MortgageRequestID
		{
			get
			{
				return this._MortgageRequestID;
			}
			set
			{
				if ((this._MortgageRequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMortgageRequestIDChanging(value);
					this.SendPropertyChanging();
					this._MortgageRequestID = value;
					this.SendPropertyChanged("MortgageRequestID");
					this.OnMortgageRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageReleseRequestID", DbType="BigInt")]
		public System.Nullable<long> MortgageReleseRequestID
		{
			get
			{
				return this._MortgageReleseRequestID;
			}
			set
			{
				if ((this._MortgageReleseRequestID != value))
				{
					if (this._Request1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMortgageReleseRequestIDChanging(value);
					this.SendPropertyChanging();
					this._MortgageReleseRequestID = value;
					this.SendPropertyChanged("MortgageReleseRequestID");
					this.OnMortgageReleseRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MortgageDate
		{
			get
			{
				return this._MortgageDate;
			}
			set
			{
				if ((this._MortgageDate != value))
				{
					this.OnMortgageDateChanging(value);
					this.SendPropertyChanging();
					this._MortgageDate = value;
					this.SendPropertyChanged("MortgageDate");
					this.OnMortgageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageNo", DbType="NVarChar(50)")]
		public string MortgageNo
		{
			get
			{
				return this._MortgageNo;
			}
			set
			{
				if ((this._MortgageNo != value))
				{
					this.OnMortgageNoChanging(value);
					this.SendPropertyChanging();
					this._MortgageNo = value;
					this.SendPropertyChanged("MortgageNo");
					this.OnMortgageNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseMortgageDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ReleaseMortgageDate
		{
			get
			{
				return this._ReleaseMortgageDate;
			}
			set
			{
				if ((this._ReleaseMortgageDate != value))
				{
					this.OnReleaseMortgageDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseMortgageDate = value;
					this.SendPropertyChanged("ReleaseMortgageDate");
					this.OnReleaseMortgageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseMortgageNo", DbType="NVarChar(50)")]
		public string ReleaseMortgageNo
		{
			get
			{
				return this._ReleaseMortgageNo;
			}
			set
			{
				if ((this._ReleaseMortgageNo != value))
				{
					this.OnReleaseMortgageNoChanging(value);
					this.SendPropertyChanging();
					this._ReleaseMortgageNo = value;
					this.SendPropertyChanged("ReleaseMortgageNo");
					this.OnReleaseMortgageNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeNo", DbType="NVarChar(50)")]
		public string OfficeNo
		{
			get
			{
				return this._OfficeNo;
			}
			set
			{
				if ((this._OfficeNo != value))
				{
					this.OnOfficeNoChanging(value);
					this.SendPropertyChanging();
					this._OfficeNo = value;
					this.SendPropertyChanged("OfficeNo");
					this.OnOfficeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBranchID", DbType="Int")]
		public System.Nullable<int> BankBranchID
		{
			get
			{
				return this._BankBranchID;
			}
			set
			{
				if ((this._BankBranchID != value))
				{
					this.OnBankBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BankBranchID = value;
					this.SendPropertyChanged("BankBranchID");
					this.OnBankBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Mortgage", Storage="_Request", ThisKey="MortgageRequestID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Mortgages.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Mortgages.Add(this);
						this._MortgageRequestID = value.ID;
					}
					else
					{
						this._MortgageRequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Mortgage1", Storage="_Request1", ThisKey="MortgageReleseRequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request1
		{
			get
			{
				return this._Request1.Entity;
			}
			set
			{
				Request previousValue = this._Request1.Entity;
				if (((previousValue != value) 
							|| (this._Request1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request1.Entity = null;
						previousValue.Mortgages1.Remove(this);
					}
					this._Request1.Entity = value;
					if ((value != null))
					{
						value.Mortgages1.Add(this);
						this._MortgageReleseRequestID = value.ID;
					}
					else
					{
						this._MortgageReleseRequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.motahari$")]
	public partial class motahari_
	{
		
		private System.Nullable<double> _port;
		
		private string _tel;
		
		public motahari_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Float")]
		public System.Nullable<double> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this._port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NVarChar(255)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this._tel = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NetworkWiring")]
	public partial class NetworkWiring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _NetworkWiringDate;
		
		private string _NetworkWiringHour;
		
		private string _NetworkComment;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNetworkWiringDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkWiringDateChanged();
    partial void OnNetworkWiringHourChanging(string value);
    partial void OnNetworkWiringHourChanged();
    partial void OnNetworkCommentChanging(string value);
    partial void OnNetworkCommentChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public NetworkWiring()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkWiringDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkWiringDate
		{
			get
			{
				return this._NetworkWiringDate;
			}
			set
			{
				if ((this._NetworkWiringDate != value))
				{
					this.OnNetworkWiringDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkWiringDate = value;
					this.SendPropertyChanged("NetworkWiringDate");
					this.OnNetworkWiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkWiringHour", DbType="NVarChar(50)")]
		public string NetworkWiringHour
		{
			get
			{
				return this._NetworkWiringHour;
			}
			set
			{
				if ((this._NetworkWiringHour != value))
				{
					this.OnNetworkWiringHourChanging(value);
					this.SendPropertyChanging();
					this._NetworkWiringHour = value;
					this.SendPropertyChanged("NetworkWiringHour");
					this.OnNetworkWiringHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkComment", DbType="NVarChar(200)")]
		public string NetworkComment
		{
			get
			{
				return this._NetworkComment;
			}
			set
			{
				if ((this._NetworkComment != value))
				{
					this.OnNetworkCommentChanging(value);
					this.SendPropertyChanging();
					this._NetworkComment = value;
					this.SendPropertyChanged("NetworkComment");
					this.OnNetworkCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_NetworkWiring", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.NetworkWiring = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.NetworkWiring = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notice")]
	public partial class Notice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _NoticeType;
		
		private System.Nullable<long> _SubscriberAddressID;
		
		private string _WiringViolentLetterNo;
		
		private System.Nullable<System.DateTime> _WiringVilolentLetterDate;
		
		private System.Nullable<long> _ControlID;
		
		private byte _NoticeCountType;
		
		private string _NoticeNo;
		
		private System.DateTime _NoticeDate;
		
		private string _AssuranceNo;
		
		private System.Nullable<System.DateTime> _AssuranceDate;
		
		private System.Nullable<int> _ViolationCount;
		
		private System.Nullable<System.DateTime> _DetermineDeadline;
		
		private System.Nullable<System.DateTime> _LetterDateGroupOf3;
		
		private string _LetterNoGroupOf3;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<byte> _Status;
		
		private EntitySet<TakePossession> _TakePossessions;
		
		private EntityRef<Control> _Control;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNoticeTypeChanging(byte value);
    partial void OnNoticeTypeChanged();
    partial void OnSubscriberAddressIDChanging(System.Nullable<long> value);
    partial void OnSubscriberAddressIDChanged();
    partial void OnWiringViolentLetterNoChanging(string value);
    partial void OnWiringViolentLetterNoChanged();
    partial void OnWiringVilolentLetterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWiringVilolentLetterDateChanged();
    partial void OnControlIDChanging(System.Nullable<long> value);
    partial void OnControlIDChanged();
    partial void OnNoticeCountTypeChanging(byte value);
    partial void OnNoticeCountTypeChanged();
    partial void OnNoticeNoChanging(string value);
    partial void OnNoticeNoChanged();
    partial void OnNoticeDateChanging(System.DateTime value);
    partial void OnNoticeDateChanged();
    partial void OnAssuranceNoChanging(string value);
    partial void OnAssuranceNoChanged();
    partial void OnAssuranceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssuranceDateChanged();
    partial void OnViolationCountChanging(System.Nullable<int> value);
    partial void OnViolationCountChanged();
    partial void OnDetermineDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnDetermineDeadlineChanged();
    partial void OnLetterDateGroupOf3Changing(System.Nullable<System.DateTime> value);
    partial void OnLetterDateGroupOf3Changed();
    partial void OnLetterNoGroupOf3Changing(string value);
    partial void OnLetterNoGroupOf3Changed();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public Notice()
		{
			this._TakePossessions = new EntitySet<TakePossession>(new Action<TakePossession>(this.attach_TakePossessions), new Action<TakePossession>(this.detach_TakePossessions));
			this._Control = default(EntityRef<Control>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeType", DbType="TinyInt NOT NULL")]
		public byte NoticeType
		{
			get
			{
				return this._NoticeType;
			}
			set
			{
				if ((this._NoticeType != value))
				{
					this.OnNoticeTypeChanging(value);
					this.SendPropertyChanging();
					this._NoticeType = value;
					this.SendPropertyChanged("NoticeType");
					this.OnNoticeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberAddressID", DbType="BigInt")]
		public System.Nullable<long> SubscriberAddressID
		{
			get
			{
				return this._SubscriberAddressID;
			}
			set
			{
				if ((this._SubscriberAddressID != value))
				{
					this.OnSubscriberAddressIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriberAddressID = value;
					this.SendPropertyChanged("SubscriberAddressID");
					this.OnSubscriberAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringViolentLetterNo", DbType="NVarChar(50)")]
		public string WiringViolentLetterNo
		{
			get
			{
				return this._WiringViolentLetterNo;
			}
			set
			{
				if ((this._WiringViolentLetterNo != value))
				{
					this.OnWiringViolentLetterNoChanging(value);
					this.SendPropertyChanging();
					this._WiringViolentLetterNo = value;
					this.SendPropertyChanged("WiringViolentLetterNo");
					this.OnWiringViolentLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringVilolentLetterDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> WiringVilolentLetterDate
		{
			get
			{
				return this._WiringVilolentLetterDate;
			}
			set
			{
				if ((this._WiringVilolentLetterDate != value))
				{
					this.OnWiringVilolentLetterDateChanging(value);
					this.SendPropertyChanging();
					this._WiringVilolentLetterDate = value;
					this.SendPropertyChanged("WiringVilolentLetterDate");
					this.OnWiringVilolentLetterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlID", DbType="BigInt")]
		public System.Nullable<long> ControlID
		{
			get
			{
				return this._ControlID;
			}
			set
			{
				if ((this._ControlID != value))
				{
					if (this._Control.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControlIDChanging(value);
					this.SendPropertyChanging();
					this._ControlID = value;
					this.SendPropertyChanged("ControlID");
					this.OnControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeCountType", DbType="TinyInt NOT NULL")]
		public byte NoticeCountType
		{
			get
			{
				return this._NoticeCountType;
			}
			set
			{
				if ((this._NoticeCountType != value))
				{
					this.OnNoticeCountTypeChanging(value);
					this.SendPropertyChanging();
					this._NoticeCountType = value;
					this.SendPropertyChanged("NoticeCountType");
					this.OnNoticeCountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NoticeNo
		{
			get
			{
				return this._NoticeNo;
			}
			set
			{
				if ((this._NoticeNo != value))
				{
					this.OnNoticeNoChanging(value);
					this.SendPropertyChanging();
					this._NoticeNo = value;
					this.SendPropertyChanged("NoticeNo");
					this.OnNoticeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime NoticeDate
		{
			get
			{
				return this._NoticeDate;
			}
			set
			{
				if ((this._NoticeDate != value))
				{
					this.OnNoticeDateChanging(value);
					this.SendPropertyChanging();
					this._NoticeDate = value;
					this.SendPropertyChanged("NoticeDate");
					this.OnNoticeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssuranceNo", DbType="NVarChar(20)")]
		public string AssuranceNo
		{
			get
			{
				return this._AssuranceNo;
			}
			set
			{
				if ((this._AssuranceNo != value))
				{
					this.OnAssuranceNoChanging(value);
					this.SendPropertyChanging();
					this._AssuranceNo = value;
					this.SendPropertyChanged("AssuranceNo");
					this.OnAssuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssuranceDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AssuranceDate
		{
			get
			{
				return this._AssuranceDate;
			}
			set
			{
				if ((this._AssuranceDate != value))
				{
					this.OnAssuranceDateChanging(value);
					this.SendPropertyChanging();
					this._AssuranceDate = value;
					this.SendPropertyChanged("AssuranceDate");
					this.OnAssuranceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationCount", DbType="Int")]
		public System.Nullable<int> ViolationCount
		{
			get
			{
				return this._ViolationCount;
			}
			set
			{
				if ((this._ViolationCount != value))
				{
					this.OnViolationCountChanging(value);
					this.SendPropertyChanging();
					this._ViolationCount = value;
					this.SendPropertyChanged("ViolationCount");
					this.OnViolationCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetermineDeadline", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DetermineDeadline
		{
			get
			{
				return this._DetermineDeadline;
			}
			set
			{
				if ((this._DetermineDeadline != value))
				{
					this.OnDetermineDeadlineChanging(value);
					this.SendPropertyChanging();
					this._DetermineDeadline = value;
					this.SendPropertyChanged("DetermineDeadline");
					this.OnDetermineDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterDateGroupOf3", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LetterDateGroupOf3
		{
			get
			{
				return this._LetterDateGroupOf3;
			}
			set
			{
				if ((this._LetterDateGroupOf3 != value))
				{
					this.OnLetterDateGroupOf3Changing(value);
					this.SendPropertyChanging();
					this._LetterDateGroupOf3 = value;
					this.SendPropertyChanged("LetterDateGroupOf3");
					this.OnLetterDateGroupOf3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterNoGroupOf3", DbType="NVarChar(20)")]
		public string LetterNoGroupOf3
		{
			get
			{
				return this._LetterNoGroupOf3;
			}
			set
			{
				if ((this._LetterNoGroupOf3 != value))
				{
					this.OnLetterNoGroupOf3Changing(value);
					this.SendPropertyChanging();
					this._LetterNoGroupOf3 = value;
					this.SendPropertyChanged("LetterNoGroupOf3");
					this.OnLetterNoGroupOf3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Notice_TakePossession", Storage="_TakePossessions", ThisKey="ID", OtherKey="NoticeID")]
		public EntitySet<TakePossession> TakePossessions
		{
			get
			{
				return this._TakePossessions;
			}
			set
			{
				this._TakePossessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Control_Notice", Storage="_Control", ThisKey="ControlID", OtherKey="ID", IsForeignKey=true)]
		public Control Control
		{
			get
			{
				return this._Control.Entity;
			}
			set
			{
				Control previousValue = this._Control.Entity;
				if (((previousValue != value) 
							|| (this._Control.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Control.Entity = null;
						previousValue.Notices.Remove(this);
					}
					this._Control.Entity = value;
					if ((value != null))
					{
						value.Notices.Add(this);
						this._ControlID = value.ID;
					}
					else
					{
						this._ControlID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Control");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Notice = this;
		}
		
		private void detach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Notice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Office")]
	public partial class Office : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CityID;
		
		private string _Code;
		
		private string _Title;
		
		private string _ContactPersonName;
		
		private string _TelephoneNo;
		
		private string _Address;
		
		private bool _IsActive;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _ModifyDate;
		
		private EntitySet<OfficeEmployee> _OfficeEmployees;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContactPersonNameChanging(string value);
    partial void OnContactPersonNameChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public Office()
		{
			this._OfficeEmployees = new EntitySet<OfficeEmployee>(new Action<OfficeEmployee>(this.attach_OfficeEmployees), new Action<OfficeEmployee>(this.detach_OfficeEmployees));
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonName", DbType="NVarChar(MAX)")]
		public string ContactPersonName
		{
			get
			{
				return this._ContactPersonName;
			}
			set
			{
				if ((this._ContactPersonName != value))
				{
					this.OnContactPersonNameChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonName = value;
					this.SendPropertyChanged("ContactPersonName");
					this.OnContactPersonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="NVarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_OfficeEmployee", Storage="_OfficeEmployees", ThisKey="ID", OtherKey="OfficeID")]
		public EntitySet<OfficeEmployee> OfficeEmployees
		{
			get
			{
				return this._OfficeEmployees;
			}
			set
			{
				this._OfficeEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Office", Storage="_City", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Offices.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Offices.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OfficeEmployees(OfficeEmployee entity)
		{
			this.SendPropertyChanging();
			entity.Office = this;
		}
		
		private void detach_OfficeEmployees(OfficeEmployee entity)
		{
			this.SendPropertyChanging();
			entity.Office = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfficeEmployee")]
	public partial class OfficeEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OfficeID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private EntityRef<Office> _Office;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOfficeIDChanging(int value);
    partial void OnOfficeIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public OfficeEmployee()
		{
			this._Office = default(EntityRef<Office>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeID", DbType="Int NOT NULL")]
		public int OfficeID
		{
			get
			{
				return this._OfficeID;
			}
			set
			{
				if ((this._OfficeID != value))
				{
					if (this._Office.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeIDChanging(value);
					this.SendPropertyChanging();
					this._OfficeID = value;
					this.SendPropertyChanged("OfficeID");
					this.OnOfficeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(63)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_OfficeEmployee", Storage="_Office", ThisKey="OfficeID", OtherKey="ID", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.OfficeEmployees.Remove(this);
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.OfficeEmployees.Add(this);
						this._OfficeID = value.ID;
					}
					else
					{
						this._OfficeID = default(int);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ONULink")]
	public partial class ONULink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ONUCode;
		
		private string _LinkNo;
		
		private System.Nullable<byte> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnONUCodeChanging(string value);
    partial void OnONUCodeChanged();
    partial void OnLinkNoChanging(string value);
    partial void OnLinkNoChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public ONULink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ONUCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ONUCode
		{
			get
			{
				return this._ONUCode;
			}
			set
			{
				if ((this._ONUCode != value))
				{
					this.OnONUCodeChanging(value);
					this.SendPropertyChanging();
					this._ONUCode = value;
					this.SendPropertyChanged("ONUCode");
					this.OnONUCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LinkNo
		{
			get
			{
				return this._LinkNo;
			}
			set
			{
				if ((this._LinkNo != value))
				{
					this.OnLinkNoChanging(value);
					this.SendPropertyChanging();
					this._LinkNo = value;
					this.SendPropertyChanged("LinkNo");
					this.OnLinkNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OtherCost")]
	public partial class OtherCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<long> _RequestID;
		
		private string _CostTitle;
		
		private string _Reason;
		
		private System.Nullable<byte> _WorkUnit;
		
		private long _BasePrice;
		
		private byte _IsActive;
		
		private System.DateTime _InsertDate;
		
		private EntitySet<Installment> _Installments;
		
		private EntitySet<RequestPayment> _RequestPayments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnCostTitleChanging(string value);
    partial void OnCostTitleChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnWorkUnitChanging(System.Nullable<byte> value);
    partial void OnWorkUnitChanged();
    partial void OnBasePriceChanging(long value);
    partial void OnBasePriceChanged();
    partial void OnIsActiveChanging(byte value);
    partial void OnIsActiveChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public OtherCost()
		{
			this._Installments = new EntitySet<Installment>(new Action<Installment>(this.attach_Installments), new Action<Installment>(this.detach_Installments));
			this._RequestPayments = new EntitySet<RequestPayment>(new Action<RequestPayment>(this.attach_RequestPayments), new Action<RequestPayment>(this.detach_RequestPayments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTitle", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CostTitle
		{
			get
			{
				return this._CostTitle;
			}
			set
			{
				if ((this._CostTitle != value))
				{
					this.OnCostTitleChanging(value);
					this.SendPropertyChanging();
					this._CostTitle = value;
					this.SendPropertyChanged("CostTitle");
					this.OnCostTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(1000)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkUnit", DbType="TinyInt")]
		public System.Nullable<byte> WorkUnit
		{
			get
			{
				return this._WorkUnit;
			}
			set
			{
				if ((this._WorkUnit != value))
				{
					this.OnWorkUnitChanging(value);
					this.SendPropertyChanging();
					this._WorkUnit = value;
					this.SendPropertyChanged("WorkUnit");
					this.OnWorkUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="BigInt NOT NULL")]
		public long BasePrice
		{
			get
			{
				return this._BasePrice;
			}
			set
			{
				if ((this._BasePrice != value))
				{
					this.OnBasePriceChanging(value);
					this.SendPropertyChanging();
					this._BasePrice = value;
					this.SendPropertyChanged("BasePrice");
					this.OnBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="TinyInt NOT NULL")]
		public byte IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OtherCost_Installment", Storage="_Installments", ThisKey="ID", OtherKey="OtherCostID")]
		public EntitySet<Installment> Installments
		{
			get
			{
				return this._Installments;
			}
			set
			{
				this._Installments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OtherCost_RequestPayment", Storage="_RequestPayments", ThisKey="ID", OtherKey="OtherCostID")]
		public EntitySet<RequestPayment> RequestPayments
		{
			get
			{
				return this._RequestPayments;
			}
			set
			{
				this._RequestPayments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Installments(Installment entity)
		{
			this.SendPropertyChanging();
			entity.OtherCost = this;
		}
		
		private void detach_Installments(Installment entity)
		{
			this.SendPropertyChanging();
			entity.OtherCost = null;
		}
		
		private void attach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.OtherCost = this;
		}
		
		private void detach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.OtherCost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAPInfo")]
	public partial class PAPInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _ManagerName;
		
		private string _TelephoneNo;
		
		private string _MobileNo;
		
		private string _Address;
		
		private string _EmailAddress;
		
		private bool _LoginStatus;
		
		private System.Nullable<int> _OperatingStatusID;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<ADSLPAPFeasibility> _ADSLPAPFeasibilities;
		
		private EntitySet<ADSLPAPPort> _ADSLPAPPorts;
		
		private EntitySet<ADSLPAPRequest> _ADSLPAPRequests;
		
		private EntitySet<ADSLTelephoneNoHistory> _ADSLTelephoneNoHistories;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<PAPInfoSpaceandPower> _PAPInfoSpaceandPowers;
		
		private EntitySet<PAPInfoUser> _PAPInfoUsers;
		
		private EntitySet<Wireless> _Wirelesses;
		
		private EntityRef<PAPInfoOperatingStatus> _PAPInfoOperatingStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnManagerNameChanging(string value);
    partial void OnManagerNameChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnLoginStatusChanging(bool value);
    partial void OnLoginStatusChanged();
    partial void OnOperatingStatusIDChanging(System.Nullable<int> value);
    partial void OnOperatingStatusIDChanged();
    #endregion
		
		public PAPInfo()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._ADSLPAPFeasibilities = new EntitySet<ADSLPAPFeasibility>(new Action<ADSLPAPFeasibility>(this.attach_ADSLPAPFeasibilities), new Action<ADSLPAPFeasibility>(this.detach_ADSLPAPFeasibilities));
			this._ADSLPAPPorts = new EntitySet<ADSLPAPPort>(new Action<ADSLPAPPort>(this.attach_ADSLPAPPorts), new Action<ADSLPAPPort>(this.detach_ADSLPAPPorts));
			this._ADSLPAPRequests = new EntitySet<ADSLPAPRequest>(new Action<ADSLPAPRequest>(this.attach_ADSLPAPRequests), new Action<ADSLPAPRequest>(this.detach_ADSLPAPRequests));
			this._ADSLTelephoneNoHistories = new EntitySet<ADSLTelephoneNoHistory>(new Action<ADSLTelephoneNoHistory>(this.attach_ADSLTelephoneNoHistories), new Action<ADSLTelephoneNoHistory>(this.detach_ADSLTelephoneNoHistories));
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._PAPInfoSpaceandPowers = new EntitySet<PAPInfoSpaceandPower>(new Action<PAPInfoSpaceandPower>(this.attach_PAPInfoSpaceandPowers), new Action<PAPInfoSpaceandPower>(this.detach_PAPInfoSpaceandPowers));
			this._PAPInfoUsers = new EntitySet<PAPInfoUser>(new Action<PAPInfoUser>(this.attach_PAPInfoUsers), new Action<PAPInfoUser>(this.detach_PAPInfoUsers));
			this._Wirelesses = new EntitySet<Wireless>(new Action<Wireless>(this.attach_Wirelesses), new Action<Wireless>(this.detach_Wirelesses));
			this._PAPInfoOperatingStatus = default(EntityRef<PAPInfoOperatingStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerName", DbType="NVarChar(50)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this.OnManagerNameChanging(value);
					this.SendPropertyChanging();
					this._ManagerName = value;
					this.SendPropertyChanged("ManagerName");
					this.OnManagerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="NVarChar(100)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(100)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginStatus", DbType="Bit NOT NULL")]
		public bool LoginStatus
		{
			get
			{
				return this._LoginStatus;
			}
			set
			{
				if ((this._LoginStatus != value))
				{
					this.OnLoginStatusChanging(value);
					this.SendPropertyChanging();
					this._LoginStatus = value;
					this.SendPropertyChanged("LoginStatus");
					this.OnLoginStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatingStatusID", DbType="Int")]
		public System.Nullable<int> OperatingStatusID
		{
			get
			{
				return this._OperatingStatusID;
			}
			set
			{
				if ((this._OperatingStatusID != value))
				{
					if (this._PAPInfoOperatingStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatingStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OperatingStatusID = value;
					this.SendPropertyChanged("OperatingStatusID");
					this.OnOperatingStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSLPAPFeasibility", Storage="_ADSLPAPFeasibilities", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<ADSLPAPFeasibility> ADSLPAPFeasibilities
		{
			get
			{
				return this._ADSLPAPFeasibilities;
			}
			set
			{
				this._ADSLPAPFeasibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSLPAPPort", Storage="_ADSLPAPPorts", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<ADSLPAPPort> ADSLPAPPorts
		{
			get
			{
				return this._ADSLPAPPorts;
			}
			set
			{
				this._ADSLPAPPorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSLPAPRequest", Storage="_ADSLPAPRequests", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<ADSLPAPRequest> ADSLPAPRequests
		{
			get
			{
				return this._ADSLPAPRequests;
			}
			set
			{
				this._ADSLPAPRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_ADSLTelephoneNoHistory", Storage="_ADSLTelephoneNoHistories", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<ADSLTelephoneNoHistory> ADSLTelephoneNoHistories
		{
			get
			{
				return this._ADSLTelephoneNoHistories;
			}
			set
			{
				this._ADSLTelephoneNoHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_PAPInfoSpaceandPower", Storage="_PAPInfoSpaceandPowers", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<PAPInfoSpaceandPower> PAPInfoSpaceandPowers
		{
			get
			{
				return this._PAPInfoSpaceandPowers;
			}
			set
			{
				this._PAPInfoSpaceandPowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_PAPInfoUser", Storage="_PAPInfoUsers", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<PAPInfoUser> PAPInfoUsers
		{
			get
			{
				return this._PAPInfoUsers;
			}
			set
			{
				this._PAPInfoUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_Wireless", Storage="_Wirelesses", ThisKey="ID", OtherKey="PAPInfoID")]
		public EntitySet<Wireless> Wirelesses
		{
			get
			{
				return this._Wirelesses;
			}
			set
			{
				this._Wirelesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfoOperatingStatus_PAPInfo", Storage="_PAPInfoOperatingStatus", ThisKey="OperatingStatusID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfoOperatingStatus PAPInfoOperatingStatus
		{
			get
			{
				return this._PAPInfoOperatingStatus.Entity;
			}
			set
			{
				PAPInfoOperatingStatus previousValue = this._PAPInfoOperatingStatus.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfoOperatingStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfoOperatingStatus.Entity = null;
						previousValue.PAPInfos.Remove(this);
					}
					this._PAPInfoOperatingStatus.Entity = value;
					if ((value != null))
					{
						value.PAPInfos.Add(this);
						this._OperatingStatusID = value.ID;
					}
					else
					{
						this._OperatingStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAPInfoOperatingStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
		
		private void attach_ADSLPAPFeasibilities(ADSLPAPFeasibility entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_ADSLPAPFeasibilities(ADSLPAPFeasibility entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
		
		private void attach_ADSLPAPPorts(ADSLPAPPort entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_ADSLPAPPorts(ADSLPAPPort entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
		
		private void attach_ADSLPAPRequests(ADSLPAPRequest entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_ADSLPAPRequests(ADSLPAPRequest entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
		
		private void attach_ADSLTelephoneNoHistories(ADSLTelephoneNoHistory entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_ADSLTelephoneNoHistories(ADSLTelephoneNoHistory entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
		
		private void attach_PAPInfoSpaceandPowers(PAPInfoSpaceandPower entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_PAPInfoSpaceandPowers(PAPInfoSpaceandPower entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
		
		private void attach_PAPInfoUsers(PAPInfoUser entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_PAPInfoUsers(PAPInfoUser entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
		
		private void attach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = this;
		}
		
		private void detach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAPInfoCost")]
	public partial class PAPInfoCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<PAPInfoCostHistory> _PAPInfoCostHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public PAPInfoCost()
		{
			this._PAPInfoCostHistories = new EntitySet<PAPInfoCostHistory>(new Action<PAPInfoCostHistory>(this.attach_PAPInfoCostHistories), new Action<PAPInfoCostHistory>(this.detach_PAPInfoCostHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfoCost_PAPInfoCostHistory", Storage="_PAPInfoCostHistories", ThisKey="ID", OtherKey="CostID")]
		public EntitySet<PAPInfoCostHistory> PAPInfoCostHistories
		{
			get
			{
				return this._PAPInfoCostHistories;
			}
			set
			{
				this._PAPInfoCostHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAPInfoCostHistories(PAPInfoCostHistory entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfoCost = this;
		}
		
		private void detach_PAPInfoCostHistories(PAPInfoCostHistory entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfoCost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAPInfoCostHistory")]
	public partial class PAPInfoCostHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CostID;
		
		private string _Value;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<PAPInfoCost> _PAPInfoCost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCostIDChanging(int value);
    partial void OnCostIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public PAPInfoCostHistory()
		{
			this._PAPInfoCost = default(EntityRef<PAPInfoCost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostID", DbType="Int NOT NULL")]
		public int CostID
		{
			get
			{
				return this._CostID;
			}
			set
			{
				if ((this._CostID != value))
				{
					if (this._PAPInfoCost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostIDChanging(value);
					this.SendPropertyChanging();
					this._CostID = value;
					this.SendPropertyChanged("CostID");
					this.OnCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfoCost_PAPInfoCostHistory", Storage="_PAPInfoCost", ThisKey="CostID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfoCost PAPInfoCost
		{
			get
			{
				return this._PAPInfoCost.Entity;
			}
			set
			{
				PAPInfoCost previousValue = this._PAPInfoCost.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfoCost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfoCost.Entity = null;
						previousValue.PAPInfoCostHistories.Remove(this);
					}
					this._PAPInfoCost.Entity = value;
					if ((value != null))
					{
						value.PAPInfoCostHistories.Add(this);
						this._CostID = value.ID;
					}
					else
					{
						this._CostID = default(int);
					}
					this.SendPropertyChanged("PAPInfoCost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAPInfoLimitation")]
	public partial class PAPInfoLimitation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PAPInfoID;
		
		private int _CityID;
		
		private System.Nullable<int> _InstallRequestNo;
		
		private System.Nullable<int> _DischargeRequestNo;
		
		private System.Nullable<int> _FeasibilityNo;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPAPInfoIDChanging(int value);
    partial void OnPAPInfoIDChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnInstallRequestNoChanging(System.Nullable<int> value);
    partial void OnInstallRequestNoChanged();
    partial void OnDischargeRequestNoChanging(System.Nullable<int> value);
    partial void OnDischargeRequestNoChanged();
    partial void OnFeasibilityNoChanging(System.Nullable<int> value);
    partial void OnFeasibilityNoChanged();
    #endregion
		
		public PAPInfoLimitation()
		{
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int NOT NULL")]
		public int PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallRequestNo", DbType="Int")]
		public System.Nullable<int> InstallRequestNo
		{
			get
			{
				return this._InstallRequestNo;
			}
			set
			{
				if ((this._InstallRequestNo != value))
				{
					this.OnInstallRequestNoChanging(value);
					this.SendPropertyChanging();
					this._InstallRequestNo = value;
					this.SendPropertyChanged("InstallRequestNo");
					this.OnInstallRequestNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeRequestNo", DbType="Int")]
		public System.Nullable<int> DischargeRequestNo
		{
			get
			{
				return this._DischargeRequestNo;
			}
			set
			{
				if ((this._DischargeRequestNo != value))
				{
					this.OnDischargeRequestNoChanging(value);
					this.SendPropertyChanging();
					this._DischargeRequestNo = value;
					this.SendPropertyChanged("DischargeRequestNo");
					this.OnDischargeRequestNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeasibilityNo", DbType="Int")]
		public System.Nullable<int> FeasibilityNo
		{
			get
			{
				return this._FeasibilityNo;
			}
			set
			{
				if ((this._FeasibilityNo != value))
				{
					this.OnFeasibilityNoChanging(value);
					this.SendPropertyChanging();
					this._FeasibilityNo = value;
					this.SendPropertyChanged("FeasibilityNo");
					this.OnFeasibilityNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_PAPInfoLimitation", Storage="_City", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.PAPInfoLimitations.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.PAPInfoLimitations.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAPInfoOperatingStatus")]
	public partial class PAPInfoOperatingStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<PAPInfo> _PAPInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public PAPInfoOperatingStatus()
		{
			this._PAPInfos = new EntitySet<PAPInfo>(new Action<PAPInfo>(this.attach_PAPInfos), new Action<PAPInfo>(this.detach_PAPInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfoOperatingStatus_PAPInfo", Storage="_PAPInfos", ThisKey="ID", OtherKey="OperatingStatusID")]
		public EntitySet<PAPInfo> PAPInfos
		{
			get
			{
				return this._PAPInfos;
			}
			set
			{
				this._PAPInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAPInfos(PAPInfo entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfoOperatingStatus = this;
		}
		
		private void detach_PAPInfos(PAPInfo entity)
		{
			this.SendPropertyChanging();
			entity.PAPInfoOperatingStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAPInfoPort1")]
	public partial class PAPInfoPort1
	{
		
		private int _ID;
		
		private System.Nullable<int> _PAPInfoID;
		
		private System.Nullable<int> _CenterID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _Telephone1;
		
		private string _InputPort;
		
		private string _OutputPort;
		
		private string _Date;
		
		private string _PDate;
		
		private System.Nullable<int> _Status;
		
		public PAPInfoPort1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int")]
		public System.Nullable<int> PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					this._PAPInfoID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int")]
		public System.Nullable<int> CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					this._CenterID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone1", DbType="NVarChar(50)")]
		public string Telephone1
		{
			get
			{
				return this._Telephone1;
			}
			set
			{
				if ((this._Telephone1 != value))
				{
					this._Telephone1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputPort", DbType="NVarChar(20)")]
		public string InputPort
		{
			get
			{
				return this._InputPort;
			}
			set
			{
				if ((this._InputPort != value))
				{
					this._InputPort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputPort", DbType="NVarChar(10)")]
		public string OutputPort
		{
			get
			{
				return this._OutputPort;
			}
			set
			{
				if ((this._OutputPort != value))
				{
					this._OutputPort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDate", DbType="NVarChar(50)")]
		public string PDate
		{
			get
			{
				return this._PDate;
			}
			set
			{
				if ((this._PDate != value))
				{
					this._PDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAPInfoSpaceandPower")]
	public partial class PAPInfoSpaceandPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PAPInfoID;
		
		private int _CenterID;
		
		private System.Nullable<int> _ACPower;
		
		private System.Nullable<int> _DCPower;
		
		private System.Nullable<decimal> _Space;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPAPInfoIDChanging(int value);
    partial void OnPAPInfoIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnACPowerChanging(System.Nullable<int> value);
    partial void OnACPowerChanged();
    partial void OnDCPowerChanging(System.Nullable<int> value);
    partial void OnDCPowerChanged();
    partial void OnSpaceChanging(System.Nullable<decimal> value);
    partial void OnSpaceChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public PAPInfoSpaceandPower()
		{
			this._Center = default(EntityRef<Center>);
			this._PAPInfo = default(EntityRef<PAPInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int NOT NULL")]
		public int PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACPower", DbType="Int")]
		public System.Nullable<int> ACPower
		{
			get
			{
				return this._ACPower;
			}
			set
			{
				if ((this._ACPower != value))
				{
					this.OnACPowerChanging(value);
					this.SendPropertyChanging();
					this._ACPower = value;
					this.SendPropertyChanged("ACPower");
					this.OnACPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCPower", DbType="Int")]
		public System.Nullable<int> DCPower
		{
			get
			{
				return this._DCPower;
			}
			set
			{
				if ((this._DCPower != value))
				{
					this.OnDCPowerChanging(value);
					this.SendPropertyChanging();
					this._DCPower = value;
					this.SendPropertyChanged("DCPower");
					this.OnDCPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Space", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Space
		{
			get
			{
				return this._Space;
			}
			set
			{
				if ((this._Space != value))
				{
					this.OnSpaceChanging(value);
					this.SendPropertyChanging();
					this._Space = value;
					this.SendPropertyChanged("Space");
					this.OnSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_PAPInfoSpaceandPower", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.PAPInfoSpaceandPowers.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.PAPInfoSpaceandPowers.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_PAPInfoSpaceandPower", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.PAPInfoSpaceandPowers.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.PAPInfoSpaceandPowers.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(int);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAPInfoUsers")]
	public partial class PAPInfoUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Password;
		
		private int _PAPInfoID;
		
		private int _CityID;
		
		private string _Email;
		
		private System.Nullable<int> _InstallRequestNo;
		
		private System.Nullable<int> _DischargeRequestNo;
		
		private System.Nullable<int> _ExchangeRequestNo;
		
		private System.Nullable<int> _FeasibilityNo;
		
		private bool _IsEnable;
		
		private EntityRef<City> _City;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPAPInfoIDChanging(int value);
    partial void OnPAPInfoIDChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnInstallRequestNoChanging(System.Nullable<int> value);
    partial void OnInstallRequestNoChanged();
    partial void OnDischargeRequestNoChanging(System.Nullable<int> value);
    partial void OnDischargeRequestNoChanged();
    partial void OnExchangeRequestNoChanging(System.Nullable<int> value);
    partial void OnExchangeRequestNoChanged();
    partial void OnFeasibilityNoChanging(System.Nullable<int> value);
    partial void OnFeasibilityNoChanged();
    partial void OnIsEnableChanging(bool value);
    partial void OnIsEnableChanged();
    #endregion
		
		public PAPInfoUser()
		{
			this._City = default(EntityRef<City>);
			this._PAPInfo = default(EntityRef<PAPInfo>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int NOT NULL")]
		public int PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallRequestNo", DbType="Int")]
		public System.Nullable<int> InstallRequestNo
		{
			get
			{
				return this._InstallRequestNo;
			}
			set
			{
				if ((this._InstallRequestNo != value))
				{
					this.OnInstallRequestNoChanging(value);
					this.SendPropertyChanging();
					this._InstallRequestNo = value;
					this.SendPropertyChanged("InstallRequestNo");
					this.OnInstallRequestNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeRequestNo", DbType="Int")]
		public System.Nullable<int> DischargeRequestNo
		{
			get
			{
				return this._DischargeRequestNo;
			}
			set
			{
				if ((this._DischargeRequestNo != value))
				{
					this.OnDischargeRequestNoChanging(value);
					this.SendPropertyChanging();
					this._DischargeRequestNo = value;
					this.SendPropertyChanged("DischargeRequestNo");
					this.OnDischargeRequestNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRequestNo", DbType="Int")]
		public System.Nullable<int> ExchangeRequestNo
		{
			get
			{
				return this._ExchangeRequestNo;
			}
			set
			{
				if ((this._ExchangeRequestNo != value))
				{
					this.OnExchangeRequestNoChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRequestNo = value;
					this.SendPropertyChanged("ExchangeRequestNo");
					this.OnExchangeRequestNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeasibilityNo", DbType="Int")]
		public System.Nullable<int> FeasibilityNo
		{
			get
			{
				return this._FeasibilityNo;
			}
			set
			{
				if ((this._FeasibilityNo != value))
				{
					this.OnFeasibilityNoChanging(value);
					this.SendPropertyChanging();
					this._FeasibilityNo = value;
					this.SendPropertyChanged("FeasibilityNo");
					this.OnFeasibilityNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_PAPInfoUser", Storage="_City", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.PAPInfoUsers.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.PAPInfoUsers.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_PAPInfoUser", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.PAPInfoUsers.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.PAPInfoUsers.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(int);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PAPInfoUser", Storage="_User", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PAPInfoUser = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PAPInfoUser = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParazitControl")]
	public partial class ParazitControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ControlID;
		
		private System.DateTime _ParazitStartDate;
		
		private System.DateTime _ParazitEndTime;
		
		private byte _Sex;
		
		private EntityRef<Control> _Control;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnControlIDChanging(long value);
    partial void OnControlIDChanged();
    partial void OnParazitStartDateChanging(System.DateTime value);
    partial void OnParazitStartDateChanged();
    partial void OnParazitEndTimeChanging(System.DateTime value);
    partial void OnParazitEndTimeChanged();
    partial void OnSexChanging(byte value);
    partial void OnSexChanged();
    #endregion
		
		public ParazitControl()
		{
			this._Control = default(EntityRef<Control>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlID", DbType="BigInt NOT NULL")]
		public long ControlID
		{
			get
			{
				return this._ControlID;
			}
			set
			{
				if ((this._ControlID != value))
				{
					if (this._Control.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControlIDChanging(value);
					this.SendPropertyChanging();
					this._ControlID = value;
					this.SendPropertyChanged("ControlID");
					this.OnControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParazitStartDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ParazitStartDate
		{
			get
			{
				return this._ParazitStartDate;
			}
			set
			{
				if ((this._ParazitStartDate != value))
				{
					this.OnParazitStartDateChanging(value);
					this.SendPropertyChanging();
					this._ParazitStartDate = value;
					this.SendPropertyChanged("ParazitStartDate");
					this.OnParazitStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParazitEndTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ParazitEndTime
		{
			get
			{
				return this._ParazitEndTime;
			}
			set
			{
				if ((this._ParazitEndTime != value))
				{
					this.OnParazitEndTimeChanging(value);
					this.SendPropertyChanging();
					this._ParazitEndTime = value;
					this.SendPropertyChanged("ParazitEndTime");
					this.OnParazitEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="TinyInt NOT NULL")]
		public byte Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Control_ParazitControl", Storage="_Control", ThisKey="ControlID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Control Control
		{
			get
			{
				return this._Control.Entity;
			}
			set
			{
				Control previousValue = this._Control.Entity;
				if (((previousValue != value) 
							|| (this._Control.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Control.Entity = null;
						previousValue.ParazitControls.Remove(this);
					}
					this._Control.Entity = value;
					if ((value != null))
					{
						value.ParazitControls.Add(this);
						this._ControlID = value.ID;
					}
					else
					{
						this._ControlID = default(long);
					}
					this.SendPropertyChanged("Control");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentFiche")]
	public partial class PaymentFiche : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _InstallmentID;
		
		private byte _FicheType;
		
		private string _FicheNunmber;
		
		private System.Nullable<int> _BankBranchID;
		
		private System.DateTime _IssueDate;
		
		private bool _HasReport;
		
		private System.DateTime _InsertDate;
		
		private EntitySet<RequestPayment> _RequestPayments;
		
		private EntityRef<Installment> _Installment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInstallmentIDChanging(System.Nullable<long> value);
    partial void OnInstallmentIDChanged();
    partial void OnFicheTypeChanging(byte value);
    partial void OnFicheTypeChanged();
    partial void OnFicheNunmberChanging(string value);
    partial void OnFicheNunmberChanged();
    partial void OnBankBranchIDChanging(System.Nullable<int> value);
    partial void OnBankBranchIDChanged();
    partial void OnIssueDateChanging(System.DateTime value);
    partial void OnIssueDateChanged();
    partial void OnHasReportChanging(bool value);
    partial void OnHasReportChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public PaymentFiche()
		{
			this._RequestPayments = new EntitySet<RequestPayment>(new Action<RequestPayment>(this.attach_RequestPayments), new Action<RequestPayment>(this.detach_RequestPayments));
			this._Installment = default(EntityRef<Installment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallmentID", DbType="BigInt")]
		public System.Nullable<long> InstallmentID
		{
			get
			{
				return this._InstallmentID;
			}
			set
			{
				if ((this._InstallmentID != value))
				{
					if (this._Installment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallmentIDChanging(value);
					this.SendPropertyChanging();
					this._InstallmentID = value;
					this.SendPropertyChanged("InstallmentID");
					this.OnInstallmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicheType", DbType="TinyInt NOT NULL")]
		public byte FicheType
		{
			get
			{
				return this._FicheType;
			}
			set
			{
				if ((this._FicheType != value))
				{
					this.OnFicheTypeChanging(value);
					this.SendPropertyChanging();
					this._FicheType = value;
					this.SendPropertyChanged("FicheType");
					this.OnFicheTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicheNunmber", DbType="NVarChar(20)")]
		public string FicheNunmber
		{
			get
			{
				return this._FicheNunmber;
			}
			set
			{
				if ((this._FicheNunmber != value))
				{
					this.OnFicheNunmberChanging(value);
					this.SendPropertyChanging();
					this._FicheNunmber = value;
					this.SendPropertyChanged("FicheNunmber");
					this.OnFicheNunmberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBranchID", DbType="Int")]
		public System.Nullable<int> BankBranchID
		{
			get
			{
				return this._BankBranchID;
			}
			set
			{
				if ((this._BankBranchID != value))
				{
					this.OnBankBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BankBranchID = value;
					this.SendPropertyChanged("BankBranchID");
					this.OnBankBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasReport", DbType="Bit NOT NULL")]
		public bool HasReport
		{
			get
			{
				return this._HasReport;
			}
			set
			{
				if ((this._HasReport != value))
				{
					this.OnHasReportChanging(value);
					this.SendPropertyChanging();
					this._HasReport = value;
					this.SendPropertyChanged("HasReport");
					this.OnHasReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFiche_RequestPayment", Storage="_RequestPayments", ThisKey="ID", OtherKey="PaymentFicheID")]
		public EntitySet<RequestPayment> RequestPayments
		{
			get
			{
				return this._RequestPayments;
			}
			set
			{
				this._RequestPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Installment_PaymentFiche", Storage="_Installment", ThisKey="InstallmentID", OtherKey="ID", IsForeignKey=true)]
		public Installment Installment
		{
			get
			{
				return this._Installment.Entity;
			}
			set
			{
				Installment previousValue = this._Installment.Entity;
				if (((previousValue != value) 
							|| (this._Installment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Installment.Entity = null;
						previousValue.PaymentFiches.Remove(this);
					}
					this._Installment.Entity = value;
					if ((value != null))
					{
						value.PaymentFiches.Add(this);
						this._InstallmentID = value.ID;
					}
					else
					{
						this._InstallmentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Installment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFiche = this;
		}
		
		private void detach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentFiche = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PCM")]
	public partial class PCM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ShelfID;
		
		private int _Card;
		
		private int _PCMBrandID;
		
		private int _PCMTypeID;
		
		private string _InstallAddress;
		
		private string _InstallPostCode;
		
		private byte _Status;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntitySet<CenterToCenterTranslationPCM> _CenterToCenterTranslationPCMs;
		
		private EntitySet<CenterToCenterTranslationPCM> _CenterToCenterTranslationPCMs1;
		
		private EntitySet<ExchangeBrokenPCM> _ExchangeBrokenPCMs;
		
		private EntitySet<ExchangeBrokenPCM> _ExchangeBrokenPCMs1;
		
		private EntitySet<PCMPort> _PCMPorts;
		
		private EntityRef<PCMBrand> _PCMBrand;
		
		private EntityRef<PCMShelf> _PCMShelf;
		
		private EntityRef<PCMType> _PCMType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShelfIDChanging(int value);
    partial void OnShelfIDChanged();
    partial void OnCardChanging(int value);
    partial void OnCardChanged();
    partial void OnPCMBrandIDChanging(int value);
    partial void OnPCMBrandIDChanged();
    partial void OnPCMTypeIDChanging(int value);
    partial void OnPCMTypeIDChanged();
    partial void OnInstallAddressChanging(string value);
    partial void OnInstallAddressChanged();
    partial void OnInstallPostCodeChanging(string value);
    partial void OnInstallPostCodeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public PCM()
		{
			this._CenterToCenterTranslationPCMs = new EntitySet<CenterToCenterTranslationPCM>(new Action<CenterToCenterTranslationPCM>(this.attach_CenterToCenterTranslationPCMs), new Action<CenterToCenterTranslationPCM>(this.detach_CenterToCenterTranslationPCMs));
			this._CenterToCenterTranslationPCMs1 = new EntitySet<CenterToCenterTranslationPCM>(new Action<CenterToCenterTranslationPCM>(this.attach_CenterToCenterTranslationPCMs1), new Action<CenterToCenterTranslationPCM>(this.detach_CenterToCenterTranslationPCMs1));
			this._ExchangeBrokenPCMs = new EntitySet<ExchangeBrokenPCM>(new Action<ExchangeBrokenPCM>(this.attach_ExchangeBrokenPCMs), new Action<ExchangeBrokenPCM>(this.detach_ExchangeBrokenPCMs));
			this._ExchangeBrokenPCMs1 = new EntitySet<ExchangeBrokenPCM>(new Action<ExchangeBrokenPCM>(this.attach_ExchangeBrokenPCMs1), new Action<ExchangeBrokenPCM>(this.detach_ExchangeBrokenPCMs1));
			this._PCMPorts = new EntitySet<PCMPort>(new Action<PCMPort>(this.attach_PCMPorts), new Action<PCMPort>(this.detach_PCMPorts));
			this._PCMBrand = default(EntityRef<PCMBrand>);
			this._PCMShelf = default(EntityRef<PCMShelf>);
			this._PCMType = default(EntityRef<PCMType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfID", DbType="Int NOT NULL")]
		public int ShelfID
		{
			get
			{
				return this._ShelfID;
			}
			set
			{
				if ((this._ShelfID != value))
				{
					if (this._PCMShelf.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShelfIDChanging(value);
					this.SendPropertyChanging();
					this._ShelfID = value;
					this.SendPropertyChanged("ShelfID");
					this.OnShelfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="Int NOT NULL")]
		public int Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this.OnCardChanging(value);
					this.SendPropertyChanging();
					this._Card = value;
					this.SendPropertyChanged("Card");
					this.OnCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMBrandID", DbType="Int NOT NULL")]
		public int PCMBrandID
		{
			get
			{
				return this._PCMBrandID;
			}
			set
			{
				if ((this._PCMBrandID != value))
				{
					if (this._PCMBrand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCMBrandIDChanging(value);
					this.SendPropertyChanging();
					this._PCMBrandID = value;
					this.SendPropertyChanged("PCMBrandID");
					this.OnPCMBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMTypeID", DbType="Int NOT NULL")]
		public int PCMTypeID
		{
			get
			{
				return this._PCMTypeID;
			}
			set
			{
				if ((this._PCMTypeID != value))
				{
					if (this._PCMType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCMTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PCMTypeID = value;
					this.SendPropertyChanged("PCMTypeID");
					this.OnPCMTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(1000)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this.OnInstallAddressChanging(value);
					this.SendPropertyChanging();
					this._InstallAddress = value;
					this.SendPropertyChanged("InstallAddress");
					this.OnInstallAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallPostCode", DbType="NChar(10)")]
		public string InstallPostCode
		{
			get
			{
				return this._InstallPostCode;
			}
			set
			{
				if ((this._InstallPostCode != value))
				{
					this.OnInstallPostCodeChanging(value);
					this.SendPropertyChanging();
					this._InstallPostCode = value;
					this.SendPropertyChanged("InstallPostCode");
					this.OnInstallPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_CenterToCenterTranslationPCM", Storage="_CenterToCenterTranslationPCMs", ThisKey="ID", OtherKey="OldPCMID")]
		public EntitySet<CenterToCenterTranslationPCM> CenterToCenterTranslationPCMs
		{
			get
			{
				return this._CenterToCenterTranslationPCMs;
			}
			set
			{
				this._CenterToCenterTranslationPCMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_CenterToCenterTranslationPCM1", Storage="_CenterToCenterTranslationPCMs1", ThisKey="ID", OtherKey="NewPCMID")]
		public EntitySet<CenterToCenterTranslationPCM> CenterToCenterTranslationPCMs1
		{
			get
			{
				return this._CenterToCenterTranslationPCMs1;
			}
			set
			{
				this._CenterToCenterTranslationPCMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_ExchangeBrokenPCM", Storage="_ExchangeBrokenPCMs", ThisKey="ID", OtherKey="OldPCMID")]
		public EntitySet<ExchangeBrokenPCM> ExchangeBrokenPCMs
		{
			get
			{
				return this._ExchangeBrokenPCMs;
			}
			set
			{
				this._ExchangeBrokenPCMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_ExchangeBrokenPCM1", Storage="_ExchangeBrokenPCMs1", ThisKey="ID", OtherKey="NewPCMID")]
		public EntitySet<ExchangeBrokenPCM> ExchangeBrokenPCMs1
		{
			get
			{
				return this._ExchangeBrokenPCMs1;
			}
			set
			{
				this._ExchangeBrokenPCMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_PCMPort", Storage="_PCMPorts", ThisKey="ID", OtherKey="PCMID")]
		public EntitySet<PCMPort> PCMPorts
		{
			get
			{
				return this._PCMPorts;
			}
			set
			{
				this._PCMPorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMBrand_PCM", Storage="_PCMBrand", ThisKey="PCMBrandID", OtherKey="ID", IsForeignKey=true)]
		public PCMBrand PCMBrand
		{
			get
			{
				return this._PCMBrand.Entity;
			}
			set
			{
				PCMBrand previousValue = this._PCMBrand.Entity;
				if (((previousValue != value) 
							|| (this._PCMBrand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCMBrand.Entity = null;
						previousValue.PCMs.Remove(this);
					}
					this._PCMBrand.Entity = value;
					if ((value != null))
					{
						value.PCMs.Add(this);
						this._PCMBrandID = value.ID;
					}
					else
					{
						this._PCMBrandID = default(int);
					}
					this.SendPropertyChanged("PCMBrand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMShelf_PCM", Storage="_PCMShelf", ThisKey="ShelfID", OtherKey="ID", IsForeignKey=true)]
		public PCMShelf PCMShelf
		{
			get
			{
				return this._PCMShelf.Entity;
			}
			set
			{
				PCMShelf previousValue = this._PCMShelf.Entity;
				if (((previousValue != value) 
							|| (this._PCMShelf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCMShelf.Entity = null;
						previousValue.PCMs.Remove(this);
					}
					this._PCMShelf.Entity = value;
					if ((value != null))
					{
						value.PCMs.Add(this);
						this._ShelfID = value.ID;
					}
					else
					{
						this._ShelfID = default(int);
					}
					this.SendPropertyChanged("PCMShelf");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMType_PCM", Storage="_PCMType", ThisKey="PCMTypeID", OtherKey="ID", IsForeignKey=true)]
		public PCMType PCMType
		{
			get
			{
				return this._PCMType.Entity;
			}
			set
			{
				PCMType previousValue = this._PCMType.Entity;
				if (((previousValue != value) 
							|| (this._PCMType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCMType.Entity = null;
						previousValue.PCMs.Remove(this);
					}
					this._PCMType.Entity = value;
					if ((value != null))
					{
						value.PCMs.Add(this);
						this._PCMTypeID = value.ID;
					}
					else
					{
						this._PCMTypeID = default(int);
					}
					this.SendPropertyChanged("PCMType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CenterToCenterTranslationPCMs(CenterToCenterTranslationPCM entity)
		{
			this.SendPropertyChanging();
			entity.PCM = this;
		}
		
		private void detach_CenterToCenterTranslationPCMs(CenterToCenterTranslationPCM entity)
		{
			this.SendPropertyChanging();
			entity.PCM = null;
		}
		
		private void attach_CenterToCenterTranslationPCMs1(CenterToCenterTranslationPCM entity)
		{
			this.SendPropertyChanging();
			entity.PCM1 = this;
		}
		
		private void detach_CenterToCenterTranslationPCMs1(CenterToCenterTranslationPCM entity)
		{
			this.SendPropertyChanging();
			entity.PCM1 = null;
		}
		
		private void attach_ExchangeBrokenPCMs(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.PCM = this;
		}
		
		private void detach_ExchangeBrokenPCMs(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.PCM = null;
		}
		
		private void attach_ExchangeBrokenPCMs1(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.PCM1 = this;
		}
		
		private void detach_ExchangeBrokenPCMs1(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.PCM1 = null;
		}
		
		private void attach_PCMPorts(PCMPort entity)
		{
			this.SendPropertyChanging();
			entity.PCM = this;
		}
		
		private void detach_PCMPorts(PCMPort entity)
		{
			this.SendPropertyChanging();
			entity.PCM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PCMBrand")]
	public partial class PCMBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<PCM> _PCMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PCMBrand()
		{
			this._PCMs = new EntitySet<PCM>(new Action<PCM>(this.attach_PCMs), new Action<PCM>(this.detach_PCMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMBrand_PCM", Storage="_PCMs", ThisKey="ID", OtherKey="PCMBrandID")]
		public EntitySet<PCM> PCMs
		{
			get
			{
				return this._PCMs;
			}
			set
			{
				this._PCMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PCMs(PCM entity)
		{
			this.SendPropertyChanging();
			entity.PCMBrand = this;
		}
		
		private void detach_PCMs(PCM entity)
		{
			this.SendPropertyChanging();
			entity.PCMBrand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PCMDevice")]
	public partial class PCMDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<long> _BuchtID;
		
		private int _PCMTypeID;
		
		private System.Nullable<byte> _LineNumber;
		
		private string _MUID;
		
		private string _InstallPostalCode;
		
		private string _InstallAddress;
		
		private byte _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnPCMTypeIDChanging(int value);
    partial void OnPCMTypeIDChanged();
    partial void OnLineNumberChanging(System.Nullable<byte> value);
    partial void OnLineNumberChanged();
    partial void OnMUIDChanging(string value);
    partial void OnMUIDChanged();
    partial void OnInstallPostalCodeChanging(string value);
    partial void OnInstallPostalCodeChanged();
    partial void OnInstallAddressChanging(string value);
    partial void OnInstallAddressChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public PCMDevice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMTypeID", DbType="Int NOT NULL")]
		public int PCMTypeID
		{
			get
			{
				return this._PCMTypeID;
			}
			set
			{
				if ((this._PCMTypeID != value))
				{
					this.OnPCMTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PCMTypeID = value;
					this.SendPropertyChanged("PCMTypeID");
					this.OnPCMTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="TinyInt")]
		public System.Nullable<byte> LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MUID
		{
			get
			{
				return this._MUID;
			}
			set
			{
				if ((this._MUID != value))
				{
					this.OnMUIDChanging(value);
					this.SendPropertyChanging();
					this._MUID = value;
					this.SendPropertyChanged("MUID");
					this.OnMUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallPostalCode", DbType="NVarChar(50)")]
		public string InstallPostalCode
		{
			get
			{
				return this._InstallPostalCode;
			}
			set
			{
				if ((this._InstallPostalCode != value))
				{
					this.OnInstallPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._InstallPostalCode = value;
					this.SendPropertyChanged("InstallPostalCode");
					this.OnInstallPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(1000)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this.OnInstallAddressChanging(value);
					this.SendPropertyChanging();
					this._InstallAddress = value;
					this.SendPropertyChanged("InstallAddress");
					this.OnInstallAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PCMPort")]
	public partial class PCMPort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PCMID;
		
		private int _PortNumber;
		
		private byte _PortType;
		
		private byte _Status;
		
		private System.Nullable<long> _ElkaID;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<Malfuction> _Malfuctions;
		
		private EntityRef<PCM> _PCM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPCMIDChanging(int value);
    partial void OnPCMIDChanged();
    partial void OnPortNumberChanging(int value);
    partial void OnPortNumberChanged();
    partial void OnPortTypeChanging(byte value);
    partial void OnPortTypeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnElkaIDChanging(System.Nullable<long> value);
    partial void OnElkaIDChanged();
    #endregion
		
		public PCMPort()
		{
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._Malfuctions = new EntitySet<Malfuction>(new Action<Malfuction>(this.attach_Malfuctions), new Action<Malfuction>(this.detach_Malfuctions));
			this._PCM = default(EntityRef<PCM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMID", DbType="Int NOT NULL")]
		public int PCMID
		{
			get
			{
				return this._PCMID;
			}
			set
			{
				if ((this._PCMID != value))
				{
					if (this._PCM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCMIDChanging(value);
					this.SendPropertyChanging();
					this._PCMID = value;
					this.SendPropertyChanged("PCMID");
					this.OnPCMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortNumber", DbType="Int NOT NULL")]
		public int PortNumber
		{
			get
			{
				return this._PortNumber;
			}
			set
			{
				if ((this._PortNumber != value))
				{
					this.OnPortNumberChanging(value);
					this.SendPropertyChanging();
					this._PortNumber = value;
					this.SendPropertyChanged("PortNumber");
					this.OnPortNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortType", DbType="TinyInt NOT NULL")]
		public byte PortType
		{
			get
			{
				return this._PortType;
			}
			set
			{
				if ((this._PortType != value))
				{
					this.OnPortTypeChanging(value);
					this.SendPropertyChanging();
					this._PortType = value;
					this.SendPropertyChanged("PortType");
					this.OnPortTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="BigInt")]
		public System.Nullable<long> ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMPort_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="PCMPortID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMPort_Malfuction", Storage="_Malfuctions", ThisKey="ID", OtherKey="PCMPortID")]
		public EntitySet<Malfuction> Malfuctions
		{
			get
			{
				return this._Malfuctions;
			}
			set
			{
				this._Malfuctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCM_PCMPort", Storage="_PCM", ThisKey="PCMID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PCM PCM
		{
			get
			{
				return this._PCM.Entity;
			}
			set
			{
				PCM previousValue = this._PCM.Entity;
				if (((previousValue != value) 
							|| (this._PCM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCM.Entity = null;
						previousValue.PCMPorts.Remove(this);
					}
					this._PCM.Entity = value;
					if ((value != null))
					{
						value.PCMPorts.Add(this);
						this._PCMID = value.ID;
					}
					else
					{
						this._PCMID = default(int);
					}
					this.SendPropertyChanged("PCM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.PCMPort = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.PCMPort = null;
		}
		
		private void attach_Malfuctions(Malfuction entity)
		{
			this.SendPropertyChanging();
			entity.PCMPort = this;
		}
		
		private void detach_Malfuctions(Malfuction entity)
		{
			this.SendPropertyChanging();
			entity.PCMPort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PCMRock")]
	public partial class PCMRock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private int _Number;
		
		private EntitySet<PCMShelf> _PCMShelfs;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    #endregion
		
		public PCMRock()
		{
			this._PCMShelfs = new EntitySet<PCMShelf>(new Action<PCMShelf>(this.attach_PCMShelfs), new Action<PCMShelf>(this.detach_PCMShelfs));
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMRock_PCMShelf", Storage="_PCMShelfs", ThisKey="ID", OtherKey="PCMRockID")]
		public EntitySet<PCMShelf> PCMShelfs
		{
			get
			{
				return this._PCMShelfs;
			}
			set
			{
				this._PCMShelfs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_PCMRock", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.PCMRocks.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.PCMRocks.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PCMShelfs(PCMShelf entity)
		{
			this.SendPropertyChanging();
			entity.PCMRock = this;
		}
		
		private void detach_PCMShelfs(PCMShelf entity)
		{
			this.SendPropertyChanging();
			entity.PCMRock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PCMShelf")]
	public partial class PCMShelf : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PCMRockID;
		
		private int _Number;
		
		private EntitySet<PCM> _PCMs;
		
		private EntityRef<PCMRock> _PCMRock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPCMRockIDChanging(int value);
    partial void OnPCMRockIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    #endregion
		
		public PCMShelf()
		{
			this._PCMs = new EntitySet<PCM>(new Action<PCM>(this.attach_PCMs), new Action<PCM>(this.detach_PCMs));
			this._PCMRock = default(EntityRef<PCMRock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMRockID", DbType="Int NOT NULL")]
		public int PCMRockID
		{
			get
			{
				return this._PCMRockID;
			}
			set
			{
				if ((this._PCMRockID != value))
				{
					if (this._PCMRock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCMRockIDChanging(value);
					this.SendPropertyChanging();
					this._PCMRockID = value;
					this.SendPropertyChanged("PCMRockID");
					this.OnPCMRockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMShelf_PCM", Storage="_PCMs", ThisKey="ID", OtherKey="ShelfID")]
		public EntitySet<PCM> PCMs
		{
			get
			{
				return this._PCMs;
			}
			set
			{
				this._PCMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMRock_PCMShelf", Storage="_PCMRock", ThisKey="PCMRockID", OtherKey="ID", IsForeignKey=true)]
		public PCMRock PCMRock
		{
			get
			{
				return this._PCMRock.Entity;
			}
			set
			{
				PCMRock previousValue = this._PCMRock.Entity;
				if (((previousValue != value) 
							|| (this._PCMRock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PCMRock.Entity = null;
						previousValue.PCMShelfs.Remove(this);
					}
					this._PCMRock.Entity = value;
					if ((value != null))
					{
						value.PCMShelfs.Add(this);
						this._PCMRockID = value.ID;
					}
					else
					{
						this._PCMRockID = default(int);
					}
					this.SendPropertyChanged("PCMRock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PCMs(PCM entity)
		{
			this.SendPropertyChanging();
			entity.PCMShelf = this;
		}
		
		private void detach_PCMs(PCM entity)
		{
			this.SendPropertyChanging();
			entity.PCMShelf = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PCMType")]
	public partial class PCMType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _OutLine;
		
		private System.Nullable<byte> _AorB;
		
		private EntitySet<PCM> _PCMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOutLineChanging(int value);
    partial void OnOutLineChanged();
    partial void OnAorBChanging(System.Nullable<byte> value);
    partial void OnAorBChanged();
    #endregion
		
		public PCMType()
		{
			this._PCMs = new EntitySet<PCM>(new Action<PCM>(this.attach_PCMs), new Action<PCM>(this.detach_PCMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutLine", DbType="Int NOT NULL")]
		public int OutLine
		{
			get
			{
				return this._OutLine;
			}
			set
			{
				if ((this._OutLine != value))
				{
					this.OnOutLineChanging(value);
					this.SendPropertyChanging();
					this._OutLine = value;
					this.SendPropertyChanged("OutLine");
					this.OnOutLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AorB", DbType="TinyInt")]
		public System.Nullable<byte> AorB
		{
			get
			{
				return this._AorB;
			}
			set
			{
				if ((this._AorB != value))
				{
					this.OnAorBChanging(value);
					this.SendPropertyChanging();
					this._AorB = value;
					this.SendPropertyChanged("AorB");
					this.OnAorBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCMType_PCM", Storage="_PCMs", ThisKey="ID", OtherKey="PCMTypeID")]
		public EntitySet<PCM> PCMs
		{
			get
			{
				return this._PCMs;
			}
			set
			{
				this._PCMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PCMs(PCM entity)
		{
			this.SendPropertyChanging();
			entity.PCMType = this;
		}
		
		private void detach_PCMs(PCM entity)
		{
			this.SendPropertyChanging();
			entity.PCMType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CabinetID;
		
		private int _PostTypeID;
		
		private System.Nullable<int> _PostGroupID;
		
		private int _Number;
		
		private byte _AorBType;
		
		private int _FromPostContact;
		
		private int _ToPostContact;
		
		private int _Capacity;
		
		private int _Distance;
		
		private bool _IsOutBorder;
		
		private System.Nullable<int> _OutBorderMeter;
		
		private string _PostalCode;
		
		private string _Address;
		
		private System.Nullable<System.Guid> _DocumentFileID;
		
		private byte _Status;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private bool _IsDelete;
		
		private EntitySet<AdjacentPost> _AdjacentPosts;
		
		private EntitySet<AdjacentPost> _AdjacentPosts1;
		
		private EntitySet<ExchangeCabinetInput> _ExchangeCabinetInputs;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions1;
		
		private EntitySet<ExchangePost> _ExchangePosts;
		
		private EntitySet<ExchangePost> _ExchangePosts1;
		
		private EntitySet<InvestigatePossibilityWaitinglist> _InvestigatePossibilityWaitinglists;
		
		private EntitySet<Linesman> _Linesmans;
		
		private EntitySet<PostContact> _PostContacts;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions1;
		
		private EntitySet<TranslationPost> _TranslationPosts;
		
		private EntitySet<TranslationPost> _TranslationPosts1;
		
		private EntitySet<TranslationPostInput> _TranslationPostInputs;
		
		private EntitySet<TranslationPostInput> _TranslationPostInputs1;
		
		private EntitySet<VisitAddress> _VisitAddresses;
		
		private EntitySet<VisitPlacesCabinetAndPost> _VisitPlacesCabinetAndPosts;
		
		private EntitySet<ExchangeGSMConnection> _ExchangeGSMConnections;
		
		private EntityRef<AORBPostAndCabinet> _AORBPostAndCabinet;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<PostGroup> _PostGroup;
		
		private EntityRef<PostStatus> _PostStatus;
		
		private EntityRef<PostType> _PostType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCabinetIDChanging(int value);
    partial void OnCabinetIDChanged();
    partial void OnPostTypeIDChanging(int value);
    partial void OnPostTypeIDChanged();
    partial void OnPostGroupIDChanging(System.Nullable<int> value);
    partial void OnPostGroupIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnAorBTypeChanging(byte value);
    partial void OnAorBTypeChanged();
    partial void OnFromPostContactChanging(int value);
    partial void OnFromPostContactChanged();
    partial void OnToPostContactChanging(int value);
    partial void OnToPostContactChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnDistanceChanging(int value);
    partial void OnDistanceChanged();
    partial void OnIsOutBorderChanging(bool value);
    partial void OnIsOutBorderChanged();
    partial void OnOutBorderMeterChanging(System.Nullable<int> value);
    partial void OnOutBorderMeterChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDocumentFileIDChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentFileIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public Post()
		{
			this._AdjacentPosts = new EntitySet<AdjacentPost>(new Action<AdjacentPost>(this.attach_AdjacentPosts), new Action<AdjacentPost>(this.detach_AdjacentPosts));
			this._AdjacentPosts1 = new EntitySet<AdjacentPost>(new Action<AdjacentPost>(this.attach_AdjacentPosts1), new Action<AdjacentPost>(this.detach_AdjacentPosts1));
			this._ExchangeCabinetInputs = new EntitySet<ExchangeCabinetInput>(new Action<ExchangeCabinetInput>(this.attach_ExchangeCabinetInputs), new Action<ExchangeCabinetInput>(this.detach_ExchangeCabinetInputs));
			this._ExchangeCabinetInputConncetions = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions));
			this._ExchangeCabinetInputConncetions1 = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions1), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions1));
			this._ExchangePosts = new EntitySet<ExchangePost>(new Action<ExchangePost>(this.attach_ExchangePosts), new Action<ExchangePost>(this.detach_ExchangePosts));
			this._ExchangePosts1 = new EntitySet<ExchangePost>(new Action<ExchangePost>(this.attach_ExchangePosts1), new Action<ExchangePost>(this.detach_ExchangePosts1));
			this._InvestigatePossibilityWaitinglists = new EntitySet<InvestigatePossibilityWaitinglist>(new Action<InvestigatePossibilityWaitinglist>(this.attach_InvestigatePossibilityWaitinglists), new Action<InvestigatePossibilityWaitinglist>(this.detach_InvestigatePossibilityWaitinglists));
			this._Linesmans = new EntitySet<Linesman>(new Action<Linesman>(this.attach_Linesmans), new Action<Linesman>(this.detach_Linesmans));
			this._PostContacts = new EntitySet<PostContact>(new Action<PostContact>(this.attach_PostContacts), new Action<PostContact>(this.detach_PostContacts));
			this._TranslationOpticalCabinetToNormalConncetions = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions));
			this._TranslationOpticalCabinetToNormalConncetions1 = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions1), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions1));
			this._TranslationPosts = new EntitySet<TranslationPost>(new Action<TranslationPost>(this.attach_TranslationPosts), new Action<TranslationPost>(this.detach_TranslationPosts));
			this._TranslationPosts1 = new EntitySet<TranslationPost>(new Action<TranslationPost>(this.attach_TranslationPosts1), new Action<TranslationPost>(this.detach_TranslationPosts1));
			this._TranslationPostInputs = new EntitySet<TranslationPostInput>(new Action<TranslationPostInput>(this.attach_TranslationPostInputs), new Action<TranslationPostInput>(this.detach_TranslationPostInputs));
			this._TranslationPostInputs1 = new EntitySet<TranslationPostInput>(new Action<TranslationPostInput>(this.attach_TranslationPostInputs1), new Action<TranslationPostInput>(this.detach_TranslationPostInputs1));
			this._VisitAddresses = new EntitySet<VisitAddress>(new Action<VisitAddress>(this.attach_VisitAddresses), new Action<VisitAddress>(this.detach_VisitAddresses));
			this._VisitPlacesCabinetAndPosts = new EntitySet<VisitPlacesCabinetAndPost>(new Action<VisitPlacesCabinetAndPost>(this.attach_VisitPlacesCabinetAndPosts), new Action<VisitPlacesCabinetAndPost>(this.detach_VisitPlacesCabinetAndPosts));
			this._ExchangeGSMConnections = new EntitySet<ExchangeGSMConnection>(new Action<ExchangeGSMConnection>(this.attach_ExchangeGSMConnections), new Action<ExchangeGSMConnection>(this.detach_ExchangeGSMConnections));
			this._AORBPostAndCabinet = default(EntityRef<AORBPostAndCabinet>);
			this._Cabinet = default(EntityRef<Cabinet>);
			this._PostGroup = default(EntityRef<PostGroup>);
			this._PostStatus = default(EntityRef<PostStatus>);
			this._PostType = default(EntityRef<PostType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int NOT NULL")]
		public int CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTypeID", DbType="Int NOT NULL")]
		public int PostTypeID
		{
			get
			{
				return this._PostTypeID;
			}
			set
			{
				if ((this._PostTypeID != value))
				{
					if (this._PostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PostTypeID = value;
					this.SendPropertyChanged("PostTypeID");
					this.OnPostTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostGroupID", DbType="Int")]
		public System.Nullable<int> PostGroupID
		{
			get
			{
				return this._PostGroupID;
			}
			set
			{
				if ((this._PostGroupID != value))
				{
					if (this._PostGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PostGroupID = value;
					this.SendPropertyChanged("PostGroupID");
					this.OnPostGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AorBType", DbType="TinyInt NOT NULL")]
		public byte AorBType
		{
			get
			{
				return this._AorBType;
			}
			set
			{
				if ((this._AorBType != value))
				{
					if (this._AORBPostAndCabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAorBTypeChanging(value);
					this.SendPropertyChanging();
					this._AorBType = value;
					this.SendPropertyChanged("AorBType");
					this.OnAorBTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPostContact", DbType="Int NOT NULL")]
		public int FromPostContact
		{
			get
			{
				return this._FromPostContact;
			}
			set
			{
				if ((this._FromPostContact != value))
				{
					this.OnFromPostContactChanging(value);
					this.SendPropertyChanging();
					this._FromPostContact = value;
					this.SendPropertyChanged("FromPostContact");
					this.OnFromPostContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPostContact", DbType="Int NOT NULL")]
		public int ToPostContact
		{
			get
			{
				return this._ToPostContact;
			}
			set
			{
				if ((this._ToPostContact != value))
				{
					this.OnToPostContactChanging(value);
					this.SendPropertyChanging();
					this._ToPostContact = value;
					this.SendPropertyChanged("ToPostContact");
					this.OnToPostContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Int NOT NULL")]
		public int Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutBorder", DbType="Bit NOT NULL")]
		public bool IsOutBorder
		{
			get
			{
				return this._IsOutBorder;
			}
			set
			{
				if ((this._IsOutBorder != value))
				{
					this.OnIsOutBorderChanging(value);
					this.SendPropertyChanging();
					this._IsOutBorder = value;
					this.SendPropertyChanged("IsOutBorder");
					this.OnIsOutBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutBorderMeter", DbType="Int")]
		public System.Nullable<int> OutBorderMeter
		{
			get
			{
				return this._OutBorderMeter;
			}
			set
			{
				if ((this._OutBorderMeter != value))
				{
					this.OnOutBorderMeterChanging(value);
					this.SendPropertyChanging();
					this._OutBorderMeter = value;
					this.SendPropertyChanged("OutBorderMeter");
					this.OnOutBorderMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(50)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentFileID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentFileID
		{
			get
			{
				return this._DocumentFileID;
			}
			set
			{
				if ((this._DocumentFileID != value))
				{
					this.OnDocumentFileIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentFileID = value;
					this.SendPropertyChanged("DocumentFileID");
					this.OnDocumentFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._PostStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_AdjacentPost", Storage="_AdjacentPosts", ThisKey="ID", OtherKey="PostID")]
		public EntitySet<AdjacentPost> AdjacentPosts
		{
			get
			{
				return this._AdjacentPosts;
			}
			set
			{
				this._AdjacentPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_AdjacentPost1", Storage="_AdjacentPosts1", ThisKey="ID", OtherKey="AdjacentPostID")]
		public EntitySet<AdjacentPost> AdjacentPosts1
		{
			get
			{
				return this._AdjacentPosts1;
			}
			set
			{
				this._AdjacentPosts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangeCabinetInput", Storage="_ExchangeCabinetInputs", ThisKey="ID", OtherKey="FromNewPostID")]
		public EntitySet<ExchangeCabinetInput> ExchangeCabinetInputs
		{
			get
			{
				return this._ExchangeCabinetInputs;
			}
			set
			{
				this._ExchangeCabinetInputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangeCabinetInputConncetion", Storage="_ExchangeCabinetInputConncetions", ThisKey="ID", OtherKey="FromPostID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this._ExchangeCabinetInputConncetions;
			}
			set
			{
				this._ExchangeCabinetInputConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangeCabinetInputConncetion1", Storage="_ExchangeCabinetInputConncetions1", ThisKey="ID", OtherKey="ToPostID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions1
		{
			get
			{
				return this._ExchangeCabinetInputConncetions1;
			}
			set
			{
				this._ExchangeCabinetInputConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangePost", Storage="_ExchangePosts", ThisKey="ID", OtherKey="OldPostID")]
		public EntitySet<ExchangePost> ExchangePosts
		{
			get
			{
				return this._ExchangePosts;
			}
			set
			{
				this._ExchangePosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangePost1", Storage="_ExchangePosts1", ThisKey="ID", OtherKey="NewPostID")]
		public EntitySet<ExchangePost> ExchangePosts1
		{
			get
			{
				return this._ExchangePosts1;
			}
			set
			{
				this._ExchangePosts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_InvestigatePossibilityWaitinglist", Storage="_InvestigatePossibilityWaitinglists", ThisKey="ID", OtherKey="PostID")]
		public EntitySet<InvestigatePossibilityWaitinglist> InvestigatePossibilityWaitinglists
		{
			get
			{
				return this._InvestigatePossibilityWaitinglists;
			}
			set
			{
				this._InvestigatePossibilityWaitinglists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Linesman", Storage="_Linesmans", ThisKey="ID", OtherKey="PostID")]
		public EntitySet<Linesman> Linesmans
		{
			get
			{
				return this._Linesmans;
			}
			set
			{
				this._Linesmans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostContact", Storage="_PostContacts", ThisKey="ID", OtherKey="PostID")]
		public EntitySet<PostContact> PostContacts
		{
			get
			{
				return this._PostContacts;
			}
			set
			{
				this._PostContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationOpticalCabinetToNormalConncetion", Storage="_TranslationOpticalCabinetToNormalConncetions", ThisKey="ID", OtherKey="FromPostID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationOpticalCabinetToNormalConncetion1", Storage="_TranslationOpticalCabinetToNormalConncetions1", ThisKey="ID", OtherKey="ToPostID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationPost", Storage="_TranslationPosts", ThisKey="ID", OtherKey="OldPostID")]
		public EntitySet<TranslationPost> TranslationPosts
		{
			get
			{
				return this._TranslationPosts;
			}
			set
			{
				this._TranslationPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationPost1", Storage="_TranslationPosts1", ThisKey="ID", OtherKey="NewPostID")]
		public EntitySet<TranslationPost> TranslationPosts1
		{
			get
			{
				return this._TranslationPosts1;
			}
			set
			{
				this._TranslationPosts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationPostInput", Storage="_TranslationPostInputs", ThisKey="ID", OtherKey="FromPostID")]
		public EntitySet<TranslationPostInput> TranslationPostInputs
		{
			get
			{
				return this._TranslationPostInputs;
			}
			set
			{
				this._TranslationPostInputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationPostInput1", Storage="_TranslationPostInputs1", ThisKey="ID", OtherKey="ToPostID")]
		public EntitySet<TranslationPostInput> TranslationPostInputs1
		{
			get
			{
				return this._TranslationPostInputs1;
			}
			set
			{
				this._TranslationPostInputs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_VisitAddress", Storage="_VisitAddresses", ThisKey="ID", OtherKey="CrossPostID")]
		public EntitySet<VisitAddress> VisitAddresses
		{
			get
			{
				return this._VisitAddresses;
			}
			set
			{
				this._VisitAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_VisitPlacesCabinetAndPost", Storage="_VisitPlacesCabinetAndPosts", ThisKey="ID", OtherKey="PostID")]
		public EntitySet<VisitPlacesCabinetAndPost> VisitPlacesCabinetAndPosts
		{
			get
			{
				return this._VisitPlacesCabinetAndPosts;
			}
			set
			{
				this._VisitPlacesCabinetAndPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangeGSMConnection", Storage="_ExchangeGSMConnections", ThisKey="ID", OtherKey="PostID")]
		public EntitySet<ExchangeGSMConnection> ExchangeGSMConnections
		{
			get
			{
				return this._ExchangeGSMConnections;
			}
			set
			{
				this._ExchangeGSMConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AORBPostAndCabinet_Post", Storage="_AORBPostAndCabinet", ThisKey="AorBType", OtherKey="ID", IsForeignKey=true)]
		public AORBPostAndCabinet AORBPostAndCabinet
		{
			get
			{
				return this._AORBPostAndCabinet.Entity;
			}
			set
			{
				AORBPostAndCabinet previousValue = this._AORBPostAndCabinet.Entity;
				if (((previousValue != value) 
							|| (this._AORBPostAndCabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AORBPostAndCabinet.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._AORBPostAndCabinet.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._AorBType = value.ID;
					}
					else
					{
						this._AorBType = default(byte);
					}
					this.SendPropertyChanged("AORBPostAndCabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_Post", Storage="_Cabinet", ThisKey="CabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._CabinetID = value.ID;
					}
					else
					{
						this._CabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostGroup_Post", Storage="_PostGroup", ThisKey="PostGroupID", OtherKey="ID", IsForeignKey=true)]
		public PostGroup PostGroup
		{
			get
			{
				return this._PostGroup.Entity;
			}
			set
			{
				PostGroup previousValue = this._PostGroup.Entity;
				if (((previousValue != value) 
							|| (this._PostGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostGroup.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._PostGroup.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._PostGroupID = value.ID;
					}
					else
					{
						this._PostGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PostGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostStatus_Post", Storage="_PostStatus", ThisKey="Status", OtherKey="ID", IsForeignKey=true)]
		public PostStatus PostStatus
		{
			get
			{
				return this._PostStatus.Entity;
			}
			set
			{
				PostStatus previousValue = this._PostStatus.Entity;
				if (((previousValue != value) 
							|| (this._PostStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostStatus.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._PostStatus.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._Status = value.ID;
					}
					else
					{
						this._Status = default(byte);
					}
					this.SendPropertyChanged("PostStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostType_Post", Storage="_PostType", ThisKey="PostTypeID", OtherKey="ID", IsForeignKey=true)]
		public PostType PostType
		{
			get
			{
				return this._PostType.Entity;
			}
			set
			{
				PostType previousValue = this._PostType.Entity;
				if (((previousValue != value) 
							|| (this._PostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostType.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._PostType.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._PostTypeID = value.ID;
					}
					else
					{
						this._PostTypeID = default(int);
					}
					this.SendPropertyChanged("PostType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdjacentPosts(AdjacentPost entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_AdjacentPosts(AdjacentPost entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_AdjacentPosts1(AdjacentPost entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = this;
		}
		
		private void detach_AdjacentPosts1(AdjacentPost entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = null;
		}
		
		private void attach_ExchangeCabinetInputs(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_ExchangeCabinetInputs(ExchangeCabinetInput entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = null;
		}
		
		private void attach_ExchangePosts(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_ExchangePosts(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_ExchangePosts1(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = this;
		}
		
		private void detach_ExchangePosts1(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = null;
		}
		
		private void attach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_Linesmans(Linesman entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_Linesmans(Linesman entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_PostContacts(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PostContacts(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = null;
		}
		
		private void attach_TranslationPosts(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_TranslationPosts(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_TranslationPosts1(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = this;
		}
		
		private void detach_TranslationPosts1(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = null;
		}
		
		private void attach_TranslationPostInputs(TranslationPostInput entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_TranslationPostInputs(TranslationPostInput entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_TranslationPostInputs1(TranslationPostInput entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = this;
		}
		
		private void detach_TranslationPostInputs1(TranslationPostInput entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = null;
		}
		
		private void attach_VisitAddresses(VisitAddress entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_VisitAddresses(VisitAddress entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_VisitPlacesCabinetAndPosts(VisitPlacesCabinetAndPost entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_VisitPlacesCabinetAndPosts(VisitPlacesCabinetAndPost entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostContact")]
	public partial class PostContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _PostID;
		
		private int _ConnectionNo;
		
		private System.Nullable<byte> _ConnectionType;
		
		private System.Nullable<int> _FirsetCableColorID;
		
		private System.Nullable<int> _SecondCableColorID;
		
		private byte _Status;
		
		private string _ElkaID;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<ChangeLocation> _ChangeLocations;
		
		private EntitySet<ChangeLocationSpecialWire> _ChangeLocationSpecialWires;
		
		private EntitySet<E1> _E1s;
		
		private EntitySet<E1Link> _E1Links;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions1;
		
		private EntitySet<ExchangePost> _ExchangePosts;
		
		private EntitySet<ExchangePost> _ExchangePosts1;
		
		private EntitySet<InvestigatePossibility> _InvestigatePossibilities;
		
		private EntitySet<Malfuction> _Malfuctions;
		
		private EntitySet<PostContactEquipment> _PostContactEquipments;
		
		private EntitySet<RefundDeposit> _RefundDeposits;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions1;
		
		private EntitySet<TranslationPost> _TranslationPosts;
		
		private EntitySet<TranslationPost> _TranslationPosts1;
		
		private EntitySet<TranslationPostInputConnection> _TranslationPostInputConnections;
		
		private EntitySet<TranslationPostInputConnection> _TranslationPostInputConnections1;
		
		private EntitySet<VacateSpecialWire> _VacateSpecialWires;
		
		private EntitySet<ExchangeGSMConnection> _ExchangeGSMConnections;
		
		private EntityRef<CableColor> _CableColor;
		
		private EntityRef<CableColor> _CableColor1;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<PostContactConnectionType> _PostContactConnectionType;
		
		private EntityRef<PostContactStatus> _PostContactStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPostIDChanging(int value);
    partial void OnPostIDChanged();
    partial void OnConnectionNoChanging(int value);
    partial void OnConnectionNoChanged();
    partial void OnConnectionTypeChanging(System.Nullable<byte> value);
    partial void OnConnectionTypeChanged();
    partial void OnFirsetCableColorIDChanging(System.Nullable<int> value);
    partial void OnFirsetCableColorIDChanged();
    partial void OnSecondCableColorIDChanging(System.Nullable<int> value);
    partial void OnSecondCableColorIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnElkaIDChanging(string value);
    partial void OnElkaIDChanged();
    #endregion
		
		public PostContact()
		{
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._ChangeLocations = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations), new Action<ChangeLocation>(this.detach_ChangeLocations));
			this._ChangeLocationSpecialWires = new EntitySet<ChangeLocationSpecialWire>(new Action<ChangeLocationSpecialWire>(this.attach_ChangeLocationSpecialWires), new Action<ChangeLocationSpecialWire>(this.detach_ChangeLocationSpecialWires));
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			this._E1Links = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links), new Action<E1Link>(this.detach_E1Links));
			this._ExchangeCabinetInputConncetions = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions));
			this._ExchangeCabinetInputConncetions1 = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions1), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions1));
			this._ExchangePosts = new EntitySet<ExchangePost>(new Action<ExchangePost>(this.attach_ExchangePosts), new Action<ExchangePost>(this.detach_ExchangePosts));
			this._ExchangePosts1 = new EntitySet<ExchangePost>(new Action<ExchangePost>(this.attach_ExchangePosts1), new Action<ExchangePost>(this.detach_ExchangePosts1));
			this._InvestigatePossibilities = new EntitySet<InvestigatePossibility>(new Action<InvestigatePossibility>(this.attach_InvestigatePossibilities), new Action<InvestigatePossibility>(this.detach_InvestigatePossibilities));
			this._Malfuctions = new EntitySet<Malfuction>(new Action<Malfuction>(this.attach_Malfuctions), new Action<Malfuction>(this.detach_Malfuctions));
			this._PostContactEquipments = new EntitySet<PostContactEquipment>(new Action<PostContactEquipment>(this.attach_PostContactEquipments), new Action<PostContactEquipment>(this.detach_PostContactEquipments));
			this._RefundDeposits = new EntitySet<RefundDeposit>(new Action<RefundDeposit>(this.attach_RefundDeposits), new Action<RefundDeposit>(this.detach_RefundDeposits));
			this._TranslationOpticalCabinetToNormalConncetions = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions));
			this._TranslationOpticalCabinetToNormalConncetions1 = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions1), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions1));
			this._TranslationPosts = new EntitySet<TranslationPost>(new Action<TranslationPost>(this.attach_TranslationPosts), new Action<TranslationPost>(this.detach_TranslationPosts));
			this._TranslationPosts1 = new EntitySet<TranslationPost>(new Action<TranslationPost>(this.attach_TranslationPosts1), new Action<TranslationPost>(this.detach_TranslationPosts1));
			this._TranslationPostInputConnections = new EntitySet<TranslationPostInputConnection>(new Action<TranslationPostInputConnection>(this.attach_TranslationPostInputConnections), new Action<TranslationPostInputConnection>(this.detach_TranslationPostInputConnections));
			this._TranslationPostInputConnections1 = new EntitySet<TranslationPostInputConnection>(new Action<TranslationPostInputConnection>(this.attach_TranslationPostInputConnections1), new Action<TranslationPostInputConnection>(this.detach_TranslationPostInputConnections1));
			this._VacateSpecialWires = new EntitySet<VacateSpecialWire>(new Action<VacateSpecialWire>(this.attach_VacateSpecialWires), new Action<VacateSpecialWire>(this.detach_VacateSpecialWires));
			this._ExchangeGSMConnections = new EntitySet<ExchangeGSMConnection>(new Action<ExchangeGSMConnection>(this.attach_ExchangeGSMConnections), new Action<ExchangeGSMConnection>(this.detach_ExchangeGSMConnections));
			this._CableColor = default(EntityRef<CableColor>);
			this._CableColor1 = default(EntityRef<CableColor>);
			this._Post = default(EntityRef<Post>);
			this._PostContactConnectionType = default(EntityRef<PostContactConnectionType>);
			this._PostContactStatus = default(EntityRef<PostContactStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int NOT NULL")]
		public int PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionNo", DbType="Int NOT NULL")]
		public int ConnectionNo
		{
			get
			{
				return this._ConnectionNo;
			}
			set
			{
				if ((this._ConnectionNo != value))
				{
					this.OnConnectionNoChanging(value);
					this.SendPropertyChanging();
					this._ConnectionNo = value;
					this.SendPropertyChanged("ConnectionNo");
					this.OnConnectionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionType", DbType="TinyInt")]
		public System.Nullable<byte> ConnectionType
		{
			get
			{
				return this._ConnectionType;
			}
			set
			{
				if ((this._ConnectionType != value))
				{
					if (this._PostContactConnectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConnectionTypeChanging(value);
					this.SendPropertyChanging();
					this._ConnectionType = value;
					this.SendPropertyChanged("ConnectionType");
					this.OnConnectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirsetCableColorID", DbType="Int")]
		public System.Nullable<int> FirsetCableColorID
		{
			get
			{
				return this._FirsetCableColorID;
			}
			set
			{
				if ((this._FirsetCableColorID != value))
				{
					if (this._CableColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFirsetCableColorIDChanging(value);
					this.SendPropertyChanging();
					this._FirsetCableColorID = value;
					this.SendPropertyChanged("FirsetCableColorID");
					this.OnFirsetCableColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondCableColorID", DbType="Int")]
		public System.Nullable<int> SecondCableColorID
		{
			get
			{
				return this._SecondCableColorID;
			}
			set
			{
				if ((this._SecondCableColorID != value))
				{
					if (this._CableColor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecondCableColorIDChanging(value);
					this.SendPropertyChanging();
					this._SecondCableColorID = value;
					this.SendPropertyChanged("SecondCableColorID");
					this.OnSecondCableColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._PostContactStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="NVarChar(50)")]
		public string ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="ConnectionID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ChangeLocation", Storage="_ChangeLocations", ThisKey="ID", OtherKey="OldPostContactID")]
		public EntitySet<ChangeLocation> ChangeLocations
		{
			get
			{
				return this._ChangeLocations;
			}
			set
			{
				this._ChangeLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ChangeLocationSpecialWire", Storage="_ChangeLocationSpecialWires", ThisKey="ID", OtherKey="OldPostContactID")]
		public EntitySet<ChangeLocationSpecialWire> ChangeLocationSpecialWires
		{
			get
			{
				return this._ChangeLocationSpecialWires;
			}
			set
			{
				this._ChangeLocationSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_E1", Storage="_E1s", ThisKey="ID", OtherKey="ConnectionID")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_E1Link", Storage="_E1Links", ThisKey="ID", OtherKey="PostContactID")]
		public EntitySet<E1Link> E1Links
		{
			get
			{
				return this._E1Links;
			}
			set
			{
				this._E1Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangeCabinetInputConncetion", Storage="_ExchangeCabinetInputConncetions", ThisKey="ID", OtherKey="FromPostContactID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this._ExchangeCabinetInputConncetions;
			}
			set
			{
				this._ExchangeCabinetInputConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangeCabinetInputConncetion1", Storage="_ExchangeCabinetInputConncetions1", ThisKey="ID", OtherKey="ToPostConntactID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions1
		{
			get
			{
				return this._ExchangeCabinetInputConncetions1;
			}
			set
			{
				this._ExchangeCabinetInputConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangePost", Storage="_ExchangePosts", ThisKey="ID", OtherKey="FromOldConnectionID")]
		public EntitySet<ExchangePost> ExchangePosts
		{
			get
			{
				return this._ExchangePosts;
			}
			set
			{
				this._ExchangePosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangePost1", Storage="_ExchangePosts1", ThisKey="ID", OtherKey="ToOldConnectionID")]
		public EntitySet<ExchangePost> ExchangePosts1
		{
			get
			{
				return this._ExchangePosts1;
			}
			set
			{
				this._ExchangePosts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_InvestigatePossibility", Storage="_InvestigatePossibilities", ThisKey="ID", OtherKey="PostContactID")]
		public EntitySet<InvestigatePossibility> InvestigatePossibilities
		{
			get
			{
				return this._InvestigatePossibilities;
			}
			set
			{
				this._InvestigatePossibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_Malfuction", Storage="_Malfuctions", ThisKey="ID", OtherKey="PostContactID")]
		public EntitySet<Malfuction> Malfuctions
		{
			get
			{
				return this._Malfuctions;
			}
			set
			{
				this._Malfuctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_PostContactEquipment", Storage="_PostContactEquipments", ThisKey="ID", OtherKey="PostContactID")]
		public EntitySet<PostContactEquipment> PostContactEquipments
		{
			get
			{
				return this._PostContactEquipments;
			}
			set
			{
				this._PostContactEquipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_RefundDeposit", Storage="_RefundDeposits", ThisKey="ID", OtherKey="PostContactID")]
		public EntitySet<RefundDeposit> RefundDeposits
		{
			get
			{
				return this._RefundDeposits;
			}
			set
			{
				this._RefundDeposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationOpticalCabinetToNormalConncetion", Storage="_TranslationOpticalCabinetToNormalConncetions", ThisKey="ID", OtherKey="FromPostContactID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationOpticalCabinetToNormalConncetion1", Storage="_TranslationOpticalCabinetToNormalConncetions1", ThisKey="ID", OtherKey="ToPostConntactID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationPost", Storage="_TranslationPosts", ThisKey="ID", OtherKey="OldPostContactID")]
		public EntitySet<TranslationPost> TranslationPosts
		{
			get
			{
				return this._TranslationPosts;
			}
			set
			{
				this._TranslationPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationPost1", Storage="_TranslationPosts1", ThisKey="ID", OtherKey="NewPostContactID")]
		public EntitySet<TranslationPost> TranslationPosts1
		{
			get
			{
				return this._TranslationPosts1;
			}
			set
			{
				this._TranslationPosts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationPostInputConnection", Storage="_TranslationPostInputConnections", ThisKey="ID", OtherKey="ConnectionID")]
		public EntitySet<TranslationPostInputConnection> TranslationPostInputConnections
		{
			get
			{
				return this._TranslationPostInputConnections;
			}
			set
			{
				this._TranslationPostInputConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationPostInputConnection1", Storage="_TranslationPostInputConnections1", ThisKey="ID", OtherKey="NewConnectionID")]
		public EntitySet<TranslationPostInputConnection> TranslationPostInputConnections1
		{
			get
			{
				return this._TranslationPostInputConnections1;
			}
			set
			{
				this._TranslationPostInputConnections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_VacateSpecialWire", Storage="_VacateSpecialWires", ThisKey="ID", OtherKey="PostContactID")]
		public EntitySet<VacateSpecialWire> VacateSpecialWires
		{
			get
			{
				return this._VacateSpecialWires;
			}
			set
			{
				this._VacateSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangeGSMConnection", Storage="_ExchangeGSMConnections", ThisKey="ID", OtherKey="PostContactID")]
		public EntitySet<ExchangeGSMConnection> ExchangeGSMConnections
		{
			get
			{
				return this._ExchangeGSMConnections;
			}
			set
			{
				this._ExchangeGSMConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableColor_PostContact", Storage="_CableColor", ThisKey="FirsetCableColorID", OtherKey="ID", IsForeignKey=true)]
		public CableColor CableColor
		{
			get
			{
				return this._CableColor.Entity;
			}
			set
			{
				CableColor previousValue = this._CableColor.Entity;
				if (((previousValue != value) 
							|| (this._CableColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CableColor.Entity = null;
						previousValue.PostContacts.Remove(this);
					}
					this._CableColor.Entity = value;
					if ((value != null))
					{
						value.PostContacts.Add(this);
						this._FirsetCableColorID = value.ID;
					}
					else
					{
						this._FirsetCableColorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CableColor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CableColor_PostContact1", Storage="_CableColor1", ThisKey="SecondCableColorID", OtherKey="ID", IsForeignKey=true)]
		public CableColor CableColor1
		{
			get
			{
				return this._CableColor1.Entity;
			}
			set
			{
				CableColor previousValue = this._CableColor1.Entity;
				if (((previousValue != value) 
							|| (this._CableColor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CableColor1.Entity = null;
						previousValue.PostContacts1.Remove(this);
					}
					this._CableColor1.Entity = value;
					if ((value != null))
					{
						value.PostContacts1.Add(this);
						this._SecondCableColorID = value.ID;
					}
					else
					{
						this._SecondCableColorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CableColor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostContact", Storage="_Post", ThisKey="PostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PostContacts.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PostContacts.Add(this);
						this._PostID = value.ID;
					}
					else
					{
						this._PostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContactConnectionType_PostContact", Storage="_PostContactConnectionType", ThisKey="ConnectionType", OtherKey="ID", IsForeignKey=true)]
		public PostContactConnectionType PostContactConnectionType
		{
			get
			{
				return this._PostContactConnectionType.Entity;
			}
			set
			{
				PostContactConnectionType previousValue = this._PostContactConnectionType.Entity;
				if (((previousValue != value) 
							|| (this._PostContactConnectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContactConnectionType.Entity = null;
						previousValue.PostContacts.Remove(this);
					}
					this._PostContactConnectionType.Entity = value;
					if ((value != null))
					{
						value.PostContacts.Add(this);
						this._ConnectionType = value.ID;
					}
					else
					{
						this._ConnectionType = default(Nullable<byte>);
					}
					this.SendPropertyChanged("PostContactConnectionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContactStatus_PostContact", Storage="_PostContactStatus", ThisKey="Status", OtherKey="ID", IsForeignKey=true)]
		public PostContactStatus PostContactStatus
		{
			get
			{
				return this._PostContactStatus.Entity;
			}
			set
			{
				PostContactStatus previousValue = this._PostContactStatus.Entity;
				if (((previousValue != value) 
							|| (this._PostContactStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContactStatus.Entity = null;
						previousValue.PostContacts.Remove(this);
					}
					this._PostContactStatus.Entity = value;
					if ((value != null))
					{
						value.PostContacts.Add(this);
						this._Status = value.ID;
					}
					else
					{
						this._Status = default(byte);
					}
					this.SendPropertyChanged("PostContactStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions1(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = null;
		}
		
		private void attach_ExchangePosts(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_ExchangePosts(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_ExchangePosts1(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = this;
		}
		
		private void detach_ExchangePosts1(ExchangePost entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = null;
		}
		
		private void attach_InvestigatePossibilities(InvestigatePossibility entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_InvestigatePossibilities(InvestigatePossibility entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_Malfuctions(Malfuction entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_Malfuctions(Malfuction entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_PostContactEquipments(PostContactEquipment entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_PostContactEquipments(PostContactEquipment entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = null;
		}
		
		private void attach_TranslationPosts(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_TranslationPosts(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_TranslationPosts1(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = this;
		}
		
		private void detach_TranslationPosts1(TranslationPost entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = null;
		}
		
		private void attach_TranslationPostInputConnections(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_TranslationPostInputConnections(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_TranslationPostInputConnections1(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = this;
		}
		
		private void detach_TranslationPostInputConnections1(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.PostContact1 = null;
		}
		
		private void attach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
		
		private void attach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = this;
		}
		
		private void detach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.PostContact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostContactConnectionType")]
	public partial class PostContactConnectionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<PostContact> _PostContacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PostContactConnectionType()
		{
			this._PostContacts = new EntitySet<PostContact>(new Action<PostContact>(this.attach_PostContacts), new Action<PostContact>(this.detach_PostContacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContactConnectionType_PostContact", Storage="_PostContacts", ThisKey="ID", OtherKey="ConnectionType")]
		public EntitySet<PostContact> PostContacts
		{
			get
			{
				return this._PostContacts;
			}
			set
			{
				this._PostContacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostContacts(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.PostContactConnectionType = this;
		}
		
		private void detach_PostContacts(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.PostContactConnectionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostContactEquipment")]
	public partial class PostContactEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _PostContactID;
		
		private int _UsedProductsID;
		
		private int _EquipmentAmount;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<UsedProduct> _UsedProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPostContactIDChanging(long value);
    partial void OnPostContactIDChanged();
    partial void OnUsedProductsIDChanging(int value);
    partial void OnUsedProductsIDChanged();
    partial void OnEquipmentAmountChanging(int value);
    partial void OnEquipmentAmountChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public PostContactEquipment()
		{
			this._PostContact = default(EntityRef<PostContact>);
			this._UsedProduct = default(EntityRef<UsedProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt NOT NULL")]
		public long PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedProductsID", DbType="Int NOT NULL")]
		public int UsedProductsID
		{
			get
			{
				return this._UsedProductsID;
			}
			set
			{
				if ((this._UsedProductsID != value))
				{
					if (this._UsedProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsedProductsIDChanging(value);
					this.SendPropertyChanging();
					this._UsedProductsID = value;
					this.SendPropertyChanged("UsedProductsID");
					this.OnUsedProductsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentAmount", DbType="Int NOT NULL")]
		public int EquipmentAmount
		{
			get
			{
				return this._EquipmentAmount;
			}
			set
			{
				if ((this._EquipmentAmount != value))
				{
					this.OnEquipmentAmountChanging(value);
					this.SendPropertyChanging();
					this._EquipmentAmount = value;
					this.SendPropertyChanged("EquipmentAmount");
					this.OnEquipmentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_PostContactEquipment", Storage="_PostContact", ThisKey="PostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.PostContactEquipments.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.PostContactEquipments.Add(this);
						this._PostContactID = value.ID;
					}
					else
					{
						this._PostContactID = default(long);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsedProduct_PostContactEquipment", Storage="_UsedProduct", ThisKey="UsedProductsID", OtherKey="ID", IsForeignKey=true)]
		public UsedProduct UsedProduct
		{
			get
			{
				return this._UsedProduct.Entity;
			}
			set
			{
				UsedProduct previousValue = this._UsedProduct.Entity;
				if (((previousValue != value) 
							|| (this._UsedProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsedProduct.Entity = null;
						previousValue.PostContactEquipments.Remove(this);
					}
					this._UsedProduct.Entity = value;
					if ((value != null))
					{
						value.PostContactEquipments.Add(this);
						this._UsedProductsID = value.ID;
					}
					else
					{
						this._UsedProductsID = default(int);
					}
					this.SendPropertyChanged("UsedProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostContactStatus")]
	public partial class PostContactStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<PostContact> _PostContacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PostContactStatus()
		{
			this._PostContacts = new EntitySet<PostContact>(new Action<PostContact>(this.attach_PostContacts), new Action<PostContact>(this.detach_PostContacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContactStatus_PostContact", Storage="_PostContacts", ThisKey="ID", OtherKey="Status")]
		public EntitySet<PostContact> PostContacts
		{
			get
			{
				return this._PostContacts;
			}
			set
			{
				this._PostContacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostContacts(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.PostContactStatus = this;
		}
		
		private void detach_PostContacts(PostContact entity)
		{
			this.SendPropertyChanging();
			entity.PostContactStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostGroup")]
	public partial class PostGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private int _GroupNo;
		
		private string _Description;
		
		private EntitySet<Post> _Posts;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnGroupNoChanging(int value);
    partial void OnGroupNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PostGroup()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNo", DbType="Int NOT NULL")]
		public int GroupNo
		{
			get
			{
				return this._GroupNo;
			}
			set
			{
				if ((this._GroupNo != value))
				{
					this.OnGroupNoChanging(value);
					this.SendPropertyChanging();
					this._GroupNo = value;
					this.SendPropertyChanged("GroupNo");
					this.OnGroupNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostGroup_Post", Storage="_Posts", ThisKey="ID", OtherKey="PostGroupID")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_PostGroup", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.PostGroups.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.PostGroups.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostGroup = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostStatus")]
	public partial class PostStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PostStatus()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostStatus_Post", Storage="_Posts", ThisKey="ID", OtherKey="Status")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostStatus = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostType")]
	public partial class PostType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PostTypeName;
		
		private bool _AorBable;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPostTypeNameChanging(string value);
    partial void OnPostTypeNameChanged();
    partial void OnAorBableChanging(bool value);
    partial void OnAorBableChanged();
    #endregion
		
		public PostType()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTypeName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string PostTypeName
		{
			get
			{
				return this._PostTypeName;
			}
			set
			{
				if ((this._PostTypeName != value))
				{
					this.OnPostTypeNameChanging(value);
					this.SendPropertyChanging();
					this._PostTypeName = value;
					this.SendPropertyChanged("PostTypeName");
					this.OnPostTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AorBable", DbType="Bit NOT NULL")]
		public bool AorBable
		{
			get
			{
				return this._AorBable;
			}
			set
			{
				if ((this._AorBable != value))
				{
					this.OnAorBableChanging(value);
					this.SendPropertyChanging();
					this._AorBable = value;
					this.SendPropertyChanged("AorBable");
					this.OnAorBableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostType_Post", Storage="_Posts", ThisKey="ID", OtherKey="PostTypeID")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostType = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PowerOffice")]
	public partial class PowerOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _RequestID;
		
		private System.Guid _PowerFileID;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnPowerFileIDChanging(System.Guid value);
    partial void OnPowerFileIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public PowerOffice()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerFileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PowerFileID
		{
			get
			{
				return this._PowerFileID;
			}
			set
			{
				if ((this._PowerFileID != value))
				{
					this.OnPowerFileIDChanging(value);
					this.SendPropertyChanging();
					this._PowerFileID = value;
					this.SendPropertyChanged("PowerFileID");
					this.OnPowerFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_PowerOffice", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.PowerOffices.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.PowerOffices.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PowerType")]
	public partial class PowerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _Rate;
		
		private EntitySet<SpaceAndPowerPowerType> _SpaceAndPowerPowerTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRateChanging(int value);
    partial void OnRateChanged();
    #endregion
		
		public PowerType()
		{
			this._SpaceAndPowerPowerTypes = new EntitySet<SpaceAndPowerPowerType>(new Action<SpaceAndPowerPowerType>(this.attach_SpaceAndPowerPowerTypes), new Action<SpaceAndPowerPowerType>(this.detach_SpaceAndPowerPowerTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Int NOT NULL")]
		public int Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PowerType_SpaceAndPowerPowerType", Storage="_SpaceAndPowerPowerTypes", ThisKey="ID", OtherKey="PowerTypeID")]
		public EntitySet<SpaceAndPowerPowerType> SpaceAndPowerPowerTypes
		{
			get
			{
				return this._SpaceAndPowerPowerTypes;
			}
			set
			{
				this._SpaceAndPowerPowerTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpaceAndPowerPowerTypes(SpaceAndPowerPowerType entity)
		{
			this.SendPropertyChanging();
			entity.PowerType = this;
		}
		
		private void detach_SpaceAndPowerPowerTypes(SpaceAndPowerPowerType entity)
		{
			this.SendPropertyChanging();
			entity.PowerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Province")]
	public partial class Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Province()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Cities", ThisKey="ID", OtherKey="ProvinceID")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Query")]
	public partial class Query
	{
		
		private System.Nullable<System.DateTime> _Pdate;
		
		public Query()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdate", DbType="Date")]
		public System.Nullable<System.DateTime> Pdate
		{
			get
			{
				return this._Pdate;
			}
			set
			{
				if ((this._Pdate != value))
				{
					this._Pdate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotaDiscount")]
	public partial class QuotaDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AnnounceID;
		
		private int _DiscountAmount;
		
		private int _RequestTypeID;
		
		private int _JobTitleID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntitySet<BaseCost> _BaseCosts;
		
		private EntityRef<Announce> _Announce;
		
		private EntityRef<QuotaJobTitle> _QuotaJobTitle;
		
		private EntityRef<RequestType> _RequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAnnounceIDChanging(int value);
    partial void OnAnnounceIDChanged();
    partial void OnDiscountAmountChanging(int value);
    partial void OnDiscountAmountChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnJobTitleIDChanging(int value);
    partial void OnJobTitleIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public QuotaDiscount()
		{
			this._BaseCosts = new EntitySet<BaseCost>(new Action<BaseCost>(this.attach_BaseCosts), new Action<BaseCost>(this.detach_BaseCosts));
			this._Announce = default(EntityRef<Announce>);
			this._QuotaJobTitle = default(EntityRef<QuotaJobTitle>);
			this._RequestType = default(EntityRef<RequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceID", DbType="Int NOT NULL")]
		public int AnnounceID
		{
			get
			{
				return this._AnnounceID;
			}
			set
			{
				if ((this._AnnounceID != value))
				{
					if (this._Announce.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnnounceIDChanging(value);
					this.SendPropertyChanging();
					this._AnnounceID = value;
					this.SendPropertyChanged("AnnounceID");
					this.OnAnnounceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Int NOT NULL")]
		public int DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleID", DbType="Int NOT NULL")]
		public int JobTitleID
		{
			get
			{
				return this._JobTitleID;
			}
			set
			{
				if ((this._JobTitleID != value))
				{
					if (this._QuotaJobTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobTitleIDChanging(value);
					this.SendPropertyChanging();
					this._JobTitleID = value;
					this.SendPropertyChanged("JobTitleID");
					this.OnJobTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuotaDiscount_BaseCost", Storage="_BaseCosts", ThisKey="ID", OtherKey="QuotaDiscountID")]
		public EntitySet<BaseCost> BaseCosts
		{
			get
			{
				return this._BaseCosts;
			}
			set
			{
				this._BaseCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Announce_QuotaDiscount", Storage="_Announce", ThisKey="AnnounceID", OtherKey="ID", IsForeignKey=true)]
		public Announce Announce
		{
			get
			{
				return this._Announce.Entity;
			}
			set
			{
				Announce previousValue = this._Announce.Entity;
				if (((previousValue != value) 
							|| (this._Announce.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Announce.Entity = null;
						previousValue.QuotaDiscounts.Remove(this);
					}
					this._Announce.Entity = value;
					if ((value != null))
					{
						value.QuotaDiscounts.Add(this);
						this._AnnounceID = value.ID;
					}
					else
					{
						this._AnnounceID = default(int);
					}
					this.SendPropertyChanged("Announce");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuotaJobTitle_QuotaDiscount", Storage="_QuotaJobTitle", ThisKey="JobTitleID", OtherKey="ID", IsForeignKey=true)]
		public QuotaJobTitle QuotaJobTitle
		{
			get
			{
				return this._QuotaJobTitle.Entity;
			}
			set
			{
				QuotaJobTitle previousValue = this._QuotaJobTitle.Entity;
				if (((previousValue != value) 
							|| (this._QuotaJobTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuotaJobTitle.Entity = null;
						previousValue.QuotaDiscounts.Remove(this);
					}
					this._QuotaJobTitle.Entity = value;
					if ((value != null))
					{
						value.QuotaDiscounts.Add(this);
						this._JobTitleID = value.ID;
					}
					else
					{
						this._JobTitleID = default(int);
					}
					this.SendPropertyChanged("QuotaJobTitle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_QuotaDiscount", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.QuotaDiscounts.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.QuotaDiscounts.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(int);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaseCosts(BaseCost entity)
		{
			this.SendPropertyChanging();
			entity.QuotaDiscount = this;
		}
		
		private void detach_BaseCosts(BaseCost entity)
		{
			this.SendPropertyChanging();
			entity.QuotaDiscount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuotaJobTitle")]
	public partial class QuotaJobTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<QuotaDiscount> _QuotaDiscounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public QuotaJobTitle()
		{
			this._QuotaDiscounts = new EntitySet<QuotaDiscount>(new Action<QuotaDiscount>(this.attach_QuotaDiscounts), new Action<QuotaDiscount>(this.detach_QuotaDiscounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuotaJobTitle_QuotaDiscount", Storage="_QuotaDiscounts", ThisKey="ID", OtherKey="JobTitleID")]
		public EntitySet<QuotaDiscount> QuotaDiscounts
		{
			get
			{
				return this._QuotaDiscounts;
			}
			set
			{
				this._QuotaDiscounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuotaDiscounts(QuotaDiscount entity)
		{
			this.SendPropertyChanging();
			entity.QuotaJobTitle = this;
		}
		
		private void detach_QuotaDiscounts(QuotaDiscount entity)
		{
			this.SendPropertyChanging();
			entity.QuotaJobTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReferenceDocument")]
	public partial class ReferenceDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RequestID;
		
		private long _RequestDocumentID;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<RequestDocument> _RequestDocument;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnRequestDocumentIDChanging(long value);
    partial void OnRequestDocumentIDChanged();
    #endregion
		
		public ReferenceDocument()
		{
			this._Request = default(EntityRef<Request>);
			this._RequestDocument = default(EntityRef<RequestDocument>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDocumentID", DbType="BigInt NOT NULL")]
		public long RequestDocumentID
		{
			get
			{
				return this._RequestDocumentID;
			}
			set
			{
				if ((this._RequestDocumentID != value))
				{
					if (this._RequestDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._RequestDocumentID = value;
					this.SendPropertyChanged("RequestDocumentID");
					this.OnRequestDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ReferenceDocument", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ReferenceDocuments.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ReferenceDocuments.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestDocument_ReferenceDocument", Storage="_RequestDocument", ThisKey="RequestDocumentID", OtherKey="ID", IsForeignKey=true)]
		public RequestDocument RequestDocument
		{
			get
			{
				return this._RequestDocument.Entity;
			}
			set
			{
				RequestDocument previousValue = this._RequestDocument.Entity;
				if (((previousValue != value) 
							|| (this._RequestDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestDocument.Entity = null;
						previousValue.ReferenceDocuments.Remove(this);
					}
					this._RequestDocument.Entity = value;
					if ((value != null))
					{
						value.ReferenceDocuments.Add(this);
						this._RequestDocumentID = value.ID;
					}
					else
					{
						this._RequestDocumentID = default(long);
					}
					this.SendPropertyChanged("RequestDocument");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefundDeposit")]
	public partial class RefundDeposit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _RefundDate;
		
		private string _AccountingDocumentNumber;
		
		private string _RefundReplyLetterNo;
		
		private System.Nullable<System.DateTime> _RefundReplyLetterDate;
		
		private string _RefundLetterNo;
		
		private System.Nullable<System.DateTime> _RefundLetterDate;
		
		private System.Nullable<long> _RefundDepositReportID;
		
		private int _CauseOfRefundDepositID;
		
		private System.Nullable<int> _RefundAmount;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<int> _SwitchPortID;
		
		private System.Nullable<long> _CabinetInputID;
		
		private System.Nullable<long> _PostContactID;
		
		private System.Nullable<long> _BuchtID;
		
		private string _Description;
		
		private System.Nullable<bool> _thingesOfCustomer;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private System.Nullable<byte> _Status;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<CauseOfRefundDeposit> _CauseOfRefundDeposit;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<SwitchPort> _SwitchPort;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRefundDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRefundDateChanged();
    partial void OnAccountingDocumentNumberChanging(string value);
    partial void OnAccountingDocumentNumberChanged();
    partial void OnRefundReplyLetterNoChanging(string value);
    partial void OnRefundReplyLetterNoChanged();
    partial void OnRefundReplyLetterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRefundReplyLetterDateChanged();
    partial void OnRefundLetterNoChanging(string value);
    partial void OnRefundLetterNoChanged();
    partial void OnRefundLetterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRefundLetterDateChanged();
    partial void OnRefundDepositReportIDChanging(System.Nullable<long> value);
    partial void OnRefundDepositReportIDChanged();
    partial void OnCauseOfRefundDepositIDChanging(int value);
    partial void OnCauseOfRefundDepositIDChanged();
    partial void OnRefundAmountChanging(System.Nullable<int> value);
    partial void OnRefundAmountChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnSwitchPortIDChanged();
    partial void OnCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnCabinetInputIDChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnthingesOfCustomerChanging(System.Nullable<bool> value);
    partial void OnthingesOfCustomerChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public RefundDeposit()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._CauseOfRefundDeposit = default(EntityRef<CauseOfRefundDeposit>);
			this._PostContact = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			this._SwitchPort = default(EntityRef<SwitchPort>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RefundDate
		{
			get
			{
				return this._RefundDate;
			}
			set
			{
				if ((this._RefundDate != value))
				{
					this.OnRefundDateChanging(value);
					this.SendPropertyChanging();
					this._RefundDate = value;
					this.SendPropertyChanged("RefundDate");
					this.OnRefundDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingDocumentNumber", DbType="NVarChar(20)")]
		public string AccountingDocumentNumber
		{
			get
			{
				return this._AccountingDocumentNumber;
			}
			set
			{
				if ((this._AccountingDocumentNumber != value))
				{
					this.OnAccountingDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountingDocumentNumber = value;
					this.SendPropertyChanged("AccountingDocumentNumber");
					this.OnAccountingDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundReplyLetterNo", DbType="NVarChar(20)")]
		public string RefundReplyLetterNo
		{
			get
			{
				return this._RefundReplyLetterNo;
			}
			set
			{
				if ((this._RefundReplyLetterNo != value))
				{
					this.OnRefundReplyLetterNoChanging(value);
					this.SendPropertyChanging();
					this._RefundReplyLetterNo = value;
					this.SendPropertyChanged("RefundReplyLetterNo");
					this.OnRefundReplyLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundReplyLetterDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RefundReplyLetterDate
		{
			get
			{
				return this._RefundReplyLetterDate;
			}
			set
			{
				if ((this._RefundReplyLetterDate != value))
				{
					this.OnRefundReplyLetterDateChanging(value);
					this.SendPropertyChanging();
					this._RefundReplyLetterDate = value;
					this.SendPropertyChanged("RefundReplyLetterDate");
					this.OnRefundReplyLetterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundLetterNo", DbType="NVarChar(20)")]
		public string RefundLetterNo
		{
			get
			{
				return this._RefundLetterNo;
			}
			set
			{
				if ((this._RefundLetterNo != value))
				{
					this.OnRefundLetterNoChanging(value);
					this.SendPropertyChanging();
					this._RefundLetterNo = value;
					this.SendPropertyChanged("RefundLetterNo");
					this.OnRefundLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundLetterDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RefundLetterDate
		{
			get
			{
				return this._RefundLetterDate;
			}
			set
			{
				if ((this._RefundLetterDate != value))
				{
					this.OnRefundLetterDateChanging(value);
					this.SendPropertyChanging();
					this._RefundLetterDate = value;
					this.SendPropertyChanged("RefundLetterDate");
					this.OnRefundLetterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundDepositReportID", DbType="BigInt")]
		public System.Nullable<long> RefundDepositReportID
		{
			get
			{
				return this._RefundDepositReportID;
			}
			set
			{
				if ((this._RefundDepositReportID != value))
				{
					this.OnRefundDepositReportIDChanging(value);
					this.SendPropertyChanging();
					this._RefundDepositReportID = value;
					this.SendPropertyChanged("RefundDepositReportID");
					this.OnRefundDepositReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseOfRefundDepositID", DbType="Int NOT NULL")]
		public int CauseOfRefundDepositID
		{
			get
			{
				return this._CauseOfRefundDepositID;
			}
			set
			{
				if ((this._CauseOfRefundDepositID != value))
				{
					if (this._CauseOfRefundDeposit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauseOfRefundDepositIDChanging(value);
					this.SendPropertyChanging();
					this._CauseOfRefundDepositID = value;
					this.SendPropertyChanged("CauseOfRefundDepositID");
					this.OnCauseOfRefundDepositIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundAmount", DbType="Int")]
		public System.Nullable<int> RefundAmount
		{
			get
			{
				return this._RefundAmount;
			}
			set
			{
				if ((this._RefundAmount != value))
				{
					this.OnRefundAmountChanging(value);
					this.SendPropertyChanging();
					this._RefundAmount = value;
					this.SendPropertyChanged("RefundAmount");
					this.OnRefundAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPortID", DbType="Int")]
		public System.Nullable<int> SwitchPortID
		{
			get
			{
				return this._SwitchPortID;
			}
			set
			{
				if ((this._SwitchPortID != value))
				{
					if (this._SwitchPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPortID = value;
					this.SendPropertyChanged("SwitchPortID");
					this.OnSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt")]
		public System.Nullable<long> CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thingesOfCustomer", DbType="Bit")]
		public System.Nullable<bool> thingesOfCustomer
		{
			get
			{
				return this._thingesOfCustomer;
			}
			set
			{
				if ((this._thingesOfCustomer != value))
				{
					this.OnthingesOfCustomerChanging(value);
					this.SendPropertyChanging();
					this._thingesOfCustomer = value;
					this.SendPropertyChanged("thingesOfCustomer");
					this.OnthingesOfCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_RefundDeposit", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.RefundDeposits.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.RefundDeposits.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_RefundDeposit1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.RefundDeposits1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.RefundDeposits1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_RefundDeposit", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.RefundDeposits.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.RefundDeposits.Add(this);
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_RefundDeposit", Storage="_CabinetInput", ThisKey="CabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.RefundDeposits.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.RefundDeposits.Add(this);
						this._CabinetInputID = value.ID;
					}
					else
					{
						this._CabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfRefundDeposit_RefundDeposit", Storage="_CauseOfRefundDeposit", ThisKey="CauseOfRefundDepositID", OtherKey="ID", IsForeignKey=true)]
		public CauseOfRefundDeposit CauseOfRefundDeposit
		{
			get
			{
				return this._CauseOfRefundDeposit.Entity;
			}
			set
			{
				CauseOfRefundDeposit previousValue = this._CauseOfRefundDeposit.Entity;
				if (((previousValue != value) 
							|| (this._CauseOfRefundDeposit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauseOfRefundDeposit.Entity = null;
						previousValue.RefundDeposits.Remove(this);
					}
					this._CauseOfRefundDeposit.Entity = value;
					if ((value != null))
					{
						value.RefundDeposits.Add(this);
						this._CauseOfRefundDepositID = value.ID;
					}
					else
					{
						this._CauseOfRefundDepositID = default(int);
					}
					this.SendPropertyChanged("CauseOfRefundDeposit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_RefundDeposit", Storage="_PostContact", ThisKey="PostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.RefundDeposits.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.RefundDeposits.Add(this);
						this._PostContactID = value.ID;
					}
					else
					{
						this._PostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RefundDeposit", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RefundDeposit = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RefundDeposit = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_RefundDeposit", Storage="_SwitchPort", ThisKey="SwitchPortID", OtherKey="ID", IsForeignKey=true)]
		public SwitchPort SwitchPort
		{
			get
			{
				return this._SwitchPort.Entity;
			}
			set
			{
				SwitchPort previousValue = this._SwitchPort.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPort.Entity = null;
						previousValue.RefundDeposits.Remove(this);
					}
					this._SwitchPort.Entity = value;
					if ((value != null))
					{
						value.RefundDeposits.Add(this);
						this._SwitchPortID = value.ID;
					}
					else
					{
						this._SwitchPortID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SwitchPort");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CityID;
		
		private string _Title;
		
		private EntitySet<Center> _Centers;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public Region()
		{
			this._Centers = new EntitySet<Center>(new Action<Center>(this.attach_Centers), new Action<Center>(this.detach_Centers));
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Center", Storage="_Centers", ThisKey="ID", OtherKey="RegionID")]
		public EntitySet<Center> Centers
		{
			get
			{
				return this._Centers;
			}
			set
			{
				this._Centers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Region", Storage="_City", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Regions.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Regions.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Centers(Center entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Centers(Center entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegularExpressions")]
	public partial class RegularExpression : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _RegularExpressinon;
		
		private string _ErrorMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegularExpressinonChanging(string value);
    partial void OnRegularExpressinonChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    #endregion
		
		public RegularExpression()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularExpressinon", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RegularExpressinon
		{
			get
			{
				return this._RegularExpressinon;
			}
			set
			{
				if ((this._RegularExpressinon != value))
				{
					this.OnRegularExpressinonChanging(value);
					this.SendPropertyChanging();
					this._RegularExpressinon = value;
					this.SendPropertyChanged("RegularExpressinon");
					this.OnRegularExpressinonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(50)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelationalOperator")]
	public partial class RelationalOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelationalOperatorId;
		
		private string _RelationalOperatorName;
		
		private EntitySet<FilterRule> _FilterRules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationalOperatorIdChanging(int value);
    partial void OnRelationalOperatorIdChanged();
    partial void OnRelationalOperatorNameChanging(string value);
    partial void OnRelationalOperatorNameChanged();
    #endregion
		
		public RelationalOperator()
		{
			this._FilterRules = new EntitySet<FilterRule>(new Action<FilterRule>(this.attach_FilterRules), new Action<FilterRule>(this.detach_FilterRules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationalOperatorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RelationalOperatorId
		{
			get
			{
				return this._RelationalOperatorId;
			}
			set
			{
				if ((this._RelationalOperatorId != value))
				{
					this.OnRelationalOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._RelationalOperatorId = value;
					this.SendPropertyChanged("RelationalOperatorId");
					this.OnRelationalOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationalOperatorName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string RelationalOperatorName
		{
			get
			{
				return this._RelationalOperatorName;
			}
			set
			{
				if ((this._RelationalOperatorName != value))
				{
					this.OnRelationalOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._RelationalOperatorName = value;
					this.SendPropertyChanged("RelationalOperatorName");
					this.OnRelationalOperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RelationalOperator_FilterRule", Storage="_FilterRules", ThisKey="RelationalOperatorId", OtherKey="RelationalOperatorId")]
		public EntitySet<FilterRule> FilterRules
		{
			get
			{
				return this._FilterRules;
			}
			set
			{
				this._FilterRules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FilterRules(FilterRule entity)
		{
			this.SendPropertyChanging();
			entity.RelationalOperator = this;
		}
		
		private void detach_FilterRules(FilterRule entity)
		{
			this.SendPropertyChanging();
			entity.RelationalOperator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportAndAnnouncement")]
	public partial class ReportAndAnnouncement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TableName;
		
		private object _TablePrimaryKey;
		
		private int _ReportTypeID;
		
		private System.Data.Linq.Binary _ContentFile;
		
		private int _PrintCount;
		
		private System.DateTime _LastPrintDate;
		
		private EntityRef<ReportType> _ReportType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnTablePrimaryKeyChanging(object value);
    partial void OnTablePrimaryKeyChanged();
    partial void OnReportTypeIDChanging(int value);
    partial void OnReportTypeIDChanged();
    partial void OnContentFileChanging(System.Data.Linq.Binary value);
    partial void OnContentFileChanged();
    partial void OnPrintCountChanging(int value);
    partial void OnPrintCountChanged();
    partial void OnLastPrintDateChanging(System.DateTime value);
    partial void OnLastPrintDateChanged();
    #endregion
		
		public ReportAndAnnouncement()
		{
			this._ReportType = default(EntityRef<ReportType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TablePrimaryKey", DbType="Variant NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public object TablePrimaryKey
		{
			get
			{
				return this._TablePrimaryKey;
			}
			set
			{
				if ((this._TablePrimaryKey != value))
				{
					this.OnTablePrimaryKeyChanging(value);
					this.SendPropertyChanging();
					this._TablePrimaryKey = value;
					this.SendPropertyChanged("TablePrimaryKey");
					this.OnTablePrimaryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeID", DbType="Int NOT NULL")]
		public int ReportTypeID
		{
			get
			{
				return this._ReportTypeID;
			}
			set
			{
				if ((this._ReportTypeID != value))
				{
					if (this._ReportType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ReportTypeID = value;
					this.SendPropertyChanged("ReportTypeID");
					this.OnReportTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentFile", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ContentFile
		{
			get
			{
				return this._ContentFile;
			}
			set
			{
				if ((this._ContentFile != value))
				{
					this.OnContentFileChanging(value);
					this.SendPropertyChanging();
					this._ContentFile = value;
					this.SendPropertyChanged("ContentFile");
					this.OnContentFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintCount", DbType="Int NOT NULL")]
		public int PrintCount
		{
			get
			{
				return this._PrintCount;
			}
			set
			{
				if ((this._PrintCount != value))
				{
					this.OnPrintCountChanging(value);
					this.SendPropertyChanging();
					this._PrintCount = value;
					this.SendPropertyChanged("PrintCount");
					this.OnPrintCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPrintDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastPrintDate
		{
			get
			{
				return this._LastPrintDate;
			}
			set
			{
				if ((this._LastPrintDate != value))
				{
					this.OnLastPrintDateChanging(value);
					this.SendPropertyChanging();
					this._LastPrintDate = value;
					this.SendPropertyChanged("LastPrintDate");
					this.OnLastPrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportType_ReportAndAnnouncement", Storage="_ReportType", ThisKey="ReportTypeID", OtherKey="ID", IsForeignKey=true)]
		public ReportType ReportType
		{
			get
			{
				return this._ReportType.Entity;
			}
			set
			{
				ReportType previousValue = this._ReportType.Entity;
				if (((previousValue != value) 
							|| (this._ReportType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportType.Entity = null;
						previousValue.ReportAndAnnouncements.Remove(this);
					}
					this._ReportType.Entity = value;
					if ((value != null))
					{
						value.ReportAndAnnouncements.Add(this);
						this._ReportTypeID = value.ID;
					}
					else
					{
						this._ReportTypeID = default(int);
					}
					this.SendPropertyChanged("ReportType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportTemplate")]
	public partial class ReportTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private System.Data.Linq.Binary _Template;
		
		private string _IconName;
		
		private string _Category;
		
		private string _TimeStamp;
		
		private string _UserControlName;
		
		private System.Nullable<bool> _IsVisible;
		
		private EntitySet<RoleReportTemplate> _RoleReportTemplates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTemplateChanging(System.Data.Linq.Binary value);
    partial void OnTemplateChanged();
    partial void OnIconNameChanging(string value);
    partial void OnIconNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    partial void OnUserControlNameChanging(string value);
    partial void OnUserControlNameChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public ReportTemplate()
		{
			this._RoleReportTemplates = new EntitySet<RoleReportTemplate>(new Action<RoleReportTemplate>(this.attach_RoleReportTemplates), new Action<RoleReportTemplate>(this.detach_RoleReportTemplates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconName", DbType="NVarChar(127)")]
		public string IconName
		{
			get
			{
				return this._IconName;
			}
			set
			{
				if ((this._IconName != value))
				{
					this.OnIconNameChanging(value);
					this.SendPropertyChanging();
					this._IconName = value;
					this.SendPropertyChanged("IconName");
					this.OnIconNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(127)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="Char(15)")]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserControlName", DbType="NVarChar(227)")]
		public string UserControlName
		{
			get
			{
				return this._UserControlName;
			}
			set
			{
				if ((this._UserControlName != value))
				{
					this.OnUserControlNameChanging(value);
					this.SendPropertyChanging();
					this._UserControlName = value;
					this.SendPropertyChanged("UserControlName");
					this.OnUserControlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportTemplate_RoleReportTemplate", Storage="_RoleReportTemplates", ThisKey="ID", OtherKey="ReportTemplateID")]
		public EntitySet<RoleReportTemplate> RoleReportTemplates
		{
			get
			{
				return this._RoleReportTemplates;
			}
			set
			{
				this._RoleReportTemplates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleReportTemplates(RoleReportTemplate entity)
		{
			this.SendPropertyChanging();
			entity.ReportTemplate = this;
		}
		
		private void detach_RoleReportTemplates(RoleReportTemplate entity)
		{
			this.SendPropertyChanging();
			entity.ReportTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportType")]
	public partial class ReportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private System.Data.Linq.Binary _Template;
		
		private EntitySet<ReportAndAnnouncement> _ReportAndAnnouncements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTemplateChanging(System.Data.Linq.Binary value);
    partial void OnTemplateChanged();
    #endregion
		
		public ReportType()
		{
			this._ReportAndAnnouncements = new EntitySet<ReportAndAnnouncement>(new Action<ReportAndAnnouncement>(this.attach_ReportAndAnnouncements), new Action<ReportAndAnnouncement>(this.detach_ReportAndAnnouncements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportType_ReportAndAnnouncement", Storage="_ReportAndAnnouncements", ThisKey="ID", OtherKey="ReportTypeID")]
		public EntitySet<ReportAndAnnouncement> ReportAndAnnouncements
		{
			get
			{
				return this._ReportAndAnnouncements;
			}
			set
			{
				this._ReportAndAnnouncements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportAndAnnouncements(ReportAndAnnouncement entity)
		{
			this.SendPropertyChanging();
			entity.ReportType = this;
		}
		
		private void detach_ReportAndAnnouncements(ReportAndAnnouncement entity)
		{
			this.SendPropertyChanging();
			entity.ReportType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Request")]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<long> _RelatedRequestID;
		
		private System.Nullable<long> _MainRequestID;
		
		private int _RequestTypeID;
		
		private int _CenterID;
		
		private System.Nullable<long> _CustomerID;
		
		private System.DateTime _RequestDate;
		
		private string _RequestLetterNo;
		
		private System.Nullable<System.DateTime> _RequestLetterDate;
		
		private string _RequesterName;
		
		private System.Nullable<byte> _RequestPaymentTypeID;
		
		private string _RepresentitiveNo;
		
		private System.Nullable<System.DateTime> _RepresentitiveDate;
		
		private System.Nullable<System.DateTime> _RepresentitiveExpireDate;
		
		private int _StatusID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _CreatorUserID;
		
		private System.Nullable<int> _ModifyUserID;
		
		private System.Nullable<int> _SellerID;
		
		private System.Nullable<byte> _PreviousAction;
		
		private string _BillID;
		
		private string _PaymentID;
		
		private bool _IsWaitingList;
		
		private bool _IsCancelation;
		
		private bool _IsViewed;
		
		private System.Nullable<bool> _IsVisible;
		
		private System.Nullable<bool> _WaitForToBeCalculate;
		
		private EntityRef<ADSLChangeCustomerOwnerCharacteristic> _ADSLChangeCustomerOwnerCharacteristic;
		
		private EntityRef<ADSLChangeIPRequest> _ADSLChangeIPRequest;
		
		private EntityRef<ADSLChangePlace> _ADSLChangePlace;
		
		private EntityRef<ADSLChangePort1> _ADSLChangePort1;
		
		private EntityRef<ADSLChangeService> _ADSLChangeService;
		
		private EntityRef<ADSLCutTemporary> _ADSLCutTemporary;
		
		private EntityRef<ADSLDischarge> _ADSLDischarge;
		
		private EntityRef<ADSLInstallRequest> _ADSLInstallRequest;
		
		private EntityRef<ADSLPAPRequest> _ADSLPAPRequest;
		
		private EntityRef<ADSLRequest> _ADSLRequest;
		
		private EntitySet<ADSLSellerAgentUserCredit> _ADSLSellerAgentUserCredits;
		
		private EntityRef<ADSLSellTraffic> _ADSLSellTraffic;
		
		private EntitySet<ADSLSetupContactInformation> _ADSLSetupContactInformations;
		
		private EntityRef<ADSLSupportRequest> _ADSLSupportRequest;
		
		private EntityRef<AnnounceTo118> _AnnounceTo118;
		
		private EntityRef<BuchtSwitching> _BuchtSwitching;
		
		private EntitySet<CableDesignOffice> _CableDesignOffices;
		
		private EntityRef<CancelationRequestList> _CancelationRequestList;
		
		private EntityRef<CenterToCenterTranslation> _CenterToCenterTranslation;
		
		private EntitySet<CenterToCenterTranslationPCM> _CenterToCenterTranslationPCMs;
		
		private EntitySet<CenterToCenterTranslationTelephone> _CenterToCenterTranslationTelephones;
		
		private EntityRef<ChangeAddress> _ChangeAddress;
		
		private EntityRef<ChangeLocation> _ChangeLocation;
		
		private EntityRef<ChangeLocationSpecialWire> _ChangeLocationSpecialWire;
		
		private EntityRef<ChangeName> _ChangeName;
		
		private EntityRef<ChangeNo> _ChangeNo;
		
		private EntityRef<ChangeTelephoneType> _ChangeTelephoneType;
		
		private EntitySet<Contract> _Contracts;
		
		private EntityRef<Control> _Control;
		
		private EntityRef<CutAndEstablish> _CutAndEstablish;
		
		private EntityRef<DamageLine> _DamageLine;
		
		private EntityRef<E1> _E1;
		
		private EntitySet<E1Link> _E1Links;
		
		private EntitySet<ExchangeBrokenPCM> _ExchangeBrokenPCMs;
		
		private EntityRef<ExchangeCabinetInput> _ExchangeCabinetInput;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions;
		
		private EntitySet<ExchangeCentralCableMDFConncetion> _ExchangeCentralCableMDFConncetions;
		
		private EntityRef<ExchangePost> _ExchangePost;
		
		private EntitySet<ExchangeTelephoneNo> _ExchangeTelephoneNos;
		
		private EntityRef<Failure117> _Failure117;
		
		private EntitySet<Inquiry> _Inquiries;
		
		private EntityRef<Installment> _Installment;
		
		private EntitySet<InvestigatePossibility> _InvestigatePossibilities;
		
		private EntitySet<IssueWiring> _IssueWirings;
		
		private EntityRef<MDFWiring> _MDFWiring;
		
		private EntitySet<Mortgage> _Mortgages;
		
		private EntitySet<Mortgage> _Mortgages1;
		
		private EntityRef<NetworkWiring> _NetworkWiring;
		
		private EntitySet<PowerOffice> _PowerOffices;
		
		private EntitySet<ReferenceDocument> _ReferenceDocuments;
		
		private EntityRef<RefundDeposit> _RefundDeposit;
		
		private EntitySet<Request> _Requests;
		
		private EntitySet<Request> _Requests1;
		
		private EntityRef<Request> _Request4;
		
		private EntitySet<RequestForm> _RequestForms;
		
		private EntitySet<RequestLog> _RequestLogs;
		
		private EntitySet<RequestPayment> _RequestPayments;
		
		private EntityRef<SelectTelephone> _SelectTelephone;
		
		private EntityRef<SpaceAndPower> _SpaceAndPower;
		
		private EntityRef<SpecialCondition> _SpecialCondition;
		
		private EntitySet<SpecialPrivateCable> _SpecialPrivateCables;
		
		private EntityRef<SpecialService> _SpecialService;
		
		private EntityRef<SpecialWire> _SpecialWire;
		
		private EntitySet<SpecialWirePoint> _SpecialWirePoints;
		
		private EntitySet<StatusLog> _StatusLogs;
		
		private EntitySet<SubFlowStatus> _SubFlowStatus;
		
		private EntityRef<SwapPCM> _SwapPCM;
		
		private EntityRef<SwapTelephone> _SwapTelephone;
		
		private EntitySet<SwitchOffice> _SwitchOffices;
		
		private EntitySet<SwitchTransition> _SwitchTransitions;
		
		private EntityRef<TakePossession> _TakePossession;
		
		private EntityRef<TitleIn118> _TitleIn118;
		
		private EntitySet<TransferDepartmentOffice> _TransferDepartmentOffices;
		
		private EntityRef<TransferFileInfo> _TransferFileInfo;
		
		private EntityRef<TranslationOpticalCabinetToNormal> _TranslationOpticalCabinetToNormal;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions;
		
		private EntitySet<TranslationOpticalCabinetToNormalTelephone> _TranslationOpticalCabinetToNormalTelephones;
		
		private EntityRef<TranslationPCMToNormal> _TranslationPCMToNormal;
		
		private EntityRef<TranslationPost> _TranslationPost;
		
		private EntityRef<TranslationPostInput> _TranslationPostInput;
		
		private EntitySet<TranslationPostInputConnection> _TranslationPostInputConnections;
		
		private EntitySet<VacateE1> _VacateE1s;
		
		private EntityRef<VacateSpecialWire> _VacateSpecialWire;
		
		private EntitySet<VacateSpecialWirePoint> _VacateSpecialWirePoints;
		
		private EntitySet<VisitAddress> _VisitAddresses;
		
		private EntitySet<WaitingList> _WaitingLists;
		
		private EntityRef<Wireless> _Wireless;
		
		private EntityRef<WirelessChangeService> _WirelessChangeService;
		
		private EntityRef<WirelessRequest> _WirelessRequest;
		
		private EntityRef<WirelessSellTraffic> _WirelessSellTraffic;
		
		private EntitySet<Wiring> _Wirings;
		
		private EntitySet<WorkFlowLog> _WorkFlowLogs;
		
		private EntityRef<ExchangeGSM> _ExchangeGSM;
		
		private EntitySet<TelecomminucationServicePayment> _TelecomminucationServicePayments;
		
		private EntityRef<ZeroStatus> _ZeroStatus;
		
		private EntitySet<InstallRequest> _InstallRequests;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Request> _Request1;
		
		private EntityRef<Request> _Request2;
		
		private EntityRef<Request> _Request3;
		
		private EntityRef<RequestType> _RequestType;
		
		private EntityRef<Status> _Status;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnRelatedRequestIDChanging(System.Nullable<long> value);
    partial void OnRelatedRequestIDChanged();
    partial void OnMainRequestIDChanging(System.Nullable<long> value);
    partial void OnMainRequestIDChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnRequestLetterNoChanging(string value);
    partial void OnRequestLetterNoChanged();
    partial void OnRequestLetterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestLetterDateChanged();
    partial void OnRequesterNameChanging(string value);
    partial void OnRequesterNameChanged();
    partial void OnRequestPaymentTypeIDChanging(System.Nullable<byte> value);
    partial void OnRequestPaymentTypeIDChanged();
    partial void OnRepresentitiveNoChanging(string value);
    partial void OnRepresentitiveNoChanged();
    partial void OnRepresentitiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepresentitiveDateChanged();
    partial void OnRepresentitiveExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepresentitiveExpireDateChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnModifyUserIDChanging(System.Nullable<int> value);
    partial void OnModifyUserIDChanged();
    partial void OnSellerIDChanging(System.Nullable<int> value);
    partial void OnSellerIDChanged();
    partial void OnPreviousActionChanging(System.Nullable<byte> value);
    partial void OnPreviousActionChanged();
    partial void OnBillIDChanging(string value);
    partial void OnBillIDChanged();
    partial void OnPaymentIDChanging(string value);
    partial void OnPaymentIDChanged();
    partial void OnIsWaitingListChanging(bool value);
    partial void OnIsWaitingListChanged();
    partial void OnIsCancelationChanging(bool value);
    partial void OnIsCancelationChanged();
    partial void OnIsViewedChanging(bool value);
    partial void OnIsViewedChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    partial void OnWaitForToBeCalculateChanging(System.Nullable<bool> value);
    partial void OnWaitForToBeCalculateChanged();
    #endregion
		
		public Request()
		{
			this._ADSLChangeCustomerOwnerCharacteristic = default(EntityRef<ADSLChangeCustomerOwnerCharacteristic>);
			this._ADSLChangeIPRequest = default(EntityRef<ADSLChangeIPRequest>);
			this._ADSLChangePlace = default(EntityRef<ADSLChangePlace>);
			this._ADSLChangePort1 = default(EntityRef<ADSLChangePort1>);
			this._ADSLChangeService = default(EntityRef<ADSLChangeService>);
			this._ADSLCutTemporary = default(EntityRef<ADSLCutTemporary>);
			this._ADSLDischarge = default(EntityRef<ADSLDischarge>);
			this._ADSLInstallRequest = default(EntityRef<ADSLInstallRequest>);
			this._ADSLPAPRequest = default(EntityRef<ADSLPAPRequest>);
			this._ADSLRequest = default(EntityRef<ADSLRequest>);
			this._ADSLSellerAgentUserCredits = new EntitySet<ADSLSellerAgentUserCredit>(new Action<ADSLSellerAgentUserCredit>(this.attach_ADSLSellerAgentUserCredits), new Action<ADSLSellerAgentUserCredit>(this.detach_ADSLSellerAgentUserCredits));
			this._ADSLSellTraffic = default(EntityRef<ADSLSellTraffic>);
			this._ADSLSetupContactInformations = new EntitySet<ADSLSetupContactInformation>(new Action<ADSLSetupContactInformation>(this.attach_ADSLSetupContactInformations), new Action<ADSLSetupContactInformation>(this.detach_ADSLSetupContactInformations));
			this._ADSLSupportRequest = default(EntityRef<ADSLSupportRequest>);
			this._AnnounceTo118 = default(EntityRef<AnnounceTo118>);
			this._BuchtSwitching = default(EntityRef<BuchtSwitching>);
			this._CableDesignOffices = new EntitySet<CableDesignOffice>(new Action<CableDesignOffice>(this.attach_CableDesignOffices), new Action<CableDesignOffice>(this.detach_CableDesignOffices));
			this._CancelationRequestList = default(EntityRef<CancelationRequestList>);
			this._CenterToCenterTranslation = default(EntityRef<CenterToCenterTranslation>);
			this._CenterToCenterTranslationPCMs = new EntitySet<CenterToCenterTranslationPCM>(new Action<CenterToCenterTranslationPCM>(this.attach_CenterToCenterTranslationPCMs), new Action<CenterToCenterTranslationPCM>(this.detach_CenterToCenterTranslationPCMs));
			this._CenterToCenterTranslationTelephones = new EntitySet<CenterToCenterTranslationTelephone>(new Action<CenterToCenterTranslationTelephone>(this.attach_CenterToCenterTranslationTelephones), new Action<CenterToCenterTranslationTelephone>(this.detach_CenterToCenterTranslationTelephones));
			this._ChangeAddress = default(EntityRef<ChangeAddress>);
			this._ChangeLocation = default(EntityRef<ChangeLocation>);
			this._ChangeLocationSpecialWire = default(EntityRef<ChangeLocationSpecialWire>);
			this._ChangeName = default(EntityRef<ChangeName>);
			this._ChangeNo = default(EntityRef<ChangeNo>);
			this._ChangeTelephoneType = default(EntityRef<ChangeTelephoneType>);
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Control = default(EntityRef<Control>);
			this._CutAndEstablish = default(EntityRef<CutAndEstablish>);
			this._DamageLine = default(EntityRef<DamageLine>);
			this._E1 = default(EntityRef<E1>);
			this._E1Links = new EntitySet<E1Link>(new Action<E1Link>(this.attach_E1Links), new Action<E1Link>(this.detach_E1Links));
			this._ExchangeBrokenPCMs = new EntitySet<ExchangeBrokenPCM>(new Action<ExchangeBrokenPCM>(this.attach_ExchangeBrokenPCMs), new Action<ExchangeBrokenPCM>(this.detach_ExchangeBrokenPCMs));
			this._ExchangeCabinetInput = default(EntityRef<ExchangeCabinetInput>);
			this._ExchangeCabinetInputConncetions = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions));
			this._ExchangeCentralCableMDFConncetions = new EntitySet<ExchangeCentralCableMDFConncetion>(new Action<ExchangeCentralCableMDFConncetion>(this.attach_ExchangeCentralCableMDFConncetions), new Action<ExchangeCentralCableMDFConncetion>(this.detach_ExchangeCentralCableMDFConncetions));
			this._ExchangePost = default(EntityRef<ExchangePost>);
			this._ExchangeTelephoneNos = new EntitySet<ExchangeTelephoneNo>(new Action<ExchangeTelephoneNo>(this.attach_ExchangeTelephoneNos), new Action<ExchangeTelephoneNo>(this.detach_ExchangeTelephoneNos));
			this._Failure117 = default(EntityRef<Failure117>);
			this._Inquiries = new EntitySet<Inquiry>(new Action<Inquiry>(this.attach_Inquiries), new Action<Inquiry>(this.detach_Inquiries));
			this._Installment = default(EntityRef<Installment>);
			this._InvestigatePossibilities = new EntitySet<InvestigatePossibility>(new Action<InvestigatePossibility>(this.attach_InvestigatePossibilities), new Action<InvestigatePossibility>(this.detach_InvestigatePossibilities));
			this._IssueWirings = new EntitySet<IssueWiring>(new Action<IssueWiring>(this.attach_IssueWirings), new Action<IssueWiring>(this.detach_IssueWirings));
			this._MDFWiring = default(EntityRef<MDFWiring>);
			this._Mortgages = new EntitySet<Mortgage>(new Action<Mortgage>(this.attach_Mortgages), new Action<Mortgage>(this.detach_Mortgages));
			this._Mortgages1 = new EntitySet<Mortgage>(new Action<Mortgage>(this.attach_Mortgages1), new Action<Mortgage>(this.detach_Mortgages1));
			this._NetworkWiring = default(EntityRef<NetworkWiring>);
			this._PowerOffices = new EntitySet<PowerOffice>(new Action<PowerOffice>(this.attach_PowerOffices), new Action<PowerOffice>(this.detach_PowerOffices));
			this._ReferenceDocuments = new EntitySet<ReferenceDocument>(new Action<ReferenceDocument>(this.attach_ReferenceDocuments), new Action<ReferenceDocument>(this.detach_ReferenceDocuments));
			this._RefundDeposit = default(EntityRef<RefundDeposit>);
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._Requests1 = new EntitySet<Request>(new Action<Request>(this.attach_Requests1), new Action<Request>(this.detach_Requests1));
			this._Request4 = default(EntityRef<Request>);
			this._RequestForms = new EntitySet<RequestForm>(new Action<RequestForm>(this.attach_RequestForms), new Action<RequestForm>(this.detach_RequestForms));
			this._RequestLogs = new EntitySet<RequestLog>(new Action<RequestLog>(this.attach_RequestLogs), new Action<RequestLog>(this.detach_RequestLogs));
			this._RequestPayments = new EntitySet<RequestPayment>(new Action<RequestPayment>(this.attach_RequestPayments), new Action<RequestPayment>(this.detach_RequestPayments));
			this._SelectTelephone = default(EntityRef<SelectTelephone>);
			this._SpaceAndPower = default(EntityRef<SpaceAndPower>);
			this._SpecialCondition = default(EntityRef<SpecialCondition>);
			this._SpecialPrivateCables = new EntitySet<SpecialPrivateCable>(new Action<SpecialPrivateCable>(this.attach_SpecialPrivateCables), new Action<SpecialPrivateCable>(this.detach_SpecialPrivateCables));
			this._SpecialService = default(EntityRef<SpecialService>);
			this._SpecialWire = default(EntityRef<SpecialWire>);
			this._SpecialWirePoints = new EntitySet<SpecialWirePoint>(new Action<SpecialWirePoint>(this.attach_SpecialWirePoints), new Action<SpecialWirePoint>(this.detach_SpecialWirePoints));
			this._StatusLogs = new EntitySet<StatusLog>(new Action<StatusLog>(this.attach_StatusLogs), new Action<StatusLog>(this.detach_StatusLogs));
			this._SubFlowStatus = new EntitySet<SubFlowStatus>(new Action<SubFlowStatus>(this.attach_SubFlowStatus), new Action<SubFlowStatus>(this.detach_SubFlowStatus));
			this._SwapPCM = default(EntityRef<SwapPCM>);
			this._SwapTelephone = default(EntityRef<SwapTelephone>);
			this._SwitchOffices = new EntitySet<SwitchOffice>(new Action<SwitchOffice>(this.attach_SwitchOffices), new Action<SwitchOffice>(this.detach_SwitchOffices));
			this._SwitchTransitions = new EntitySet<SwitchTransition>(new Action<SwitchTransition>(this.attach_SwitchTransitions), new Action<SwitchTransition>(this.detach_SwitchTransitions));
			this._TakePossession = default(EntityRef<TakePossession>);
			this._TitleIn118 = default(EntityRef<TitleIn118>);
			this._TransferDepartmentOffices = new EntitySet<TransferDepartmentOffice>(new Action<TransferDepartmentOffice>(this.attach_TransferDepartmentOffices), new Action<TransferDepartmentOffice>(this.detach_TransferDepartmentOffices));
			this._TransferFileInfo = default(EntityRef<TransferFileInfo>);
			this._TranslationOpticalCabinetToNormal = default(EntityRef<TranslationOpticalCabinetToNormal>);
			this._TranslationOpticalCabinetToNormalConncetions = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions));
			this._TranslationOpticalCabinetToNormalTelephones = new EntitySet<TranslationOpticalCabinetToNormalTelephone>(new Action<TranslationOpticalCabinetToNormalTelephone>(this.attach_TranslationOpticalCabinetToNormalTelephones), new Action<TranslationOpticalCabinetToNormalTelephone>(this.detach_TranslationOpticalCabinetToNormalTelephones));
			this._TranslationPCMToNormal = default(EntityRef<TranslationPCMToNormal>);
			this._TranslationPost = default(EntityRef<TranslationPost>);
			this._TranslationPostInput = default(EntityRef<TranslationPostInput>);
			this._TranslationPostInputConnections = new EntitySet<TranslationPostInputConnection>(new Action<TranslationPostInputConnection>(this.attach_TranslationPostInputConnections), new Action<TranslationPostInputConnection>(this.detach_TranslationPostInputConnections));
			this._VacateE1s = new EntitySet<VacateE1>(new Action<VacateE1>(this.attach_VacateE1s), new Action<VacateE1>(this.detach_VacateE1s));
			this._VacateSpecialWire = default(EntityRef<VacateSpecialWire>);
			this._VacateSpecialWirePoints = new EntitySet<VacateSpecialWirePoint>(new Action<VacateSpecialWirePoint>(this.attach_VacateSpecialWirePoints), new Action<VacateSpecialWirePoint>(this.detach_VacateSpecialWirePoints));
			this._VisitAddresses = new EntitySet<VisitAddress>(new Action<VisitAddress>(this.attach_VisitAddresses), new Action<VisitAddress>(this.detach_VisitAddresses));
			this._WaitingLists = new EntitySet<WaitingList>(new Action<WaitingList>(this.attach_WaitingLists), new Action<WaitingList>(this.detach_WaitingLists));
			this._Wireless = default(EntityRef<Wireless>);
			this._WirelessChangeService = default(EntityRef<WirelessChangeService>);
			this._WirelessRequest = default(EntityRef<WirelessRequest>);
			this._WirelessSellTraffic = default(EntityRef<WirelessSellTraffic>);
			this._Wirings = new EntitySet<Wiring>(new Action<Wiring>(this.attach_Wirings), new Action<Wiring>(this.detach_Wirings));
			this._WorkFlowLogs = new EntitySet<WorkFlowLog>(new Action<WorkFlowLog>(this.attach_WorkFlowLogs), new Action<WorkFlowLog>(this.detach_WorkFlowLogs));
			this._ExchangeGSM = default(EntityRef<ExchangeGSM>);
			this._TelecomminucationServicePayments = new EntitySet<TelecomminucationServicePayment>(new Action<TelecomminucationServicePayment>(this.attach_TelecomminucationServicePayments), new Action<TelecomminucationServicePayment>(this.detach_TelecomminucationServicePayments));
			this._ZeroStatus = default(EntityRef<ZeroStatus>);
			this._InstallRequests = new EntitySet<InstallRequest>(new Action<InstallRequest>(this.attach_InstallRequests), new Action<InstallRequest>(this.detach_InstallRequests));
			this._Center = default(EntityRef<Center>);
			this._Request1 = default(EntityRef<Request>);
			this._Request2 = default(EntityRef<Request>);
			this._Request3 = default(EntityRef<Request>);
			this._RequestType = default(EntityRef<RequestType>);
			this._Status = default(EntityRef<Status>);
			this._Telephone = default(EntityRef<Telephone>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedRequestID", DbType="BigInt")]
		public System.Nullable<long> RelatedRequestID
		{
			get
			{
				return this._RelatedRequestID;
			}
			set
			{
				if ((this._RelatedRequestID != value))
				{
					if (this._Request1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelatedRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedRequestID = value;
					this.SendPropertyChanged("RelatedRequestID");
					this.OnRelatedRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainRequestID", DbType="BigInt")]
		public System.Nullable<long> MainRequestID
		{
			get
			{
				return this._MainRequestID;
			}
			set
			{
				if ((this._MainRequestID != value))
				{
					if (this._Request2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainRequestIDChanging(value);
					this.SendPropertyChanging();
					this._MainRequestID = value;
					this.SendPropertyChanged("MainRequestID");
					this.OnMainRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestLetterNo", DbType="NVarChar(20)")]
		public string RequestLetterNo
		{
			get
			{
				return this._RequestLetterNo;
			}
			set
			{
				if ((this._RequestLetterNo != value))
				{
					this.OnRequestLetterNoChanging(value);
					this.SendPropertyChanging();
					this._RequestLetterNo = value;
					this.SendPropertyChanged("RequestLetterNo");
					this.OnRequestLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestLetterDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RequestLetterDate
		{
			get
			{
				return this._RequestLetterDate;
			}
			set
			{
				if ((this._RequestLetterDate != value))
				{
					this.OnRequestLetterDateChanging(value);
					this.SendPropertyChanging();
					this._RequestLetterDate = value;
					this.SendPropertyChanged("RequestLetterDate");
					this.OnRequestLetterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequesterName", DbType="NVarChar(50)")]
		public string RequesterName
		{
			get
			{
				return this._RequesterName;
			}
			set
			{
				if ((this._RequesterName != value))
				{
					this.OnRequesterNameChanging(value);
					this.SendPropertyChanging();
					this._RequesterName = value;
					this.SendPropertyChanged("RequesterName");
					this.OnRequesterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPaymentTypeID", DbType="TinyInt")]
		public System.Nullable<byte> RequestPaymentTypeID
		{
			get
			{
				return this._RequestPaymentTypeID;
			}
			set
			{
				if ((this._RequestPaymentTypeID != value))
				{
					this.OnRequestPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestPaymentTypeID = value;
					this.SendPropertyChanged("RequestPaymentTypeID");
					this.OnRequestPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepresentitiveNo", DbType="NVarChar(100)")]
		public string RepresentitiveNo
		{
			get
			{
				return this._RepresentitiveNo;
			}
			set
			{
				if ((this._RepresentitiveNo != value))
				{
					this.OnRepresentitiveNoChanging(value);
					this.SendPropertyChanging();
					this._RepresentitiveNo = value;
					this.SendPropertyChanged("RepresentitiveNo");
					this.OnRepresentitiveNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepresentitiveDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RepresentitiveDate
		{
			get
			{
				return this._RepresentitiveDate;
			}
			set
			{
				if ((this._RepresentitiveDate != value))
				{
					this.OnRepresentitiveDateChanging(value);
					this.SendPropertyChanging();
					this._RepresentitiveDate = value;
					this.SendPropertyChanged("RepresentitiveDate");
					this.OnRepresentitiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepresentitiveExpireDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RepresentitiveExpireDate
		{
			get
			{
				return this._RepresentitiveExpireDate;
			}
			set
			{
				if ((this._RepresentitiveExpireDate != value))
				{
					this.OnRepresentitiveExpireDateChanging(value);
					this.SendPropertyChanging();
					this._RepresentitiveExpireDate = value;
					this.SendPropertyChanged("RepresentitiveExpireDate");
					this.OnRepresentitiveExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyUserID", DbType="Int")]
		public System.Nullable<int> ModifyUserID
		{
			get
			{
				return this._ModifyUserID;
			}
			set
			{
				if ((this._ModifyUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifyUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModifyUserID = value;
					this.SendPropertyChanged("ModifyUserID");
					this.OnModifyUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
		public System.Nullable<int> SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousAction", DbType="TinyInt")]
		public System.Nullable<byte> PreviousAction
		{
			get
			{
				return this._PreviousAction;
			}
			set
			{
				if ((this._PreviousAction != value))
				{
					this.OnPreviousActionChanging(value);
					this.SendPropertyChanging();
					this._PreviousAction = value;
					this.SendPropertyChanged("PreviousAction");
					this.OnPreviousActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", DbType="NVarChar(50)")]
		public string BillID
		{
			get
			{
				return this._BillID;
			}
			set
			{
				if ((this._BillID != value))
				{
					this.OnBillIDChanging(value);
					this.SendPropertyChanging();
					this._BillID = value;
					this.SendPropertyChanged("BillID");
					this.OnBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="NVarChar(50)")]
		public string PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWaitingList", DbType="Bit NOT NULL")]
		public bool IsWaitingList
		{
			get
			{
				return this._IsWaitingList;
			}
			set
			{
				if ((this._IsWaitingList != value))
				{
					this.OnIsWaitingListChanging(value);
					this.SendPropertyChanging();
					this._IsWaitingList = value;
					this.SendPropertyChanged("IsWaitingList");
					this.OnIsWaitingListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelation", DbType="Bit NOT NULL")]
		public bool IsCancelation
		{
			get
			{
				return this._IsCancelation;
			}
			set
			{
				if ((this._IsCancelation != value))
				{
					this.OnIsCancelationChanging(value);
					this.SendPropertyChanging();
					this._IsCancelation = value;
					this.SendPropertyChanged("IsCancelation");
					this.OnIsCancelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsViewed", DbType="Bit NOT NULL")]
		public bool IsViewed
		{
			get
			{
				return this._IsViewed;
			}
			set
			{
				if ((this._IsViewed != value))
				{
					this.OnIsViewedChanging(value);
					this.SendPropertyChanging();
					this._IsViewed = value;
					this.SendPropertyChanged("IsViewed");
					this.OnIsViewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitForToBeCalculate", DbType="Bit")]
		public System.Nullable<bool> WaitForToBeCalculate
		{
			get
			{
				return this._WaitForToBeCalculate;
			}
			set
			{
				if ((this._WaitForToBeCalculate != value))
				{
					this.OnWaitForToBeCalculateChanging(value);
					this.SendPropertyChanging();
					this._WaitForToBeCalculate = value;
					this.SendPropertyChanged("WaitForToBeCalculate");
					this.OnWaitForToBeCalculateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangeCustomerOwnerCharacteristic", Storage="_ADSLChangeCustomerOwnerCharacteristic", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLChangeCustomerOwnerCharacteristic ADSLChangeCustomerOwnerCharacteristic
		{
			get
			{
				return this._ADSLChangeCustomerOwnerCharacteristic.Entity;
			}
			set
			{
				ADSLChangeCustomerOwnerCharacteristic previousValue = this._ADSLChangeCustomerOwnerCharacteristic.Entity;
				if (((previousValue != value) 
							|| (this._ADSLChangeCustomerOwnerCharacteristic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLChangeCustomerOwnerCharacteristic.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLChangeCustomerOwnerCharacteristic.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLChangeCustomerOwnerCharacteristic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangeIPRequest", Storage="_ADSLChangeIPRequest", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLChangeIPRequest ADSLChangeIPRequest
		{
			get
			{
				return this._ADSLChangeIPRequest.Entity;
			}
			set
			{
				ADSLChangeIPRequest previousValue = this._ADSLChangeIPRequest.Entity;
				if (((previousValue != value) 
							|| (this._ADSLChangeIPRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLChangeIPRequest.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLChangeIPRequest.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLChangeIPRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangePlace", Storage="_ADSLChangePlace", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLChangePlace ADSLChangePlace
		{
			get
			{
				return this._ADSLChangePlace.Entity;
			}
			set
			{
				ADSLChangePlace previousValue = this._ADSLChangePlace.Entity;
				if (((previousValue != value) 
							|| (this._ADSLChangePlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLChangePlace.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLChangePlace.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLChangePlace");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangePort1", Storage="_ADSLChangePort1", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLChangePort1 ADSLChangePort1
		{
			get
			{
				return this._ADSLChangePort1.Entity;
			}
			set
			{
				ADSLChangePort1 previousValue = this._ADSLChangePort1.Entity;
				if (((previousValue != value) 
							|| (this._ADSLChangePort1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLChangePort1.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLChangePort1.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLChangePort1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLChangeService", Storage="_ADSLChangeService", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLChangeService ADSLChangeService
		{
			get
			{
				return this._ADSLChangeService.Entity;
			}
			set
			{
				ADSLChangeService previousValue = this._ADSLChangeService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLChangeService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLChangeService.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLChangeService.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLChangeService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLCutTemporary", Storage="_ADSLCutTemporary", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLCutTemporary ADSLCutTemporary
		{
			get
			{
				return this._ADSLCutTemporary.Entity;
			}
			set
			{
				ADSLCutTemporary previousValue = this._ADSLCutTemporary.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCutTemporary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCutTemporary.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLCutTemporary.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLCutTemporary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLDischarge", Storage="_ADSLDischarge", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLDischarge ADSLDischarge
		{
			get
			{
				return this._ADSLDischarge.Entity;
			}
			set
			{
				ADSLDischarge previousValue = this._ADSLDischarge.Entity;
				if (((previousValue != value) 
							|| (this._ADSLDischarge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLDischarge.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLDischarge.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLDischarge");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLInstallRequest", Storage="_ADSLInstallRequest", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLInstallRequest ADSLInstallRequest
		{
			get
			{
				return this._ADSLInstallRequest.Entity;
			}
			set
			{
				ADSLInstallRequest previousValue = this._ADSLInstallRequest.Entity;
				if (((previousValue != value) 
							|| (this._ADSLInstallRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLInstallRequest.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLInstallRequest.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLInstallRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLPAPRequest", Storage="_ADSLPAPRequest", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLPAPRequest ADSLPAPRequest
		{
			get
			{
				return this._ADSLPAPRequest.Entity;
			}
			set
			{
				ADSLPAPRequest previousValue = this._ADSLPAPRequest.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPAPRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPAPRequest.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLPAPRequest.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLPAPRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLRequest", Storage="_ADSLRequest", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLRequest ADSLRequest
		{
			get
			{
				return this._ADSLRequest.Entity;
			}
			set
			{
				ADSLRequest previousValue = this._ADSLRequest.Entity;
				if (((previousValue != value) 
							|| (this._ADSLRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLRequest.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLRequest.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLSellerAgentUserCredit", Storage="_ADSLSellerAgentUserCredits", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<ADSLSellerAgentUserCredit> ADSLSellerAgentUserCredits
		{
			get
			{
				return this._ADSLSellerAgentUserCredits;
			}
			set
			{
				this._ADSLSellerAgentUserCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLSellTraffic", Storage="_ADSLSellTraffic", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLSellTraffic ADSLSellTraffic
		{
			get
			{
				return this._ADSLSellTraffic.Entity;
			}
			set
			{
				ADSLSellTraffic previousValue = this._ADSLSellTraffic.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellTraffic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellTraffic.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLSellTraffic.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLSellTraffic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLSetupContactInformation", Storage="_ADSLSetupContactInformations", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<ADSLSetupContactInformation> ADSLSetupContactInformations
		{
			get
			{
				return this._ADSLSetupContactInformations;
			}
			set
			{
				this._ADSLSetupContactInformations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ADSLSupportRequest", Storage="_ADSLSupportRequest", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLSupportRequest ADSLSupportRequest
		{
			get
			{
				return this._ADSLSupportRequest.Entity;
			}
			set
			{
				ADSLSupportRequest previousValue = this._ADSLSupportRequest.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSupportRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSupportRequest.Entity = null;
						previousValue.Request = null;
					}
					this._ADSLSupportRequest.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ADSLSupportRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_AnnounceTo118", Storage="_AnnounceTo118", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public AnnounceTo118 AnnounceTo118
		{
			get
			{
				return this._AnnounceTo118.Entity;
			}
			set
			{
				AnnounceTo118 previousValue = this._AnnounceTo118.Entity;
				if (((previousValue != value) 
							|| (this._AnnounceTo118.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AnnounceTo118.Entity = null;
						previousValue.Request = null;
					}
					this._AnnounceTo118.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("AnnounceTo118");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_BuchtSwitching", Storage="_BuchtSwitching", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public BuchtSwitching BuchtSwitching
		{
			get
			{
				return this._BuchtSwitching.Entity;
			}
			set
			{
				BuchtSwitching previousValue = this._BuchtSwitching.Entity;
				if (((previousValue != value) 
							|| (this._BuchtSwitching.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuchtSwitching.Entity = null;
						previousValue.Request = null;
					}
					this._BuchtSwitching.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("BuchtSwitching");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CableDesignOffice", Storage="_CableDesignOffices", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<CableDesignOffice> CableDesignOffices
		{
			get
			{
				return this._CableDesignOffices;
			}
			set
			{
				this._CableDesignOffices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CancelationRequestList", Storage="_CancelationRequestList", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public CancelationRequestList CancelationRequestList
		{
			get
			{
				return this._CancelationRequestList.Entity;
			}
			set
			{
				CancelationRequestList previousValue = this._CancelationRequestList.Entity;
				if (((previousValue != value) 
							|| (this._CancelationRequestList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CancelationRequestList.Entity = null;
						previousValue.Request = null;
					}
					this._CancelationRequestList.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("CancelationRequestList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CenterToCenterTranslation", Storage="_CenterToCenterTranslation", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public CenterToCenterTranslation CenterToCenterTranslation
		{
			get
			{
				return this._CenterToCenterTranslation.Entity;
			}
			set
			{
				CenterToCenterTranslation previousValue = this._CenterToCenterTranslation.Entity;
				if (((previousValue != value) 
							|| (this._CenterToCenterTranslation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CenterToCenterTranslation.Entity = null;
						previousValue.Request = null;
					}
					this._CenterToCenterTranslation.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("CenterToCenterTranslation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CenterToCenterTranslationPCM", Storage="_CenterToCenterTranslationPCMs", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<CenterToCenterTranslationPCM> CenterToCenterTranslationPCMs
		{
			get
			{
				return this._CenterToCenterTranslationPCMs;
			}
			set
			{
				this._CenterToCenterTranslationPCMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CenterToCenterTranslationTelephone", Storage="_CenterToCenterTranslationTelephones", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<CenterToCenterTranslationTelephone> CenterToCenterTranslationTelephones
		{
			get
			{
				return this._CenterToCenterTranslationTelephones;
			}
			set
			{
				this._CenterToCenterTranslationTelephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeAddress", Storage="_ChangeAddress", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ChangeAddress ChangeAddress
		{
			get
			{
				return this._ChangeAddress.Entity;
			}
			set
			{
				ChangeAddress previousValue = this._ChangeAddress.Entity;
				if (((previousValue != value) 
							|| (this._ChangeAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangeAddress.Entity = null;
						previousValue.Request = null;
					}
					this._ChangeAddress.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ChangeAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeLocation", Storage="_ChangeLocation", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ChangeLocation ChangeLocation
		{
			get
			{
				return this._ChangeLocation.Entity;
			}
			set
			{
				ChangeLocation previousValue = this._ChangeLocation.Entity;
				if (((previousValue != value) 
							|| (this._ChangeLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangeLocation.Entity = null;
						previousValue.Request = null;
					}
					this._ChangeLocation.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ChangeLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeLocationSpecialWire", Storage="_ChangeLocationSpecialWire", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public ChangeLocationSpecialWire ChangeLocationSpecialWire
		{
			get
			{
				return this._ChangeLocationSpecialWire.Entity;
			}
			set
			{
				ChangeLocationSpecialWire previousValue = this._ChangeLocationSpecialWire.Entity;
				if (((previousValue != value) 
							|| (this._ChangeLocationSpecialWire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangeLocationSpecialWire.Entity = null;
						previousValue.Request = null;
					}
					this._ChangeLocationSpecialWire.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ChangeLocationSpecialWire");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeName", Storage="_ChangeName", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ChangeName ChangeName
		{
			get
			{
				return this._ChangeName.Entity;
			}
			set
			{
				ChangeName previousValue = this._ChangeName.Entity;
				if (((previousValue != value) 
							|| (this._ChangeName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangeName.Entity = null;
						previousValue.Request = null;
					}
					this._ChangeName.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ChangeName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeNo", Storage="_ChangeNo", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ChangeNo ChangeNo
		{
			get
			{
				return this._ChangeNo.Entity;
			}
			set
			{
				ChangeNo previousValue = this._ChangeNo.Entity;
				if (((previousValue != value) 
							|| (this._ChangeNo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangeNo.Entity = null;
						previousValue.Request = null;
					}
					this._ChangeNo.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ChangeNo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ChangeTelephoneType", Storage="_ChangeTelephoneType", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ChangeTelephoneType ChangeTelephoneType
		{
			get
			{
				return this._ChangeTelephoneType.Entity;
			}
			set
			{
				ChangeTelephoneType previousValue = this._ChangeTelephoneType.Entity;
				if (((previousValue != value) 
							|| (this._ChangeTelephoneType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangeTelephoneType.Entity = null;
						previousValue.Request = null;
					}
					this._ChangeTelephoneType.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ChangeTelephoneType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Control", Storage="_Control", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Control Control
		{
			get
			{
				return this._Control.Entity;
			}
			set
			{
				Control previousValue = this._Control.Entity;
				if (((previousValue != value) 
							|| (this._Control.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Control.Entity = null;
						previousValue.Request = null;
					}
					this._Control.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("Control");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_CutAndEstablish", Storage="_CutAndEstablish", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public CutAndEstablish CutAndEstablish
		{
			get
			{
				return this._CutAndEstablish.Entity;
			}
			set
			{
				CutAndEstablish previousValue = this._CutAndEstablish.Entity;
				if (((previousValue != value) 
							|| (this._CutAndEstablish.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CutAndEstablish.Entity = null;
						previousValue.Request = null;
					}
					this._CutAndEstablish.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("CutAndEstablish");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_DamageLine", Storage="_DamageLine", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public DamageLine DamageLine
		{
			get
			{
				return this._DamageLine.Entity;
			}
			set
			{
				DamageLine previousValue = this._DamageLine.Entity;
				if (((previousValue != value) 
							|| (this._DamageLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DamageLine.Entity = null;
						previousValue.Request = null;
					}
					this._DamageLine.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("DamageLine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_E1", Storage="_E1", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public E1 E1
		{
			get
			{
				return this._E1.Entity;
			}
			set
			{
				E1 previousValue = this._E1.Entity;
				if (((previousValue != value) 
							|| (this._E1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._E1.Entity = null;
						previousValue.Request = null;
					}
					this._E1.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("E1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_E1Link", Storage="_E1Links", ThisKey="ID", OtherKey="ReqeustID")]
		public EntitySet<E1Link> E1Links
		{
			get
			{
				return this._E1Links;
			}
			set
			{
				this._E1Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeBrokenPCM", Storage="_ExchangeBrokenPCMs", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<ExchangeBrokenPCM> ExchangeBrokenPCMs
		{
			get
			{
				return this._ExchangeBrokenPCMs;
			}
			set
			{
				this._ExchangeBrokenPCMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeCabinetInput", Storage="_ExchangeCabinetInput", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ExchangeCabinetInput ExchangeCabinetInput
		{
			get
			{
				return this._ExchangeCabinetInput.Entity;
			}
			set
			{
				ExchangeCabinetInput previousValue = this._ExchangeCabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._ExchangeCabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExchangeCabinetInput.Entity = null;
						previousValue.Request = null;
					}
					this._ExchangeCabinetInput.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ExchangeCabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeCabinetInputConncetion", Storage="_ExchangeCabinetInputConncetions", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this._ExchangeCabinetInputConncetions;
			}
			set
			{
				this._ExchangeCabinetInputConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeCentralCableMDFConncetion", Storage="_ExchangeCentralCableMDFConncetions", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<ExchangeCentralCableMDFConncetion> ExchangeCentralCableMDFConncetions
		{
			get
			{
				return this._ExchangeCentralCableMDFConncetions;
			}
			set
			{
				this._ExchangeCentralCableMDFConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangePost", Storage="_ExchangePost", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ExchangePost ExchangePost
		{
			get
			{
				return this._ExchangePost.Entity;
			}
			set
			{
				ExchangePost previousValue = this._ExchangePost.Entity;
				if (((previousValue != value) 
							|| (this._ExchangePost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExchangePost.Entity = null;
						previousValue.Request = null;
					}
					this._ExchangePost.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ExchangePost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeTelephoneNo", Storage="_ExchangeTelephoneNos", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<ExchangeTelephoneNo> ExchangeTelephoneNos
		{
			get
			{
				return this._ExchangeTelephoneNos;
			}
			set
			{
				this._ExchangeTelephoneNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Failure117", Storage="_Failure117", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Failure117 Failure117
		{
			get
			{
				return this._Failure117.Entity;
			}
			set
			{
				Failure117 previousValue = this._Failure117.Entity;
				if (((previousValue != value) 
							|| (this._Failure117.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117.Entity = null;
						previousValue.Request = null;
					}
					this._Failure117.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("Failure117");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Inquiry", Storage="_Inquiries", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<Inquiry> Inquiries
		{
			get
			{
				return this._Inquiries;
			}
			set
			{
				this._Inquiries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Installment", Storage="_Installment", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Installment Installment
		{
			get
			{
				return this._Installment.Entity;
			}
			set
			{
				Installment previousValue = this._Installment.Entity;
				if (((previousValue != value) 
							|| (this._Installment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Installment.Entity = null;
						previousValue.Request = null;
					}
					this._Installment.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("Installment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_InvestigatePossibility", Storage="_InvestigatePossibilities", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<InvestigatePossibility> InvestigatePossibilities
		{
			get
			{
				return this._InvestigatePossibilities;
			}
			set
			{
				this._InvestigatePossibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_IssueWiring", Storage="_IssueWirings", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<IssueWiring> IssueWirings
		{
			get
			{
				return this._IssueWirings;
			}
			set
			{
				this._IssueWirings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_MDFWiring", Storage="_MDFWiring", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public MDFWiring MDFWiring
		{
			get
			{
				return this._MDFWiring.Entity;
			}
			set
			{
				MDFWiring previousValue = this._MDFWiring.Entity;
				if (((previousValue != value) 
							|| (this._MDFWiring.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MDFWiring.Entity = null;
						previousValue.Request = null;
					}
					this._MDFWiring.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("MDFWiring");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Mortgage", Storage="_Mortgages", ThisKey="ID", OtherKey="MortgageRequestID")]
		public EntitySet<Mortgage> Mortgages
		{
			get
			{
				return this._Mortgages;
			}
			set
			{
				this._Mortgages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Mortgage1", Storage="_Mortgages1", ThisKey="ID", OtherKey="MortgageReleseRequestID")]
		public EntitySet<Mortgage> Mortgages1
		{
			get
			{
				return this._Mortgages1;
			}
			set
			{
				this._Mortgages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_NetworkWiring", Storage="_NetworkWiring", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public NetworkWiring NetworkWiring
		{
			get
			{
				return this._NetworkWiring.Entity;
			}
			set
			{
				NetworkWiring previousValue = this._NetworkWiring.Entity;
				if (((previousValue != value) 
							|| (this._NetworkWiring.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NetworkWiring.Entity = null;
						previousValue.Request = null;
					}
					this._NetworkWiring.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("NetworkWiring");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_PowerOffice", Storage="_PowerOffices", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<PowerOffice> PowerOffices
		{
			get
			{
				return this._PowerOffices;
			}
			set
			{
				this._PowerOffices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ReferenceDocument", Storage="_ReferenceDocuments", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<ReferenceDocument> ReferenceDocuments
		{
			get
			{
				return this._ReferenceDocuments;
			}
			set
			{
				this._ReferenceDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RefundDeposit", Storage="_RefundDeposit", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public RefundDeposit RefundDeposit
		{
			get
			{
				return this._RefundDeposit.Entity;
			}
			set
			{
				RefundDeposit previousValue = this._RefundDeposit.Entity;
				if (((previousValue != value) 
							|| (this._RefundDeposit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RefundDeposit.Entity = null;
						previousValue.Request = null;
					}
					this._RefundDeposit.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("RefundDeposit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Request", Storage="_Requests", ThisKey="ID", OtherKey="RelatedRequestID")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Request1", Storage="_Requests1", ThisKey="ID", OtherKey="MainRequestID")]
		public EntitySet<Request> Requests1
		{
			get
			{
				return this._Requests1;
			}
			set
			{
				this._Requests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Request2", Storage="_Request4", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Request Request4
		{
			get
			{
				return this._Request4.Entity;
			}
			set
			{
				Request previousValue = this._Request4.Entity;
				if (((previousValue != value) 
							|| (this._Request4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request4.Entity = null;
						previousValue.Request3 = null;
					}
					this._Request4.Entity = value;
					if ((value != null))
					{
						value.Request3 = this;
					}
					this.SendPropertyChanged("Request4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestForm", Storage="_RequestForms", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<RequestForm> RequestForms
		{
			get
			{
				return this._RequestForms;
			}
			set
			{
				this._RequestForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestLog", Storage="_RequestLogs", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<RequestLog> RequestLogs
		{
			get
			{
				return this._RequestLogs;
			}
			set
			{
				this._RequestLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestPayment", Storage="_RequestPayments", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<RequestPayment> RequestPayments
		{
			get
			{
				return this._RequestPayments;
			}
			set
			{
				this._RequestPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SelectTelephone", Storage="_SelectTelephone", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public SelectTelephone SelectTelephone
		{
			get
			{
				return this._SelectTelephone.Entity;
			}
			set
			{
				SelectTelephone previousValue = this._SelectTelephone.Entity;
				if (((previousValue != value) 
							|| (this._SelectTelephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SelectTelephone.Entity = null;
						previousValue.Request = null;
					}
					this._SelectTelephone.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("SelectTelephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpaceAndPower", Storage="_SpaceAndPower", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public SpaceAndPower SpaceAndPower
		{
			get
			{
				return this._SpaceAndPower.Entity;
			}
			set
			{
				SpaceAndPower previousValue = this._SpaceAndPower.Entity;
				if (((previousValue != value) 
							|| (this._SpaceAndPower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpaceAndPower.Entity = null;
						previousValue.Request = null;
					}
					this._SpaceAndPower.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("SpaceAndPower");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialCondition", Storage="_SpecialCondition", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public SpecialCondition SpecialCondition
		{
			get
			{
				return this._SpecialCondition.Entity;
			}
			set
			{
				SpecialCondition previousValue = this._SpecialCondition.Entity;
				if (((previousValue != value) 
							|| (this._SpecialCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialCondition.Entity = null;
						previousValue.Request = null;
					}
					this._SpecialCondition.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("SpecialCondition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialPrivateCable", Storage="_SpecialPrivateCables", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<SpecialPrivateCable> SpecialPrivateCables
		{
			get
			{
				return this._SpecialPrivateCables;
			}
			set
			{
				this._SpecialPrivateCables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialService", Storage="_SpecialService", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public SpecialService SpecialService
		{
			get
			{
				return this._SpecialService.Entity;
			}
			set
			{
				SpecialService previousValue = this._SpecialService.Entity;
				if (((previousValue != value) 
							|| (this._SpecialService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialService.Entity = null;
						previousValue.Request = null;
					}
					this._SpecialService.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("SpecialService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialWire", Storage="_SpecialWire", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public SpecialWire SpecialWire
		{
			get
			{
				return this._SpecialWire.Entity;
			}
			set
			{
				SpecialWire previousValue = this._SpecialWire.Entity;
				if (((previousValue != value) 
							|| (this._SpecialWire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialWire.Entity = null;
						previousValue.Request = null;
					}
					this._SpecialWire.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("SpecialWire");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialWirePoint", Storage="_SpecialWirePoints", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<SpecialWirePoint> SpecialWirePoints
		{
			get
			{
				return this._SpecialWirePoints;
			}
			set
			{
				this._SpecialWirePoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_StatusLog", Storage="_StatusLogs", ThisKey="ID", OtherKey="ReqeustID")]
		public EntitySet<StatusLog> StatusLogs
		{
			get
			{
				return this._StatusLogs;
			}
			set
			{
				this._StatusLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SubFlowStatus", Storage="_SubFlowStatus", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<SubFlowStatus> SubFlowStatus
		{
			get
			{
				return this._SubFlowStatus;
			}
			set
			{
				this._SubFlowStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SwapPCM", Storage="_SwapPCM", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public SwapPCM SwapPCM
		{
			get
			{
				return this._SwapPCM.Entity;
			}
			set
			{
				SwapPCM previousValue = this._SwapPCM.Entity;
				if (((previousValue != value) 
							|| (this._SwapPCM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwapPCM.Entity = null;
						previousValue.Request = null;
					}
					this._SwapPCM.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("SwapPCM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SwapTelephone", Storage="_SwapTelephone", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public SwapTelephone SwapTelephone
		{
			get
			{
				return this._SwapTelephone.Entity;
			}
			set
			{
				SwapTelephone previousValue = this._SwapTelephone.Entity;
				if (((previousValue != value) 
							|| (this._SwapTelephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwapTelephone.Entity = null;
						previousValue.Request = null;
					}
					this._SwapTelephone.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("SwapTelephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SwitchOffice", Storage="_SwitchOffices", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<SwitchOffice> SwitchOffices
		{
			get
			{
				return this._SwitchOffices;
			}
			set
			{
				this._SwitchOffices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SwitchTransition", Storage="_SwitchTransitions", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<SwitchTransition> SwitchTransitions
		{
			get
			{
				return this._SwitchTransitions;
			}
			set
			{
				this._SwitchTransitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TakePossession", Storage="_TakePossession", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public TakePossession TakePossession
		{
			get
			{
				return this._TakePossession.Entity;
			}
			set
			{
				TakePossession previousValue = this._TakePossession.Entity;
				if (((previousValue != value) 
							|| (this._TakePossession.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TakePossession.Entity = null;
						previousValue.Request = null;
					}
					this._TakePossession.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("TakePossession");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TitleIn118", Storage="_TitleIn118", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public TitleIn118 TitleIn118
		{
			get
			{
				return this._TitleIn118.Entity;
			}
			set
			{
				TitleIn118 previousValue = this._TitleIn118.Entity;
				if (((previousValue != value) 
							|| (this._TitleIn118.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TitleIn118.Entity = null;
						previousValue.Request = null;
					}
					this._TitleIn118.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("TitleIn118");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TransferDepartmentOffice", Storage="_TransferDepartmentOffices", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<TransferDepartmentOffice> TransferDepartmentOffices
		{
			get
			{
				return this._TransferDepartmentOffices;
			}
			set
			{
				this._TransferDepartmentOffices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TransferFileInfo", Storage="_TransferFileInfo", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public TransferFileInfo TransferFileInfo
		{
			get
			{
				return this._TransferFileInfo.Entity;
			}
			set
			{
				TransferFileInfo previousValue = this._TransferFileInfo.Entity;
				if (((previousValue != value) 
							|| (this._TransferFileInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransferFileInfo.Entity = null;
						previousValue.Request = null;
					}
					this._TransferFileInfo.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("TransferFileInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationOpticalCabinetToNormal", Storage="_TranslationOpticalCabinetToNormal", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public TranslationOpticalCabinetToNormal TranslationOpticalCabinetToNormal
		{
			get
			{
				return this._TranslationOpticalCabinetToNormal.Entity;
			}
			set
			{
				TranslationOpticalCabinetToNormal previousValue = this._TranslationOpticalCabinetToNormal.Entity;
				if (((previousValue != value) 
							|| (this._TranslationOpticalCabinetToNormal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TranslationOpticalCabinetToNormal.Entity = null;
						previousValue.Request = null;
					}
					this._TranslationOpticalCabinetToNormal.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("TranslationOpticalCabinetToNormal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationOpticalCabinetToNormalConncetion", Storage="_TranslationOpticalCabinetToNormalConncetions", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationOpticalCabinetToNormalTelephone", Storage="_TranslationOpticalCabinetToNormalTelephones", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<TranslationOpticalCabinetToNormalTelephone> TranslationOpticalCabinetToNormalTelephones
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalTelephones;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalTelephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationPCMToNormal", Storage="_TranslationPCMToNormal", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public TranslationPCMToNormal TranslationPCMToNormal
		{
			get
			{
				return this._TranslationPCMToNormal.Entity;
			}
			set
			{
				TranslationPCMToNormal previousValue = this._TranslationPCMToNormal.Entity;
				if (((previousValue != value) 
							|| (this._TranslationPCMToNormal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TranslationPCMToNormal.Entity = null;
						previousValue.Request = null;
					}
					this._TranslationPCMToNormal.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("TranslationPCMToNormal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationPost", Storage="_TranslationPost", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public TranslationPost TranslationPost
		{
			get
			{
				return this._TranslationPost.Entity;
			}
			set
			{
				TranslationPost previousValue = this._TranslationPost.Entity;
				if (((previousValue != value) 
							|| (this._TranslationPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TranslationPost.Entity = null;
						previousValue.Request = null;
					}
					this._TranslationPost.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("TranslationPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationPostInput", Storage="_TranslationPostInput", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public TranslationPostInput TranslationPostInput
		{
			get
			{
				return this._TranslationPostInput.Entity;
			}
			set
			{
				TranslationPostInput previousValue = this._TranslationPostInput.Entity;
				if (((previousValue != value) 
							|| (this._TranslationPostInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TranslationPostInput.Entity = null;
						previousValue.Request = null;
					}
					this._TranslationPostInput.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("TranslationPostInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationPostInputConnection", Storage="_TranslationPostInputConnections", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<TranslationPostInputConnection> TranslationPostInputConnections
		{
			get
			{
				return this._TranslationPostInputConnections;
			}
			set
			{
				this._TranslationPostInputConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_VacateE1", Storage="_VacateE1s", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<VacateE1> VacateE1s
		{
			get
			{
				return this._VacateE1s;
			}
			set
			{
				this._VacateE1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_VacateSpecialWire", Storage="_VacateSpecialWire", ThisKey="ID", OtherKey="RequestID", IsUnique=true, IsForeignKey=false)]
		public VacateSpecialWire VacateSpecialWire
		{
			get
			{
				return this._VacateSpecialWire.Entity;
			}
			set
			{
				VacateSpecialWire previousValue = this._VacateSpecialWire.Entity;
				if (((previousValue != value) 
							|| (this._VacateSpecialWire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VacateSpecialWire.Entity = null;
						previousValue.Request = null;
					}
					this._VacateSpecialWire.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("VacateSpecialWire");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_VacateSpecialWirePoint", Storage="_VacateSpecialWirePoints", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<VacateSpecialWirePoint> VacateSpecialWirePoints
		{
			get
			{
				return this._VacateSpecialWirePoints;
			}
			set
			{
				this._VacateSpecialWirePoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_VisitAddress", Storage="_VisitAddresses", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<VisitAddress> VisitAddresses
		{
			get
			{
				return this._VisitAddresses;
			}
			set
			{
				this._VisitAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WaitingList", Storage="_WaitingLists", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<WaitingList> WaitingLists
		{
			get
			{
				return this._WaitingLists;
			}
			set
			{
				this._WaitingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Wireless", Storage="_Wireless", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Wireless Wireless
		{
			get
			{
				return this._Wireless.Entity;
			}
			set
			{
				Wireless previousValue = this._Wireless.Entity;
				if (((previousValue != value) 
							|| (this._Wireless.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wireless.Entity = null;
						previousValue.Request = null;
					}
					this._Wireless.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("Wireless");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WirelessChangeService", Storage="_WirelessChangeService", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public WirelessChangeService WirelessChangeService
		{
			get
			{
				return this._WirelessChangeService.Entity;
			}
			set
			{
				WirelessChangeService previousValue = this._WirelessChangeService.Entity;
				if (((previousValue != value) 
							|| (this._WirelessChangeService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WirelessChangeService.Entity = null;
						previousValue.Request = null;
					}
					this._WirelessChangeService.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("WirelessChangeService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WirelessRequest", Storage="_WirelessRequest", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public WirelessRequest WirelessRequest
		{
			get
			{
				return this._WirelessRequest.Entity;
			}
			set
			{
				WirelessRequest previousValue = this._WirelessRequest.Entity;
				if (((previousValue != value) 
							|| (this._WirelessRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WirelessRequest.Entity = null;
						previousValue.Request = null;
					}
					this._WirelessRequest.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("WirelessRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WirelessSellTraffic", Storage="_WirelessSellTraffic", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public WirelessSellTraffic WirelessSellTraffic
		{
			get
			{
				return this._WirelessSellTraffic.Entity;
			}
			set
			{
				WirelessSellTraffic previousValue = this._WirelessSellTraffic.Entity;
				if (((previousValue != value) 
							|| (this._WirelessSellTraffic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WirelessSellTraffic.Entity = null;
						previousValue.Request = null;
					}
					this._WirelessSellTraffic.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("WirelessSellTraffic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Wiring", Storage="_Wirings", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<Wiring> Wirings
		{
			get
			{
				return this._Wirings;
			}
			set
			{
				this._Wirings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WorkFlowLog", Storage="_WorkFlowLogs", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<WorkFlowLog> WorkFlowLogs
		{
			get
			{
				return this._WorkFlowLogs;
			}
			set
			{
				this._WorkFlowLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeGSM", Storage="_ExchangeGSM", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ExchangeGSM ExchangeGSM
		{
			get
			{
				return this._ExchangeGSM.Entity;
			}
			set
			{
				ExchangeGSM previousValue = this._ExchangeGSM.Entity;
				if (((previousValue != value) 
							|| (this._ExchangeGSM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExchangeGSM.Entity = null;
						previousValue.Request = null;
					}
					this._ExchangeGSM.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ExchangeGSM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TelecomminucationServicePayment", Storage="_TelecomminucationServicePayments", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<TelecomminucationServicePayment> TelecomminucationServicePayments
		{
			get
			{
				return this._TelecomminucationServicePayments;
			}
			set
			{
				this._TelecomminucationServicePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ZeroStatus", Storage="_ZeroStatus", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ZeroStatus ZeroStatus
		{
			get
			{
				return this._ZeroStatus.Entity;
			}
			set
			{
				ZeroStatus previousValue = this._ZeroStatus.Entity;
				if (((previousValue != value) 
							|| (this._ZeroStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZeroStatus.Entity = null;
						previousValue.Request = null;
					}
					this._ZeroStatus.Entity = value;
					if ((value != null))
					{
						value.Request = this;
					}
					this.SendPropertyChanged("ZeroStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_InstallRequest", Storage="_InstallRequests", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<InstallRequest> InstallRequests
		{
			get
			{
				return this._InstallRequests;
			}
			set
			{
				this._InstallRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Request", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Request", Storage="_Request1", ThisKey="RelatedRequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request1
		{
			get
			{
				return this._Request1.Entity;
			}
			set
			{
				Request previousValue = this._Request1.Entity;
				if (((previousValue != value) 
							|| (this._Request1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request1.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._Request1.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._RelatedRequestID = value.ID;
					}
					else
					{
						this._RelatedRequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Request1", Storage="_Request2", ThisKey="MainRequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request2
		{
			get
			{
				return this._Request2.Entity;
			}
			set
			{
				Request previousValue = this._Request2.Entity;
				if (((previousValue != value) 
							|| (this._Request2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request2.Entity = null;
						previousValue.Requests1.Remove(this);
					}
					this._Request2.Entity = value;
					if ((value != null))
					{
						value.Requests1.Add(this);
						this._MainRequestID = value.ID;
					}
					else
					{
						this._MainRequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Request2", Storage="_Request3", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request3
		{
			get
			{
				return this._Request3.Entity;
			}
			set
			{
				Request previousValue = this._Request3.Entity;
				if (((previousValue != value) 
							|| (this._Request3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request3.Entity = null;
						previousValue.Request4 = null;
					}
					this._Request3.Entity = value;
					if ((value != null))
					{
						value.Request4 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_Request", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(int);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Request", Storage="_Status", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_Request", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Request", Storage="_User", ThisKey="CreatorUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._CreatorUserID = value.ID;
					}
					else
					{
						this._CreatorUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Request1", Storage="_User1", ThisKey="ModifyUserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Requests1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Requests1.Add(this);
						this._ModifyUserID = value.ID;
					}
					else
					{
						this._ModifyUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Request", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLSellerAgentUserCredits(ADSLSellerAgentUserCredit entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_ADSLSellerAgentUserCredits(ADSLSellerAgentUserCredit entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_ADSLSetupContactInformations(ADSLSetupContactInformation entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_ADSLSetupContactInformations(ADSLSetupContactInformation entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_CableDesignOffices(CableDesignOffice entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_CableDesignOffices(CableDesignOffice entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_CenterToCenterTranslationPCMs(CenterToCenterTranslationPCM entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_CenterToCenterTranslationPCMs(CenterToCenterTranslationPCM entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_CenterToCenterTranslationTelephones(CenterToCenterTranslationTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_CenterToCenterTranslationTelephones(CenterToCenterTranslationTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_E1Links(E1Link entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_ExchangeBrokenPCMs(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_ExchangeBrokenPCMs(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_ExchangeCentralCableMDFConncetions(ExchangeCentralCableMDFConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_ExchangeCentralCableMDFConncetions(ExchangeCentralCableMDFConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_ExchangeTelephoneNos(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_ExchangeTelephoneNos(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_Inquiries(Inquiry entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_Inquiries(Inquiry entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_InvestigatePossibilities(InvestigatePossibility entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_InvestigatePossibilities(InvestigatePossibility entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_IssueWirings(IssueWiring entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_IssueWirings(IssueWiring entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_Mortgages(Mortgage entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_Mortgages(Mortgage entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_Mortgages1(Mortgage entity)
		{
			this.SendPropertyChanging();
			entity.Request1 = this;
		}
		
		private void detach_Mortgages1(Mortgage entity)
		{
			this.SendPropertyChanging();
			entity.Request1 = null;
		}
		
		private void attach_PowerOffices(PowerOffice entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_PowerOffices(PowerOffice entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_ReferenceDocuments(ReferenceDocument entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_ReferenceDocuments(ReferenceDocument entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Request1 = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Request1 = null;
		}
		
		private void attach_Requests1(Request entity)
		{
			this.SendPropertyChanging();
			entity.Request2 = this;
		}
		
		private void detach_Requests1(Request entity)
		{
			this.SendPropertyChanging();
			entity.Request2 = null;
		}
		
		private void attach_RequestForms(RequestForm entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_RequestForms(RequestForm entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_RequestLogs(RequestLog entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_RequestLogs(RequestLog entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_RequestPayments(RequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_SpecialPrivateCables(SpecialPrivateCable entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_SpecialPrivateCables(SpecialPrivateCable entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_SpecialWirePoints(SpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_SpecialWirePoints(SpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_StatusLogs(StatusLog entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_StatusLogs(StatusLog entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_SubFlowStatus(SubFlowStatus entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_SubFlowStatus(SubFlowStatus entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_SwitchOffices(SwitchOffice entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_SwitchOffices(SwitchOffice entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_SwitchTransitions(SwitchTransition entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_SwitchTransitions(SwitchTransition entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_TransferDepartmentOffices(TransferDepartmentOffice entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_TransferDepartmentOffices(TransferDepartmentOffice entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalTelephones(TranslationOpticalCabinetToNormalTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalTelephones(TranslationOpticalCabinetToNormalTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_TranslationPostInputConnections(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_TranslationPostInputConnections(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_VacateE1s(VacateE1 entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_VacateE1s(VacateE1 entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_VacateSpecialWirePoints(VacateSpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_VacateSpecialWirePoints(VacateSpecialWirePoint entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_VisitAddresses(VisitAddress entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_VisitAddresses(VisitAddress entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_WaitingLists(WaitingList entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_WaitingLists(WaitingList entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_WorkFlowLogs(WorkFlowLog entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_WorkFlowLogs(WorkFlowLog entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_TelecomminucationServicePayments(TelecomminucationServicePayment entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_TelecomminucationServicePayments(TelecomminucationServicePayment entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestActionLog")]
	public partial class RequestActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _ActionID;
		
		private int _StateID;
		
		private int _PreviousStateID;
		
		private System.Guid _UserID;
		
		private int _WorkUnitID;
		
		private System.DateTime _InsertDate;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnPreviousStateIDChanging(int value);
    partial void OnPreviousStateIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnWorkUnitIDChanging(int value);
    partial void OnWorkUnitIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public RequestActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int NOT NULL")]
		public int ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousStateID", DbType="Int NOT NULL")]
		public int PreviousStateID
		{
			get
			{
				return this._PreviousStateID;
			}
			set
			{
				if ((this._PreviousStateID != value))
				{
					this.OnPreviousStateIDChanging(value);
					this.SendPropertyChanging();
					this._PreviousStateID = value;
					this.SendPropertyChanged("PreviousStateID");
					this.OnPreviousStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkUnitID", DbType="Int NOT NULL")]
		public int WorkUnitID
		{
			get
			{
				return this._WorkUnitID;
			}
			set
			{
				if ((this._WorkUnitID != value))
				{
					this.OnWorkUnitIDChanging(value);
					this.SendPropertyChanging();
					this._WorkUnitID = value;
					this.SendPropertyChanged("WorkUnitID");
					this.OnWorkUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestDocument")]
	public partial class RequestDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _CustomerID;
		
		private long _DocumentRequestTypeID;
		
		private string _DocumentNo;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private string _IssuingOffice;
		
		private string _IssuingRole;
		
		private System.Nullable<System.DateTime> _ValidToDate;
		
		private System.Data.Linq.Binary _ContentFile;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.Guid> _DocumentsFileID;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<ReferenceDocument> _ReferenceDocuments;
		
		private EntityRef<DocumentRequestType> _DocumentRequestType;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(long value);
    partial void OnCustomerIDChanged();
    partial void OnDocumentRequestTypeIDChanging(long value);
    partial void OnDocumentRequestTypeIDChanged();
    partial void OnDocumentNoChanging(string value);
    partial void OnDocumentNoChanged();
    partial void OnDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentDateChanged();
    partial void OnIssuingOfficeChanging(string value);
    partial void OnIssuingOfficeChanged();
    partial void OnIssuingRoleChanging(string value);
    partial void OnIssuingRoleChanged();
    partial void OnValidToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnValidToDateChanged();
    partial void OnContentFileChanging(System.Data.Linq.Binary value);
    partial void OnContentFileChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnDocumentsFileIDChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentsFileIDChanged();
    #endregion
		
		public RequestDocument()
		{
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._ReferenceDocuments = new EntitySet<ReferenceDocument>(new Action<ReferenceDocument>(this.attach_ReferenceDocuments), new Action<ReferenceDocument>(this.detach_ReferenceDocuments));
			this._DocumentRequestType = default(EntityRef<DocumentRequestType>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt NOT NULL")]
		public long CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRequestTypeID", DbType="BigInt NOT NULL")]
		public long DocumentRequestTypeID
		{
			get
			{
				return this._DocumentRequestTypeID;
			}
			set
			{
				if ((this._DocumentRequestTypeID != value))
				{
					if (this._DocumentRequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentRequestTypeID = value;
					this.SendPropertyChanged("DocumentRequestTypeID");
					this.OnDocumentRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="NVarChar(20)")]
		public string DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this.OnDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentDate = value;
					this.SendPropertyChanged("DocumentDate");
					this.OnDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuingOffice", DbType="NVarChar(500)")]
		public string IssuingOffice
		{
			get
			{
				return this._IssuingOffice;
			}
			set
			{
				if ((this._IssuingOffice != value))
				{
					this.OnIssuingOfficeChanging(value);
					this.SendPropertyChanging();
					this._IssuingOffice = value;
					this.SendPropertyChanged("IssuingOffice");
					this.OnIssuingOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuingRole", DbType="NVarChar(50)")]
		public string IssuingRole
		{
			get
			{
				return this._IssuingRole;
			}
			set
			{
				if ((this._IssuingRole != value))
				{
					this.OnIssuingRoleChanging(value);
					this.SendPropertyChanging();
					this._IssuingRole = value;
					this.SendPropertyChanged("IssuingRole");
					this.OnIssuingRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidToDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ValidToDate
		{
			get
			{
				return this._ValidToDate;
			}
			set
			{
				if ((this._ValidToDate != value))
				{
					this.OnValidToDateChanging(value);
					this.SendPropertyChanging();
					this._ValidToDate = value;
					this.SendPropertyChanged("ValidToDate");
					this.OnValidToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentFile", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ContentFile
		{
			get
			{
				return this._ContentFile;
			}
			set
			{
				if ((this._ContentFile != value))
				{
					this.OnContentFileChanging(value);
					this.SendPropertyChanging();
					this._ContentFile = value;
					this.SendPropertyChanged("ContentFile");
					this.OnContentFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentsFileID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentsFileID
		{
			get
			{
				return this._DocumentsFileID;
			}
			set
			{
				if ((this._DocumentsFileID != value))
				{
					this.OnDocumentsFileIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentsFileID = value;
					this.SendPropertyChanged("DocumentsFileID");
					this.OnDocumentsFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestDocument_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="RequestDocumentID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestDocument_ReferenceDocument", Storage="_ReferenceDocuments", ThisKey="ID", OtherKey="RequestDocumentID")]
		public EntitySet<ReferenceDocument> ReferenceDocuments
		{
			get
			{
				return this._ReferenceDocuments;
			}
			set
			{
				this._ReferenceDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentRequestType_RequestDocument", Storage="_DocumentRequestType", ThisKey="DocumentRequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public DocumentRequestType DocumentRequestType
		{
			get
			{
				return this._DocumentRequestType.Entity;
			}
			set
			{
				DocumentRequestType previousValue = this._DocumentRequestType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentRequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentRequestType.Entity = null;
						previousValue.RequestDocuments.Remove(this);
					}
					this._DocumentRequestType.Entity = value;
					if ((value != null))
					{
						value.RequestDocuments.Add(this);
						this._DocumentRequestTypeID = value.ID;
					}
					else
					{
						this._DocumentRequestTypeID = default(long);
					}
					this.SendPropertyChanged("DocumentRequestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_RequestDocument", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.RequestDocuments.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.RequestDocuments.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(long);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.RequestDocument = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.RequestDocument = null;
		}
		
		private void attach_ReferenceDocuments(ReferenceDocument entity)
		{
			this.SendPropertyChanging();
			entity.RequestDocument = this;
		}
		
		private void detach_ReferenceDocuments(ReferenceDocument entity)
		{
			this.SendPropertyChanging();
			entity.RequestDocument = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestForm")]
	public partial class RequestForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _RequestID;
		
		private int _FormID;
		
		private System.Data.Linq.Binary _file_stream;
		
		private string _name;
		
		private EntityRef<FormTemplate> _FormTemplate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnFormIDChanging(int value);
    partial void OnFormIDChanged();
    partial void Onfile_streamChanging(System.Data.Linq.Binary value);
    partial void Onfile_streamChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public RequestForm()
		{
			this._FormTemplate = default(EntityRef<FormTemplate>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int NOT NULL")]
		public int FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					if (this._FormTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_stream", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary file_stream
		{
			get
			{
				return this._file_stream;
			}
			set
			{
				if ((this._file_stream != value))
				{
					this.Onfile_streamChanging(value);
					this.SendPropertyChanging();
					this._file_stream = value;
					this.SendPropertyChanged("file_stream");
					this.Onfile_streamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormTemplate_RequestForm", Storage="_FormTemplate", ThisKey="FormID", OtherKey="ID", IsForeignKey=true)]
		public FormTemplate FormTemplate
		{
			get
			{
				return this._FormTemplate.Entity;
			}
			set
			{
				FormTemplate previousValue = this._FormTemplate.Entity;
				if (((previousValue != value) 
							|| (this._FormTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormTemplate.Entity = null;
						previousValue.RequestForms.Remove(this);
					}
					this._FormTemplate.Entity = value;
					if ((value != null))
					{
						value.RequestForms.Add(this);
						this._FormID = value.ID;
					}
					else
					{
						this._FormID = default(int);
					}
					this.SendPropertyChanged("FormTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestForm", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RequestForms.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RequestForms.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestLog")]
	public partial class RequestLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RequestID;
		
		private int _RequestTypeID;
		
		private System.Nullable<byte> _LogType;
		
		private bool _IsReject;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<long> _ToTelephoneNo;
		
		private string _CustomerID;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Xml.Linq.XElement _Description;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<RequestType> _RequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnLogTypeChanging(System.Nullable<byte> value);
    partial void OnLogTypeChanged();
    partial void OnIsRejectChanging(bool value);
    partial void OnIsRejectChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnToTelephoneNoChanging(System.Nullable<long> value);
    partial void OnToTelephoneNoChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(System.Xml.Linq.XElement value);
    partial void OnDescriptionChanged();
    #endregion
		
		public RequestLog()
		{
			this._Request = default(EntityRef<Request>);
			this._RequestType = default(EntityRef<RequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="TinyInt")]
		public System.Nullable<byte> LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReject", DbType="Bit NOT NULL")]
		public bool IsReject
		{
			get
			{
				return this._IsReject;
			}
			set
			{
				if ((this._IsReject != value))
				{
					this.OnIsRejectChanging(value);
					this.SendPropertyChanging();
					this._IsReject = value;
					this.SendPropertyChanged("IsReject");
					this.OnIsRejectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> ToTelephoneNo
		{
			get
			{
				return this._ToTelephoneNo;
			}
			set
			{
				if ((this._ToTelephoneNo != value))
				{
					this.OnToTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ToTelephoneNo = value;
					this.SendPropertyChanged("ToTelephoneNo");
					this.OnToTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Char(15)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestLog", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RequestLogs.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RequestLogs.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_RequestLog", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.RequestLogs.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.RequestLogs.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(int);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestPayment")]
	public partial class RequestPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RelatedRequestPaymentID;
		
		private long _RequestID;
		
		private System.Nullable<int> _BaseCostID;
		
		private System.Nullable<int> _OtherCostID;
		
		private System.Nullable<byte> _PaymentWay;
		
		private System.Nullable<int> _BankID;
		
		private System.Nullable<int> _BankBranchID;
		
		private byte _PaymentType;
		
		private System.Nullable<long> _Cost;
		
		private System.Nullable<int> _Abonman;
		
		private System.Nullable<int> _Tax;
		
		private System.Nullable<long> _AmountSum;
		
		private System.Nullable<long> _PaymentFicheID;
		
		private string _FicheNunmber;
		
		private System.Nullable<System.DateTime> _FicheDate;
		
		private string _RecieverPostOfficeCode;
		
		private string _RecieverPostOfficeRecordNo;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _IsPaid;
		
		private System.Nullable<bool> _IsAccepted;
		
		private System.DateTime _InsertDate;
		
		private string _AccountNo;
		
		private System.Nullable<bool> _IsKickedBack;
		
		private string _BillID;
		
		private string _PaymentID;
		
		private string _OrderID;
		
		private System.Nullable<System.Guid> _DocumentsFileID;
		
		private System.Nullable<int> _FactorNumber;
		
		private EntitySet<InstallmentRequestPayment> _InstallmentRequestPayments;
		
		private EntitySet<TelephoneConnectionInstallment> _TelephoneConnectionInstallments;
		
		private EntityRef<Bank> _Bank;
		
		private EntityRef<BankBranch> _BankBranch;
		
		private EntityRef<BaseCost> _BaseCost;
		
		private EntityRef<PaymentFiche> _PaymentFiche;
		
		private EntityRef<OtherCost> _OtherCost;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRelatedRequestPaymentIDChanging(System.Nullable<long> value);
    partial void OnRelatedRequestPaymentIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnBaseCostIDChanging(System.Nullable<int> value);
    partial void OnBaseCostIDChanged();
    partial void OnOtherCostIDChanging(System.Nullable<int> value);
    partial void OnOtherCostIDChanged();
    partial void OnPaymentWayChanging(System.Nullable<byte> value);
    partial void OnPaymentWayChanged();
    partial void OnBankIDChanging(System.Nullable<int> value);
    partial void OnBankIDChanged();
    partial void OnBankBranchIDChanging(System.Nullable<int> value);
    partial void OnBankBranchIDChanged();
    partial void OnPaymentTypeChanging(byte value);
    partial void OnPaymentTypeChanged();
    partial void OnCostChanging(System.Nullable<long> value);
    partial void OnCostChanged();
    partial void OnAbonmanChanging(System.Nullable<int> value);
    partial void OnAbonmanChanged();
    partial void OnTaxChanging(System.Nullable<int> value);
    partial void OnTaxChanged();
    partial void OnAmountSumChanging(System.Nullable<long> value);
    partial void OnAmountSumChanged();
    partial void OnPaymentFicheIDChanging(System.Nullable<long> value);
    partial void OnPaymentFicheIDChanged();
    partial void OnFicheNunmberChanging(string value);
    partial void OnFicheNunmberChanged();
    partial void OnFicheDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFicheDateChanged();
    partial void OnRecieverPostOfficeCodeChanging(string value);
    partial void OnRecieverPostOfficeCodeChanged();
    partial void OnRecieverPostOfficeRecordNoChanging(string value);
    partial void OnRecieverPostOfficeRecordNoChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnIsAcceptedChanging(System.Nullable<bool> value);
    partial void OnIsAcceptedChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnIsKickedBackChanging(System.Nullable<bool> value);
    partial void OnIsKickedBackChanged();
    partial void OnBillIDChanging(string value);
    partial void OnBillIDChanged();
    partial void OnPaymentIDChanging(string value);
    partial void OnPaymentIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnDocumentsFileIDChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentsFileIDChanged();
    partial void OnFactorNumberChanging(System.Nullable<int> value);
    partial void OnFactorNumberChanged();
    #endregion
		
		public RequestPayment()
		{
			this._InstallmentRequestPayments = new EntitySet<InstallmentRequestPayment>(new Action<InstallmentRequestPayment>(this.attach_InstallmentRequestPayments), new Action<InstallmentRequestPayment>(this.detach_InstallmentRequestPayments));
			this._TelephoneConnectionInstallments = new EntitySet<TelephoneConnectionInstallment>(new Action<TelephoneConnectionInstallment>(this.attach_TelephoneConnectionInstallments), new Action<TelephoneConnectionInstallment>(this.detach_TelephoneConnectionInstallments));
			this._Bank = default(EntityRef<Bank>);
			this._BankBranch = default(EntityRef<BankBranch>);
			this._BaseCost = default(EntityRef<BaseCost>);
			this._PaymentFiche = default(EntityRef<PaymentFiche>);
			this._OtherCost = default(EntityRef<OtherCost>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedRequestPaymentID", DbType="BigInt")]
		public System.Nullable<long> RelatedRequestPaymentID
		{
			get
			{
				return this._RelatedRequestPaymentID;
			}
			set
			{
				if ((this._RelatedRequestPaymentID != value))
				{
					this.OnRelatedRequestPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedRequestPaymentID = value;
					this.SendPropertyChanged("RelatedRequestPaymentID");
					this.OnRelatedRequestPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCostID", DbType="Int")]
		public System.Nullable<int> BaseCostID
		{
			get
			{
				return this._BaseCostID;
			}
			set
			{
				if ((this._BaseCostID != value))
				{
					if (this._BaseCost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseCostIDChanging(value);
					this.SendPropertyChanging();
					this._BaseCostID = value;
					this.SendPropertyChanged("BaseCostID");
					this.OnBaseCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCostID", DbType="Int")]
		public System.Nullable<int> OtherCostID
		{
			get
			{
				return this._OtherCostID;
			}
			set
			{
				if ((this._OtherCostID != value))
				{
					if (this._OtherCost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherCostIDChanging(value);
					this.SendPropertyChanging();
					this._OtherCostID = value;
					this.SendPropertyChanged("OtherCostID");
					this.OnOtherCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentWay", DbType="TinyInt")]
		public System.Nullable<byte> PaymentWay
		{
			get
			{
				return this._PaymentWay;
			}
			set
			{
				if ((this._PaymentWay != value))
				{
					this.OnPaymentWayChanging(value);
					this.SendPropertyChanging();
					this._PaymentWay = value;
					this.SendPropertyChanged("PaymentWay");
					this.OnPaymentWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBranchID", DbType="Int")]
		public System.Nullable<int> BankBranchID
		{
			get
			{
				return this._BankBranchID;
			}
			set
			{
				if ((this._BankBranchID != value))
				{
					if (this._BankBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BankBranchID = value;
					this.SendPropertyChanged("BankBranchID");
					this.OnBankBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="TinyInt NOT NULL")]
		public byte PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt")]
		public System.Nullable<long> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abonman", DbType="Int")]
		public System.Nullable<int> Abonman
		{
			get
			{
				return this._Abonman;
			}
			set
			{
				if ((this._Abonman != value))
				{
					this.OnAbonmanChanging(value);
					this.SendPropertyChanging();
					this._Abonman = value;
					this.SendPropertyChanged("Abonman");
					this.OnAbonmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Int")]
		public System.Nullable<int> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountSum", DbType="BigInt")]
		public System.Nullable<long> AmountSum
		{
			get
			{
				return this._AmountSum;
			}
			set
			{
				if ((this._AmountSum != value))
				{
					this.OnAmountSumChanging(value);
					this.SendPropertyChanging();
					this._AmountSum = value;
					this.SendPropertyChanged("AmountSum");
					this.OnAmountSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFicheID", DbType="BigInt")]
		public System.Nullable<long> PaymentFicheID
		{
			get
			{
				return this._PaymentFicheID;
			}
			set
			{
				if ((this._PaymentFicheID != value))
				{
					if (this._PaymentFiche.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentFicheIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentFicheID = value;
					this.SendPropertyChanged("PaymentFicheID");
					this.OnPaymentFicheIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicheNunmber", DbType="NVarChar(20)")]
		public string FicheNunmber
		{
			get
			{
				return this._FicheNunmber;
			}
			set
			{
				if ((this._FicheNunmber != value))
				{
					this.OnFicheNunmberChanging(value);
					this.SendPropertyChanging();
					this._FicheNunmber = value;
					this.SendPropertyChanged("FicheNunmber");
					this.OnFicheNunmberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FicheDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FicheDate
		{
			get
			{
				return this._FicheDate;
			}
			set
			{
				if ((this._FicheDate != value))
				{
					this.OnFicheDateChanging(value);
					this.SendPropertyChanging();
					this._FicheDate = value;
					this.SendPropertyChanged("FicheDate");
					this.OnFicheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieverPostOfficeCode", DbType="NVarChar(50)")]
		public string RecieverPostOfficeCode
		{
			get
			{
				return this._RecieverPostOfficeCode;
			}
			set
			{
				if ((this._RecieverPostOfficeCode != value))
				{
					this.OnRecieverPostOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._RecieverPostOfficeCode = value;
					this.SendPropertyChanged("RecieverPostOfficeCode");
					this.OnRecieverPostOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieverPostOfficeRecordNo", DbType="NVarChar(50)")]
		public string RecieverPostOfficeRecordNo
		{
			get
			{
				return this._RecieverPostOfficeRecordNo;
			}
			set
			{
				if ((this._RecieverPostOfficeRecordNo != value))
				{
					this.OnRecieverPostOfficeRecordNoChanging(value);
					this.SendPropertyChanging();
					this._RecieverPostOfficeRecordNo = value;
					this.SendPropertyChanged("RecieverPostOfficeRecordNo");
					this.OnRecieverPostOfficeRecordNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccepted", DbType="Bit")]
		public System.Nullable<bool> IsAccepted
		{
			get
			{
				return this._IsAccepted;
			}
			set
			{
				if ((this._IsAccepted != value))
				{
					this.OnIsAcceptedChanging(value);
					this.SendPropertyChanging();
					this._IsAccepted = value;
					this.SendPropertyChanged("IsAccepted");
					this.OnIsAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="Char(20)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKickedBack", DbType="Bit")]
		public System.Nullable<bool> IsKickedBack
		{
			get
			{
				return this._IsKickedBack;
			}
			set
			{
				if ((this._IsKickedBack != value))
				{
					this.OnIsKickedBackChanging(value);
					this.SendPropertyChanging();
					this._IsKickedBack = value;
					this.SendPropertyChanged("IsKickedBack");
					this.OnIsKickedBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", DbType="NVarChar(50)")]
		public string BillID
		{
			get
			{
				return this._BillID;
			}
			set
			{
				if ((this._BillID != value))
				{
					this.OnBillIDChanging(value);
					this.SendPropertyChanging();
					this._BillID = value;
					this.SendPropertyChanged("BillID");
					this.OnBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="NVarChar(50)")]
		public string PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="NVarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentsFileID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentsFileID
		{
			get
			{
				return this._DocumentsFileID;
			}
			set
			{
				if ((this._DocumentsFileID != value))
				{
					this.OnDocumentsFileIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentsFileID = value;
					this.SendPropertyChanged("DocumentsFileID");
					this.OnDocumentsFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorNumber", DbType="Int")]
		public System.Nullable<int> FactorNumber
		{
			get
			{
				return this._FactorNumber;
			}
			set
			{
				if ((this._FactorNumber != value))
				{
					this.OnFactorNumberChanging(value);
					this.SendPropertyChanging();
					this._FactorNumber = value;
					this.SendPropertyChanged("FactorNumber");
					this.OnFactorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestPayment_InstallmentRequestPayment", Storage="_InstallmentRequestPayments", ThisKey="ID", OtherKey="RequestPaymentID")]
		public EntitySet<InstallmentRequestPayment> InstallmentRequestPayments
		{
			get
			{
				return this._InstallmentRequestPayments;
			}
			set
			{
				this._InstallmentRequestPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestPayment_TelephoneConnectionInstallment", Storage="_TelephoneConnectionInstallments", ThisKey="ID", OtherKey="RequestPaymentID")]
		public EntitySet<TelephoneConnectionInstallment> TelephoneConnectionInstallments
		{
			get
			{
				return this._TelephoneConnectionInstallments;
			}
			set
			{
				this._TelephoneConnectionInstallments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_RequestPayment", Storage="_Bank", ThisKey="BankID", OtherKey="ID", IsForeignKey=true)]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.RequestPayments.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.RequestPayments.Add(this);
						this._BankID = value.ID;
					}
					else
					{
						this._BankID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankBranch_RequestPayment", Storage="_BankBranch", ThisKey="BankBranchID", OtherKey="ID", IsForeignKey=true)]
		public BankBranch BankBranch
		{
			get
			{
				return this._BankBranch.Entity;
			}
			set
			{
				BankBranch previousValue = this._BankBranch.Entity;
				if (((previousValue != value) 
							|| (this._BankBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankBranch.Entity = null;
						previousValue.RequestPayments.Remove(this);
					}
					this._BankBranch.Entity = value;
					if ((value != null))
					{
						value.RequestPayments.Add(this);
						this._BankBranchID = value.ID;
					}
					else
					{
						this._BankBranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaseCost_RequestPayment", Storage="_BaseCost", ThisKey="BaseCostID", OtherKey="ID", IsForeignKey=true)]
		public BaseCost BaseCost
		{
			get
			{
				return this._BaseCost.Entity;
			}
			set
			{
				BaseCost previousValue = this._BaseCost.Entity;
				if (((previousValue != value) 
							|| (this._BaseCost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaseCost.Entity = null;
						previousValue.RequestPayments.Remove(this);
					}
					this._BaseCost.Entity = value;
					if ((value != null))
					{
						value.RequestPayments.Add(this);
						this._BaseCostID = value.ID;
					}
					else
					{
						this._BaseCostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BaseCost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentFiche_RequestPayment", Storage="_PaymentFiche", ThisKey="PaymentFicheID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PaymentFiche PaymentFiche
		{
			get
			{
				return this._PaymentFiche.Entity;
			}
			set
			{
				PaymentFiche previousValue = this._PaymentFiche.Entity;
				if (((previousValue != value) 
							|| (this._PaymentFiche.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentFiche.Entity = null;
						previousValue.RequestPayments.Remove(this);
					}
					this._PaymentFiche.Entity = value;
					if ((value != null))
					{
						value.RequestPayments.Add(this);
						this._PaymentFicheID = value.ID;
					}
					else
					{
						this._PaymentFicheID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentFiche");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OtherCost_RequestPayment", Storage="_OtherCost", ThisKey="OtherCostID", OtherKey="ID", IsForeignKey=true)]
		public OtherCost OtherCost
		{
			get
			{
				return this._OtherCost.Entity;
			}
			set
			{
				OtherCost previousValue = this._OtherCost.Entity;
				if (((previousValue != value) 
							|| (this._OtherCost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OtherCost.Entity = null;
						previousValue.RequestPayments.Remove(this);
					}
					this._OtherCost.Entity = value;
					if ((value != null))
					{
						value.RequestPayments.Add(this);
						this._OtherCostID = value.ID;
					}
					else
					{
						this._OtherCostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OtherCost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestPayment", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RequestPayments.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RequestPayments.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstallmentRequestPayments(InstallmentRequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.RequestPayment = this;
		}
		
		private void detach_InstallmentRequestPayments(InstallmentRequestPayment entity)
		{
			this.SendPropertyChanging();
			entity.RequestPayment = null;
		}
		
		private void attach_TelephoneConnectionInstallments(TelephoneConnectionInstallment entity)
		{
			this.SendPropertyChanging();
			entity.RequestPayment = this;
		}
		
		private void detach_TelephoneConnectionInstallments(TelephoneConnectionInstallment entity)
		{
			this.SendPropertyChanging();
			entity.RequestPayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestRefund")]
	public partial class RequestRefund
	{
		
		private int _ID;
		
		private long _RequestID;
		
		private byte _RefundID;
		
		private System.Nullable<byte> _PaymentWay;
		
		private long _Cost;
		
		private string _ChequeNo;
		
		private System.Nullable<System.DateTime> _ChequeDate;
		
		private System.Nullable<bool> _IsRefund;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _RefundDate;
		
		public RequestRefund()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundID", DbType="TinyInt NOT NULL")]
		public byte RefundID
		{
			get
			{
				return this._RefundID;
			}
			set
			{
				if ((this._RefundID != value))
				{
					this._RefundID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentWay", DbType="TinyInt")]
		public System.Nullable<byte> PaymentWay
		{
			get
			{
				return this._PaymentWay;
			}
			set
			{
				if ((this._PaymentWay != value))
				{
					this._PaymentWay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt NOT NULL")]
		public long Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNo", DbType="NVarChar(50)")]
		public string ChequeNo
		{
			get
			{
				return this._ChequeNo;
			}
			set
			{
				if ((this._ChequeNo != value))
				{
					this._ChequeNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ChequeDate
		{
			get
			{
				return this._ChequeDate;
			}
			set
			{
				if ((this._ChequeDate != value))
				{
					this._ChequeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRefund", DbType="Bit")]
		public System.Nullable<bool> IsRefund
		{
			get
			{
				return this._IsRefund;
			}
			set
			{
				if ((this._IsRefund != value))
				{
					this._IsRefund = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RefundDate
		{
			get
			{
				return this._RefundDate;
			}
			set
			{
				if ((this._RefundDate != value))
				{
					this._RefundDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestRejectReason")]
	public partial class RequestRejectReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RequestStepID;
		
		private string _Description;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<StatusLog> _StatusLogs;
		
		private EntityRef<RequestStep> _RequestStep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestStepIDChanging(System.Nullable<int> value);
    partial void OnRequestStepIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public RequestRejectReason()
		{
			this._StatusLogs = new EntitySet<StatusLog>(new Action<StatusLog>(this.attach_StatusLogs), new Action<StatusLog>(this.detach_StatusLogs));
			this._RequestStep = default(EntityRef<RequestStep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStepID", DbType="Int")]
		public System.Nullable<int> RequestStepID
		{
			get
			{
				return this._RequestStepID;
			}
			set
			{
				if ((this._RequestStepID != value))
				{
					if (this._RequestStep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStepIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStepID = value;
					this.SendPropertyChanged("RequestStepID");
					this.OnRequestStepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestRejectReason_StatusLog", Storage="_StatusLogs", ThisKey="ID", OtherKey="RequestRejectReasonID")]
		public EntitySet<StatusLog> StatusLogs
		{
			get
			{
				return this._StatusLogs;
			}
			set
			{
				this._StatusLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStep_RequestRejectReason", Storage="_RequestStep", ThisKey="RequestStepID", OtherKey="ID", IsForeignKey=true)]
		public RequestStep RequestStep
		{
			get
			{
				return this._RequestStep.Entity;
			}
			set
			{
				RequestStep previousValue = this._RequestStep.Entity;
				if (((previousValue != value) 
							|| (this._RequestStep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestStep.Entity = null;
						previousValue.RequestRejectReasons.Remove(this);
					}
					this._RequestStep.Entity = value;
					if ((value != null))
					{
						value.RequestRejectReasons.Add(this);
						this._RequestStepID = value.ID;
					}
					else
					{
						this._RequestStepID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RequestStep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StatusLogs(StatusLog entity)
		{
			this.SendPropertyChanging();
			entity.RequestRejectReason = this;
		}
		
		private void detach_StatusLogs(StatusLog entity)
		{
			this.SendPropertyChanging();
			entity.RequestRejectReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestStep")]
	public partial class RequestStep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RequestTypeID;
		
		private string _StepTitle;
		
		private System.Nullable<bool> _IsVisible;
		
		private System.Nullable<int> _ReportTemplateID;
		
		private EntitySet<RequestRejectReason> _RequestRejectReasons;
		
		private EntitySet<RoleRequestStep> _RoleRequestSteps;
		
		private EntitySet<Status> _Status;
		
		private EntityRef<RequestType> _RequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnStepTitleChanging(string value);
    partial void OnStepTitleChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    partial void OnReportTemplateIDChanging(System.Nullable<int> value);
    partial void OnReportTemplateIDChanged();
    #endregion
		
		public RequestStep()
		{
			this._RequestRejectReasons = new EntitySet<RequestRejectReason>(new Action<RequestRejectReason>(this.attach_RequestRejectReasons), new Action<RequestRejectReason>(this.detach_RequestRejectReasons));
			this._RoleRequestSteps = new EntitySet<RoleRequestStep>(new Action<RoleRequestStep>(this.attach_RoleRequestSteps), new Action<RoleRequestStep>(this.detach_RoleRequestSteps));
			this._Status = new EntitySet<Status>(new Action<Status>(this.attach_Status), new Action<Status>(this.detach_Status));
			this._RequestType = default(EntityRef<RequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepTitle", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string StepTitle
		{
			get
			{
				return this._StepTitle;
			}
			set
			{
				if ((this._StepTitle != value))
				{
					this.OnStepTitleChanging(value);
					this.SendPropertyChanging();
					this._StepTitle = value;
					this.SendPropertyChanged("StepTitle");
					this.OnStepTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTemplateID", DbType="Int")]
		public System.Nullable<int> ReportTemplateID
		{
			get
			{
				return this._ReportTemplateID;
			}
			set
			{
				if ((this._ReportTemplateID != value))
				{
					this.OnReportTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._ReportTemplateID = value;
					this.SendPropertyChanged("ReportTemplateID");
					this.OnReportTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStep_RequestRejectReason", Storage="_RequestRejectReasons", ThisKey="ID", OtherKey="RequestStepID")]
		public EntitySet<RequestRejectReason> RequestRejectReasons
		{
			get
			{
				return this._RequestRejectReasons;
			}
			set
			{
				this._RequestRejectReasons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStep_RoleRequestStep", Storage="_RoleRequestSteps", ThisKey="ID", OtherKey="RequestStepID")]
		public EntitySet<RoleRequestStep> RoleRequestSteps
		{
			get
			{
				return this._RoleRequestSteps;
			}
			set
			{
				this._RoleRequestSteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStep_Status", Storage="_Status", ThisKey="ID", OtherKey="RequestStepID")]
		public EntitySet<Status> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				this._Status.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_RequestStep", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.RequestSteps.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.RequestSteps.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(int);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestRejectReasons(RequestRejectReason entity)
		{
			this.SendPropertyChanging();
			entity.RequestStep = this;
		}
		
		private void detach_RequestRejectReasons(RequestRejectReason entity)
		{
			this.SendPropertyChanging();
			entity.RequestStep = null;
		}
		
		private void attach_RoleRequestSteps(RoleRequestStep entity)
		{
			this.SendPropertyChanging();
			entity.RequestStep = this;
		}
		
		private void detach_RoleRequestSteps(RoleRequestStep entity)
		{
			this.SendPropertyChanging();
			entity.RequestStep = null;
		}
		
		private void attach_Status(Status entity)
		{
			this.SendPropertyChanging();
			entity.RequestStep = this;
		}
		
		private void detach_Status(Status entity)
		{
			this.SendPropertyChanging();
			entity.RequestStep = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestType")]
	public partial class RequestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private System.Nullable<bool> _IsSpecialService;
		
		private System.DateTime _InsertDate;
		
		private bool _Abonman;
		
		private EntitySet<BaseCost> _BaseCosts;
		
		private EntitySet<DocumentRequestType> _DocumentRequestTypes;
		
		private EntitySet<QuotaDiscount> _QuotaDiscounts;
		
		private EntitySet<Request> _Requests;
		
		private EntitySet<RequestLog> _RequestLogs;
		
		private EntitySet<RequestStep> _RequestSteps;
		
		private EntitySet<TelecomminucationService> _TelecomminucationServices;
		
		private EntitySet<WaitingListReason> _WaitingListReasons;
		
		private EntitySet<WorkFlowRule> _WorkFlowRules;
		
		private EntitySet<InstallRequest> _InstallRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsSpecialServiceChanging(System.Nullable<bool> value);
    partial void OnIsSpecialServiceChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnAbonmanChanging(bool value);
    partial void OnAbonmanChanged();
    #endregion
		
		public RequestType()
		{
			this._BaseCosts = new EntitySet<BaseCost>(new Action<BaseCost>(this.attach_BaseCosts), new Action<BaseCost>(this.detach_BaseCosts));
			this._DocumentRequestTypes = new EntitySet<DocumentRequestType>(new Action<DocumentRequestType>(this.attach_DocumentRequestTypes), new Action<DocumentRequestType>(this.detach_DocumentRequestTypes));
			this._QuotaDiscounts = new EntitySet<QuotaDiscount>(new Action<QuotaDiscount>(this.attach_QuotaDiscounts), new Action<QuotaDiscount>(this.detach_QuotaDiscounts));
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._RequestLogs = new EntitySet<RequestLog>(new Action<RequestLog>(this.attach_RequestLogs), new Action<RequestLog>(this.detach_RequestLogs));
			this._RequestSteps = new EntitySet<RequestStep>(new Action<RequestStep>(this.attach_RequestSteps), new Action<RequestStep>(this.detach_RequestSteps));
			this._TelecomminucationServices = new EntitySet<TelecomminucationService>(new Action<TelecomminucationService>(this.attach_TelecomminucationServices), new Action<TelecomminucationService>(this.detach_TelecomminucationServices));
			this._WaitingListReasons = new EntitySet<WaitingListReason>(new Action<WaitingListReason>(this.attach_WaitingListReasons), new Action<WaitingListReason>(this.detach_WaitingListReasons));
			this._WorkFlowRules = new EntitySet<WorkFlowRule>(new Action<WorkFlowRule>(this.attach_WorkFlowRules), new Action<WorkFlowRule>(this.detach_WorkFlowRules));
			this._InstallRequests = new EntitySet<InstallRequest>(new Action<InstallRequest>(this.attach_InstallRequests), new Action<InstallRequest>(this.detach_InstallRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecialService", DbType="Bit")]
		public System.Nullable<bool> IsSpecialService
		{
			get
			{
				return this._IsSpecialService;
			}
			set
			{
				if ((this._IsSpecialService != value))
				{
					this.OnIsSpecialServiceChanging(value);
					this.SendPropertyChanging();
					this._IsSpecialService = value;
					this.SendPropertyChanged("IsSpecialService");
					this.OnIsSpecialServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abonman", DbType="Bit NOT NULL")]
		public bool Abonman
		{
			get
			{
				return this._Abonman;
			}
			set
			{
				if ((this._Abonman != value))
				{
					this.OnAbonmanChanging(value);
					this.SendPropertyChanging();
					this._Abonman = value;
					this.SendPropertyChanged("Abonman");
					this.OnAbonmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_BaseCost", Storage="_BaseCosts", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<BaseCost> BaseCosts
		{
			get
			{
				return this._BaseCosts;
			}
			set
			{
				this._BaseCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_DocumentRequestType", Storage="_DocumentRequestTypes", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<DocumentRequestType> DocumentRequestTypes
		{
			get
			{
				return this._DocumentRequestTypes;
			}
			set
			{
				this._DocumentRequestTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_QuotaDiscount", Storage="_QuotaDiscounts", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<QuotaDiscount> QuotaDiscounts
		{
			get
			{
				return this._QuotaDiscounts;
			}
			set
			{
				this._QuotaDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_Request", Storage="_Requests", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_RequestLog", Storage="_RequestLogs", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<RequestLog> RequestLogs
		{
			get
			{
				return this._RequestLogs;
			}
			set
			{
				this._RequestLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_RequestStep", Storage="_RequestSteps", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<RequestStep> RequestSteps
		{
			get
			{
				return this._RequestSteps;
			}
			set
			{
				this._RequestSteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_TelecomminucationService", Storage="_TelecomminucationServices", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<TelecomminucationService> TelecomminucationServices
		{
			get
			{
				return this._TelecomminucationServices;
			}
			set
			{
				this._TelecomminucationServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_WaitingListReason", Storage="_WaitingListReasons", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<WaitingListReason> WaitingListReasons
		{
			get
			{
				return this._WaitingListReasons;
			}
			set
			{
				this._WaitingListReasons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_WorkFlowRule", Storage="_WorkFlowRules", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<WorkFlowRule> WorkFlowRules
		{
			get
			{
				return this._WorkFlowRules;
			}
			set
			{
				this._WorkFlowRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_InstallRequest", Storage="_InstallRequests", ThisKey="ID", OtherKey="InstallRequestTypeID")]
		public EntitySet<InstallRequest> InstallRequests
		{
			get
			{
				return this._InstallRequests;
			}
			set
			{
				this._InstallRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaseCosts(BaseCost entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_BaseCosts(BaseCost entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_DocumentRequestTypes(DocumentRequestType entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_DocumentRequestTypes(DocumentRequestType entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_QuotaDiscounts(QuotaDiscount entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_QuotaDiscounts(QuotaDiscount entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_RequestLogs(RequestLog entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_RequestLogs(RequestLog entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_RequestSteps(RequestStep entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_RequestSteps(RequestStep entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_TelecomminucationServices(TelecomminucationService entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_TelecomminucationServices(TelecomminucationService entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_WaitingListReasons(WaitingListReason entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_WaitingListReasons(WaitingListReason entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
		
		private void attach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_InstallRequests(InstallRequest entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Name;
		
		private string _Description;
		
		private byte _Type;
		
		private EntitySet<Resource> _Resources;
		
		private EntitySet<RoleResource> _RoleResources;
		
		private EntityRef<Resource> _Resource1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    #endregion
		
		public Resource()
		{
			this._Resources = new EntitySet<Resource>(new Action<Resource>(this.attach_Resources), new Action<Resource>(this.detach_Resources));
			this._RoleResources = new EntitySet<RoleResource>(new Action<RoleResource>(this.attach_RoleResources), new Action<RoleResource>(this.detach_RoleResources));
			this._Resource1 = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Resource1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(127) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Resource", Storage="_Resources", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Resource> Resources
		{
			get
			{
				return this._Resources;
			}
			set
			{
				this._Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_RoleResource", Storage="_RoleResources", ThisKey="ID", OtherKey="ResourceID")]
		public EntitySet<RoleResource> RoleResources
		{
			get
			{
				return this._RoleResources;
			}
			set
			{
				this._RoleResources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Resource", Storage="_Resource1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Resource Resource1
		{
			get
			{
				return this._Resource1.Entity;
			}
			set
			{
				Resource previousValue = this._Resource1.Entity;
				if (((previousValue != value) 
							|| (this._Resource1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource1.Entity = null;
						previousValue.Resources.Remove(this);
					}
					this._Resource1.Entity = value;
					if ((value != null))
					{
						value.Resources.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Resource1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Resource1 = this;
		}
		
		private void detach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Resource1 = null;
		}
		
		private void attach_RoleResources(RoleResource entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_RoleResources(RoleResource entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rock")]
	public partial class Rock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CenterID;
		
		private System.Nullable<int> _No;
		
		private EntitySet<Shelf> _Shelfs;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(System.Nullable<int> value);
    partial void OnCenterIDChanged();
    partial void OnNoChanging(System.Nullable<int> value);
    partial void OnNoChanged();
    #endregion
		
		public Rock()
		{
			this._Shelfs = new EntitySet<Shelf>(new Action<Shelf>(this.attach_Shelfs), new Action<Shelf>(this.detach_Shelfs));
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int")]
		public System.Nullable<int> CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int")]
		public System.Nullable<int> No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rock_Shelf", Storage="_Shelfs", ThisKey="ID", OtherKey="RockID")]
		public EntitySet<Shelf> Shelfs
		{
			get
			{
				return this._Shelfs;
			}
			set
			{
				this._Shelfs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Rock", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Rocks.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Rocks.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shelfs(Shelf entity)
		{
			this.SendPropertyChanging();
			entity.Rock = this;
		}
		
		private void detach_Shelfs(Shelf entity)
		{
			this.SendPropertyChanging();
			entity.Rock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleReportTemplate")]
	public partial class RoleReportTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RoleID;
		
		private int _ReportTemplateID;
		
		private EntityRef<ReportTemplate> _ReportTemplate;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnReportTemplateIDChanging(int value);
    partial void OnReportTemplateIDChanged();
    #endregion
		
		public RoleReportTemplate()
		{
			this._ReportTemplate = default(EntityRef<ReportTemplate>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTemplateID", DbType="Int NOT NULL")]
		public int ReportTemplateID
		{
			get
			{
				return this._ReportTemplateID;
			}
			set
			{
				if ((this._ReportTemplateID != value))
				{
					if (this._ReportTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._ReportTemplateID = value;
					this.SendPropertyChanged("ReportTemplateID");
					this.OnReportTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportTemplate_RoleReportTemplate", Storage="_ReportTemplate", ThisKey="ReportTemplateID", OtherKey="ID", IsForeignKey=true)]
		public ReportTemplate ReportTemplate
		{
			get
			{
				return this._ReportTemplate.Entity;
			}
			set
			{
				ReportTemplate previousValue = this._ReportTemplate.Entity;
				if (((previousValue != value) 
							|| (this._ReportTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportTemplate.Entity = null;
						previousValue.RoleReportTemplates.Remove(this);
					}
					this._ReportTemplate.Entity = value;
					if ((value != null))
					{
						value.RoleReportTemplates.Add(this);
						this._ReportTemplateID = value.ID;
					}
					else
					{
						this._ReportTemplateID = default(int);
					}
					this.SendPropertyChanged("ReportTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleReportTemplate", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleReportTemplates.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleReportTemplates.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleRequestStep")]
	public partial class RoleRequestStep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RoleID;
		
		private int _RequestStepID;
		
		private EntityRef<RequestStep> _RequestStep;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRequestStepIDChanging(int value);
    partial void OnRequestStepIDChanged();
    #endregion
		
		public RoleRequestStep()
		{
			this._RequestStep = default(EntityRef<RequestStep>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStepID", DbType="Int NOT NULL")]
		public int RequestStepID
		{
			get
			{
				return this._RequestStepID;
			}
			set
			{
				if ((this._RequestStepID != value))
				{
					if (this._RequestStep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStepIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStepID = value;
					this.SendPropertyChanged("RequestStepID");
					this.OnRequestStepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStep_RoleRequestStep", Storage="_RequestStep", ThisKey="RequestStepID", OtherKey="ID", IsForeignKey=true)]
		public RequestStep RequestStep
		{
			get
			{
				return this._RequestStep.Entity;
			}
			set
			{
				RequestStep previousValue = this._RequestStep.Entity;
				if (((previousValue != value) 
							|| (this._RequestStep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestStep.Entity = null;
						previousValue.RoleRequestSteps.Remove(this);
					}
					this._RequestStep.Entity = value;
					if ((value != null))
					{
						value.RoleRequestSteps.Add(this);
						this._RequestStepID = value.ID;
					}
					else
					{
						this._RequestStepID = default(int);
					}
					this.SendPropertyChanged("RequestStep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleRequestStep", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleRequestSteps.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleRequestSteps.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleResource")]
	public partial class RoleResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RoleID;
		
		private int _ResourceID;
		
		private bool _IsEditable;
		
		private EntityRef<Resource> _Resource;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnIsEditableChanging(bool value);
    partial void OnIsEditableChanged();
    #endregion
		
		public RoleResource()
		{
			this._Resource = default(EntityRef<Resource>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="Int NOT NULL")]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEditable", DbType="Bit NOT NULL")]
		public bool IsEditable
		{
			get
			{
				return this._IsEditable;
			}
			set
			{
				if ((this._IsEditable != value))
				{
					this.OnIsEditableChanging(value);
					this.SendPropertyChanging();
					this._IsEditable = value;
					this.SendPropertyChanged("IsEditable");
					this.OnIsEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_RoleResource", Storage="_Resource", ThisKey="ResourceID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.RoleResources.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.RoleResources.Add(this);
						this._ResourceID = value.ID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleResource", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleResources.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleResources.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoundSaleInfo")]
	public partial class RoundSaleInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<byte> _RoundType;
		
		private System.Nullable<bool> _IsAuction;
		
		private System.Nullable<long> _BasePrice;
		
		private System.Nullable<System.DateTime> _EntryDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _IsActive;
		
		private long _InsertUserID;
		
		private int _CenterID;
		
		private EntitySet<TelRoundSale> _TelRoundSales;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRoundTypeChanging(System.Nullable<byte> value);
    partial void OnRoundTypeChanged();
    partial void OnIsAuctionChanging(System.Nullable<bool> value);
    partial void OnIsAuctionChanged();
    partial void OnBasePriceChanging(System.Nullable<long> value);
    partial void OnBasePriceChanged();
    partial void OnEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEntryDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnInsertUserIDChanging(long value);
    partial void OnInsertUserIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    #endregion
		
		public RoundSaleInfo()
		{
			this._TelRoundSales = new EntitySet<TelRoundSale>(new Action<TelRoundSale>(this.attach_TelRoundSales), new Action<TelRoundSale>(this.detach_TelRoundSales));
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundType", DbType="TinyInt")]
		public System.Nullable<byte> RoundType
		{
			get
			{
				return this._RoundType;
			}
			set
			{
				if ((this._RoundType != value))
				{
					this.OnRoundTypeChanging(value);
					this.SendPropertyChanging();
					this._RoundType = value;
					this.SendPropertyChanged("RoundType");
					this.OnRoundTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuction", DbType="Bit")]
		public System.Nullable<bool> IsAuction
		{
			get
			{
				return this._IsAuction;
			}
			set
			{
				if ((this._IsAuction != value))
				{
					this.OnIsAuctionChanging(value);
					this.SendPropertyChanging();
					this._IsAuction = value;
					this.SendPropertyChanged("IsAuction");
					this.OnIsAuctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="BigInt")]
		public System.Nullable<long> BasePrice
		{
			get
			{
				return this._BasePrice;
			}
			set
			{
				if ((this._BasePrice != value))
				{
					this.OnBasePriceChanging(value);
					this.SendPropertyChanging();
					this._BasePrice = value;
					this.SendPropertyChanged("BasePrice");
					this.OnBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserID", DbType="BigInt NOT NULL")]
		public long InsertUserID
		{
			get
			{
				return this._InsertUserID;
			}
			set
			{
				if ((this._InsertUserID != value))
				{
					this.OnInsertUserIDChanging(value);
					this.SendPropertyChanging();
					this._InsertUserID = value;
					this.SendPropertyChanged("InsertUserID");
					this.OnInsertUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoundSaleInfo_TelRoundSale", Storage="_TelRoundSales", ThisKey="ID", OtherKey="RoundSaleInfoID")]
		public EntitySet<TelRoundSale> TelRoundSales
		{
			get
			{
				return this._TelRoundSales;
			}
			set
			{
				this._TelRoundSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_RoundSaleInfo", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.RoundSaleInfos.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.RoundSaleInfos.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TelRoundSales(TelRoundSale entity)
		{
			this.SendPropertyChanging();
			entity.RoundSaleInfo = this;
		}
		
		private void detach_TelRoundSales(TelRoundSale entity)
		{
			this.SendPropertyChanging();
			entity.RoundSaleInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SavedLog")]
	public partial class SavedLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TableName;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<int> _UserID;
		
		private string _IdentityName;
		
		private string _IdentityValue;
		
		private System.Nullable<long> _RequestID;
		
		private System.Xml.Linq.XElement _Changes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIdentityNameChanging(string value);
    partial void OnIdentityNameChanged();
    partial void OnIdentityValueChanging(string value);
    partial void OnIdentityValueChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnChangesChanging(System.Xml.Linq.XElement value);
    partial void OnChangesChanged();
    #endregion
		
		public SavedLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityName", DbType="NVarChar(50)")]
		public string IdentityName
		{
			get
			{
				return this._IdentityName;
			}
			set
			{
				if ((this._IdentityName != value))
				{
					this.OnIdentityNameChanging(value);
					this.SendPropertyChanging();
					this._IdentityName = value;
					this.SendPropertyChanged("IdentityName");
					this.OnIdentityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityValue", DbType="NVarChar(50)")]
		public string IdentityValue
		{
			get
			{
				return this._IdentityValue;
			}
			set
			{
				if ((this._IdentityValue != value))
				{
					this.OnIdentityValueChanging(value);
					this.SendPropertyChanging();
					this._IdentityValue = value;
					this.SendPropertyChanged("IdentityValue");
					this.OnIdentityValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changes", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Changes
		{
			get
			{
				return this._Changes;
			}
			set
			{
				if ((this._Changes != value))
				{
					this.OnChangesChanging(value);
					this.SendPropertyChanging();
					this._Changes = value;
					this.SendPropertyChanged("Changes");
					this.OnChangesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelectTelephone")]
	public partial class SelectTelephone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<int> _SwitchPortID;
		
		private System.Nullable<bool> _IsRound;
		
		private System.Nullable<System.DateTime> _ReserveDate;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<SwitchPort> _SwitchPort;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnSwitchPortIDChanged();
    partial void OnIsRoundChanging(System.Nullable<bool> value);
    partial void OnIsRoundChanged();
    partial void OnReserveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReserveDateChanged();
    #endregion
		
		public SelectTelephone()
		{
			this._Request = default(EntityRef<Request>);
			this._SwitchPort = default(EntityRef<SwitchPort>);
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPortID", DbType="Int")]
		public System.Nullable<int> SwitchPortID
		{
			get
			{
				return this._SwitchPortID;
			}
			set
			{
				if ((this._SwitchPortID != value))
				{
					if (this._SwitchPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPortID = value;
					this.SendPropertyChanged("SwitchPortID");
					this.OnSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRound", DbType="Bit")]
		public System.Nullable<bool> IsRound
		{
			get
			{
				return this._IsRound;
			}
			set
			{
				if ((this._IsRound != value))
				{
					this.OnIsRoundChanging(value);
					this.SendPropertyChanging();
					this._IsRound = value;
					this.SendPropertyChanged("IsRound");
					this.OnIsRoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ReserveDate
		{
			get
			{
				return this._ReserveDate;
			}
			set
			{
				if ((this._ReserveDate != value))
				{
					this.OnReserveDateChanging(value);
					this.SendPropertyChanging();
					this._ReserveDate = value;
					this.SendPropertyChanged("ReserveDate");
					this.OnReserveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SelectTelephone", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SelectTelephone = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SelectTelephone = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_SelectTelephone", Storage="_SwitchPort", ThisKey="SwitchPortID", OtherKey="ID", IsForeignKey=true)]
		public SwitchPort SwitchPort
		{
			get
			{
				return this._SwitchPort.Entity;
			}
			set
			{
				SwitchPort previousValue = this._SwitchPort.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPort.Entity = null;
						previousValue.SelectTelephones.Remove(this);
					}
					this._SwitchPort.Entity = value;
					if ((value != null))
					{
						value.SelectTelephones.Add(this);
						this._SwitchPortID = value.ID;
					}
					else
					{
						this._SwitchPortID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SwitchPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SelectTelephone", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.SelectTelephones.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.SelectTelephones.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceMethod")]
	public partial class ServiceMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MethodName;
		
		private EntitySet<ServiceUserMethod> _ServiceUserMethods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMethodNameChanging(string value);
    partial void OnMethodNameChanged();
    #endregion
		
		public ServiceMethod()
		{
			this._ServiceUserMethods = new EntitySet<ServiceUserMethod>(new Action<ServiceUserMethod>(this.attach_ServiceUserMethods), new Action<ServiceUserMethod>(this.detach_ServiceUserMethods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MethodName
		{
			get
			{
				return this._MethodName;
			}
			set
			{
				if ((this._MethodName != value))
				{
					this.OnMethodNameChanging(value);
					this.SendPropertyChanging();
					this._MethodName = value;
					this.SendPropertyChanged("MethodName");
					this.OnMethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceMethod_ServiceUserMethod", Storage="_ServiceUserMethods", ThisKey="ID", OtherKey="MethodID")]
		public EntitySet<ServiceUserMethod> ServiceUserMethods
		{
			get
			{
				return this._ServiceUserMethods;
			}
			set
			{
				this._ServiceUserMethods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceUserMethods(ServiceUserMethod entity)
		{
			this.SendPropertyChanging();
			entity.ServiceMethod = this;
		}
		
		private void detach_ServiceUserMethods(ServiceUserMethod entity)
		{
			this.SendPropertyChanging();
			entity.ServiceMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceUser")]
	public partial class ServiceUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _ConnectionString;
		
		private bool _IsEnable;
		
		private EntitySet<ServiceUserMethod> _ServiceUserMethods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnConnectionStringChanging(string value);
    partial void OnConnectionStringChanged();
    partial void OnIsEnableChanging(bool value);
    partial void OnIsEnableChanged();
    #endregion
		
		public ServiceUser()
		{
			this._ServiceUserMethods = new EntitySet<ServiceUserMethod>(new Action<ServiceUserMethod>(this.attach_ServiceUserMethods), new Action<ServiceUserMethod>(this.detach_ServiceUserMethods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionString", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ConnectionString
		{
			get
			{
				return this._ConnectionString;
			}
			set
			{
				if ((this._ConnectionString != value))
				{
					this.OnConnectionStringChanging(value);
					this.SendPropertyChanging();
					this._ConnectionString = value;
					this.SendPropertyChanged("ConnectionString");
					this.OnConnectionStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceUser_ServiceUserMethod", Storage="_ServiceUserMethods", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ServiceUserMethod> ServiceUserMethods
		{
			get
			{
				return this._ServiceUserMethods;
			}
			set
			{
				this._ServiceUserMethods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceUserMethods(ServiceUserMethod entity)
		{
			this.SendPropertyChanging();
			entity.ServiceUser = this;
		}
		
		private void detach_ServiceUserMethods(ServiceUserMethod entity)
		{
			this.SendPropertyChanging();
			entity.ServiceUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceUserMethod")]
	public partial class ServiceUserMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MethodID;
		
		private int _UserID;
		
		private EntityRef<ServiceMethod> _ServiceMethod;
		
		private EntityRef<ServiceUser> _ServiceUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMethodIDChanging(int value);
    partial void OnMethodIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ServiceUserMethod()
		{
			this._ServiceMethod = default(EntityRef<ServiceMethod>);
			this._ServiceUser = default(EntityRef<ServiceUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MethodID
		{
			get
			{
				return this._MethodID;
			}
			set
			{
				if ((this._MethodID != value))
				{
					if (this._ServiceMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMethodIDChanging(value);
					this.SendPropertyChanging();
					this._MethodID = value;
					this.SendPropertyChanged("MethodID");
					this.OnMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._ServiceUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceMethod_ServiceUserMethod", Storage="_ServiceMethod", ThisKey="MethodID", OtherKey="ID", IsForeignKey=true)]
		public ServiceMethod ServiceMethod
		{
			get
			{
				return this._ServiceMethod.Entity;
			}
			set
			{
				ServiceMethod previousValue = this._ServiceMethod.Entity;
				if (((previousValue != value) 
							|| (this._ServiceMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceMethod.Entity = null;
						previousValue.ServiceUserMethods.Remove(this);
					}
					this._ServiceMethod.Entity = value;
					if ((value != null))
					{
						value.ServiceUserMethods.Add(this);
						this._MethodID = value.ID;
					}
					else
					{
						this._MethodID = default(int);
					}
					this.SendPropertyChanged("ServiceMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceUser_ServiceUserMethod", Storage="_ServiceUser", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public ServiceUser ServiceUser
		{
			get
			{
				return this._ServiceUser.Entity;
			}
			set
			{
				ServiceUser previousValue = this._ServiceUser.Entity;
				if (((previousValue != value) 
							|| (this._ServiceUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceUser.Entity = null;
						previousValue.ServiceUserMethods.Remove(this);
					}
					this._ServiceUser.Entity = value;
					if ((value != null))
					{
						value.ServiceUserMethods.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("ServiceUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Key;
		
		private string _Value;
		
		private System.Data.Linq.Binary _Content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shelf")]
	public partial class Shelf : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RockID;
		
		private int _No;
		
		private EntitySet<ADSLEquipment> _ADSLEquipments;
		
		private EntityRef<Rock> _Rock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRockIDChanging(int value);
    partial void OnRockIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    #endregion
		
		public Shelf()
		{
			this._ADSLEquipments = new EntitySet<ADSLEquipment>(new Action<ADSLEquipment>(this.attach_ADSLEquipments), new Action<ADSLEquipment>(this.detach_ADSLEquipments));
			this._Rock = default(EntityRef<Rock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RockID", DbType="Int NOT NULL")]
		public int RockID
		{
			get
			{
				return this._RockID;
			}
			set
			{
				if ((this._RockID != value))
				{
					if (this._Rock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRockIDChanging(value);
					this.SendPropertyChanging();
					this._RockID = value;
					this.SendPropertyChanged("RockID");
					this.OnRockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shelf_ADSLEquipment", Storage="_ADSLEquipments", ThisKey="ID", OtherKey="ShelfID")]
		public EntitySet<ADSLEquipment> ADSLEquipments
		{
			get
			{
				return this._ADSLEquipments;
			}
			set
			{
				this._ADSLEquipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rock_Shelf", Storage="_Rock", ThisKey="RockID", OtherKey="ID", IsForeignKey=true)]
		public Rock Rock
		{
			get
			{
				return this._Rock.Entity;
			}
			set
			{
				Rock previousValue = this._Rock.Entity;
				if (((previousValue != value) 
							|| (this._Rock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rock.Entity = null;
						previousValue.Shelfs.Remove(this);
					}
					this._Rock.Entity = value;
					if ((value != null))
					{
						value.Shelfs.Add(this);
						this._RockID = value.ID;
					}
					else
					{
						this._RockID = default(int);
					}
					this.SendPropertyChanged("Rock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLEquipments(ADSLEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Shelf = this;
		}
		
		private void detach_ADSLEquipments(ADSLEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Shelf = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSService")]
	public partial class SMSService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Message;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public SMSService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpaceAndPower")]
	public partial class SpaceAndPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _SpaceAndPowerCustomerID;
		
		private string _SpaceSize;
		
		private byte _SpaceType;
		
		private byte _EquipmentType;
		
		private string _EquipmentWeight;
		
		private string _SpaceUsage;
		
		private byte _PowerType;
		
		private string _PowerRate;
		
		private string _HeatWasteRate;
		
		private string _Duration;
		
		private string _RequestDescription;
		
		private System.Nullable<System.Guid> _EnteghalFile;
		
		private System.Nullable<System.DateTime> _EnteghalDate;
		
		private System.Nullable<int> _EnteghalUserID;
		
		private string _EnteghalComment;
		
		private System.Nullable<System.DateTime> _SakhtemanDate;
		
		private System.Nullable<int> _SakhtemanUserID;
		
		private string _SakhtemanComment;
		
		private System.Nullable<System.DateTime> _FazaDate;
		
		private System.Nullable<int> _FazaUserID;
		
		private string _FazaComment;
		
		private System.Nullable<System.Guid> _NirooFile;
		
		private System.Nullable<System.DateTime> _NirooDate;
		
		private System.Nullable<int> _NirooUserID;
		
		private string _NirooComment;
		
		private System.Nullable<System.DateTime> _ModireMohandesiDate;
		
		private System.Nullable<int> _ModireMohandesiUserID;
		
		private string _ModireMohandesiComment;
		
		private System.Nullable<System.DateTime> _ModireMantagheDate;
		
		private System.Nullable<int> _ModireMantagheUserID;
		
		private string _ModireMantagheComment;
		
		private System.Nullable<System.DateTime> _GhardadDate;
		
		private System.Nullable<int> _GhardadUserID;
		
		private string _GhardadComment;
		
		private System.Nullable<System.DateTime> _HerasatDate;
		
		private System.Nullable<int> _HerasatUserID;
		
		private string _HerasatComment;
		
		private System.Nullable<System.DateTime> _ManagerDate;
		
		private System.Nullable<int> _ManagerUserID;
		
		private string _ManagerComment;
		
		private System.Nullable<System.DateTime> _SooratHesabDate;
		
		private System.Nullable<int> _SooratHesabUserID;
		
		private string _SooratHesabComment;
		
		private string _FinancialScopeComment;
		
		private System.Nullable<System.DateTime> _FinancialScopeDate;
		
		private System.Nullable<int> _FinancialScopeUserID;
		
		private string _DesignManagerComment;
		
		private System.Nullable<System.DateTime> _DesignManagerDate;
		
		private System.Nullable<int> _DesignManagerUserID;
		
		private string _SwitchDesigningOfficeComment;
		
		private System.Nullable<System.DateTime> _SwitchDesigningOfficeDate;
		
		private System.Nullable<int> _SwitchDesigningOfficeUserID;
		
		private string _DesignManagerFinalCheckComment;
		
		private System.Nullable<System.DateTime> _DesignManagerFinalCheckDate;
		
		private System.Nullable<int> _DesignManagerFinalCheckUserID;
		
		private string _NetworkAssistantComment;
		
		private System.Nullable<System.DateTime> _NetworkAssistantDate;
		
		private System.Nullable<int> _NetworkAssistantUserID;
		
		private string _AdministrationOfTheTelecommunicationEquipmentComment;
		
		private System.Nullable<System.DateTime> _AdministrationOfTheTelecommunicationEquipmentDate;
		
		private System.Nullable<int> _AdministrationOfTheTelecommunicationEquipmentUserID;
		
		private string _CableAndNetworkDesignOfficeComment;
		
		private System.Nullable<System.DateTime> _CableAndNetworkDesignOfficeDate;
		
		private System.Nullable<int> _CableAndNetworkDesignOfficeUserID;
		
		private string _DeviceHallComment;
		
		private System.Nullable<System.DateTime> _DeviceHallDate;
		
		private System.Nullable<int> _DeviceHallUserID;
		
		private System.Nullable<System.Guid> _CableAndNetworkDesignOfficeFile;
		
		private System.Nullable<System.DateTime> _AdministrationOfTheTelecommunicationEquipmentOperationDate;
		
		private System.Nullable<System.Guid> _SwitchDesigningOfficeFile;
		
		private System.Nullable<System.Guid> _CircuitCommandFile;
		
		private string _RigSpace;
		
		private bool _HasFibre;
		
		private System.Nullable<long> _AddressID;
		
		private EntitySet<SpaceAndPowerPowerType> _SpaceAndPowerPowerTypes;
		
		private EntitySet<Antenna> _Antennas;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User3;
		
		private EntityRef<User> _User4;
		
		private EntityRef<User> _User5;
		
		private EntityRef<User> _User6;
		
		private EntityRef<User> _User7;
		
		private EntityRef<User> _User8;
		
		private EntityRef<User> _User9;
		
		private EntityRef<User> _User10;
		
		private EntityRef<User> _User11;
		
		private EntityRef<User> _User12;
		
		private EntityRef<User> _User13;
		
		private EntityRef<User> _User14;
		
		private EntityRef<User> _User15;
		
		private EntityRef<User> _User16;
		
		private EntityRef<User> _User17;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSpaceAndPowerCustomerIDChanging(long value);
    partial void OnSpaceAndPowerCustomerIDChanged();
    partial void OnSpaceSizeChanging(string value);
    partial void OnSpaceSizeChanged();
    partial void OnSpaceTypeChanging(byte value);
    partial void OnSpaceTypeChanged();
    partial void OnEquipmentTypeChanging(byte value);
    partial void OnEquipmentTypeChanged();
    partial void OnEquipmentWeightChanging(string value);
    partial void OnEquipmentWeightChanged();
    partial void OnSpaceUsageChanging(string value);
    partial void OnSpaceUsageChanged();
    partial void OnPowerTypeChanging(byte value);
    partial void OnPowerTypeChanged();
    partial void OnPowerRateChanging(string value);
    partial void OnPowerRateChanged();
    partial void OnHeatWasteRateChanging(string value);
    partial void OnHeatWasteRateChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnRequestDescriptionChanging(string value);
    partial void OnRequestDescriptionChanged();
    partial void OnEnteghalFileChanging(System.Nullable<System.Guid> value);
    partial void OnEnteghalFileChanged();
    partial void OnEnteghalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnteghalDateChanged();
    partial void OnEnteghalUserIDChanging(System.Nullable<int> value);
    partial void OnEnteghalUserIDChanged();
    partial void OnEnteghalCommentChanging(string value);
    partial void OnEnteghalCommentChanged();
    partial void OnSakhtemanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSakhtemanDateChanged();
    partial void OnSakhtemanUserIDChanging(System.Nullable<int> value);
    partial void OnSakhtemanUserIDChanged();
    partial void OnSakhtemanCommentChanging(string value);
    partial void OnSakhtemanCommentChanged();
    partial void OnFazaDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFazaDateChanged();
    partial void OnFazaUserIDChanging(System.Nullable<int> value);
    partial void OnFazaUserIDChanged();
    partial void OnFazaCommentChanging(string value);
    partial void OnFazaCommentChanged();
    partial void OnNirooFileChanging(System.Nullable<System.Guid> value);
    partial void OnNirooFileChanged();
    partial void OnNirooDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNirooDateChanged();
    partial void OnNirooUserIDChanging(System.Nullable<int> value);
    partial void OnNirooUserIDChanged();
    partial void OnNirooCommentChanging(string value);
    partial void OnNirooCommentChanged();
    partial void OnModireMohandesiDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModireMohandesiDateChanged();
    partial void OnModireMohandesiUserIDChanging(System.Nullable<int> value);
    partial void OnModireMohandesiUserIDChanged();
    partial void OnModireMohandesiCommentChanging(string value);
    partial void OnModireMohandesiCommentChanged();
    partial void OnModireMantagheDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModireMantagheDateChanged();
    partial void OnModireMantagheUserIDChanging(System.Nullable<int> value);
    partial void OnModireMantagheUserIDChanged();
    partial void OnModireMantagheCommentChanging(string value);
    partial void OnModireMantagheCommentChanged();
    partial void OnGhardadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGhardadDateChanged();
    partial void OnGhardadUserIDChanging(System.Nullable<int> value);
    partial void OnGhardadUserIDChanged();
    partial void OnGhardadCommentChanging(string value);
    partial void OnGhardadCommentChanged();
    partial void OnHerasatDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHerasatDateChanged();
    partial void OnHerasatUserIDChanging(System.Nullable<int> value);
    partial void OnHerasatUserIDChanged();
    partial void OnHerasatCommentChanging(string value);
    partial void OnHerasatCommentChanged();
    partial void OnManagerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnManagerDateChanged();
    partial void OnManagerUserIDChanging(System.Nullable<int> value);
    partial void OnManagerUserIDChanged();
    partial void OnManagerCommentChanging(string value);
    partial void OnManagerCommentChanged();
    partial void OnSooratHesabDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSooratHesabDateChanged();
    partial void OnSooratHesabUserIDChanging(System.Nullable<int> value);
    partial void OnSooratHesabUserIDChanged();
    partial void OnSooratHesabCommentChanging(string value);
    partial void OnSooratHesabCommentChanged();
    partial void OnFinancialScopeCommentChanging(string value);
    partial void OnFinancialScopeCommentChanged();
    partial void OnFinancialScopeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinancialScopeDateChanged();
    partial void OnFinancialScopeUserIDChanging(System.Nullable<int> value);
    partial void OnFinancialScopeUserIDChanged();
    partial void OnDesignManagerCommentChanging(string value);
    partial void OnDesignManagerCommentChanged();
    partial void OnDesignManagerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDesignManagerDateChanged();
    partial void OnDesignManagerUserIDChanging(System.Nullable<int> value);
    partial void OnDesignManagerUserIDChanged();
    partial void OnSwitchDesigningOfficeCommentChanging(string value);
    partial void OnSwitchDesigningOfficeCommentChanged();
    partial void OnSwitchDesigningOfficeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSwitchDesigningOfficeDateChanged();
    partial void OnSwitchDesigningOfficeUserIDChanging(System.Nullable<int> value);
    partial void OnSwitchDesigningOfficeUserIDChanged();
    partial void OnDesignManagerFinalCheckCommentChanging(string value);
    partial void OnDesignManagerFinalCheckCommentChanged();
    partial void OnDesignManagerFinalCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDesignManagerFinalCheckDateChanged();
    partial void OnDesignManagerFinalCheckUserIDChanging(System.Nullable<int> value);
    partial void OnDesignManagerFinalCheckUserIDChanged();
    partial void OnNetworkAssistantCommentChanging(string value);
    partial void OnNetworkAssistantCommentChanged();
    partial void OnNetworkAssistantDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkAssistantDateChanged();
    partial void OnNetworkAssistantUserIDChanging(System.Nullable<int> value);
    partial void OnNetworkAssistantUserIDChanged();
    partial void OnAdministrationOfTheTelecommunicationEquipmentCommentChanging(string value);
    partial void OnAdministrationOfTheTelecommunicationEquipmentCommentChanged();
    partial void OnAdministrationOfTheTelecommunicationEquipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdministrationOfTheTelecommunicationEquipmentDateChanged();
    partial void OnAdministrationOfTheTelecommunicationEquipmentUserIDChanging(System.Nullable<int> value);
    partial void OnAdministrationOfTheTelecommunicationEquipmentUserIDChanged();
    partial void OnCableAndNetworkDesignOfficeCommentChanging(string value);
    partial void OnCableAndNetworkDesignOfficeCommentChanged();
    partial void OnCableAndNetworkDesignOfficeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCableAndNetworkDesignOfficeDateChanged();
    partial void OnCableAndNetworkDesignOfficeUserIDChanging(System.Nullable<int> value);
    partial void OnCableAndNetworkDesignOfficeUserIDChanged();
    partial void OnDeviceHallCommentChanging(string value);
    partial void OnDeviceHallCommentChanged();
    partial void OnDeviceHallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeviceHallDateChanged();
    partial void OnDeviceHallUserIDChanging(System.Nullable<int> value);
    partial void OnDeviceHallUserIDChanged();
    partial void OnCableAndNetworkDesignOfficeFileChanging(System.Nullable<System.Guid> value);
    partial void OnCableAndNetworkDesignOfficeFileChanged();
    partial void OnAdministrationOfTheTelecommunicationEquipmentOperationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdministrationOfTheTelecommunicationEquipmentOperationDateChanged();
    partial void OnSwitchDesigningOfficeFileChanging(System.Nullable<System.Guid> value);
    partial void OnSwitchDesigningOfficeFileChanged();
    partial void OnCircuitCommandFileChanging(System.Nullable<System.Guid> value);
    partial void OnCircuitCommandFileChanged();
    partial void OnRigSpaceChanging(string value);
    partial void OnRigSpaceChanged();
    partial void OnHasFibreChanging(bool value);
    partial void OnHasFibreChanged();
    partial void OnAddressIDChanging(System.Nullable<long> value);
    partial void OnAddressIDChanged();
    #endregion
		
		public SpaceAndPower()
		{
			this._SpaceAndPowerPowerTypes = new EntitySet<SpaceAndPowerPowerType>(new Action<SpaceAndPowerPowerType>(this.attach_SpaceAndPowerPowerTypes), new Action<SpaceAndPowerPowerType>(this.detach_SpaceAndPowerPowerTypes));
			this._Antennas = new EntitySet<Antenna>(new Action<Antenna>(this.attach_Antennas), new Action<Antenna>(this.detach_Antennas));
			this._Address = default(EntityRef<Address>);
			this._Request = default(EntityRef<Request>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			this._User4 = default(EntityRef<User>);
			this._User5 = default(EntityRef<User>);
			this._User6 = default(EntityRef<User>);
			this._User7 = default(EntityRef<User>);
			this._User8 = default(EntityRef<User>);
			this._User9 = default(EntityRef<User>);
			this._User10 = default(EntityRef<User>);
			this._User11 = default(EntityRef<User>);
			this._User12 = default(EntityRef<User>);
			this._User13 = default(EntityRef<User>);
			this._User14 = default(EntityRef<User>);
			this._User15 = default(EntityRef<User>);
			this._User16 = default(EntityRef<User>);
			this._User17 = default(EntityRef<User>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceAndPowerCustomerID", DbType="BigInt NOT NULL")]
		public long SpaceAndPowerCustomerID
		{
			get
			{
				return this._SpaceAndPowerCustomerID;
			}
			set
			{
				if ((this._SpaceAndPowerCustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpaceAndPowerCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._SpaceAndPowerCustomerID = value;
					this.SendPropertyChanged("SpaceAndPowerCustomerID");
					this.OnSpaceAndPowerCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceSize", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SpaceSize
		{
			get
			{
				return this._SpaceSize;
			}
			set
			{
				if ((this._SpaceSize != value))
				{
					this.OnSpaceSizeChanging(value);
					this.SendPropertyChanging();
					this._SpaceSize = value;
					this.SendPropertyChanged("SpaceSize");
					this.OnSpaceSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceType", DbType="TinyInt NOT NULL")]
		public byte SpaceType
		{
			get
			{
				return this._SpaceType;
			}
			set
			{
				if ((this._SpaceType != value))
				{
					this.OnSpaceTypeChanging(value);
					this.SendPropertyChanging();
					this._SpaceType = value;
					this.SendPropertyChanged("SpaceType");
					this.OnSpaceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="TinyInt NOT NULL")]
		public byte EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this.OnEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentType = value;
					this.SendPropertyChanged("EquipmentType");
					this.OnEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentWeight", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EquipmentWeight
		{
			get
			{
				return this._EquipmentWeight;
			}
			set
			{
				if ((this._EquipmentWeight != value))
				{
					this.OnEquipmentWeightChanging(value);
					this.SendPropertyChanging();
					this._EquipmentWeight = value;
					this.SendPropertyChanged("EquipmentWeight");
					this.OnEquipmentWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceUsage", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SpaceUsage
		{
			get
			{
				return this._SpaceUsage;
			}
			set
			{
				if ((this._SpaceUsage != value))
				{
					this.OnSpaceUsageChanging(value);
					this.SendPropertyChanging();
					this._SpaceUsage = value;
					this.SendPropertyChanged("SpaceUsage");
					this.OnSpaceUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerType", DbType="TinyInt NOT NULL")]
		public byte PowerType
		{
			get
			{
				return this._PowerType;
			}
			set
			{
				if ((this._PowerType != value))
				{
					this.OnPowerTypeChanging(value);
					this.SendPropertyChanging();
					this._PowerType = value;
					this.SendPropertyChanged("PowerType");
					this.OnPowerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerRate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PowerRate
		{
			get
			{
				return this._PowerRate;
			}
			set
			{
				if ((this._PowerRate != value))
				{
					this.OnPowerRateChanging(value);
					this.SendPropertyChanging();
					this._PowerRate = value;
					this.SendPropertyChanged("PowerRate");
					this.OnPowerRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatWasteRate", DbType="NVarChar(50)")]
		public string HeatWasteRate
		{
			get
			{
				return this._HeatWasteRate;
			}
			set
			{
				if ((this._HeatWasteRate != value))
				{
					this.OnHeatWasteRateChanging(value);
					this.SendPropertyChanging();
					this._HeatWasteRate = value;
					this.SendPropertyChanged("HeatWasteRate");
					this.OnHeatWasteRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDescription", DbType="NVarChar(MAX)")]
		public string RequestDescription
		{
			get
			{
				return this._RequestDescription;
			}
			set
			{
				if ((this._RequestDescription != value))
				{
					this.OnRequestDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RequestDescription = value;
					this.SendPropertyChanged("RequestDescription");
					this.OnRequestDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteghalFile", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EnteghalFile
		{
			get
			{
				return this._EnteghalFile;
			}
			set
			{
				if ((this._EnteghalFile != value))
				{
					this.OnEnteghalFileChanging(value);
					this.SendPropertyChanging();
					this._EnteghalFile = value;
					this.SendPropertyChanged("EnteghalFile");
					this.OnEnteghalFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteghalDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EnteghalDate
		{
			get
			{
				return this._EnteghalDate;
			}
			set
			{
				if ((this._EnteghalDate != value))
				{
					this.OnEnteghalDateChanging(value);
					this.SendPropertyChanging();
					this._EnteghalDate = value;
					this.SendPropertyChanged("EnteghalDate");
					this.OnEnteghalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteghalUserID", DbType="Int")]
		public System.Nullable<int> EnteghalUserID
		{
			get
			{
				return this._EnteghalUserID;
			}
			set
			{
				if ((this._EnteghalUserID != value))
				{
					if (this._User5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnteghalUserIDChanging(value);
					this.SendPropertyChanging();
					this._EnteghalUserID = value;
					this.SendPropertyChanged("EnteghalUserID");
					this.OnEnteghalUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteghalComment", DbType="NVarChar(MAX)")]
		public string EnteghalComment
		{
			get
			{
				return this._EnteghalComment;
			}
			set
			{
				if ((this._EnteghalComment != value))
				{
					this.OnEnteghalCommentChanging(value);
					this.SendPropertyChanging();
					this._EnteghalComment = value;
					this.SendPropertyChanged("EnteghalComment");
					this.OnEnteghalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SakhtemanDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SakhtemanDate
		{
			get
			{
				return this._SakhtemanDate;
			}
			set
			{
				if ((this._SakhtemanDate != value))
				{
					this.OnSakhtemanDateChanging(value);
					this.SendPropertyChanging();
					this._SakhtemanDate = value;
					this.SendPropertyChanged("SakhtemanDate");
					this.OnSakhtemanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SakhtemanUserID", DbType="Int")]
		public System.Nullable<int> SakhtemanUserID
		{
			get
			{
				return this._SakhtemanUserID;
			}
			set
			{
				if ((this._SakhtemanUserID != value))
				{
					if (this._User15.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSakhtemanUserIDChanging(value);
					this.SendPropertyChanging();
					this._SakhtemanUserID = value;
					this.SendPropertyChanged("SakhtemanUserID");
					this.OnSakhtemanUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SakhtemanComment", DbType="NVarChar(MAX)")]
		public string SakhtemanComment
		{
			get
			{
				return this._SakhtemanComment;
			}
			set
			{
				if ((this._SakhtemanComment != value))
				{
					this.OnSakhtemanCommentChanging(value);
					this.SendPropertyChanging();
					this._SakhtemanComment = value;
					this.SendPropertyChanged("SakhtemanComment");
					this.OnSakhtemanCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FazaDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FazaDate
		{
			get
			{
				return this._FazaDate;
			}
			set
			{
				if ((this._FazaDate != value))
				{
					this.OnFazaDateChanging(value);
					this.SendPropertyChanging();
					this._FazaDate = value;
					this.SendPropertyChanged("FazaDate");
					this.OnFazaDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FazaUserID", DbType="Int")]
		public System.Nullable<int> FazaUserID
		{
			get
			{
				return this._FazaUserID;
			}
			set
			{
				if ((this._FazaUserID != value))
				{
					if (this._User6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFazaUserIDChanging(value);
					this.SendPropertyChanging();
					this._FazaUserID = value;
					this.SendPropertyChanged("FazaUserID");
					this.OnFazaUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FazaComment", DbType="NVarChar(MAX)")]
		public string FazaComment
		{
			get
			{
				return this._FazaComment;
			}
			set
			{
				if ((this._FazaComment != value))
				{
					this.OnFazaCommentChanging(value);
					this.SendPropertyChanging();
					this._FazaComment = value;
					this.SendPropertyChanged("FazaComment");
					this.OnFazaCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NirooFile", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NirooFile
		{
			get
			{
				return this._NirooFile;
			}
			set
			{
				if ((this._NirooFile != value))
				{
					this.OnNirooFileChanging(value);
					this.SendPropertyChanging();
					this._NirooFile = value;
					this.SendPropertyChanged("NirooFile");
					this.OnNirooFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NirooDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NirooDate
		{
			get
			{
				return this._NirooDate;
			}
			set
			{
				if ((this._NirooDate != value))
				{
					this.OnNirooDateChanging(value);
					this.SendPropertyChanging();
					this._NirooDate = value;
					this.SendPropertyChanged("NirooDate");
					this.OnNirooDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NirooUserID", DbType="Int")]
		public System.Nullable<int> NirooUserID
		{
			get
			{
				return this._NirooUserID;
			}
			set
			{
				if ((this._NirooUserID != value))
				{
					if (this._User14.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNirooUserIDChanging(value);
					this.SendPropertyChanging();
					this._NirooUserID = value;
					this.SendPropertyChanged("NirooUserID");
					this.OnNirooUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NirooComment", DbType="NVarChar(MAX)")]
		public string NirooComment
		{
			get
			{
				return this._NirooComment;
			}
			set
			{
				if ((this._NirooComment != value))
				{
					this.OnNirooCommentChanging(value);
					this.SendPropertyChanging();
					this._NirooComment = value;
					this.SendPropertyChanged("NirooComment");
					this.OnNirooCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModireMohandesiDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ModireMohandesiDate
		{
			get
			{
				return this._ModireMohandesiDate;
			}
			set
			{
				if ((this._ModireMohandesiDate != value))
				{
					this.OnModireMohandesiDateChanging(value);
					this.SendPropertyChanging();
					this._ModireMohandesiDate = value;
					this.SendPropertyChanged("ModireMohandesiDate");
					this.OnModireMohandesiDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModireMohandesiUserID", DbType="Int")]
		public System.Nullable<int> ModireMohandesiUserID
		{
			get
			{
				return this._ModireMohandesiUserID;
			}
			set
			{
				if ((this._ModireMohandesiUserID != value))
				{
					if (this._User12.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModireMohandesiUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModireMohandesiUserID = value;
					this.SendPropertyChanged("ModireMohandesiUserID");
					this.OnModireMohandesiUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModireMohandesiComment", DbType="NVarChar(MAX)")]
		public string ModireMohandesiComment
		{
			get
			{
				return this._ModireMohandesiComment;
			}
			set
			{
				if ((this._ModireMohandesiComment != value))
				{
					this.OnModireMohandesiCommentChanging(value);
					this.SendPropertyChanging();
					this._ModireMohandesiComment = value;
					this.SendPropertyChanged("ModireMohandesiComment");
					this.OnModireMohandesiCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModireMantagheDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ModireMantagheDate
		{
			get
			{
				return this._ModireMantagheDate;
			}
			set
			{
				if ((this._ModireMantagheDate != value))
				{
					this.OnModireMantagheDateChanging(value);
					this.SendPropertyChanging();
					this._ModireMantagheDate = value;
					this.SendPropertyChanged("ModireMantagheDate");
					this.OnModireMantagheDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModireMantagheUserID", DbType="Int")]
		public System.Nullable<int> ModireMantagheUserID
		{
			get
			{
				return this._ModireMantagheUserID;
			}
			set
			{
				if ((this._ModireMantagheUserID != value))
				{
					if (this._User11.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModireMantagheUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModireMantagheUserID = value;
					this.SendPropertyChanged("ModireMantagheUserID");
					this.OnModireMantagheUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModireMantagheComment", DbType="NVarChar(MAX)")]
		public string ModireMantagheComment
		{
			get
			{
				return this._ModireMantagheComment;
			}
			set
			{
				if ((this._ModireMantagheComment != value))
				{
					this.OnModireMantagheCommentChanging(value);
					this.SendPropertyChanging();
					this._ModireMantagheComment = value;
					this.SendPropertyChanged("ModireMantagheComment");
					this.OnModireMantagheCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhardadDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> GhardadDate
		{
			get
			{
				return this._GhardadDate;
			}
			set
			{
				if ((this._GhardadDate != value))
				{
					this.OnGhardadDateChanging(value);
					this.SendPropertyChanging();
					this._GhardadDate = value;
					this.SendPropertyChanged("GhardadDate");
					this.OnGhardadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhardadUserID", DbType="Int")]
		public System.Nullable<int> GhardadUserID
		{
			get
			{
				return this._GhardadUserID;
			}
			set
			{
				if ((this._GhardadUserID != value))
				{
					if (this._User8.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGhardadUserIDChanging(value);
					this.SendPropertyChanging();
					this._GhardadUserID = value;
					this.SendPropertyChanged("GhardadUserID");
					this.OnGhardadUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhardadComment", DbType="NVarChar(MAX)")]
		public string GhardadComment
		{
			get
			{
				return this._GhardadComment;
			}
			set
			{
				if ((this._GhardadComment != value))
				{
					this.OnGhardadCommentChanging(value);
					this.SendPropertyChanging();
					this._GhardadComment = value;
					this.SendPropertyChanged("GhardadComment");
					this.OnGhardadCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HerasatDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> HerasatDate
		{
			get
			{
				return this._HerasatDate;
			}
			set
			{
				if ((this._HerasatDate != value))
				{
					this.OnHerasatDateChanging(value);
					this.SendPropertyChanging();
					this._HerasatDate = value;
					this.SendPropertyChanged("HerasatDate");
					this.OnHerasatDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HerasatUserID", DbType="Int")]
		public System.Nullable<int> HerasatUserID
		{
			get
			{
				return this._HerasatUserID;
			}
			set
			{
				if ((this._HerasatUserID != value))
				{
					if (this._User9.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHerasatUserIDChanging(value);
					this.SendPropertyChanging();
					this._HerasatUserID = value;
					this.SendPropertyChanged("HerasatUserID");
					this.OnHerasatUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HerasatComment", DbType="NVarChar(MAX)")]
		public string HerasatComment
		{
			get
			{
				return this._HerasatComment;
			}
			set
			{
				if ((this._HerasatComment != value))
				{
					this.OnHerasatCommentChanging(value);
					this.SendPropertyChanging();
					this._HerasatComment = value;
					this.SendPropertyChanged("HerasatComment");
					this.OnHerasatCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ManagerDate
		{
			get
			{
				return this._ManagerDate;
			}
			set
			{
				if ((this._ManagerDate != value))
				{
					this.OnManagerDateChanging(value);
					this.SendPropertyChanging();
					this._ManagerDate = value;
					this.SendPropertyChanged("ManagerDate");
					this.OnManagerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerUserID", DbType="Int")]
		public System.Nullable<int> ManagerUserID
		{
			get
			{
				return this._ManagerUserID;
			}
			set
			{
				if ((this._ManagerUserID != value))
				{
					if (this._User10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerUserIDChanging(value);
					this.SendPropertyChanging();
					this._ManagerUserID = value;
					this.SendPropertyChanged("ManagerUserID");
					this.OnManagerUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerComment", DbType="NVarChar(MAX)")]
		public string ManagerComment
		{
			get
			{
				return this._ManagerComment;
			}
			set
			{
				if ((this._ManagerComment != value))
				{
					this.OnManagerCommentChanging(value);
					this.SendPropertyChanging();
					this._ManagerComment = value;
					this.SendPropertyChanged("ManagerComment");
					this.OnManagerCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SooratHesabDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SooratHesabDate
		{
			get
			{
				return this._SooratHesabDate;
			}
			set
			{
				if ((this._SooratHesabDate != value))
				{
					this.OnSooratHesabDateChanging(value);
					this.SendPropertyChanging();
					this._SooratHesabDate = value;
					this.SendPropertyChanged("SooratHesabDate");
					this.OnSooratHesabDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SooratHesabUserID", DbType="Int")]
		public System.Nullable<int> SooratHesabUserID
		{
			get
			{
				return this._SooratHesabUserID;
			}
			set
			{
				if ((this._SooratHesabUserID != value))
				{
					if (this._User16.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSooratHesabUserIDChanging(value);
					this.SendPropertyChanging();
					this._SooratHesabUserID = value;
					this.SendPropertyChanged("SooratHesabUserID");
					this.OnSooratHesabUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SooratHesabComment", DbType="NVarChar(MAX)")]
		public string SooratHesabComment
		{
			get
			{
				return this._SooratHesabComment;
			}
			set
			{
				if ((this._SooratHesabComment != value))
				{
					this.OnSooratHesabCommentChanging(value);
					this.SendPropertyChanging();
					this._SooratHesabComment = value;
					this.SendPropertyChanged("SooratHesabComment");
					this.OnSooratHesabCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialScopeComment", DbType="NVarChar(MAX)")]
		public string FinancialScopeComment
		{
			get
			{
				return this._FinancialScopeComment;
			}
			set
			{
				if ((this._FinancialScopeComment != value))
				{
					this.OnFinancialScopeCommentChanging(value);
					this.SendPropertyChanging();
					this._FinancialScopeComment = value;
					this.SendPropertyChanged("FinancialScopeComment");
					this.OnFinancialScopeCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialScopeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FinancialScopeDate
		{
			get
			{
				return this._FinancialScopeDate;
			}
			set
			{
				if ((this._FinancialScopeDate != value))
				{
					this.OnFinancialScopeDateChanging(value);
					this.SendPropertyChanging();
					this._FinancialScopeDate = value;
					this.SendPropertyChanged("FinancialScopeDate");
					this.OnFinancialScopeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialScopeUserID", DbType="Int")]
		public System.Nullable<int> FinancialScopeUserID
		{
			get
			{
				return this._FinancialScopeUserID;
			}
			set
			{
				if ((this._FinancialScopeUserID != value))
				{
					if (this._User7.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancialScopeUserIDChanging(value);
					this.SendPropertyChanging();
					this._FinancialScopeUserID = value;
					this.SendPropertyChanged("FinancialScopeUserID");
					this.OnFinancialScopeUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignManagerComment", DbType="NVarChar(MAX)")]
		public string DesignManagerComment
		{
			get
			{
				return this._DesignManagerComment;
			}
			set
			{
				if ((this._DesignManagerComment != value))
				{
					this.OnDesignManagerCommentChanging(value);
					this.SendPropertyChanging();
					this._DesignManagerComment = value;
					this.SendPropertyChanged("DesignManagerComment");
					this.OnDesignManagerCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignManagerDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DesignManagerDate
		{
			get
			{
				return this._DesignManagerDate;
			}
			set
			{
				if ((this._DesignManagerDate != value))
				{
					this.OnDesignManagerDateChanging(value);
					this.SendPropertyChanging();
					this._DesignManagerDate = value;
					this.SendPropertyChanged("DesignManagerDate");
					this.OnDesignManagerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignManagerUserID", DbType="Int")]
		public System.Nullable<int> DesignManagerUserID
		{
			get
			{
				return this._DesignManagerUserID;
			}
			set
			{
				if ((this._DesignManagerUserID != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignManagerUserIDChanging(value);
					this.SendPropertyChanging();
					this._DesignManagerUserID = value;
					this.SendPropertyChanged("DesignManagerUserID");
					this.OnDesignManagerUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchDesigningOfficeComment", DbType="NVarChar(MAX)")]
		public string SwitchDesigningOfficeComment
		{
			get
			{
				return this._SwitchDesigningOfficeComment;
			}
			set
			{
				if ((this._SwitchDesigningOfficeComment != value))
				{
					this.OnSwitchDesigningOfficeCommentChanging(value);
					this.SendPropertyChanging();
					this._SwitchDesigningOfficeComment = value;
					this.SendPropertyChanged("SwitchDesigningOfficeComment");
					this.OnSwitchDesigningOfficeCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchDesigningOfficeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SwitchDesigningOfficeDate
		{
			get
			{
				return this._SwitchDesigningOfficeDate;
			}
			set
			{
				if ((this._SwitchDesigningOfficeDate != value))
				{
					this.OnSwitchDesigningOfficeDateChanging(value);
					this.SendPropertyChanging();
					this._SwitchDesigningOfficeDate = value;
					this.SendPropertyChanged("SwitchDesigningOfficeDate");
					this.OnSwitchDesigningOfficeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchDesigningOfficeUserID", DbType="Int")]
		public System.Nullable<int> SwitchDesigningOfficeUserID
		{
			get
			{
				return this._SwitchDesigningOfficeUserID;
			}
			set
			{
				if ((this._SwitchDesigningOfficeUserID != value))
				{
					if (this._User17.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchDesigningOfficeUserIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchDesigningOfficeUserID = value;
					this.SendPropertyChanged("SwitchDesigningOfficeUserID");
					this.OnSwitchDesigningOfficeUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignManagerFinalCheckComment", DbType="NVarChar(MAX)")]
		public string DesignManagerFinalCheckComment
		{
			get
			{
				return this._DesignManagerFinalCheckComment;
			}
			set
			{
				if ((this._DesignManagerFinalCheckComment != value))
				{
					this.OnDesignManagerFinalCheckCommentChanging(value);
					this.SendPropertyChanging();
					this._DesignManagerFinalCheckComment = value;
					this.SendPropertyChanged("DesignManagerFinalCheckComment");
					this.OnDesignManagerFinalCheckCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignManagerFinalCheckDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DesignManagerFinalCheckDate
		{
			get
			{
				return this._DesignManagerFinalCheckDate;
			}
			set
			{
				if ((this._DesignManagerFinalCheckDate != value))
				{
					this.OnDesignManagerFinalCheckDateChanging(value);
					this.SendPropertyChanging();
					this._DesignManagerFinalCheckDate = value;
					this.SendPropertyChanged("DesignManagerFinalCheckDate");
					this.OnDesignManagerFinalCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignManagerFinalCheckUserID", DbType="Int")]
		public System.Nullable<int> DesignManagerFinalCheckUserID
		{
			get
			{
				return this._DesignManagerFinalCheckUserID;
			}
			set
			{
				if ((this._DesignManagerFinalCheckUserID != value))
				{
					if (this._User3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignManagerFinalCheckUserIDChanging(value);
					this.SendPropertyChanging();
					this._DesignManagerFinalCheckUserID = value;
					this.SendPropertyChanged("DesignManagerFinalCheckUserID");
					this.OnDesignManagerFinalCheckUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAssistantComment", DbType="NVarChar(MAX)")]
		public string NetworkAssistantComment
		{
			get
			{
				return this._NetworkAssistantComment;
			}
			set
			{
				if ((this._NetworkAssistantComment != value))
				{
					this.OnNetworkAssistantCommentChanging(value);
					this.SendPropertyChanging();
					this._NetworkAssistantComment = value;
					this.SendPropertyChanged("NetworkAssistantComment");
					this.OnNetworkAssistantCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAssistantDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkAssistantDate
		{
			get
			{
				return this._NetworkAssistantDate;
			}
			set
			{
				if ((this._NetworkAssistantDate != value))
				{
					this.OnNetworkAssistantDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkAssistantDate = value;
					this.SendPropertyChanged("NetworkAssistantDate");
					this.OnNetworkAssistantDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAssistantUserID", DbType="Int")]
		public System.Nullable<int> NetworkAssistantUserID
		{
			get
			{
				return this._NetworkAssistantUserID;
			}
			set
			{
				if ((this._NetworkAssistantUserID != value))
				{
					if (this._User13.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNetworkAssistantUserIDChanging(value);
					this.SendPropertyChanging();
					this._NetworkAssistantUserID = value;
					this.SendPropertyChanged("NetworkAssistantUserID");
					this.OnNetworkAssistantUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationOfTheTelecommunicationEquipmentComment", DbType="NVarChar(MAX)")]
		public string AdministrationOfTheTelecommunicationEquipmentComment
		{
			get
			{
				return this._AdministrationOfTheTelecommunicationEquipmentComment;
			}
			set
			{
				if ((this._AdministrationOfTheTelecommunicationEquipmentComment != value))
				{
					this.OnAdministrationOfTheTelecommunicationEquipmentCommentChanging(value);
					this.SendPropertyChanging();
					this._AdministrationOfTheTelecommunicationEquipmentComment = value;
					this.SendPropertyChanged("AdministrationOfTheTelecommunicationEquipmentComment");
					this.OnAdministrationOfTheTelecommunicationEquipmentCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationOfTheTelecommunicationEquipmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AdministrationOfTheTelecommunicationEquipmentDate
		{
			get
			{
				return this._AdministrationOfTheTelecommunicationEquipmentDate;
			}
			set
			{
				if ((this._AdministrationOfTheTelecommunicationEquipmentDate != value))
				{
					this.OnAdministrationOfTheTelecommunicationEquipmentDateChanging(value);
					this.SendPropertyChanging();
					this._AdministrationOfTheTelecommunicationEquipmentDate = value;
					this.SendPropertyChanged("AdministrationOfTheTelecommunicationEquipmentDate");
					this.OnAdministrationOfTheTelecommunicationEquipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationOfTheTelecommunicationEquipmentUserID", DbType="Int")]
		public System.Nullable<int> AdministrationOfTheTelecommunicationEquipmentUserID
		{
			get
			{
				return this._AdministrationOfTheTelecommunicationEquipmentUserID;
			}
			set
			{
				if ((this._AdministrationOfTheTelecommunicationEquipmentUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdministrationOfTheTelecommunicationEquipmentUserIDChanging(value);
					this.SendPropertyChanging();
					this._AdministrationOfTheTelecommunicationEquipmentUserID = value;
					this.SendPropertyChanged("AdministrationOfTheTelecommunicationEquipmentUserID");
					this.OnAdministrationOfTheTelecommunicationEquipmentUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableAndNetworkDesignOfficeComment", DbType="NVarChar(MAX)")]
		public string CableAndNetworkDesignOfficeComment
		{
			get
			{
				return this._CableAndNetworkDesignOfficeComment;
			}
			set
			{
				if ((this._CableAndNetworkDesignOfficeComment != value))
				{
					this.OnCableAndNetworkDesignOfficeCommentChanging(value);
					this.SendPropertyChanging();
					this._CableAndNetworkDesignOfficeComment = value;
					this.SendPropertyChanged("CableAndNetworkDesignOfficeComment");
					this.OnCableAndNetworkDesignOfficeCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableAndNetworkDesignOfficeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CableAndNetworkDesignOfficeDate
		{
			get
			{
				return this._CableAndNetworkDesignOfficeDate;
			}
			set
			{
				if ((this._CableAndNetworkDesignOfficeDate != value))
				{
					this.OnCableAndNetworkDesignOfficeDateChanging(value);
					this.SendPropertyChanging();
					this._CableAndNetworkDesignOfficeDate = value;
					this.SendPropertyChanged("CableAndNetworkDesignOfficeDate");
					this.OnCableAndNetworkDesignOfficeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableAndNetworkDesignOfficeUserID", DbType="Int")]
		public System.Nullable<int> CableAndNetworkDesignOfficeUserID
		{
			get
			{
				return this._CableAndNetworkDesignOfficeUserID;
			}
			set
			{
				if ((this._CableAndNetworkDesignOfficeUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCableAndNetworkDesignOfficeUserIDChanging(value);
					this.SendPropertyChanging();
					this._CableAndNetworkDesignOfficeUserID = value;
					this.SendPropertyChanged("CableAndNetworkDesignOfficeUserID");
					this.OnCableAndNetworkDesignOfficeUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceHallComment", DbType="NVarChar(MAX)")]
		public string DeviceHallComment
		{
			get
			{
				return this._DeviceHallComment;
			}
			set
			{
				if ((this._DeviceHallComment != value))
				{
					this.OnDeviceHallCommentChanging(value);
					this.SendPropertyChanging();
					this._DeviceHallComment = value;
					this.SendPropertyChanged("DeviceHallComment");
					this.OnDeviceHallCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceHallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DeviceHallDate
		{
			get
			{
				return this._DeviceHallDate;
			}
			set
			{
				if ((this._DeviceHallDate != value))
				{
					this.OnDeviceHallDateChanging(value);
					this.SendPropertyChanging();
					this._DeviceHallDate = value;
					this.SendPropertyChanged("DeviceHallDate");
					this.OnDeviceHallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceHallUserID", DbType="Int")]
		public System.Nullable<int> DeviceHallUserID
		{
			get
			{
				return this._DeviceHallUserID;
			}
			set
			{
				if ((this._DeviceHallUserID != value))
				{
					if (this._User4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceHallUserIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceHallUserID = value;
					this.SendPropertyChanged("DeviceHallUserID");
					this.OnDeviceHallUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableAndNetworkDesignOfficeFile", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CableAndNetworkDesignOfficeFile
		{
			get
			{
				return this._CableAndNetworkDesignOfficeFile;
			}
			set
			{
				if ((this._CableAndNetworkDesignOfficeFile != value))
				{
					this.OnCableAndNetworkDesignOfficeFileChanging(value);
					this.SendPropertyChanging();
					this._CableAndNetworkDesignOfficeFile = value;
					this.SendPropertyChanged("CableAndNetworkDesignOfficeFile");
					this.OnCableAndNetworkDesignOfficeFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationOfTheTelecommunicationEquipmentOperationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AdministrationOfTheTelecommunicationEquipmentOperationDate
		{
			get
			{
				return this._AdministrationOfTheTelecommunicationEquipmentOperationDate;
			}
			set
			{
				if ((this._AdministrationOfTheTelecommunicationEquipmentOperationDate != value))
				{
					this.OnAdministrationOfTheTelecommunicationEquipmentOperationDateChanging(value);
					this.SendPropertyChanging();
					this._AdministrationOfTheTelecommunicationEquipmentOperationDate = value;
					this.SendPropertyChanged("AdministrationOfTheTelecommunicationEquipmentOperationDate");
					this.OnAdministrationOfTheTelecommunicationEquipmentOperationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchDesigningOfficeFile", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SwitchDesigningOfficeFile
		{
			get
			{
				return this._SwitchDesigningOfficeFile;
			}
			set
			{
				if ((this._SwitchDesigningOfficeFile != value))
				{
					this.OnSwitchDesigningOfficeFileChanging(value);
					this.SendPropertyChanging();
					this._SwitchDesigningOfficeFile = value;
					this.SendPropertyChanged("SwitchDesigningOfficeFile");
					this.OnSwitchDesigningOfficeFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CircuitCommandFile", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CircuitCommandFile
		{
			get
			{
				return this._CircuitCommandFile;
			}
			set
			{
				if ((this._CircuitCommandFile != value))
				{
					this.OnCircuitCommandFileChanging(value);
					this.SendPropertyChanging();
					this._CircuitCommandFile = value;
					this.SendPropertyChanged("CircuitCommandFile");
					this.OnCircuitCommandFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RigSpace", DbType="NVarChar(300)")]
		public string RigSpace
		{
			get
			{
				return this._RigSpace;
			}
			set
			{
				if ((this._RigSpace != value))
				{
					this.OnRigSpaceChanging(value);
					this.SendPropertyChanging();
					this._RigSpace = value;
					this.SendPropertyChanged("RigSpace");
					this.OnRigSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFibre", DbType="Bit NOT NULL")]
		public bool HasFibre
		{
			get
			{
				return this._HasFibre;
			}
			set
			{
				if ((this._HasFibre != value))
				{
					this.OnHasFibreChanging(value);
					this.SendPropertyChanging();
					this._HasFibre = value;
					this.SendPropertyChanged("HasFibre");
					this.OnHasFibreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="BigInt")]
		public System.Nullable<long> AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpaceAndPower_SpaceAndPowerPowerType", Storage="_SpaceAndPowerPowerTypes", ThisKey="ID", OtherKey="SpaceAndPowerID")]
		public EntitySet<SpaceAndPowerPowerType> SpaceAndPowerPowerTypes
		{
			get
			{
				return this._SpaceAndPowerPowerTypes;
			}
			set
			{
				this._SpaceAndPowerPowerTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpaceAndPower_Antenna", Storage="_Antennas", ThisKey="ID", OtherKey="SpaceAndPowerID")]
		public EntitySet<Antenna> Antennas
		{
			get
			{
				return this._Antennas;
			}
			set
			{
				this._Antennas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpaceAndPower", Storage="_Address", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.SpaceAndPowers.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpaceAndPower", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SpaceAndPower = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPower = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower", Storage="_User", ThisKey="AdministrationOfTheTelecommunicationEquipmentUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SpaceAndPowers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers.Add(this);
						this._AdministrationOfTheTelecommunicationEquipmentUserID = value.ID;
					}
					else
					{
						this._AdministrationOfTheTelecommunicationEquipmentUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower1", Storage="_User1", ThisKey="CableAndNetworkDesignOfficeUserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.SpaceAndPowers1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers1.Add(this);
						this._CableAndNetworkDesignOfficeUserID = value.ID;
					}
					else
					{
						this._CableAndNetworkDesignOfficeUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower2", Storage="_User2", ThisKey="DesignManagerUserID", OtherKey="ID", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.SpaceAndPowers2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers2.Add(this);
						this._DesignManagerUserID = value.ID;
					}
					else
					{
						this._DesignManagerUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower3", Storage="_User3", ThisKey="DesignManagerFinalCheckUserID", OtherKey="ID", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.SpaceAndPowers3.Remove(this);
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers3.Add(this);
						this._DesignManagerFinalCheckUserID = value.ID;
					}
					else
					{
						this._DesignManagerFinalCheckUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower4", Storage="_User4", ThisKey="DeviceHallUserID", OtherKey="ID", IsForeignKey=true)]
		public User User4
		{
			get
			{
				return this._User4.Entity;
			}
			set
			{
				User previousValue = this._User4.Entity;
				if (((previousValue != value) 
							|| (this._User4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User4.Entity = null;
						previousValue.SpaceAndPowers4.Remove(this);
					}
					this._User4.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers4.Add(this);
						this._DeviceHallUserID = value.ID;
					}
					else
					{
						this._DeviceHallUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower5", Storage="_User5", ThisKey="EnteghalUserID", OtherKey="ID", IsForeignKey=true)]
		public User User5
		{
			get
			{
				return this._User5.Entity;
			}
			set
			{
				User previousValue = this._User5.Entity;
				if (((previousValue != value) 
							|| (this._User5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User5.Entity = null;
						previousValue.SpaceAndPowers5.Remove(this);
					}
					this._User5.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers5.Add(this);
						this._EnteghalUserID = value.ID;
					}
					else
					{
						this._EnteghalUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower6", Storage="_User6", ThisKey="FazaUserID", OtherKey="ID", IsForeignKey=true)]
		public User User6
		{
			get
			{
				return this._User6.Entity;
			}
			set
			{
				User previousValue = this._User6.Entity;
				if (((previousValue != value) 
							|| (this._User6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User6.Entity = null;
						previousValue.SpaceAndPowers6.Remove(this);
					}
					this._User6.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers6.Add(this);
						this._FazaUserID = value.ID;
					}
					else
					{
						this._FazaUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower7", Storage="_User7", ThisKey="FinancialScopeUserID", OtherKey="ID", IsForeignKey=true)]
		public User User7
		{
			get
			{
				return this._User7.Entity;
			}
			set
			{
				User previousValue = this._User7.Entity;
				if (((previousValue != value) 
							|| (this._User7.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User7.Entity = null;
						previousValue.SpaceAndPowers7.Remove(this);
					}
					this._User7.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers7.Add(this);
						this._FinancialScopeUserID = value.ID;
					}
					else
					{
						this._FinancialScopeUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User7");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower8", Storage="_User8", ThisKey="GhardadUserID", OtherKey="ID", IsForeignKey=true)]
		public User User8
		{
			get
			{
				return this._User8.Entity;
			}
			set
			{
				User previousValue = this._User8.Entity;
				if (((previousValue != value) 
							|| (this._User8.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User8.Entity = null;
						previousValue.SpaceAndPowers8.Remove(this);
					}
					this._User8.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers8.Add(this);
						this._GhardadUserID = value.ID;
					}
					else
					{
						this._GhardadUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User8");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower9", Storage="_User9", ThisKey="HerasatUserID", OtherKey="ID", IsForeignKey=true)]
		public User User9
		{
			get
			{
				return this._User9.Entity;
			}
			set
			{
				User previousValue = this._User9.Entity;
				if (((previousValue != value) 
							|| (this._User9.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User9.Entity = null;
						previousValue.SpaceAndPowers9.Remove(this);
					}
					this._User9.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers9.Add(this);
						this._HerasatUserID = value.ID;
					}
					else
					{
						this._HerasatUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User9");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower10", Storage="_User10", ThisKey="ManagerUserID", OtherKey="ID", IsForeignKey=true)]
		public User User10
		{
			get
			{
				return this._User10.Entity;
			}
			set
			{
				User previousValue = this._User10.Entity;
				if (((previousValue != value) 
							|| (this._User10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User10.Entity = null;
						previousValue.SpaceAndPowers10.Remove(this);
					}
					this._User10.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers10.Add(this);
						this._ManagerUserID = value.ID;
					}
					else
					{
						this._ManagerUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower11", Storage="_User11", ThisKey="ModireMantagheUserID", OtherKey="ID", IsForeignKey=true)]
		public User User11
		{
			get
			{
				return this._User11.Entity;
			}
			set
			{
				User previousValue = this._User11.Entity;
				if (((previousValue != value) 
							|| (this._User11.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User11.Entity = null;
						previousValue.SpaceAndPowers11.Remove(this);
					}
					this._User11.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers11.Add(this);
						this._ModireMantagheUserID = value.ID;
					}
					else
					{
						this._ModireMantagheUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User11");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower12", Storage="_User12", ThisKey="ModireMohandesiUserID", OtherKey="ID", IsForeignKey=true)]
		public User User12
		{
			get
			{
				return this._User12.Entity;
			}
			set
			{
				User previousValue = this._User12.Entity;
				if (((previousValue != value) 
							|| (this._User12.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User12.Entity = null;
						previousValue.SpaceAndPowers12.Remove(this);
					}
					this._User12.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers12.Add(this);
						this._ModireMohandesiUserID = value.ID;
					}
					else
					{
						this._ModireMohandesiUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User12");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower13", Storage="_User13", ThisKey="NetworkAssistantUserID", OtherKey="ID", IsForeignKey=true)]
		public User User13
		{
			get
			{
				return this._User13.Entity;
			}
			set
			{
				User previousValue = this._User13.Entity;
				if (((previousValue != value) 
							|| (this._User13.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User13.Entity = null;
						previousValue.SpaceAndPowers13.Remove(this);
					}
					this._User13.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers13.Add(this);
						this._NetworkAssistantUserID = value.ID;
					}
					else
					{
						this._NetworkAssistantUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User13");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower14", Storage="_User14", ThisKey="NirooUserID", OtherKey="ID", IsForeignKey=true)]
		public User User14
		{
			get
			{
				return this._User14.Entity;
			}
			set
			{
				User previousValue = this._User14.Entity;
				if (((previousValue != value) 
							|| (this._User14.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User14.Entity = null;
						previousValue.SpaceAndPowers14.Remove(this);
					}
					this._User14.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers14.Add(this);
						this._NirooUserID = value.ID;
					}
					else
					{
						this._NirooUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User14");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower15", Storage="_User15", ThisKey="SakhtemanUserID", OtherKey="ID", IsForeignKey=true)]
		public User User15
		{
			get
			{
				return this._User15.Entity;
			}
			set
			{
				User previousValue = this._User15.Entity;
				if (((previousValue != value) 
							|| (this._User15.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User15.Entity = null;
						previousValue.SpaceAndPowers15.Remove(this);
					}
					this._User15.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers15.Add(this);
						this._SakhtemanUserID = value.ID;
					}
					else
					{
						this._SakhtemanUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User15");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower16", Storage="_User16", ThisKey="SooratHesabUserID", OtherKey="ID", IsForeignKey=true)]
		public User User16
		{
			get
			{
				return this._User16.Entity;
			}
			set
			{
				User previousValue = this._User16.Entity;
				if (((previousValue != value) 
							|| (this._User16.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User16.Entity = null;
						previousValue.SpaceAndPowers16.Remove(this);
					}
					this._User16.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers16.Add(this);
						this._SooratHesabUserID = value.ID;
					}
					else
					{
						this._SooratHesabUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User16");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower17", Storage="_User17", ThisKey="SwitchDesigningOfficeUserID", OtherKey="ID", IsForeignKey=true)]
		public User User17
		{
			get
			{
				return this._User17.Entity;
			}
			set
			{
				User previousValue = this._User17.Entity;
				if (((previousValue != value) 
							|| (this._User17.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User17.Entity = null;
						previousValue.SpaceAndPowers17.Remove(this);
					}
					this._User17.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers17.Add(this);
						this._SwitchDesigningOfficeUserID = value.ID;
					}
					else
					{
						this._SwitchDesigningOfficeUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User17");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SpaceAndPower", Storage="_Customer", ThisKey="SpaceAndPowerCustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.SpaceAndPowers.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowers.Add(this);
						this._SpaceAndPowerCustomerID = value.ID;
					}
					else
					{
						this._SpaceAndPowerCustomerID = default(long);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpaceAndPowerPowerTypes(SpaceAndPowerPowerType entity)
		{
			this.SendPropertyChanging();
			entity.SpaceAndPower = this;
		}
		
		private void detach_SpaceAndPowerPowerTypes(SpaceAndPowerPowerType entity)
		{
			this.SendPropertyChanging();
			entity.SpaceAndPower = null;
		}
		
		private void attach_Antennas(Antenna entity)
		{
			this.SendPropertyChanging();
			entity.SpaceAndPower = this;
		}
		
		private void detach_Antennas(Antenna entity)
		{
			this.SendPropertyChanging();
			entity.SpaceAndPower = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpaceAndPowerCustomer")]
	public partial class SpaceAndPowerCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Title;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<long> _Mobile;
		
		private System.Nullable<long> _Fax;
		
		private string _Address;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnMobileChanging(System.Nullable<long> value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(System.Nullable<long> value);
    partial void OnFaxChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SpaceAndPowerCustomer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="BigInt")]
		public System.Nullable<long> Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="BigInt")]
		public System.Nullable<long> Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpaceAndPowerPowerType")]
	public partial class SpaceAndPowerPowerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _SpaceAndPowerID;
		
		private int _PowerTypeID;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<PowerType> _PowerType;
		
		private EntityRef<SpaceAndPower> _SpaceAndPower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSpaceAndPowerIDChanging(long value);
    partial void OnSpaceAndPowerIDChanged();
    partial void OnPowerTypeIDChanging(int value);
    partial void OnPowerTypeIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SpaceAndPowerPowerType()
		{
			this._PowerType = default(EntityRef<PowerType>);
			this._SpaceAndPower = default(EntityRef<SpaceAndPower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceAndPowerID", DbType="BigInt NOT NULL")]
		public long SpaceAndPowerID
		{
			get
			{
				return this._SpaceAndPowerID;
			}
			set
			{
				if ((this._SpaceAndPowerID != value))
				{
					if (this._SpaceAndPower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpaceAndPowerIDChanging(value);
					this.SendPropertyChanging();
					this._SpaceAndPowerID = value;
					this.SendPropertyChanged("SpaceAndPowerID");
					this.OnSpaceAndPowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerTypeID", DbType="Int NOT NULL")]
		public int PowerTypeID
		{
			get
			{
				return this._PowerTypeID;
			}
			set
			{
				if ((this._PowerTypeID != value))
				{
					if (this._PowerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPowerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PowerTypeID = value;
					this.SendPropertyChanged("PowerTypeID");
					this.OnPowerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PowerType_SpaceAndPowerPowerType", Storage="_PowerType", ThisKey="PowerTypeID", OtherKey="ID", IsForeignKey=true)]
		public PowerType PowerType
		{
			get
			{
				return this._PowerType.Entity;
			}
			set
			{
				PowerType previousValue = this._PowerType.Entity;
				if (((previousValue != value) 
							|| (this._PowerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PowerType.Entity = null;
						previousValue.SpaceAndPowerPowerTypes.Remove(this);
					}
					this._PowerType.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowerPowerTypes.Add(this);
						this._PowerTypeID = value.ID;
					}
					else
					{
						this._PowerTypeID = default(int);
					}
					this.SendPropertyChanged("PowerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpaceAndPower_SpaceAndPowerPowerType", Storage="_SpaceAndPower", ThisKey="SpaceAndPowerID", OtherKey="ID", IsForeignKey=true)]
		public SpaceAndPower SpaceAndPower
		{
			get
			{
				return this._SpaceAndPower.Entity;
			}
			set
			{
				SpaceAndPower previousValue = this._SpaceAndPower.Entity;
				if (((previousValue != value) 
							|| (this._SpaceAndPower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpaceAndPower.Entity = null;
						previousValue.SpaceAndPowerPowerTypes.Remove(this);
					}
					this._SpaceAndPower.Entity = value;
					if ((value != null))
					{
						value.SpaceAndPowerPowerTypes.Add(this);
						this._SpaceAndPowerID = value.ID;
					}
					else
					{
						this._SpaceAndPowerID = default(long);
					}
					this.SendPropertyChanged("SpaceAndPower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialConditionPrioritize")]
	public partial class SpecialConditionPrioritize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpecialCondition;
		
		private int _Prioritize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialConditionChanging(string value);
    partial void OnSpecialConditionChanged();
    partial void OnPrioritizeChanging(int value);
    partial void OnPrioritizeChanged();
    #endregion
		
		public SpecialConditionPrioritize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialCondition", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpecialCondition
		{
			get
			{
				return this._SpecialCondition;
			}
			set
			{
				if ((this._SpecialCondition != value))
				{
					this.OnSpecialConditionChanging(value);
					this.SendPropertyChanging();
					this._SpecialCondition = value;
					this.SendPropertyChanged("SpecialCondition");
					this.OnSpecialConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prioritize", DbType="Int NOT NULL")]
		public int Prioritize
		{
			get
			{
				return this._Prioritize;
			}
			set
			{
				if ((this._Prioritize != value))
				{
					this.OnPrioritizeChanging(value);
					this.SendPropertyChanging();
					this._Prioritize = value;
					this.SendPropertyChanged("Prioritize");
					this.OnPrioritizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialConditions")]
	public partial class SpecialCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private bool _EqualityOfBuchtTypeCusromerSide;
		
		private bool _EqualityOfBuchtTypeOptical;
		
		private bool _NotEqualityOfBuchtType;
		
		private bool _NotEqualityOfBuchtTypeOptical;
		
		private bool _ReturnedFromWiring;
		
		private bool _BeFreeOldPhone;
		
		private bool _ChangeLocationInsider;
		
		private bool _IsDebt;
		
		private bool _IsOpticalCabinet;
		
		private bool _MiddlePointSpecialWire;
		
		private bool _IsOpticalE1;
		
		private bool _IsE1PTP;
		
		private bool _IsGSM;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnEqualityOfBuchtTypeCusromerSideChanging(bool value);
    partial void OnEqualityOfBuchtTypeCusromerSideChanged();
    partial void OnEqualityOfBuchtTypeOpticalChanging(bool value);
    partial void OnEqualityOfBuchtTypeOpticalChanged();
    partial void OnNotEqualityOfBuchtTypeChanging(bool value);
    partial void OnNotEqualityOfBuchtTypeChanged();
    partial void OnNotEqualityOfBuchtTypeOpticalChanging(bool value);
    partial void OnNotEqualityOfBuchtTypeOpticalChanged();
    partial void OnReturnedFromWiringChanging(bool value);
    partial void OnReturnedFromWiringChanged();
    partial void OnBeFreeOldPhoneChanging(bool value);
    partial void OnBeFreeOldPhoneChanged();
    partial void OnChangeLocationInsiderChanging(bool value);
    partial void OnChangeLocationInsiderChanged();
    partial void OnIsDebtChanging(bool value);
    partial void OnIsDebtChanged();
    partial void OnIsOpticalCabinetChanging(bool value);
    partial void OnIsOpticalCabinetChanged();
    partial void OnMiddlePointSpecialWireChanging(bool value);
    partial void OnMiddlePointSpecialWireChanged();
    partial void OnIsOpticalE1Changing(bool value);
    partial void OnIsOpticalE1Changed();
    partial void OnIsE1PTPChanging(bool value);
    partial void OnIsE1PTPChanged();
    partial void OnIsGSMChanging(bool value);
    partial void OnIsGSMChanged();
    #endregion
		
		public SpecialCondition()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EqualityOfBuchtTypeCusromerSide", DbType="Bit NOT NULL")]
		public bool EqualityOfBuchtTypeCusromerSide
		{
			get
			{
				return this._EqualityOfBuchtTypeCusromerSide;
			}
			set
			{
				if ((this._EqualityOfBuchtTypeCusromerSide != value))
				{
					this.OnEqualityOfBuchtTypeCusromerSideChanging(value);
					this.SendPropertyChanging();
					this._EqualityOfBuchtTypeCusromerSide = value;
					this.SendPropertyChanged("EqualityOfBuchtTypeCusromerSide");
					this.OnEqualityOfBuchtTypeCusromerSideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EqualityOfBuchtTypeOptical", DbType="Bit NOT NULL")]
		public bool EqualityOfBuchtTypeOptical
		{
			get
			{
				return this._EqualityOfBuchtTypeOptical;
			}
			set
			{
				if ((this._EqualityOfBuchtTypeOptical != value))
				{
					this.OnEqualityOfBuchtTypeOpticalChanging(value);
					this.SendPropertyChanging();
					this._EqualityOfBuchtTypeOptical = value;
					this.SendPropertyChanged("EqualityOfBuchtTypeOptical");
					this.OnEqualityOfBuchtTypeOpticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotEqualityOfBuchtType", DbType="Bit NOT NULL")]
		public bool NotEqualityOfBuchtType
		{
			get
			{
				return this._NotEqualityOfBuchtType;
			}
			set
			{
				if ((this._NotEqualityOfBuchtType != value))
				{
					this.OnNotEqualityOfBuchtTypeChanging(value);
					this.SendPropertyChanging();
					this._NotEqualityOfBuchtType = value;
					this.SendPropertyChanged("NotEqualityOfBuchtType");
					this.OnNotEqualityOfBuchtTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotEqualityOfBuchtTypeOptical", DbType="Bit NOT NULL")]
		public bool NotEqualityOfBuchtTypeOptical
		{
			get
			{
				return this._NotEqualityOfBuchtTypeOptical;
			}
			set
			{
				if ((this._NotEqualityOfBuchtTypeOptical != value))
				{
					this.OnNotEqualityOfBuchtTypeOpticalChanging(value);
					this.SendPropertyChanging();
					this._NotEqualityOfBuchtTypeOptical = value;
					this.SendPropertyChanged("NotEqualityOfBuchtTypeOptical");
					this.OnNotEqualityOfBuchtTypeOpticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnedFromWiring", DbType="Bit NOT NULL")]
		public bool ReturnedFromWiring
		{
			get
			{
				return this._ReturnedFromWiring;
			}
			set
			{
				if ((this._ReturnedFromWiring != value))
				{
					this.OnReturnedFromWiringChanging(value);
					this.SendPropertyChanging();
					this._ReturnedFromWiring = value;
					this.SendPropertyChanged("ReturnedFromWiring");
					this.OnReturnedFromWiringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeFreeOldPhone", DbType="Bit NOT NULL")]
		public bool BeFreeOldPhone
		{
			get
			{
				return this._BeFreeOldPhone;
			}
			set
			{
				if ((this._BeFreeOldPhone != value))
				{
					this.OnBeFreeOldPhoneChanging(value);
					this.SendPropertyChanging();
					this._BeFreeOldPhone = value;
					this.SendPropertyChanged("BeFreeOldPhone");
					this.OnBeFreeOldPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeLocationInsider", DbType="Bit NOT NULL")]
		public bool ChangeLocationInsider
		{
			get
			{
				return this._ChangeLocationInsider;
			}
			set
			{
				if ((this._ChangeLocationInsider != value))
				{
					this.OnChangeLocationInsiderChanging(value);
					this.SendPropertyChanging();
					this._ChangeLocationInsider = value;
					this.SendPropertyChanged("ChangeLocationInsider");
					this.OnChangeLocationInsiderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDebt", DbType="Bit NOT NULL")]
		public bool IsDebt
		{
			get
			{
				return this._IsDebt;
			}
			set
			{
				if ((this._IsDebt != value))
				{
					this.OnIsDebtChanging(value);
					this.SendPropertyChanging();
					this._IsDebt = value;
					this.SendPropertyChanged("IsDebt");
					this.OnIsDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOpticalCabinet", DbType="Bit NOT NULL")]
		public bool IsOpticalCabinet
		{
			get
			{
				return this._IsOpticalCabinet;
			}
			set
			{
				if ((this._IsOpticalCabinet != value))
				{
					this.OnIsOpticalCabinetChanging(value);
					this.SendPropertyChanging();
					this._IsOpticalCabinet = value;
					this.SendPropertyChanged("IsOpticalCabinet");
					this.OnIsOpticalCabinetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddlePointSpecialWire", DbType="Bit NOT NULL")]
		public bool MiddlePointSpecialWire
		{
			get
			{
				return this._MiddlePointSpecialWire;
			}
			set
			{
				if ((this._MiddlePointSpecialWire != value))
				{
					this.OnMiddlePointSpecialWireChanging(value);
					this.SendPropertyChanging();
					this._MiddlePointSpecialWire = value;
					this.SendPropertyChanged("MiddlePointSpecialWire");
					this.OnMiddlePointSpecialWireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOpticalE1", DbType="Bit NOT NULL")]
		public bool IsOpticalE1
		{
			get
			{
				return this._IsOpticalE1;
			}
			set
			{
				if ((this._IsOpticalE1 != value))
				{
					this.OnIsOpticalE1Changing(value);
					this.SendPropertyChanging();
					this._IsOpticalE1 = value;
					this.SendPropertyChanged("IsOpticalE1");
					this.OnIsOpticalE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsE1PTP", DbType="Bit NOT NULL")]
		public bool IsE1PTP
		{
			get
			{
				return this._IsE1PTP;
			}
			set
			{
				if ((this._IsE1PTP != value))
				{
					this.OnIsE1PTPChanging(value);
					this.SendPropertyChanging();
					this._IsE1PTP = value;
					this.SendPropertyChanged("IsE1PTP");
					this.OnIsE1PTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGSM", DbType="Bit NOT NULL")]
		public bool IsGSM
		{
			get
			{
				return this._IsGSM;
			}
			set
			{
				if ((this._IsGSM != value))
				{
					this.OnIsGSMChanging(value);
					this.SendPropertyChanging();
					this._IsGSM = value;
					this.SendPropertyChanged("IsGSM");
					this.OnIsGSMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialCondition", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SpecialCondition = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SpecialCondition = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialPrivateCable")]
	public partial class SpecialPrivateCable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private string _CableCode;
		
		private System.Nullable<long> _CustomerID;
		
		private System.Nullable<long> _RequestID;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<bool> _Type;
		
		private System.Nullable<byte> _Status;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnCableCodeChanging(string value);
    partial void OnCableCodeChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnTypeChanging(System.Nullable<bool> value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public SpecialPrivateCable()
		{
			this._Center = default(EntityRef<Center>);
			this._Request = default(EntityRef<Request>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CableCode
		{
			get
			{
				return this._CableCode;
			}
			set
			{
				if ((this._CableCode != value))
				{
					this.OnCableCodeChanging(value);
					this.SendPropertyChanging();
					this._CableCode = value;
					this.SendPropertyChanged("CableCode");
					this.OnCableCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Bit")]
		public System.Nullable<bool> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_SpecialPrivateCable", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.SpecialPrivateCables.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.SpecialPrivateCables.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialPrivateCable", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SpecialPrivateCables.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SpecialPrivateCables.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SpecialPrivateCable", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.SpecialPrivateCables.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.SpecialPrivateCables.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialService")]
	public partial class SpecialService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Xml.Linq.XElement _InstallSpecialService;
		
		private System.Xml.Linq.XElement _UninstallSpecialService;
		
		private System.Nullable<bool> _HasReport;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private string _InstallHour;
		
		private bool _IsApplied;
		
		private System.Nullable<System.DateTime> _UninstallDate;
		
		private string _LetterNo;
		
		private string _SpecialServiceRequestReference;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInstallSpecialServiceChanging(System.Xml.Linq.XElement value);
    partial void OnInstallSpecialServiceChanged();
    partial void OnUninstallSpecialServiceChanging(System.Xml.Linq.XElement value);
    partial void OnUninstallSpecialServiceChanged();
    partial void OnHasReportChanging(System.Nullable<bool> value);
    partial void OnHasReportChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnInstallHourChanging(string value);
    partial void OnInstallHourChanged();
    partial void OnIsAppliedChanging(bool value);
    partial void OnIsAppliedChanged();
    partial void OnUninstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUninstallDateChanged();
    partial void OnLetterNoChanging(string value);
    partial void OnLetterNoChanged();
    partial void OnSpecialServiceRequestReferenceChanging(string value);
    partial void OnSpecialServiceRequestReferenceChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SpecialService()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallSpecialService", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement InstallSpecialService
		{
			get
			{
				return this._InstallSpecialService;
			}
			set
			{
				if ((this._InstallSpecialService != value))
				{
					this.OnInstallSpecialServiceChanging(value);
					this.SendPropertyChanging();
					this._InstallSpecialService = value;
					this.SendPropertyChanged("InstallSpecialService");
					this.OnInstallSpecialServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UninstallSpecialService", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement UninstallSpecialService
		{
			get
			{
				return this._UninstallSpecialService;
			}
			set
			{
				if ((this._UninstallSpecialService != value))
				{
					this.OnUninstallSpecialServiceChanging(value);
					this.SendPropertyChanging();
					this._UninstallSpecialService = value;
					this.SendPropertyChanged("UninstallSpecialService");
					this.OnUninstallSpecialServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasReport", DbType="Bit")]
		public System.Nullable<bool> HasReport
		{
			get
			{
				return this._HasReport;
			}
			set
			{
				if ((this._HasReport != value))
				{
					this.OnHasReportChanging(value);
					this.SendPropertyChanging();
					this._HasReport = value;
					this.SendPropertyChanged("HasReport");
					this.OnHasReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallHour", DbType="NChar(10)")]
		public string InstallHour
		{
			get
			{
				return this._InstallHour;
			}
			set
			{
				if ((this._InstallHour != value))
				{
					this.OnInstallHourChanging(value);
					this.SendPropertyChanging();
					this._InstallHour = value;
					this.SendPropertyChanged("InstallHour");
					this.OnInstallHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApplied", DbType="Bit NOT NULL")]
		public bool IsApplied
		{
			get
			{
				return this._IsApplied;
			}
			set
			{
				if ((this._IsApplied != value))
				{
					this.OnIsAppliedChanging(value);
					this.SendPropertyChanging();
					this._IsApplied = value;
					this.SendPropertyChanged("IsApplied");
					this.OnIsAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UninstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UninstallDate
		{
			get
			{
				return this._UninstallDate;
			}
			set
			{
				if ((this._UninstallDate != value))
				{
					this.OnUninstallDateChanging(value);
					this.SendPropertyChanging();
					this._UninstallDate = value;
					this.SendPropertyChanged("UninstallDate");
					this.OnUninstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterNo", DbType="NVarChar(20)")]
		public string LetterNo
		{
			get
			{
				return this._LetterNo;
			}
			set
			{
				if ((this._LetterNo != value))
				{
					this.OnLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LetterNo = value;
					this.SendPropertyChanged("LetterNo");
					this.OnLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialServiceRequestReference", DbType="NVarChar(128)")]
		public string SpecialServiceRequestReference
		{
			get
			{
				return this._SpecialServiceRequestReference;
			}
			set
			{
				if ((this._SpecialServiceRequestReference != value))
				{
					this.OnSpecialServiceRequestReferenceChanging(value);
					this.SendPropertyChanging();
					this._SpecialServiceRequestReference = value;
					this.SendPropertyChanged("SpecialServiceRequestReference");
					this.OnSpecialServiceRequestReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialService", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SpecialService = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SpecialService = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialServiceType")]
	public partial class SpecialServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private long _Cost;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<byte> _PaymentType;
		
		private EntitySet<SwitchSpecialService> _SwitchSpecialServices;
		
		private EntitySet<TelephoneSpecialServiceType> _TelephoneSpecialServiceTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCostChanging(long value);
    partial void OnCostChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnPaymentTypeChanging(System.Nullable<byte> value);
    partial void OnPaymentTypeChanged();
    #endregion
		
		public SpecialServiceType()
		{
			this._SwitchSpecialServices = new EntitySet<SwitchSpecialService>(new Action<SwitchSpecialService>(this.attach_SwitchSpecialServices), new Action<SwitchSpecialService>(this.detach_SwitchSpecialServices));
			this._TelephoneSpecialServiceTypes = new EntitySet<TelephoneSpecialServiceType>(new Action<TelephoneSpecialServiceType>(this.attach_TelephoneSpecialServiceTypes), new Action<TelephoneSpecialServiceType>(this.detach_TelephoneSpecialServiceTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="BigInt NOT NULL")]
		public long Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="TinyInt")]
		public System.Nullable<byte> PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialServiceType_SwitchSpecialService", Storage="_SwitchSpecialServices", ThisKey="ID", OtherKey="SpecialServiceTypeID")]
		public EntitySet<SwitchSpecialService> SwitchSpecialServices
		{
			get
			{
				return this._SwitchSpecialServices;
			}
			set
			{
				this._SwitchSpecialServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialServiceType_TelephoneSpecialServiceType", Storage="_TelephoneSpecialServiceTypes", ThisKey="ID", OtherKey="SpecialServiceTypeID")]
		public EntitySet<TelephoneSpecialServiceType> TelephoneSpecialServiceTypes
		{
			get
			{
				return this._TelephoneSpecialServiceTypes;
			}
			set
			{
				this._TelephoneSpecialServiceTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SwitchSpecialServices(SwitchSpecialService entity)
		{
			this.SendPropertyChanging();
			entity.SpecialServiceType = this;
		}
		
		private void detach_SwitchSpecialServices(SwitchSpecialService entity)
		{
			this.SendPropertyChanging();
			entity.SpecialServiceType = null;
		}
		
		private void attach_TelephoneSpecialServiceTypes(TelephoneSpecialServiceType entity)
		{
			this.SendPropertyChanging();
			entity.SpecialServiceType = this;
		}
		
		private void detach_TelephoneSpecialServiceTypes(TelephoneSpecialServiceType entity)
		{
			this.SendPropertyChanging();
			entity.SpecialServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialWire")]
	public partial class SpecialWire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private int _CustomerTypeID;
		
		private System.Nullable<int> _CustomerGroupID;
		
		private string _CompanyCode;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private System.Nullable<long> _NearestTelephone;
		
		private long _TelephoneNo;
		
		private int _BuchtType;
		
		private System.Nullable<long> _OtherBuchtID;
		
		private System.Nullable<System.DateTime> _SetupDate;
		
		private int _SpecialWireType;
		
		private System.Nullable<long> _SecondOtherBuchtID;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<BuchtType> _BuchtType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnCustomerTypeIDChanging(int value);
    partial void OnCustomerTypeIDChanged();
    partial void OnCustomerGroupIDChanging(System.Nullable<int> value);
    partial void OnCustomerGroupIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnNearestTelephoneChanging(System.Nullable<long> value);
    partial void OnNearestTelephoneChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnBuchtTypeChanging(int value);
    partial void OnBuchtTypeChanged();
    partial void OnOtherBuchtIDChanging(System.Nullable<long> value);
    partial void OnOtherBuchtIDChanged();
    partial void OnSetupDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSetupDateChanged();
    partial void OnSpecialWireTypeChanging(int value);
    partial void OnSpecialWireTypeChanged();
    partial void OnSecondOtherBuchtIDChanging(System.Nullable<long> value);
    partial void OnSecondOtherBuchtIDChanged();
    #endregion
		
		public SpecialWire()
		{
			this._Request = default(EntityRef<Request>);
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._BuchtType1 = default(EntityRef<BuchtType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int NOT NULL")]
		public int CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGroupID", DbType="Int")]
		public System.Nullable<int> CustomerGroupID
		{
			get
			{
				return this._CustomerGroupID;
			}
			set
			{
				if ((this._CustomerGroupID != value))
				{
					this.OnCustomerGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerGroupID = value;
					this.SendPropertyChanged("CustomerGroupID");
					this.OnCustomerGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephone", DbType="BigInt")]
		public System.Nullable<long> NearestTelephone
		{
			get
			{
				return this._NearestTelephone;
			}
			set
			{
				if ((this._NearestTelephone != value))
				{
					this.OnNearestTelephoneChanging(value);
					this.SendPropertyChanging();
					this._NearestTelephone = value;
					this.SendPropertyChanged("NearestTelephone");
					this.OnNearestTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtType", DbType="Int NOT NULL")]
		public int BuchtType
		{
			get
			{
				return this._BuchtType;
			}
			set
			{
				if ((this._BuchtType != value))
				{
					if (this._BuchtType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtTypeChanging(value);
					this.SendPropertyChanging();
					this._BuchtType = value;
					this.SendPropertyChanged("BuchtType");
					this.OnBuchtTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtID", DbType="BigInt")]
		public System.Nullable<long> OtherBuchtID
		{
			get
			{
				return this._OtherBuchtID;
			}
			set
			{
				if ((this._OtherBuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OtherBuchtID = value;
					this.SendPropertyChanged("OtherBuchtID");
					this.OnOtherBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SetupDate
		{
			get
			{
				return this._SetupDate;
			}
			set
			{
				if ((this._SetupDate != value))
				{
					this.OnSetupDateChanging(value);
					this.SendPropertyChanging();
					this._SetupDate = value;
					this.SendPropertyChanged("SetupDate");
					this.OnSetupDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialWireType", DbType="Int NOT NULL")]
		public int SpecialWireType
		{
			get
			{
				return this._SpecialWireType;
			}
			set
			{
				if ((this._SpecialWireType != value))
				{
					this.OnSpecialWireTypeChanging(value);
					this.SendPropertyChanging();
					this._SpecialWireType = value;
					this.SendPropertyChanged("SpecialWireType");
					this.OnSpecialWireTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondOtherBuchtID", DbType="BigInt")]
		public System.Nullable<long> SecondOtherBuchtID
		{
			get
			{
				return this._SecondOtherBuchtID;
			}
			set
			{
				if ((this._SecondOtherBuchtID != value))
				{
					this.OnSecondOtherBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._SecondOtherBuchtID = value;
					this.SendPropertyChanged("SecondOtherBuchtID");
					this.OnSecondOtherBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialWire", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SpecialWire = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SpecialWire = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWire", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.SpecialWires.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.SpecialWires.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWire1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.SpecialWires1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.SpecialWires1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_SpecialWire", Storage="_Bucht", ThisKey="OtherBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.SpecialWires.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.SpecialWires.Add(this);
						this._OtherBuchtID = value.ID;
					}
					else
					{
						this._OtherBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuchtType_SpecialWire", Storage="_BuchtType1", ThisKey="BuchtType", OtherKey="ID", IsForeignKey=true)]
		public BuchtType BuchtType1
		{
			get
			{
				return this._BuchtType1.Entity;
			}
			set
			{
				BuchtType previousValue = this._BuchtType1.Entity;
				if (((previousValue != value) 
							|| (this._BuchtType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuchtType1.Entity = null;
						previousValue.SpecialWires.Remove(this);
					}
					this._BuchtType1.Entity = value;
					if ((value != null))
					{
						value.SpecialWires.Add(this);
						this._BuchtType = value.ID;
					}
					else
					{
						this._BuchtType = default(int);
					}
					this.SendPropertyChanged("BuchtType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialWireAddresses")]
	public partial class SpecialWireAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _BuchtID;
		
		private long _TelephoneNo;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private System.Nullable<long> _SecondBuchtID;
		
		private System.Nullable<int> _SpecialTypeID;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuchtIDChanging(long value);
    partial void OnBuchtIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnSecondBuchtIDChanging(System.Nullable<long> value);
    partial void OnSecondBuchtIDChanged();
    partial void OnSpecialTypeIDChanging(System.Nullable<int> value);
    partial void OnSpecialTypeIDChanged();
    #endregion
		
		public SpecialWireAddress()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondBuchtID", DbType="BigInt")]
		public System.Nullable<long> SecondBuchtID
		{
			get
			{
				return this._SecondBuchtID;
			}
			set
			{
				if ((this._SecondBuchtID != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecondBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._SecondBuchtID = value;
					this.SendPropertyChanged("SecondBuchtID");
					this.OnSecondBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialTypeID", DbType="Int")]
		public System.Nullable<int> SpecialTypeID
		{
			get
			{
				return this._SpecialTypeID;
			}
			set
			{
				if ((this._SpecialTypeID != value))
				{
					this.OnSpecialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialTypeID = value;
					this.SendPropertyChanged("SpecialTypeID");
					this.OnSpecialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWireAddress", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.SpecialWireAddresses.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.SpecialWireAddresses.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWireAddress1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.SpecialWireAddresses1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.SpecialWireAddresses1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_SpecialWireAddress", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.SpecialWireAddress = null;
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.SpecialWireAddress = this;
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_SpecialWireAddress1", Storage="_Bucht1", ThisKey="SecondBuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.SpecialWireAddresses.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.SpecialWireAddresses.Add(this);
						this._SecondBuchtID = value.ID;
					}
					else
					{
						this._SecondBuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SpecialWireAddress", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.SpecialWireAddresses.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.SpecialWireAddresses.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialWirePoints")]
	public partial class SpecialWirePoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private int _CenterID;
		
		private string _PostalCode;
		
		private string _AddressContent;
		
		private System.Nullable<long> _NearestTelephoneNo;
		
		private System.Nullable<long> _InstallAddressID;
		
		private int _SpecialWireType;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnAddressContentChanging(string value);
    partial void OnAddressContentChanged();
    partial void OnNearestTelephoneNoChanging(System.Nullable<long> value);
    partial void OnNearestTelephoneNoChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnSpecialWireTypeChanging(int value);
    partial void OnSpecialWireTypeChanged();
    #endregion
		
		public SpecialWirePoint()
		{
			this._Address = default(EntityRef<Address>);
			this._Center = default(EntityRef<Center>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(50)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressContent", DbType="NVarChar(MAX)")]
		public string AddressContent
		{
			get
			{
				return this._AddressContent;
			}
			set
			{
				if ((this._AddressContent != value))
				{
					this.OnAddressContentChanging(value);
					this.SendPropertyChanging();
					this._AddressContent = value;
					this.SendPropertyChanged("AddressContent");
					this.OnAddressContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> NearestTelephoneNo
		{
			get
			{
				return this._NearestTelephoneNo;
			}
			set
			{
				if ((this._NearestTelephoneNo != value))
				{
					this.OnNearestTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._NearestTelephoneNo = value;
					this.SendPropertyChanged("NearestTelephoneNo");
					this.OnNearestTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialWireType", DbType="Int NOT NULL")]
		public int SpecialWireType
		{
			get
			{
				return this._SpecialWireType;
			}
			set
			{
				if ((this._SpecialWireType != value))
				{
					this.OnSpecialWireTypeChanging(value);
					this.SendPropertyChanging();
					this._SpecialWireType = value;
					this.SendPropertyChanged("SpecialWireType");
					this.OnSpecialWireTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_SpecialWirePoint", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.SpecialWirePoints.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.SpecialWirePoints.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_SpecialWirePoint", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.SpecialWirePoints.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.SpecialWirePoints.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SpecialWirePoint", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SpecialWirePoints.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SpecialWirePoints.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RequestStepID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Title;
		
		private System.DateTime _InsertDate;
		
		private byte _StatusType;
		
		private EntitySet<InstallLine> _InstallLines;
		
		private EntitySet<Request> _Requests;
		
		private EntityRef<Status> _Status2;
		
		private EntitySet<StatusLog> _StatusLogs;
		
		private EntitySet<StatusLog> _StatusLogs1;
		
		private EntitySet<SubFlowStatus> _SubFlowStatus;
		
		private EntitySet<WaitingList> _WaitingLists;
		
		private EntitySet<Wiring> _Wirings;
		
		private EntitySet<Wiring> _Wirings1;
		
		private EntitySet<Wiring> _Wirings2;
		
		private EntitySet<WorkFlowRule> _WorkFlowRules;
		
		private EntitySet<WorkFlowRule> _WorkFlowRules1;
		
		private EntityRef<RequestStep> _RequestStep;
		
		private EntityRef<Status> _Status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestStepIDChanging(int value);
    partial void OnRequestStepIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnStatusTypeChanging(byte value);
    partial void OnStatusTypeChanged();
    #endregion
		
		public Status()
		{
			this._InstallLines = new EntitySet<InstallLine>(new Action<InstallLine>(this.attach_InstallLines), new Action<InstallLine>(this.detach_InstallLines));
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._Status2 = default(EntityRef<Status>);
			this._StatusLogs = new EntitySet<StatusLog>(new Action<StatusLog>(this.attach_StatusLogs), new Action<StatusLog>(this.detach_StatusLogs));
			this._StatusLogs1 = new EntitySet<StatusLog>(new Action<StatusLog>(this.attach_StatusLogs1), new Action<StatusLog>(this.detach_StatusLogs1));
			this._SubFlowStatus = new EntitySet<SubFlowStatus>(new Action<SubFlowStatus>(this.attach_SubFlowStatus), new Action<SubFlowStatus>(this.detach_SubFlowStatus));
			this._WaitingLists = new EntitySet<WaitingList>(new Action<WaitingList>(this.attach_WaitingLists), new Action<WaitingList>(this.detach_WaitingLists));
			this._Wirings = new EntitySet<Wiring>(new Action<Wiring>(this.attach_Wirings), new Action<Wiring>(this.detach_Wirings));
			this._Wirings1 = new EntitySet<Wiring>(new Action<Wiring>(this.attach_Wirings1), new Action<Wiring>(this.detach_Wirings1));
			this._Wirings2 = new EntitySet<Wiring>(new Action<Wiring>(this.attach_Wirings2), new Action<Wiring>(this.detach_Wirings2));
			this._WorkFlowRules = new EntitySet<WorkFlowRule>(new Action<WorkFlowRule>(this.attach_WorkFlowRules), new Action<WorkFlowRule>(this.detach_WorkFlowRules));
			this._WorkFlowRules1 = new EntitySet<WorkFlowRule>(new Action<WorkFlowRule>(this.attach_WorkFlowRules1), new Action<WorkFlowRule>(this.detach_WorkFlowRules1));
			this._RequestStep = default(EntityRef<RequestStep>);
			this._Status1 = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStepID", DbType="Int NOT NULL")]
		public int RequestStepID
		{
			get
			{
				return this._RequestStepID;
			}
			set
			{
				if ((this._RequestStepID != value))
				{
					if (this._RequestStep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStepIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStepID = value;
					this.SendPropertyChanged("RequestStepID");
					this.OnRequestStepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusType", DbType="TinyInt NOT NULL")]
		public byte StatusType
		{
			get
			{
				return this._StatusType;
			}
			set
			{
				if ((this._StatusType != value))
				{
					this.OnStatusTypeChanging(value);
					this.SendPropertyChanging();
					this._StatusType = value;
					this.SendPropertyChanged("StatusType");
					this.OnStatusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_InstallLine", Storage="_InstallLines", ThisKey="ID", OtherKey="Status")]
		public EntitySet<InstallLine> InstallLines
		{
			get
			{
				return this._InstallLines;
			}
			set
			{
				this._InstallLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Request", Storage="_Requests", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Status", Storage="_Status2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Status Status2
		{
			get
			{
				return this._Status2.Entity;
			}
			set
			{
				Status previousValue = this._Status2.Entity;
				if (((previousValue != value) 
							|| (this._Status2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status2.Entity = null;
						previousValue.Status1 = null;
					}
					this._Status2.Entity = value;
					if ((value != null))
					{
						value.Status1 = this;
					}
					this.SendPropertyChanged("Status2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_StatusLog", Storage="_StatusLogs", ThisKey="ID", OtherKey="FromStatusID")]
		public EntitySet<StatusLog> StatusLogs
		{
			get
			{
				return this._StatusLogs;
			}
			set
			{
				this._StatusLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_StatusLog1", Storage="_StatusLogs1", ThisKey="ID", OtherKey="ToStatusID")]
		public EntitySet<StatusLog> StatusLogs1
		{
			get
			{
				return this._StatusLogs1;
			}
			set
			{
				this._StatusLogs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_SubFlowStatus", Storage="_SubFlowStatus", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<SubFlowStatus> SubFlowStatus
		{
			get
			{
				return this._SubFlowStatus;
			}
			set
			{
				this._SubFlowStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WaitingList", Storage="_WaitingLists", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<WaitingList> WaitingLists
		{
			get
			{
				return this._WaitingLists;
			}
			set
			{
				this._WaitingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Wiring", Storage="_Wirings", ThisKey="ID", OtherKey="Status")]
		public EntitySet<Wiring> Wirings
		{
			get
			{
				return this._Wirings;
			}
			set
			{
				this._Wirings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Wiring1", Storage="_Wirings1", ThisKey="ID", OtherKey="MDFStatus")]
		public EntitySet<Wiring> Wirings1
		{
			get
			{
				return this._Wirings1;
			}
			set
			{
				this._Wirings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Wiring2", Storage="_Wirings2", ThisKey="ID", OtherKey="WiringStatus")]
		public EntitySet<Wiring> Wirings2
		{
			get
			{
				return this._Wirings2;
			}
			set
			{
				this._Wirings2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WorkFlowRule", Storage="_WorkFlowRules", ThisKey="ID", OtherKey="CurrentStatusID")]
		public EntitySet<WorkFlowRule> WorkFlowRules
		{
			get
			{
				return this._WorkFlowRules;
			}
			set
			{
				this._WorkFlowRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WorkFlowRule1", Storage="_WorkFlowRules1", ThisKey="ID", OtherKey="NextStatusID")]
		public EntitySet<WorkFlowRule> WorkFlowRules1
		{
			get
			{
				return this._WorkFlowRules1;
			}
			set
			{
				this._WorkFlowRules1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStep_Status", Storage="_RequestStep", ThisKey="RequestStepID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RequestStep RequestStep
		{
			get
			{
				return this._RequestStep.Entity;
			}
			set
			{
				RequestStep previousValue = this._RequestStep.Entity;
				if (((previousValue != value) 
							|| (this._RequestStep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestStep.Entity = null;
						previousValue.Status.Remove(this);
					}
					this._RequestStep.Entity = value;
					if ((value != null))
					{
						value.Status.Add(this);
						this._RequestStepID = value.ID;
					}
					else
					{
						this._RequestStepID = default(int);
					}
					this.SendPropertyChanged("RequestStep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Status", Storage="_Status1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.Status2 = null;
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.Status2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstallLines(InstallLine entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_InstallLines(InstallLine entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
		
		private void attach_StatusLogs(StatusLog entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_StatusLogs(StatusLog entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
		
		private void attach_StatusLogs1(StatusLog entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_StatusLogs1(StatusLog entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
		
		private void attach_SubFlowStatus(SubFlowStatus entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_SubFlowStatus(SubFlowStatus entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
		
		private void attach_WaitingLists(WaitingList entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_WaitingLists(WaitingList entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
		
		private void attach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_Wirings(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
		
		private void attach_Wirings1(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Status2 = this;
		}
		
		private void detach_Wirings1(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Status2 = null;
		}
		
		private void attach_Wirings2(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Status3 = this;
		}
		
		private void detach_Wirings2(Wiring entity)
		{
			this.SendPropertyChanging();
			entity.Status3 = null;
		}
		
		private void attach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
		
		private void attach_WorkFlowRules1(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_WorkFlowRules1(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusLog")]
	public partial class StatusLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ReqeustID;
		
		private byte _ActionID;
		
		private int _FromStatusID;
		
		private int _ToStatusID;
		
		private int _UserID;
		
		private System.DateTime _Date;
		
		private string _Description;
		
		private System.Nullable<int> _RequestRejectReasonID;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<RequestRejectReason> _RequestRejectReason;
		
		private EntityRef<Status> _Status;
		
		private EntityRef<Status> _Status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnReqeustIDChanging(long value);
    partial void OnReqeustIDChanged();
    partial void OnActionIDChanging(byte value);
    partial void OnActionIDChanged();
    partial void OnFromStatusIDChanging(int value);
    partial void OnFromStatusIDChanged();
    partial void OnToStatusIDChanging(int value);
    partial void OnToStatusIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRequestRejectReasonIDChanging(System.Nullable<int> value);
    partial void OnRequestRejectReasonIDChanged();
    #endregion
		
		public StatusLog()
		{
			this._Request = default(EntityRef<Request>);
			this._RequestRejectReason = default(EntityRef<RequestRejectReason>);
			this._Status = default(EntityRef<Status>);
			this._Status1 = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqeustID", DbType="BigInt NOT NULL")]
		public long ReqeustID
		{
			get
			{
				return this._ReqeustID;
			}
			set
			{
				if ((this._ReqeustID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReqeustIDChanging(value);
					this.SendPropertyChanging();
					this._ReqeustID = value;
					this.SendPropertyChanged("ReqeustID");
					this.OnReqeustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="TinyInt NOT NULL")]
		public byte ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStatusID", DbType="Int NOT NULL")]
		public int FromStatusID
		{
			get
			{
				return this._FromStatusID;
			}
			set
			{
				if ((this._FromStatusID != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStatusIDChanging(value);
					this.SendPropertyChanging();
					this._FromStatusID = value;
					this.SendPropertyChanged("FromStatusID");
					this.OnFromStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStatusID", DbType="Int NOT NULL")]
		public int ToStatusID
		{
			get
			{
				return this._ToStatusID;
			}
			set
			{
				if ((this._ToStatusID != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ToStatusID = value;
					this.SendPropertyChanged("ToStatusID");
					this.OnToStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestRejectReasonID", DbType="Int")]
		public System.Nullable<int> RequestRejectReasonID
		{
			get
			{
				return this._RequestRejectReasonID;
			}
			set
			{
				if ((this._RequestRejectReasonID != value))
				{
					if (this._RequestRejectReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestRejectReasonIDChanging(value);
					this.SendPropertyChanging();
					this._RequestRejectReasonID = value;
					this.SendPropertyChanged("RequestRejectReasonID");
					this.OnRequestRejectReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_StatusLog", Storage="_Request", ThisKey="ReqeustID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.StatusLogs.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.StatusLogs.Add(this);
						this._ReqeustID = value.ID;
					}
					else
					{
						this._ReqeustID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestRejectReason_StatusLog", Storage="_RequestRejectReason", ThisKey="RequestRejectReasonID", OtherKey="ID", IsForeignKey=true)]
		public RequestRejectReason RequestRejectReason
		{
			get
			{
				return this._RequestRejectReason.Entity;
			}
			set
			{
				RequestRejectReason previousValue = this._RequestRejectReason.Entity;
				if (((previousValue != value) 
							|| (this._RequestRejectReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestRejectReason.Entity = null;
						previousValue.StatusLogs.Remove(this);
					}
					this._RequestRejectReason.Entity = value;
					if ((value != null))
					{
						value.StatusLogs.Add(this);
						this._RequestRejectReasonID = value.ID;
					}
					else
					{
						this._RequestRejectReasonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RequestRejectReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_StatusLog", Storage="_Status", ThisKey="FromStatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.StatusLogs.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.StatusLogs.Add(this);
						this._FromStatusID = value.ID;
					}
					else
					{
						this._FromStatusID = default(int);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_StatusLog1", Storage="_Status1", ThisKey="ToStatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.StatusLogs1.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.StatusLogs1.Add(this);
						this._ToStatusID = value.ID;
					}
					else
					{
						this._ToStatusID = default(int);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubFlowStatus")]
	public partial class SubFlowStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private System.Nullable<long> _ParentID;
		
		private int _StatusID;
		
		private EntitySet<SubFlowStatus> _SubFlowStatus2;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Status> _Status;
		
		private EntityRef<SubFlowStatus> _SubFlowStatus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    #endregion
		
		public SubFlowStatus()
		{
			this._SubFlowStatus2 = new EntitySet<SubFlowStatus>(new Action<SubFlowStatus>(this.attach_SubFlowStatus2), new Action<SubFlowStatus>(this.detach_SubFlowStatus2));
			this._Request = default(EntityRef<Request>);
			this._Status = default(EntityRef<Status>);
			this._SubFlowStatus1 = default(EntityRef<SubFlowStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt")]
		public System.Nullable<long> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._SubFlowStatus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubFlowStatus_SubFlowStatus", Storage="_SubFlowStatus2", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<SubFlowStatus> SubFlowStatus2
		{
			get
			{
				return this._SubFlowStatus2;
			}
			set
			{
				this._SubFlowStatus2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SubFlowStatus", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SubFlowStatus.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SubFlowStatus.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_SubFlowStatus", Storage="_Status", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.SubFlowStatus.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.SubFlowStatus.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubFlowStatus_SubFlowStatus", Storage="_SubFlowStatus1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public SubFlowStatus SubFlowStatus1
		{
			get
			{
				return this._SubFlowStatus1.Entity;
			}
			set
			{
				SubFlowStatus previousValue = this._SubFlowStatus1.Entity;
				if (((previousValue != value) 
							|| (this._SubFlowStatus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubFlowStatus1.Entity = null;
						previousValue.SubFlowStatus2.Remove(this);
					}
					this._SubFlowStatus1.Entity = value;
					if ((value != null))
					{
						value.SubFlowStatus2.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("SubFlowStatus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubFlowStatus2(SubFlowStatus entity)
		{
			this.SendPropertyChanging();
			entity.SubFlowStatus1 = this;
		}
		
		private void detach_SubFlowStatus2(SubFlowStatus entity)
		{
			this.SendPropertyChanging();
			entity.SubFlowStatus1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubsidiaryCode")]
	public partial class SubsidiaryCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _CompanyName;
		
		private System.Nullable<byte> _Type;
		
		private EntitySet<Center> _Centers;
		
		private EntitySet<Center> _Centers1;
		
		private EntitySet<Center> _Centers2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnTypeChanging(System.Nullable<byte> value);
    partial void OnTypeChanged();
    #endregion
		
		public SubsidiaryCode()
		{
			this._Centers = new EntitySet<Center>(new Action<Center>(this.attach_Centers), new Action<Center>(this.detach_Centers));
			this._Centers1 = new EntitySet<Center>(new Action<Center>(this.attach_Centers1), new Action<Center>(this.detach_Centers1));
			this._Centers2 = new EntitySet<Center>(new Action<Center>(this.attach_Centers2), new Action<Center>(this.detach_Centers2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt")]
		public System.Nullable<byte> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidiaryCode_Center", Storage="_Centers", ThisKey="ID", OtherKey="SubsidiaryCodeTelephone")]
		public EntitySet<Center> Centers
		{
			get
			{
				return this._Centers;
			}
			set
			{
				this._Centers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidiaryCode_Center1", Storage="_Centers1", ThisKey="ID", OtherKey="SubsidiaryCodeService")]
		public EntitySet<Center> Centers1
		{
			get
			{
				return this._Centers1;
			}
			set
			{
				this._Centers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidiaryCode_Center2", Storage="_Centers2", ThisKey="ID", OtherKey="SubsidiaryCodeADSL")]
		public EntitySet<Center> Centers2
		{
			get
			{
				return this._Centers2;
			}
			set
			{
				this._Centers2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Centers(Center entity)
		{
			this.SendPropertyChanging();
			entity.SubsidiaryCode = this;
		}
		
		private void detach_Centers(Center entity)
		{
			this.SendPropertyChanging();
			entity.SubsidiaryCode = null;
		}
		
		private void attach_Centers1(Center entity)
		{
			this.SendPropertyChanging();
			entity.SubsidiaryCode1 = this;
		}
		
		private void detach_Centers1(Center entity)
		{
			this.SendPropertyChanging();
			entity.SubsidiaryCode1 = null;
		}
		
		private void attach_Centers2(Center entity)
		{
			this.SendPropertyChanging();
			entity.SubsidiaryCode2 = this;
		}
		
		private void detach_Centers2(Center entity)
		{
			this.SendPropertyChanging();
			entity.SubsidiaryCode2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SugesstionPossibility")]
	public partial class SugesstionPossibility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<int> _VisitAddressID;
		
		private long _InvestigatePossibilityID;
		
		private int _SourceID;
		
		private byte _SourceType;
		
		private System.Nullable<int> _ExtraInfo;
		
		private System.Nullable<byte> _ConnectionType;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntitySet<MatchPossibility> _MatchPossibilities;
		
		private EntityRef<VisitAddress> _VisitAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnVisitAddressIDChanging(System.Nullable<int> value);
    partial void OnVisitAddressIDChanged();
    partial void OnInvestigatePossibilityIDChanging(long value);
    partial void OnInvestigatePossibilityIDChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnSourceTypeChanging(byte value);
    partial void OnSourceTypeChanged();
    partial void OnExtraInfoChanging(System.Nullable<int> value);
    partial void OnExtraInfoChanged();
    partial void OnConnectionTypeChanging(System.Nullable<byte> value);
    partial void OnConnectionTypeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SugesstionPossibility()
		{
			this._MatchPossibilities = new EntitySet<MatchPossibility>(new Action<MatchPossibility>(this.attach_MatchPossibilities), new Action<MatchPossibility>(this.detach_MatchPossibilities));
			this._VisitAddress = default(EntityRef<VisitAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitAddressID", DbType="Int")]
		public System.Nullable<int> VisitAddressID
		{
			get
			{
				return this._VisitAddressID;
			}
			set
			{
				if ((this._VisitAddressID != value))
				{
					if (this._VisitAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitAddressIDChanging(value);
					this.SendPropertyChanging();
					this._VisitAddressID = value;
					this.SendPropertyChanged("VisitAddressID");
					this.OnVisitAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestigatePossibilityID", DbType="BigInt NOT NULL")]
		public long InvestigatePossibilityID
		{
			get
			{
				return this._InvestigatePossibilityID;
			}
			set
			{
				if ((this._InvestigatePossibilityID != value))
				{
					this.OnInvestigatePossibilityIDChanging(value);
					this.SendPropertyChanging();
					this._InvestigatePossibilityID = value;
					this.SendPropertyChanged("InvestigatePossibilityID");
					this.OnInvestigatePossibilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="TinyInt NOT NULL")]
		public byte SourceType
		{
			get
			{
				return this._SourceType;
			}
			set
			{
				if ((this._SourceType != value))
				{
					this.OnSourceTypeChanging(value);
					this.SendPropertyChanging();
					this._SourceType = value;
					this.SendPropertyChanged("SourceType");
					this.OnSourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraInfo", DbType="Int")]
		public System.Nullable<int> ExtraInfo
		{
			get
			{
				return this._ExtraInfo;
			}
			set
			{
				if ((this._ExtraInfo != value))
				{
					this.OnExtraInfoChanging(value);
					this.SendPropertyChanging();
					this._ExtraInfo = value;
					this.SendPropertyChanged("ExtraInfo");
					this.OnExtraInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionType", DbType="TinyInt")]
		public System.Nullable<byte> ConnectionType
		{
			get
			{
				return this._ConnectionType;
			}
			set
			{
				if ((this._ConnectionType != value))
				{
					this.OnConnectionTypeChanging(value);
					this.SendPropertyChanging();
					this._ConnectionType = value;
					this.SendPropertyChanged("ConnectionType");
					this.OnConnectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SugesstionPossibility_MatchPossibility", Storage="_MatchPossibilities", ThisKey="ID", OtherKey="SugesstionPossibilityID")]
		public EntitySet<MatchPossibility> MatchPossibilities
		{
			get
			{
				return this._MatchPossibilities;
			}
			set
			{
				this._MatchPossibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitAddress_SugesstionPossibility", Storage="_VisitAddress", ThisKey="VisitAddressID", OtherKey="ID", IsForeignKey=true)]
		public VisitAddress VisitAddress
		{
			get
			{
				return this._VisitAddress.Entity;
			}
			set
			{
				VisitAddress previousValue = this._VisitAddress.Entity;
				if (((previousValue != value) 
							|| (this._VisitAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VisitAddress.Entity = null;
						previousValue.SugesstionPossibilities.Remove(this);
					}
					this._VisitAddress.Entity = value;
					if ((value != null))
					{
						value.SugesstionPossibilities.Add(this);
						this._VisitAddressID = value.ID;
					}
					else
					{
						this._VisitAddressID = default(Nullable<int>);
					}
					this.SendPropertyChanged("VisitAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MatchPossibilities(MatchPossibility entity)
		{
			this.SendPropertyChanging();
			entity.SugesstionPossibility = this;
		}
		
		private void detach_MatchPossibilities(MatchPossibility entity)
		{
			this.SendPropertyChanging();
			entity.SugesstionPossibility = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapPCM")]
	public partial class SwapPCM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private long _FromTelephoneNo;
		
		private long _ToTelephoneNo;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private System.Nullable<System.DateTime> _MDFDate;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnFromTelephoneNoChanging(long value);
    partial void OnFromTelephoneNoChanged();
    partial void OnToTelephoneNoChanging(long value);
    partial void OnToTelephoneNoChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnMDFDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFDateChanged();
    #endregion
		
		public SwapPCM()
		{
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephoneNo", DbType="BigInt NOT NULL")]
		public long FromTelephoneNo
		{
			get
			{
				return this._FromTelephoneNo;
			}
			set
			{
				if ((this._FromTelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._FromTelephoneNo = value;
					this.SendPropertyChanged("FromTelephoneNo");
					this.OnFromTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneNo", DbType="BigInt NOT NULL")]
		public long ToTelephoneNo
		{
			get
			{
				return this._ToTelephoneNo;
			}
			set
			{
				if ((this._ToTelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ToTelephoneNo = value;
					this.SendPropertyChanged("ToTelephoneNo");
					this.OnToTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFDate
		{
			get
			{
				return this._MDFDate;
			}
			set
			{
				if ((this._MDFDate != value))
				{
					this.OnMDFDateChanging(value);
					this.SendPropertyChanging();
					this._MDFDate = value;
					this.SendPropertyChanged("MDFDate");
					this.OnMDFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SwapPCM", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SwapPCM = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SwapPCM = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SwapPCM", Storage="_Telephone", ThisKey="FromTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.SwapPCMs.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.SwapPCMs.Add(this);
						this._FromTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._FromTelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SwapPCM1", Storage="_Telephone1", ThisKey="ToTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.SwapPCMs1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.SwapPCMs1.Add(this);
						this._ToTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._ToTelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwapTelephone")]
	public partial class SwapTelephone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private long _FromTelephoneNo;
		
		private long _ToTelephoneNo;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnFromTelephoneNoChanging(long value);
    partial void OnFromTelephoneNoChanged();
    partial void OnToTelephoneNoChanging(long value);
    partial void OnToTelephoneNoChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    #endregion
		
		public SwapTelephone()
		{
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephoneNo", DbType="BigInt NOT NULL")]
		public long FromTelephoneNo
		{
			get
			{
				return this._FromTelephoneNo;
			}
			set
			{
				if ((this._FromTelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._FromTelephoneNo = value;
					this.SendPropertyChanged("FromTelephoneNo");
					this.OnFromTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneNo", DbType="BigInt NOT NULL")]
		public long ToTelephoneNo
		{
			get
			{
				return this._ToTelephoneNo;
			}
			set
			{
				if ((this._ToTelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ToTelephoneNo = value;
					this.SendPropertyChanged("ToTelephoneNo");
					this.OnToTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SwapTelephone", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SwapTelephone = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SwapTelephone = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SwapTelephone", Storage="_Telephone", ThisKey="FromTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.SwapTelephones.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.SwapTelephones.Add(this);
						this._FromTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._FromTelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SwapTelephone1", Storage="_Telephone1", ThisKey="ToTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.SwapTelephones1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.SwapTelephones1.Add(this);
						this._ToTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._ToTelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Switch")]
	public partial class Switch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private int _SwitchTypeID;
		
		private string _FeatureONU;
		
		private byte _WorkUnitResponsible;
		
		private string _SwitchCode;
		
		private int _Capacity;
		
		private System.Nullable<int> _OperationalCapacity;
		
		private System.Nullable<int> _InstallCapacity;
		
		private System.Nullable<byte> _DataCapacity;
		
		private byte _Status;
		
		private EntitySet<E1> _E1s;
		
		private EntitySet<ExchangeTelephoneNo> _ExchangeTelephoneNos;
		
		private EntitySet<ExchangeTelephoneNo> _ExchangeTelephoneNos1;
		
		private EntitySet<SwitchPort> _SwitchPorts;
		
		private EntitySet<SwitchPrecode> _SwitchPrecodes;
		
		private EntitySet<SwitchSpecialService> _SwitchSpecialServices;
		
		private EntitySet<SwitchTransition> _SwitchTransitions;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<SwitchType> _SwitchType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnSwitchTypeIDChanging(int value);
    partial void OnSwitchTypeIDChanged();
    partial void OnFeatureONUChanging(string value);
    partial void OnFeatureONUChanged();
    partial void OnWorkUnitResponsibleChanging(byte value);
    partial void OnWorkUnitResponsibleChanged();
    partial void OnSwitchCodeChanging(string value);
    partial void OnSwitchCodeChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnOperationalCapacityChanging(System.Nullable<int> value);
    partial void OnOperationalCapacityChanged();
    partial void OnInstallCapacityChanging(System.Nullable<int> value);
    partial void OnInstallCapacityChanged();
    partial void OnDataCapacityChanging(System.Nullable<byte> value);
    partial void OnDataCapacityChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Switch()
		{
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			this._ExchangeTelephoneNos = new EntitySet<ExchangeTelephoneNo>(new Action<ExchangeTelephoneNo>(this.attach_ExchangeTelephoneNos), new Action<ExchangeTelephoneNo>(this.detach_ExchangeTelephoneNos));
			this._ExchangeTelephoneNos1 = new EntitySet<ExchangeTelephoneNo>(new Action<ExchangeTelephoneNo>(this.attach_ExchangeTelephoneNos1), new Action<ExchangeTelephoneNo>(this.detach_ExchangeTelephoneNos1));
			this._SwitchPorts = new EntitySet<SwitchPort>(new Action<SwitchPort>(this.attach_SwitchPorts), new Action<SwitchPort>(this.detach_SwitchPorts));
			this._SwitchPrecodes = new EntitySet<SwitchPrecode>(new Action<SwitchPrecode>(this.attach_SwitchPrecodes), new Action<SwitchPrecode>(this.detach_SwitchPrecodes));
			this._SwitchSpecialServices = new EntitySet<SwitchSpecialService>(new Action<SwitchSpecialService>(this.attach_SwitchSpecialServices), new Action<SwitchSpecialService>(this.detach_SwitchSpecialServices));
			this._SwitchTransitions = new EntitySet<SwitchTransition>(new Action<SwitchTransition>(this.attach_SwitchTransitions), new Action<SwitchTransition>(this.detach_SwitchTransitions));
			this._Center = default(EntityRef<Center>);
			this._SwitchType = default(EntityRef<SwitchType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchTypeID", DbType="Int NOT NULL")]
		public int SwitchTypeID
		{
			get
			{
				return this._SwitchTypeID;
			}
			set
			{
				if ((this._SwitchTypeID != value))
				{
					if (this._SwitchType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchTypeID = value;
					this.SendPropertyChanged("SwitchTypeID");
					this.OnSwitchTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureONU", DbType="NVarChar(50)")]
		public string FeatureONU
		{
			get
			{
				return this._FeatureONU;
			}
			set
			{
				if ((this._FeatureONU != value))
				{
					this.OnFeatureONUChanging(value);
					this.SendPropertyChanging();
					this._FeatureONU = value;
					this.SendPropertyChanged("FeatureONU");
					this.OnFeatureONUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkUnitResponsible", DbType="TinyInt NOT NULL")]
		public byte WorkUnitResponsible
		{
			get
			{
				return this._WorkUnitResponsible;
			}
			set
			{
				if ((this._WorkUnitResponsible != value))
				{
					this.OnWorkUnitResponsibleChanging(value);
					this.SendPropertyChanging();
					this._WorkUnitResponsible = value;
					this.SendPropertyChanged("WorkUnitResponsible");
					this.OnWorkUnitResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SwitchCode
		{
			get
			{
				return this._SwitchCode;
			}
			set
			{
				if ((this._SwitchCode != value))
				{
					this.OnSwitchCodeChanging(value);
					this.SendPropertyChanging();
					this._SwitchCode = value;
					this.SendPropertyChanged("SwitchCode");
					this.OnSwitchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationalCapacity", DbType="Int")]
		public System.Nullable<int> OperationalCapacity
		{
			get
			{
				return this._OperationalCapacity;
			}
			set
			{
				if ((this._OperationalCapacity != value))
				{
					this.OnOperationalCapacityChanging(value);
					this.SendPropertyChanging();
					this._OperationalCapacity = value;
					this.SendPropertyChanged("OperationalCapacity");
					this.OnOperationalCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallCapacity", DbType="Int")]
		public System.Nullable<int> InstallCapacity
		{
			get
			{
				return this._InstallCapacity;
			}
			set
			{
				if ((this._InstallCapacity != value))
				{
					this.OnInstallCapacityChanging(value);
					this.SendPropertyChanging();
					this._InstallCapacity = value;
					this.SendPropertyChanged("InstallCapacity");
					this.OnInstallCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataCapacity", DbType="TinyInt")]
		public System.Nullable<byte> DataCapacity
		{
			get
			{
				return this._DataCapacity;
			}
			set
			{
				if ((this._DataCapacity != value))
				{
					this.OnDataCapacityChanging(value);
					this.SendPropertyChanging();
					this._DataCapacity = value;
					this.SendPropertyChanged("DataCapacity");
					this.OnDataCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_E1", Storage="_E1s", ThisKey="ID", OtherKey="SwitchID")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_ExchangeTelephoneNo", Storage="_ExchangeTelephoneNos", ThisKey="ID", OtherKey="ToSwitchID")]
		public EntitySet<ExchangeTelephoneNo> ExchangeTelephoneNos
		{
			get
			{
				return this._ExchangeTelephoneNos;
			}
			set
			{
				this._ExchangeTelephoneNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_ExchangeTelephoneNo1", Storage="_ExchangeTelephoneNos1", ThisKey="ID", OtherKey="FromSwitchID")]
		public EntitySet<ExchangeTelephoneNo> ExchangeTelephoneNos1
		{
			get
			{
				return this._ExchangeTelephoneNos1;
			}
			set
			{
				this._ExchangeTelephoneNos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_SwitchPort", Storage="_SwitchPorts", ThisKey="ID", OtherKey="SwitchID")]
		public EntitySet<SwitchPort> SwitchPorts
		{
			get
			{
				return this._SwitchPorts;
			}
			set
			{
				this._SwitchPorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_SwitchPrecode", Storage="_SwitchPrecodes", ThisKey="ID", OtherKey="SwitchID")]
		public EntitySet<SwitchPrecode> SwitchPrecodes
		{
			get
			{
				return this._SwitchPrecodes;
			}
			set
			{
				this._SwitchPrecodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_SwitchSpecialService", Storage="_SwitchSpecialServices", ThisKey="ID", OtherKey="SwitchID")]
		public EntitySet<SwitchSpecialService> SwitchSpecialServices
		{
			get
			{
				return this._SwitchSpecialServices;
			}
			set
			{
				this._SwitchSpecialServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_SwitchTransition", Storage="_SwitchTransitions", ThisKey="ID", OtherKey="SwitchID")]
		public EntitySet<SwitchTransition> SwitchTransitions
		{
			get
			{
				return this._SwitchTransitions;
			}
			set
			{
				this._SwitchTransitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Switch", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Switches.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Switches.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchType_Switch", Storage="_SwitchType", ThisKey="SwitchTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SwitchType SwitchType
		{
			get
			{
				return this._SwitchType.Entity;
			}
			set
			{
				SwitchType previousValue = this._SwitchType.Entity;
				if (((previousValue != value) 
							|| (this._SwitchType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchType.Entity = null;
						previousValue.Switches.Remove(this);
					}
					this._SwitchType.Entity = value;
					if ((value != null))
					{
						value.Switches.Add(this);
						this._SwitchTypeID = value.ID;
					}
					else
					{
						this._SwitchTypeID = default(int);
					}
					this.SendPropertyChanged("SwitchType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Switch = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Switch = null;
		}
		
		private void attach_ExchangeTelephoneNos(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.Switch = this;
		}
		
		private void detach_ExchangeTelephoneNos(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.Switch = null;
		}
		
		private void attach_ExchangeTelephoneNos1(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.Switch1 = this;
		}
		
		private void detach_ExchangeTelephoneNos1(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.Switch1 = null;
		}
		
		private void attach_SwitchPorts(SwitchPort entity)
		{
			this.SendPropertyChanging();
			entity.Switch = this;
		}
		
		private void detach_SwitchPorts(SwitchPort entity)
		{
			this.SendPropertyChanging();
			entity.Switch = null;
		}
		
		private void attach_SwitchPrecodes(SwitchPrecode entity)
		{
			this.SendPropertyChanging();
			entity.Switch = this;
		}
		
		private void detach_SwitchPrecodes(SwitchPrecode entity)
		{
			this.SendPropertyChanging();
			entity.Switch = null;
		}
		
		private void attach_SwitchSpecialServices(SwitchSpecialService entity)
		{
			this.SendPropertyChanging();
			entity.Switch = this;
		}
		
		private void detach_SwitchSpecialServices(SwitchSpecialService entity)
		{
			this.SendPropertyChanging();
			entity.Switch = null;
		}
		
		private void attach_SwitchTransitions(SwitchTransition entity)
		{
			this.SendPropertyChanging();
			entity.Switch = this;
		}
		
		private void detach_SwitchTransitions(SwitchTransition entity)
		{
			this.SendPropertyChanging();
			entity.Switch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwitchOffice")]
	public partial class SwitchOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _RequestID;
		
		private System.Guid _SwitchFileID;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnSwitchFileIDChanging(System.Guid value);
    partial void OnSwitchFileIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public SwitchOffice()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchFileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SwitchFileID
		{
			get
			{
				return this._SwitchFileID;
			}
			set
			{
				if ((this._SwitchFileID != value))
				{
					this.OnSwitchFileIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchFileID = value;
					this.SendPropertyChanged("SwitchFileID");
					this.OnSwitchFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SwitchOffice", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SwitchOffices.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SwitchOffices.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwitchPort")]
	public partial class SwitchPort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SwitchID;
		
		private string _PortNo;
		
		private string _MDFHorizentalID;
		
		private System.Nullable<bool> _Type;
		
		private byte _Status;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<ChangeLocationSpecialWire> _ChangeLocationSpecialWires;
		
		private EntitySet<RefundDeposit> _RefundDeposits;
		
		private EntitySet<SelectTelephone> _SelectTelephones;
		
		private EntitySet<Telephone> _Telephones;
		
		private EntitySet<VacateSpecialWire> _VacateSpecialWires;
		
		private EntityRef<Switch> _Switch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSwitchIDChanging(int value);
    partial void OnSwitchIDChanged();
    partial void OnPortNoChanging(string value);
    partial void OnPortNoChanged();
    partial void OnMDFHorizentalIDChanging(string value);
    partial void OnMDFHorizentalIDChanged();
    partial void OnTypeChanging(System.Nullable<bool> value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public SwitchPort()
		{
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._ChangeLocationSpecialWires = new EntitySet<ChangeLocationSpecialWire>(new Action<ChangeLocationSpecialWire>(this.attach_ChangeLocationSpecialWires), new Action<ChangeLocationSpecialWire>(this.detach_ChangeLocationSpecialWires));
			this._RefundDeposits = new EntitySet<RefundDeposit>(new Action<RefundDeposit>(this.attach_RefundDeposits), new Action<RefundDeposit>(this.detach_RefundDeposits));
			this._SelectTelephones = new EntitySet<SelectTelephone>(new Action<SelectTelephone>(this.attach_SelectTelephones), new Action<SelectTelephone>(this.detach_SelectTelephones));
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			this._VacateSpecialWires = new EntitySet<VacateSpecialWire>(new Action<VacateSpecialWire>(this.attach_VacateSpecialWires), new Action<VacateSpecialWire>(this.detach_VacateSpecialWires));
			this._Switch = default(EntityRef<Switch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchID", DbType="Int NOT NULL")]
		public int SwitchID
		{
			get
			{
				return this._SwitchID;
			}
			set
			{
				if ((this._SwitchID != value))
				{
					if (this._Switch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchID = value;
					this.SendPropertyChanged("SwitchID");
					this.OnSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PortNo
		{
			get
			{
				return this._PortNo;
			}
			set
			{
				if ((this._PortNo != value))
				{
					this.OnPortNoChanging(value);
					this.SendPropertyChanging();
					this._PortNo = value;
					this.SendPropertyChanged("PortNo");
					this.OnPortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFHorizentalID", DbType="NVarChar(50)")]
		public string MDFHorizentalID
		{
			get
			{
				return this._MDFHorizentalID;
			}
			set
			{
				if ((this._MDFHorizentalID != value))
				{
					this.OnMDFHorizentalIDChanging(value);
					this.SendPropertyChanging();
					this._MDFHorizentalID = value;
					this.SendPropertyChanged("MDFHorizentalID");
					this.OnMDFHorizentalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Bit")]
		public System.Nullable<bool> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="SwitchPortID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_ChangeLocationSpecialWire", Storage="_ChangeLocationSpecialWires", ThisKey="ID", OtherKey="OldSwitchPortID")]
		public EntitySet<ChangeLocationSpecialWire> ChangeLocationSpecialWires
		{
			get
			{
				return this._ChangeLocationSpecialWires;
			}
			set
			{
				this._ChangeLocationSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_RefundDeposit", Storage="_RefundDeposits", ThisKey="ID", OtherKey="SwitchPortID")]
		public EntitySet<RefundDeposit> RefundDeposits
		{
			get
			{
				return this._RefundDeposits;
			}
			set
			{
				this._RefundDeposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_SelectTelephone", Storage="_SelectTelephones", ThisKey="ID", OtherKey="SwitchPortID")]
		public EntitySet<SelectTelephone> SelectTelephones
		{
			get
			{
				return this._SelectTelephones;
			}
			set
			{
				this._SelectTelephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="SwitchPortID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_VacateSpecialWire", Storage="_VacateSpecialWires", ThisKey="ID", OtherKey="SwitchPortID")]
		public EntitySet<VacateSpecialWire> VacateSpecialWires
		{
			get
			{
				return this._VacateSpecialWires;
			}
			set
			{
				this._VacateSpecialWires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_SwitchPort", Storage="_Switch", ThisKey="SwitchID", OtherKey="ID", IsForeignKey=true)]
		public Switch Switch
		{
			get
			{
				return this._Switch.Entity;
			}
			set
			{
				Switch previousValue = this._Switch.Entity;
				if (((previousValue != value) 
							|| (this._Switch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Switch.Entity = null;
						previousValue.SwitchPorts.Remove(this);
					}
					this._Switch.Entity = value;
					if ((value != null))
					{
						value.SwitchPorts.Add(this);
						this._SwitchID = value.ID;
					}
					else
					{
						this._SwitchID = default(int);
					}
					this.SendPropertyChanged("Switch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = null;
		}
		
		private void attach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = this;
		}
		
		private void detach_ChangeLocationSpecialWires(ChangeLocationSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = null;
		}
		
		private void attach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = this;
		}
		
		private void detach_RefundDeposits(RefundDeposit entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = null;
		}
		
		private void attach_SelectTelephones(SelectTelephone entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = this;
		}
		
		private void detach_SelectTelephones(SelectTelephone entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = null;
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = null;
		}
		
		private void attach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = this;
		}
		
		private void detach_VacateSpecialWires(VacateSpecialWire entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwitchPrecode")]
	public partial class SwitchPrecode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CenterID;
		
		private int _SwitchID;
		
		private long _SwitchPreNo;
		
		private byte _PreCodeType;
		
		private int _Capacity;
		
		private System.Nullable<int> _OperationalCapacity;
		
		private System.Nullable<int> _InstallCapacity;
		
		private int _SpecialServiceCapacity;
		
		private byte _DeploymentType;
		
		private System.Nullable<byte> _LinkType;
		
		private System.Nullable<byte> _DorshoalNumberType;
		
		private byte _Status;
		
		private long _FromNumber;
		
		private long _ToNumber;
		
		private EntitySet<E1> _E1s;
		
		private EntitySet<ExchangeTelephoneNo> _ExchangeTelephoneNos;
		
		private EntitySet<ExchangeTelephoneNo> _ExchangeTelephoneNos1;
		
		private EntitySet<Telephone> _Telephones;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Switch> _Switch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnSwitchIDChanging(int value);
    partial void OnSwitchIDChanged();
    partial void OnSwitchPreNoChanging(long value);
    partial void OnSwitchPreNoChanged();
    partial void OnPreCodeTypeChanging(byte value);
    partial void OnPreCodeTypeChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnOperationalCapacityChanging(System.Nullable<int> value);
    partial void OnOperationalCapacityChanged();
    partial void OnInstallCapacityChanging(System.Nullable<int> value);
    partial void OnInstallCapacityChanged();
    partial void OnSpecialServiceCapacityChanging(int value);
    partial void OnSpecialServiceCapacityChanged();
    partial void OnDeploymentTypeChanging(byte value);
    partial void OnDeploymentTypeChanged();
    partial void OnLinkTypeChanging(System.Nullable<byte> value);
    partial void OnLinkTypeChanged();
    partial void OnDorshoalNumberTypeChanging(System.Nullable<byte> value);
    partial void OnDorshoalNumberTypeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnFromNumberChanging(long value);
    partial void OnFromNumberChanged();
    partial void OnToNumberChanging(long value);
    partial void OnToNumberChanged();
    #endregion
		
		public SwitchPrecode()
		{
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			this._ExchangeTelephoneNos = new EntitySet<ExchangeTelephoneNo>(new Action<ExchangeTelephoneNo>(this.attach_ExchangeTelephoneNos), new Action<ExchangeTelephoneNo>(this.detach_ExchangeTelephoneNos));
			this._ExchangeTelephoneNos1 = new EntitySet<ExchangeTelephoneNo>(new Action<ExchangeTelephoneNo>(this.attach_ExchangeTelephoneNos1), new Action<ExchangeTelephoneNo>(this.detach_ExchangeTelephoneNos1));
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			this._Center = default(EntityRef<Center>);
			this._Switch = default(EntityRef<Switch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchID", DbType="Int NOT NULL")]
		public int SwitchID
		{
			get
			{
				return this._SwitchID;
			}
			set
			{
				if ((this._SwitchID != value))
				{
					if (this._Switch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchID = value;
					this.SendPropertyChanged("SwitchID");
					this.OnSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPreNo", DbType="BigInt NOT NULL")]
		public long SwitchPreNo
		{
			get
			{
				return this._SwitchPreNo;
			}
			set
			{
				if ((this._SwitchPreNo != value))
				{
					this.OnSwitchPreNoChanging(value);
					this.SendPropertyChanging();
					this._SwitchPreNo = value;
					this.SendPropertyChanged("SwitchPreNo");
					this.OnSwitchPreNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreCodeType", DbType="TinyInt NOT NULL")]
		public byte PreCodeType
		{
			get
			{
				return this._PreCodeType;
			}
			set
			{
				if ((this._PreCodeType != value))
				{
					this.OnPreCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._PreCodeType = value;
					this.SendPropertyChanged("PreCodeType");
					this.OnPreCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationalCapacity", DbType="Int")]
		public System.Nullable<int> OperationalCapacity
		{
			get
			{
				return this._OperationalCapacity;
			}
			set
			{
				if ((this._OperationalCapacity != value))
				{
					this.OnOperationalCapacityChanging(value);
					this.SendPropertyChanging();
					this._OperationalCapacity = value;
					this.SendPropertyChanged("OperationalCapacity");
					this.OnOperationalCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallCapacity", DbType="Int")]
		public System.Nullable<int> InstallCapacity
		{
			get
			{
				return this._InstallCapacity;
			}
			set
			{
				if ((this._InstallCapacity != value))
				{
					this.OnInstallCapacityChanging(value);
					this.SendPropertyChanging();
					this._InstallCapacity = value;
					this.SendPropertyChanged("InstallCapacity");
					this.OnInstallCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialServiceCapacity", DbType="Int NOT NULL")]
		public int SpecialServiceCapacity
		{
			get
			{
				return this._SpecialServiceCapacity;
			}
			set
			{
				if ((this._SpecialServiceCapacity != value))
				{
					this.OnSpecialServiceCapacityChanging(value);
					this.SendPropertyChanging();
					this._SpecialServiceCapacity = value;
					this.SendPropertyChanged("SpecialServiceCapacity");
					this.OnSpecialServiceCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentType", DbType="TinyInt NOT NULL")]
		public byte DeploymentType
		{
			get
			{
				return this._DeploymentType;
			}
			set
			{
				if ((this._DeploymentType != value))
				{
					this.OnDeploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._DeploymentType = value;
					this.SendPropertyChanged("DeploymentType");
					this.OnDeploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkType", DbType="TinyInt")]
		public System.Nullable<byte> LinkType
		{
			get
			{
				return this._LinkType;
			}
			set
			{
				if ((this._LinkType != value))
				{
					this.OnLinkTypeChanging(value);
					this.SendPropertyChanging();
					this._LinkType = value;
					this.SendPropertyChanged("LinkType");
					this.OnLinkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DorshoalNumberType", DbType="TinyInt")]
		public System.Nullable<byte> DorshoalNumberType
		{
			get
			{
				return this._DorshoalNumberType;
			}
			set
			{
				if ((this._DorshoalNumberType != value))
				{
					this.OnDorshoalNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._DorshoalNumberType = value;
					this.SendPropertyChanged("DorshoalNumberType");
					this.OnDorshoalNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromNumber", DbType="BigInt NOT NULL")]
		public long FromNumber
		{
			get
			{
				return this._FromNumber;
			}
			set
			{
				if ((this._FromNumber != value))
				{
					this.OnFromNumberChanging(value);
					this.SendPropertyChanging();
					this._FromNumber = value;
					this.SendPropertyChanged("FromNumber");
					this.OnFromNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToNumber", DbType="BigInt NOT NULL")]
		public long ToNumber
		{
			get
			{
				return this._ToNumber;
			}
			set
			{
				if ((this._ToNumber != value))
				{
					this.OnToNumberChanging(value);
					this.SendPropertyChanging();
					this._ToNumber = value;
					this.SendPropertyChanged("ToNumber");
					this.OnToNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPrecode_E1", Storage="_E1s", ThisKey="ID", OtherKey="SwitchPrecodeID")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPrecode_ExchangeTelephoneNo", Storage="_ExchangeTelephoneNos", ThisKey="ID", OtherKey="FromSwitchPreCode")]
		public EntitySet<ExchangeTelephoneNo> ExchangeTelephoneNos
		{
			get
			{
				return this._ExchangeTelephoneNos;
			}
			set
			{
				this._ExchangeTelephoneNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPrecode_ExchangeTelephoneNo1", Storage="_ExchangeTelephoneNos1", ThisKey="ID", OtherKey="ToSwitchPreCode")]
		public EntitySet<ExchangeTelephoneNo> ExchangeTelephoneNos1
		{
			get
			{
				return this._ExchangeTelephoneNos1;
			}
			set
			{
				this._ExchangeTelephoneNos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPrecode_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="SwitchPrecodeID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_SwitchPrecode", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.SwitchPrecodes.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.SwitchPrecodes.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_SwitchPrecode", Storage="_Switch", ThisKey="SwitchID", OtherKey="ID", IsForeignKey=true)]
		public Switch Switch
		{
			get
			{
				return this._Switch.Entity;
			}
			set
			{
				Switch previousValue = this._Switch.Entity;
				if (((previousValue != value) 
							|| (this._Switch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Switch.Entity = null;
						previousValue.SwitchPrecodes.Remove(this);
					}
					this._Switch.Entity = value;
					if ((value != null))
					{
						value.SwitchPrecodes.Add(this);
						this._SwitchID = value.ID;
					}
					else
					{
						this._SwitchID = default(int);
					}
					this.SendPropertyChanged("Switch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPrecode = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPrecode = null;
		}
		
		private void attach_ExchangeTelephoneNos(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPrecode = this;
		}
		
		private void detach_ExchangeTelephoneNos(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPrecode = null;
		}
		
		private void attach_ExchangeTelephoneNos1(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPrecode1 = this;
		}
		
		private void detach_ExchangeTelephoneNos1(ExchangeTelephoneNo entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPrecode1 = null;
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPrecode = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.SwitchPrecode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwitchSpecialService")]
	public partial class SwitchSpecialService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SwitchID;
		
		private int _SpecialServiceTypeID;
		
		private int _Capacity;
		
		private byte _Status;
		
		private EntityRef<SpecialServiceType> _SpecialServiceType;
		
		private EntityRef<Switch> _Switch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSwitchIDChanging(int value);
    partial void OnSwitchIDChanged();
    partial void OnSpecialServiceTypeIDChanging(int value);
    partial void OnSpecialServiceTypeIDChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public SwitchSpecialService()
		{
			this._SpecialServiceType = default(EntityRef<SpecialServiceType>);
			this._Switch = default(EntityRef<Switch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchID", DbType="Int NOT NULL")]
		public int SwitchID
		{
			get
			{
				return this._SwitchID;
			}
			set
			{
				if ((this._SwitchID != value))
				{
					if (this._Switch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchID = value;
					this.SendPropertyChanged("SwitchID");
					this.OnSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialServiceTypeID", DbType="Int NOT NULL")]
		public int SpecialServiceTypeID
		{
			get
			{
				return this._SpecialServiceTypeID;
			}
			set
			{
				if ((this._SpecialServiceTypeID != value))
				{
					if (this._SpecialServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialServiceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialServiceTypeID = value;
					this.SendPropertyChanged("SpecialServiceTypeID");
					this.OnSpecialServiceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialServiceType_SwitchSpecialService", Storage="_SpecialServiceType", ThisKey="SpecialServiceTypeID", OtherKey="ID", IsForeignKey=true)]
		public SpecialServiceType SpecialServiceType
		{
			get
			{
				return this._SpecialServiceType.Entity;
			}
			set
			{
				SpecialServiceType previousValue = this._SpecialServiceType.Entity;
				if (((previousValue != value) 
							|| (this._SpecialServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialServiceType.Entity = null;
						previousValue.SwitchSpecialServices.Remove(this);
					}
					this._SpecialServiceType.Entity = value;
					if ((value != null))
					{
						value.SwitchSpecialServices.Add(this);
						this._SpecialServiceTypeID = value.ID;
					}
					else
					{
						this._SpecialServiceTypeID = default(int);
					}
					this.SendPropertyChanged("SpecialServiceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_SwitchSpecialService", Storage="_Switch", ThisKey="SwitchID", OtherKey="ID", IsForeignKey=true)]
		public Switch Switch
		{
			get
			{
				return this._Switch.Entity;
			}
			set
			{
				Switch previousValue = this._Switch.Entity;
				if (((previousValue != value) 
							|| (this._Switch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Switch.Entity = null;
						previousValue.SwitchSpecialServices.Remove(this);
					}
					this._Switch.Entity = value;
					if ((value != null))
					{
						value.SwitchSpecialServices.Add(this);
						this._SwitchID = value.ID;
					}
					else
					{
						this._SwitchID = default(int);
					}
					this.SendPropertyChanged("Switch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwitchTransition")]
	public partial class SwitchTransition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RequestID;
		
		private int _SwitchID;
		
		private System.Nullable<int> _DestinationCenterID;
		
		private byte _DeploymentType;
		
		private System.Nullable<byte> _DorshoalNumberType;
		
		private System.Nullable<int> _FinalTraffic;
		
		private System.Nullable<int> _RingFreeTraffic;
		
		private System.Nullable<byte> _TrafficTypeCode;
		
		private string _DestinationAdress;
		
		private System.Nullable<int> _FirstLinkNo;
		
		private System.DateTime _InstallDate;
		
		private System.DateTime _UnInstallDate;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<byte> _Status;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Switch> _Switch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    partial void OnSwitchIDChanging(int value);
    partial void OnSwitchIDChanged();
    partial void OnDestinationCenterIDChanging(System.Nullable<int> value);
    partial void OnDestinationCenterIDChanged();
    partial void OnDeploymentTypeChanging(byte value);
    partial void OnDeploymentTypeChanged();
    partial void OnDorshoalNumberTypeChanging(System.Nullable<byte> value);
    partial void OnDorshoalNumberTypeChanged();
    partial void OnFinalTrafficChanging(System.Nullable<int> value);
    partial void OnFinalTrafficChanged();
    partial void OnRingFreeTrafficChanging(System.Nullable<int> value);
    partial void OnRingFreeTrafficChanged();
    partial void OnTrafficTypeCodeChanging(System.Nullable<byte> value);
    partial void OnTrafficTypeCodeChanged();
    partial void OnDestinationAdressChanging(string value);
    partial void OnDestinationAdressChanged();
    partial void OnFirstLinkNoChanging(System.Nullable<int> value);
    partial void OnFirstLinkNoChanged();
    partial void OnInstallDateChanging(System.DateTime value);
    partial void OnInstallDateChanged();
    partial void OnUnInstallDateChanging(System.DateTime value);
    partial void OnUnInstallDateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public SwitchTransition()
		{
			this._Request = default(EntityRef<Request>);
			this._Switch = default(EntityRef<Switch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchID", DbType="Int NOT NULL")]
		public int SwitchID
		{
			get
			{
				return this._SwitchID;
			}
			set
			{
				if ((this._SwitchID != value))
				{
					if (this._Switch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchID = value;
					this.SendPropertyChanged("SwitchID");
					this.OnSwitchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationCenterID", DbType="Int")]
		public System.Nullable<int> DestinationCenterID
		{
			get
			{
				return this._DestinationCenterID;
			}
			set
			{
				if ((this._DestinationCenterID != value))
				{
					this.OnDestinationCenterIDChanging(value);
					this.SendPropertyChanging();
					this._DestinationCenterID = value;
					this.SendPropertyChanged("DestinationCenterID");
					this.OnDestinationCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentType", DbType="TinyInt NOT NULL")]
		public byte DeploymentType
		{
			get
			{
				return this._DeploymentType;
			}
			set
			{
				if ((this._DeploymentType != value))
				{
					this.OnDeploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._DeploymentType = value;
					this.SendPropertyChanged("DeploymentType");
					this.OnDeploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DorshoalNumberType", DbType="TinyInt")]
		public System.Nullable<byte> DorshoalNumberType
		{
			get
			{
				return this._DorshoalNumberType;
			}
			set
			{
				if ((this._DorshoalNumberType != value))
				{
					this.OnDorshoalNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._DorshoalNumberType = value;
					this.SendPropertyChanged("DorshoalNumberType");
					this.OnDorshoalNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalTraffic", DbType="Int")]
		public System.Nullable<int> FinalTraffic
		{
			get
			{
				return this._FinalTraffic;
			}
			set
			{
				if ((this._FinalTraffic != value))
				{
					this.OnFinalTrafficChanging(value);
					this.SendPropertyChanging();
					this._FinalTraffic = value;
					this.SendPropertyChanged("FinalTraffic");
					this.OnFinalTrafficChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RingFreeTraffic", DbType="Int")]
		public System.Nullable<int> RingFreeTraffic
		{
			get
			{
				return this._RingFreeTraffic;
			}
			set
			{
				if ((this._RingFreeTraffic != value))
				{
					this.OnRingFreeTrafficChanging(value);
					this.SendPropertyChanging();
					this._RingFreeTraffic = value;
					this.SendPropertyChanged("RingFreeTraffic");
					this.OnRingFreeTrafficChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficTypeCode", DbType="TinyInt")]
		public System.Nullable<byte> TrafficTypeCode
		{
			get
			{
				return this._TrafficTypeCode;
			}
			set
			{
				if ((this._TrafficTypeCode != value))
				{
					this.OnTrafficTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TrafficTypeCode = value;
					this.SendPropertyChanged("TrafficTypeCode");
					this.OnTrafficTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationAdress", DbType="NVarChar(500)")]
		public string DestinationAdress
		{
			get
			{
				return this._DestinationAdress;
			}
			set
			{
				if ((this._DestinationAdress != value))
				{
					this.OnDestinationAdressChanging(value);
					this.SendPropertyChanging();
					this._DestinationAdress = value;
					this.SendPropertyChanged("DestinationAdress");
					this.OnDestinationAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLinkNo", DbType="Int")]
		public System.Nullable<int> FirstLinkNo
		{
			get
			{
				return this._FirstLinkNo;
			}
			set
			{
				if ((this._FirstLinkNo != value))
				{
					this.OnFirstLinkNoChanging(value);
					this.SendPropertyChanging();
					this._FirstLinkNo = value;
					this.SendPropertyChanged("FirstLinkNo");
					this.OnFirstLinkNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnInstallDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UnInstallDate
		{
			get
			{
				return this._UnInstallDate;
			}
			set
			{
				if ((this._UnInstallDate != value))
				{
					this.OnUnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._UnInstallDate = value;
					this.SendPropertyChanged("UnInstallDate");
					this.OnUnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_SwitchTransition", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.SwitchTransitions.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.SwitchTransitions.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Switch_SwitchTransition", Storage="_Switch", ThisKey="SwitchID", OtherKey="ID", IsForeignKey=true)]
		public Switch Switch
		{
			get
			{
				return this._Switch.Entity;
			}
			set
			{
				Switch previousValue = this._Switch.Entity;
				if (((previousValue != value) 
							|| (this._Switch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Switch.Entity = null;
						previousValue.SwitchTransitions.Remove(this);
					}
					this._Switch.Entity = value;
					if ((value != null))
					{
						value.SwitchTransitions.Add(this);
						this._SwitchID = value.ID;
					}
					else
					{
						this._SwitchID = default(int);
					}
					this.SendPropertyChanged("Switch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SwitchType")]
	public partial class SwitchType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CommercialName;
		
		private byte _SwitchTypeValue;
		
		private bool _IsDigital;
		
		private int _Capacity;
		
		private System.Nullable<int> _OperationalCapacity;
		
		private System.Nullable<int> _InstallCapacity;
		
		private int _SpecialServiceCapacity;
		
		private System.Nullable<int> _CounterDigitCount;
		
		private bool _SupportPublicNo;
		
		private System.Nullable<long> _PublicCapacity;
		
		private System.Nullable<byte> _TrafficTypeCode;
		
		private System.Nullable<int> _ElkaID;
		
		private EntitySet<Switch> _Switches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCommercialNameChanging(string value);
    partial void OnCommercialNameChanged();
    partial void OnSwitchTypeValueChanging(byte value);
    partial void OnSwitchTypeValueChanged();
    partial void OnIsDigitalChanging(bool value);
    partial void OnIsDigitalChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnOperationalCapacityChanging(System.Nullable<int> value);
    partial void OnOperationalCapacityChanged();
    partial void OnInstallCapacityChanging(System.Nullable<int> value);
    partial void OnInstallCapacityChanged();
    partial void OnSpecialServiceCapacityChanging(int value);
    partial void OnSpecialServiceCapacityChanged();
    partial void OnCounterDigitCountChanging(System.Nullable<int> value);
    partial void OnCounterDigitCountChanged();
    partial void OnSupportPublicNoChanging(bool value);
    partial void OnSupportPublicNoChanged();
    partial void OnPublicCapacityChanging(System.Nullable<long> value);
    partial void OnPublicCapacityChanged();
    partial void OnTrafficTypeCodeChanging(System.Nullable<byte> value);
    partial void OnTrafficTypeCodeChanged();
    partial void OnElkaIDChanging(System.Nullable<int> value);
    partial void OnElkaIDChanged();
    #endregion
		
		public SwitchType()
		{
			this._Switches = new EntitySet<Switch>(new Action<Switch>(this.attach_Switches), new Action<Switch>(this.detach_Switches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommercialName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CommercialName
		{
			get
			{
				return this._CommercialName;
			}
			set
			{
				if ((this._CommercialName != value))
				{
					this.OnCommercialNameChanging(value);
					this.SendPropertyChanging();
					this._CommercialName = value;
					this.SendPropertyChanged("CommercialName");
					this.OnCommercialNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchTypeValue", DbType="TinyInt NOT NULL")]
		public byte SwitchTypeValue
		{
			get
			{
				return this._SwitchTypeValue;
			}
			set
			{
				if ((this._SwitchTypeValue != value))
				{
					this.OnSwitchTypeValueChanging(value);
					this.SendPropertyChanging();
					this._SwitchTypeValue = value;
					this.SendPropertyChanged("SwitchTypeValue");
					this.OnSwitchTypeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDigital", DbType="Bit NOT NULL")]
		public bool IsDigital
		{
			get
			{
				return this._IsDigital;
			}
			set
			{
				if ((this._IsDigital != value))
				{
					this.OnIsDigitalChanging(value);
					this.SendPropertyChanging();
					this._IsDigital = value;
					this.SendPropertyChanged("IsDigital");
					this.OnIsDigitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationalCapacity", DbType="Int")]
		public System.Nullable<int> OperationalCapacity
		{
			get
			{
				return this._OperationalCapacity;
			}
			set
			{
				if ((this._OperationalCapacity != value))
				{
					this.OnOperationalCapacityChanging(value);
					this.SendPropertyChanging();
					this._OperationalCapacity = value;
					this.SendPropertyChanged("OperationalCapacity");
					this.OnOperationalCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallCapacity", DbType="Int")]
		public System.Nullable<int> InstallCapacity
		{
			get
			{
				return this._InstallCapacity;
			}
			set
			{
				if ((this._InstallCapacity != value))
				{
					this.OnInstallCapacityChanging(value);
					this.SendPropertyChanging();
					this._InstallCapacity = value;
					this.SendPropertyChanged("InstallCapacity");
					this.OnInstallCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialServiceCapacity", DbType="Int NOT NULL")]
		public int SpecialServiceCapacity
		{
			get
			{
				return this._SpecialServiceCapacity;
			}
			set
			{
				if ((this._SpecialServiceCapacity != value))
				{
					this.OnSpecialServiceCapacityChanging(value);
					this.SendPropertyChanging();
					this._SpecialServiceCapacity = value;
					this.SendPropertyChanged("SpecialServiceCapacity");
					this.OnSpecialServiceCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterDigitCount", DbType="Int")]
		public System.Nullable<int> CounterDigitCount
		{
			get
			{
				return this._CounterDigitCount;
			}
			set
			{
				if ((this._CounterDigitCount != value))
				{
					this.OnCounterDigitCountChanging(value);
					this.SendPropertyChanging();
					this._CounterDigitCount = value;
					this.SendPropertyChanged("CounterDigitCount");
					this.OnCounterDigitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportPublicNo", DbType="Bit NOT NULL")]
		public bool SupportPublicNo
		{
			get
			{
				return this._SupportPublicNo;
			}
			set
			{
				if ((this._SupportPublicNo != value))
				{
					this.OnSupportPublicNoChanging(value);
					this.SendPropertyChanging();
					this._SupportPublicNo = value;
					this.SendPropertyChanged("SupportPublicNo");
					this.OnSupportPublicNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicCapacity", DbType="BigInt")]
		public System.Nullable<long> PublicCapacity
		{
			get
			{
				return this._PublicCapacity;
			}
			set
			{
				if ((this._PublicCapacity != value))
				{
					this.OnPublicCapacityChanging(value);
					this.SendPropertyChanging();
					this._PublicCapacity = value;
					this.SendPropertyChanged("PublicCapacity");
					this.OnPublicCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficTypeCode", DbType="TinyInt")]
		public System.Nullable<byte> TrafficTypeCode
		{
			get
			{
				return this._TrafficTypeCode;
			}
			set
			{
				if ((this._TrafficTypeCode != value))
				{
					this.OnTrafficTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TrafficTypeCode = value;
					this.SendPropertyChanged("TrafficTypeCode");
					this.OnTrafficTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="Int")]
		public System.Nullable<int> ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchType_Switch", Storage="_Switches", ThisKey="ID", OtherKey="SwitchTypeID")]
		public EntitySet<Switch> Switches
		{
			get
			{
				return this._Switches;
			}
			set
			{
				this._Switches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Switches(Switch entity)
		{
			this.SendPropertyChanging();
			entity.SwitchType = this;
		}
		
		private void detach_Switches(Switch entity)
		{
			this.SendPropertyChanging();
			entity.SwitchType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemChanges")]
	public partial class SystemChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ReqeustNo;
		
		private System.Nullable<System.DateTime> _ReqeustDate;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _ApplyDate;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReqeustNoChanging(string value);
    partial void OnReqeustNoChanged();
    partial void OnReqeustDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReqeustDateChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnApplyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplyDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SystemChange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqeustNo", DbType="NVarChar(50)")]
		public string ReqeustNo
		{
			get
			{
				return this._ReqeustNo;
			}
			set
			{
				if ((this._ReqeustNo != value))
				{
					this.OnReqeustNoChanging(value);
					this.SendPropertyChanging();
					this._ReqeustNo = value;
					this.SendPropertyChanged("ReqeustNo");
					this.OnReqeustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqeustDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ReqeustDate
		{
			get
			{
				return this._ReqeustDate;
			}
			set
			{
				if ((this._ReqeustDate != value))
				{
					this.OnReqeustDateChanging(value);
					this.SendPropertyChanging();
					this._ReqeustDate = value;
					this.SendPropertyChanged("ReqeustDate");
					this.OnReqeustDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ApplyDate
		{
			get
			{
				return this._ApplyDate;
			}
			set
			{
				if ((this._ApplyDate != value))
				{
					this.OnApplyDateChanging(value);
					this.SendPropertyChanging();
					this._ApplyDate = value;
					this.SendPropertyChanged("ApplyDate");
					this.OnApplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TakePossession")]
	public partial class TakePossession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TakePossessionLetterNo;
		
		private System.Nullable<System.DateTime> _TakePossessionLetterDate;
		
		private string _LegalOfficeLetterNo;
		
		private System.Nullable<System.DateTime> _LegalOfficeLetterDate;
		
		private System.Nullable<System.DateTime> _TakePossessionInsertDate;
		
		private string _CounterNoTakePossession;
		
		private System.Nullable<long> _NoticeID;
		
		private System.Nullable<System.DateTime> _TakePossessionDate;
		
		private System.Nullable<int> _CauseOfTakePossessionID;
		
		private System.Nullable<long> _TakePossessionReportTo118ID;
		
		private byte _Status;
		
		private System.DateTime _InsertDate;
		
		private string _DescriptionDischarge;
		
		private string _DischargLeterNo;
		
		private string _AbonmanDept;
		
		private string _Credit;
		
		private System.Nullable<long> _BuchtID;
		
		private System.Nullable<int> _SwitchPortID;
		
		private System.Nullable<long> _OldTelephone;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private System.Nullable<long> _CustomerID;
		
		private System.Nullable<long> _CabinetInputID;
		
		private System.Nullable<long> _PostContactID;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<CauseOfTakePossession> _CauseOfTakePossession;
		
		private EntityRef<Notice> _Notice;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTakePossessionLetterNoChanging(string value);
    partial void OnTakePossessionLetterNoChanged();
    partial void OnTakePossessionLetterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTakePossessionLetterDateChanged();
    partial void OnLegalOfficeLetterNoChanging(string value);
    partial void OnLegalOfficeLetterNoChanged();
    partial void OnLegalOfficeLetterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLegalOfficeLetterDateChanged();
    partial void OnTakePossessionInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTakePossessionInsertDateChanged();
    partial void OnCounterNoTakePossessionChanging(string value);
    partial void OnCounterNoTakePossessionChanged();
    partial void OnNoticeIDChanging(System.Nullable<long> value);
    partial void OnNoticeIDChanged();
    partial void OnTakePossessionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTakePossessionDateChanged();
    partial void OnCauseOfTakePossessionIDChanging(System.Nullable<int> value);
    partial void OnCauseOfTakePossessionIDChanged();
    partial void OnTakePossessionReportTo118IDChanging(System.Nullable<long> value);
    partial void OnTakePossessionReportTo118IDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnDescriptionDischargeChanging(string value);
    partial void OnDescriptionDischargeChanged();
    partial void OnDischargLeterNoChanging(string value);
    partial void OnDischargLeterNoChanged();
    partial void OnAbonmanDeptChanging(string value);
    partial void OnAbonmanDeptChanged();
    partial void OnCreditChanging(string value);
    partial void OnCreditChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnSwitchPortIDChanged();
    partial void OnOldTelephoneChanging(System.Nullable<long> value);
    partial void OnOldTelephoneChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnCabinetInputIDChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    #endregion
		
		public TakePossession()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._CauseOfTakePossession = default(EntityRef<CauseOfTakePossession>);
			this._Notice = default(EntityRef<Notice>);
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakePossessionLetterNo", DbType="NVarChar(50)")]
		public string TakePossessionLetterNo
		{
			get
			{
				return this._TakePossessionLetterNo;
			}
			set
			{
				if ((this._TakePossessionLetterNo != value))
				{
					this.OnTakePossessionLetterNoChanging(value);
					this.SendPropertyChanging();
					this._TakePossessionLetterNo = value;
					this.SendPropertyChanged("TakePossessionLetterNo");
					this.OnTakePossessionLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakePossessionLetterDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TakePossessionLetterDate
		{
			get
			{
				return this._TakePossessionLetterDate;
			}
			set
			{
				if ((this._TakePossessionLetterDate != value))
				{
					this.OnTakePossessionLetterDateChanging(value);
					this.SendPropertyChanging();
					this._TakePossessionLetterDate = value;
					this.SendPropertyChanged("TakePossessionLetterDate");
					this.OnTakePossessionLetterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalOfficeLetterNo", DbType="NVarChar(50)")]
		public string LegalOfficeLetterNo
		{
			get
			{
				return this._LegalOfficeLetterNo;
			}
			set
			{
				if ((this._LegalOfficeLetterNo != value))
				{
					this.OnLegalOfficeLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LegalOfficeLetterNo = value;
					this.SendPropertyChanged("LegalOfficeLetterNo");
					this.OnLegalOfficeLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalOfficeLetterDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LegalOfficeLetterDate
		{
			get
			{
				return this._LegalOfficeLetterDate;
			}
			set
			{
				if ((this._LegalOfficeLetterDate != value))
				{
					this.OnLegalOfficeLetterDateChanging(value);
					this.SendPropertyChanging();
					this._LegalOfficeLetterDate = value;
					this.SendPropertyChanged("LegalOfficeLetterDate");
					this.OnLegalOfficeLetterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakePossessionInsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TakePossessionInsertDate
		{
			get
			{
				return this._TakePossessionInsertDate;
			}
			set
			{
				if ((this._TakePossessionInsertDate != value))
				{
					this.OnTakePossessionInsertDateChanging(value);
					this.SendPropertyChanging();
					this._TakePossessionInsertDate = value;
					this.SendPropertyChanged("TakePossessionInsertDate");
					this.OnTakePossessionInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterNoTakePossession", DbType="NVarChar(50)")]
		public string CounterNoTakePossession
		{
			get
			{
				return this._CounterNoTakePossession;
			}
			set
			{
				if ((this._CounterNoTakePossession != value))
				{
					this.OnCounterNoTakePossessionChanging(value);
					this.SendPropertyChanging();
					this._CounterNoTakePossession = value;
					this.SendPropertyChanged("CounterNoTakePossession");
					this.OnCounterNoTakePossessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", DbType="BigInt")]
		public System.Nullable<long> NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					if (this._Notice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._NoticeID = value;
					this.SendPropertyChanged("NoticeID");
					this.OnNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakePossessionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TakePossessionDate
		{
			get
			{
				return this._TakePossessionDate;
			}
			set
			{
				if ((this._TakePossessionDate != value))
				{
					this.OnTakePossessionDateChanging(value);
					this.SendPropertyChanging();
					this._TakePossessionDate = value;
					this.SendPropertyChanged("TakePossessionDate");
					this.OnTakePossessionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseOfTakePossessionID", DbType="Int")]
		public System.Nullable<int> CauseOfTakePossessionID
		{
			get
			{
				return this._CauseOfTakePossessionID;
			}
			set
			{
				if ((this._CauseOfTakePossessionID != value))
				{
					if (this._CauseOfTakePossession.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauseOfTakePossessionIDChanging(value);
					this.SendPropertyChanging();
					this._CauseOfTakePossessionID = value;
					this.SendPropertyChanged("CauseOfTakePossessionID");
					this.OnCauseOfTakePossessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakePossessionReportTo118ID", DbType="BigInt")]
		public System.Nullable<long> TakePossessionReportTo118ID
		{
			get
			{
				return this._TakePossessionReportTo118ID;
			}
			set
			{
				if ((this._TakePossessionReportTo118ID != value))
				{
					this.OnTakePossessionReportTo118IDChanging(value);
					this.SendPropertyChanging();
					this._TakePossessionReportTo118ID = value;
					this.SendPropertyChanged("TakePossessionReportTo118ID");
					this.OnTakePossessionReportTo118IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionDischarge", DbType="NVarChar(200)")]
		public string DescriptionDischarge
		{
			get
			{
				return this._DescriptionDischarge;
			}
			set
			{
				if ((this._DescriptionDischarge != value))
				{
					this.OnDescriptionDischargeChanging(value);
					this.SendPropertyChanging();
					this._DescriptionDischarge = value;
					this.SendPropertyChanged("DescriptionDischarge");
					this.OnDescriptionDischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargLeterNo", DbType="NVarChar(50)")]
		public string DischargLeterNo
		{
			get
			{
				return this._DischargLeterNo;
			}
			set
			{
				if ((this._DischargLeterNo != value))
				{
					this.OnDischargLeterNoChanging(value);
					this.SendPropertyChanging();
					this._DischargLeterNo = value;
					this.SendPropertyChanged("DischargLeterNo");
					this.OnDischargLeterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbonmanDept", DbType="NVarChar(50)")]
		public string AbonmanDept
		{
			get
			{
				return this._AbonmanDept;
			}
			set
			{
				if ((this._AbonmanDept != value))
				{
					this.OnAbonmanDeptChanging(value);
					this.SendPropertyChanging();
					this._AbonmanDept = value;
					this.SendPropertyChanged("AbonmanDept");
					this.OnAbonmanDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="NVarChar(50)")]
		public string Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPortID", DbType="Int")]
		public System.Nullable<int> SwitchPortID
		{
			get
			{
				return this._SwitchPortID;
			}
			set
			{
				if ((this._SwitchPortID != value))
				{
					this.OnSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPortID = value;
					this.SendPropertyChanged("SwitchPortID");
					this.OnSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephone", DbType="BigInt")]
		public System.Nullable<long> OldTelephone
		{
			get
			{
				return this._OldTelephone;
			}
			set
			{
				if ((this._OldTelephone != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldTelephoneChanging(value);
					this.SendPropertyChanging();
					this._OldTelephone = value;
					this.SendPropertyChanged("OldTelephone");
					this.OnOldTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt")]
		public System.Nullable<long> CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_TakePossession", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.TakePossessions.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.TakePossessions.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_TakePossession1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.TakePossessions1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.TakePossessions1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfTakePossession_TakePossession", Storage="_CauseOfTakePossession", ThisKey="CauseOfTakePossessionID", OtherKey="ID", IsForeignKey=true)]
		public CauseOfTakePossession CauseOfTakePossession
		{
			get
			{
				return this._CauseOfTakePossession.Entity;
			}
			set
			{
				CauseOfTakePossession previousValue = this._CauseOfTakePossession.Entity;
				if (((previousValue != value) 
							|| (this._CauseOfTakePossession.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauseOfTakePossession.Entity = null;
						previousValue.TakePossessions.Remove(this);
					}
					this._CauseOfTakePossession.Entity = value;
					if ((value != null))
					{
						value.TakePossessions.Add(this);
						this._CauseOfTakePossessionID = value.ID;
					}
					else
					{
						this._CauseOfTakePossessionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CauseOfTakePossession");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Notice_TakePossession", Storage="_Notice", ThisKey="NoticeID", OtherKey="ID", IsForeignKey=true)]
		public Notice Notice
		{
			get
			{
				return this._Notice.Entity;
			}
			set
			{
				Notice previousValue = this._Notice.Entity;
				if (((previousValue != value) 
							|| (this._Notice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Notice.Entity = null;
						previousValue.TakePossessions.Remove(this);
					}
					this._Notice.Entity = value;
					if ((value != null))
					{
						value.TakePossessions.Add(this);
						this._NoticeID = value.ID;
					}
					else
					{
						this._NoticeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Notice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TakePossession", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TakePossession = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TakePossession = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TakePossession", Storage="_Telephone", ThisKey="OldTelephone", OtherKey="TelephoneNo", IsForeignKey=true, DeleteRule="CASCADE")]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.TakePossessions.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.TakePossessions.Add(this);
						this._OldTelephone = value.TelephoneNo;
					}
					else
					{
						this._OldTelephone = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_TakePossession", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.TakePossessions.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.TakePossessions.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelecomminucationService")]
	public partial class TelecomminucationService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Title;
		
		private long _UnitPrice;
		
		private int _RequestTypeID;
		
		private bool _IsActive;
		
		private int _Tax;
		
		private System.Nullable<int> _UnitMeasureID;
		
		private EntitySet<TelecomminucationServicePayment> _TelecomminucationServicePayments;
		
		private EntityRef<RequestType> _RequestType;
		
		private EntityRef<UnitMeasure> _UnitMeasure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUnitPriceChanging(long value);
    partial void OnUnitPriceChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnTaxChanging(int value);
    partial void OnTaxChanged();
    partial void OnUnitMeasureIDChanging(System.Nullable<int> value);
    partial void OnUnitMeasureIDChanged();
    #endregion
		
		public TelecomminucationService()
		{
			this._TelecomminucationServicePayments = new EntitySet<TelecomminucationServicePayment>(new Action<TelecomminucationServicePayment>(this.attach_TelecomminucationServicePayments), new Action<TelecomminucationServicePayment>(this.detach_TelecomminucationServicePayments));
			this._RequestType = default(EntityRef<RequestType>);
			this._UnitMeasure = default(EntityRef<UnitMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="BigInt NOT NULL")]
		public long UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Int NOT NULL")]
		public int Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasureID", DbType="Int")]
		public System.Nullable<int> UnitMeasureID
		{
			get
			{
				return this._UnitMeasureID;
			}
			set
			{
				if ((this._UnitMeasureID != value))
				{
					if (this._UnitMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitMeasureIDChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasureID = value;
					this.SendPropertyChanged("UnitMeasureID");
					this.OnUnitMeasureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TelecomminucationService_TelecomminucationServicePayment", Storage="_TelecomminucationServicePayments", ThisKey="ID", OtherKey="TelecomminucationServiceID")]
		public EntitySet<TelecomminucationServicePayment> TelecomminucationServicePayments
		{
			get
			{
				return this._TelecomminucationServicePayments;
			}
			set
			{
				this._TelecomminucationServicePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_TelecomminucationService", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.TelecomminucationServices.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.TelecomminucationServices.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(int);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_TelecomminucationService", Storage="_UnitMeasure", ThisKey="UnitMeasureID", OtherKey="ID", IsForeignKey=true)]
		public UnitMeasure UnitMeasure
		{
			get
			{
				return this._UnitMeasure.Entity;
			}
			set
			{
				UnitMeasure previousValue = this._UnitMeasure.Entity;
				if (((previousValue != value) 
							|| (this._UnitMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitMeasure.Entity = null;
						previousValue.TelecomminucationServices.Remove(this);
					}
					this._UnitMeasure.Entity = value;
					if ((value != null))
					{
						value.TelecomminucationServices.Add(this);
						this._UnitMeasureID = value.ID;
					}
					else
					{
						this._UnitMeasureID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UnitMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TelecomminucationServicePayments(TelecomminucationServicePayment entity)
		{
			this.SendPropertyChanging();
			entity.TelecomminucationService = this;
		}
		
		private void detach_TelecomminucationServicePayments(TelecomminucationServicePayment entity)
		{
			this.SendPropertyChanging();
			entity.TelecomminucationService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Telephone")]
	public partial class Telephone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TelephoneNo;
		
		private long _TelephoneNoIndividual;
		
		private System.Nullable<long> _VirtualTelephoneNo;
		
		private System.Nullable<int> _SwitchPrecodeID;
		
		private System.Nullable<byte> _PreCodeType;
		
		private System.Nullable<int> _SwitchPortID;
		
		private System.Nullable<bool> _IsVIP;
		
		private System.Nullable<bool> _IsRound;
		
		private System.Nullable<byte> _UsageType;
		
		private System.Nullable<byte> _RoundType;
		
		private int _CenterID;
		
		private byte _Status;
		
		private byte _ClassTelephone;
		
		private System.Nullable<long> _CustomerID;
		
		private System.Nullable<int> _CustomerTypeID;
		
		private System.Nullable<int> _CustomerGroupID;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private bool _InRoundSale;
		
		private System.Nullable<byte> _CutAndEstablishStatus;
		
		private System.Nullable<System.DateTime> _InstallationDate;
		
		private System.Nullable<System.DateTime> _DischargeDate;
		
		private System.Nullable<System.DateTime> _CutDate;
		
		private System.Nullable<System.DateTime> _ConnectDate;
		
		private System.Nullable<int> _CauseOfCutID;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private System.Nullable<int> _ChargingType;
		
		private System.Nullable<int> _PosessionType;
		
		private System.Nullable<System.DateTime> _InitialInstallationDate;
		
		private System.Nullable<System.DateTime> _InitialDischargeDate;
		
		private System.Nullable<int> _CauseOfTakePossessionID;
		
		private string _ShahkarClassified;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<BlackList> _BlackLists;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntitySet<CenterToCenterTranslationTelephone> _CenterToCenterTranslationTelephones;
		
		private EntitySet<CenterToCenterTranslationTelephone> _CenterToCenterTranslationTelephones1;
		
		private EntitySet<ChangeNo> _ChangeNos;
		
		private EntitySet<ChangeNo> _ChangeNos1;
		
		private EntitySet<E1> _E1s;
		
		private EntitySet<ExchangeBrokenPCM> _ExchangeBrokenPCMs;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions;
		
		private EntitySet<ExchangeCentralCableMDFConncetion> _ExchangeCentralCableMDFConncetions;
		
		private EntitySet<InvestigatePossibilityWaitinglist> _InvestigatePossibilityWaitinglists;
		
		private EntitySet<Request> _Requests;
		
		private EntitySet<SelectTelephone> _SelectTelephones;
		
		private EntitySet<SpecialWireAddress> _SpecialWireAddresses;
		
		private EntitySet<SwapPCM> _SwapPCMs;
		
		private EntitySet<SwapPCM> _SwapPCMs1;
		
		private EntitySet<SwapTelephone> _SwapTelephones;
		
		private EntitySet<SwapTelephone> _SwapTelephones1;
		
		private EntitySet<TakePossession> _TakePossessions;
		
		private EntityRef<Telephone> _Telephone2;
		
		private EntitySet<TelephonePBX> _TelephonePBXes;
		
		private EntitySet<TelephonePBX> _TelephonePBXes1;
		
		private EntitySet<TelephoneSpecialServiceType> _TelephoneSpecialServiceTypes;
		
		private EntitySet<TelephoneStatusLog> _TelephoneStatusLogs;
		
		private EntitySet<TelRoundSale> _TelRoundSales;
		
		private EntitySet<TitleIn118> _TitleIn118s;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions1;
		
		private EntitySet<TranslationOpticalCabinetToNormalTelephone> _TranslationOpticalCabinetToNormalTelephones;
		
		private EntitySet<TranslationOpticalCabinetToNormalTelephone> _TranslationOpticalCabinetToNormalTelephones1;
		
		private EntitySet<WarningHistory> _WarningHistories;
		
		private EntitySet<Wireless> _Wirelesses;
		
		private EntitySet<ExchangeGSM> _ExchangeGSMs;
		
		private EntitySet<ExchangeGSM> _ExchangeGSMs1;
		
		private EntitySet<ExchangeGSMConnection> _ExchangeGSMConnections;
		
		private EntitySet<ExchangeGSMConnection> _ExchangeGSMConnections1;
		
		private EntityRef<GSMSimCard> _GSMSimCard;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<CauseOfCut> _CauseOfCut;
		
		private EntityRef<CauseOfTakePossession> _CauseOfTakePossession;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<CustomerGroup> _CustomerGroup;
		
		private EntityRef<CustomerType> _CustomerType;
		
		private EntityRef<SwitchPort> _SwitchPort;
		
		private EntityRef<SwitchPrecode> _SwitchPrecode;
		
		private EntityRef<Telephone> _Telephone1;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnTelephoneNoIndividualChanging(long value);
    partial void OnTelephoneNoIndividualChanged();
    partial void OnVirtualTelephoneNoChanging(System.Nullable<long> value);
    partial void OnVirtualTelephoneNoChanged();
    partial void OnSwitchPrecodeIDChanging(System.Nullable<int> value);
    partial void OnSwitchPrecodeIDChanged();
    partial void OnPreCodeTypeChanging(System.Nullable<byte> value);
    partial void OnPreCodeTypeChanged();
    partial void OnSwitchPortIDChanging(System.Nullable<int> value);
    partial void OnSwitchPortIDChanged();
    partial void OnIsVIPChanging(System.Nullable<bool> value);
    partial void OnIsVIPChanged();
    partial void OnIsRoundChanging(System.Nullable<bool> value);
    partial void OnIsRoundChanged();
    partial void OnUsageTypeChanging(System.Nullable<byte> value);
    partial void OnUsageTypeChanged();
    partial void OnRoundTypeChanging(System.Nullable<byte> value);
    partial void OnRoundTypeChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnClassTelephoneChanging(byte value);
    partial void OnClassTelephoneChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerTypeIDChanging(System.Nullable<int> value);
    partial void OnCustomerTypeIDChanged();
    partial void OnCustomerGroupIDChanging(System.Nullable<int> value);
    partial void OnCustomerGroupIDChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnInRoundSaleChanging(bool value);
    partial void OnInRoundSaleChanged();
    partial void OnCutAndEstablishStatusChanging(System.Nullable<byte> value);
    partial void OnCutAndEstablishStatusChanged();
    partial void OnInstallationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallationDateChanged();
    partial void OnDischargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDischargeDateChanged();
    partial void OnCutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCutDateChanged();
    partial void OnConnectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConnectDateChanged();
    partial void OnCauseOfCutIDChanging(System.Nullable<int> value);
    partial void OnCauseOfCutIDChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    partial void OnChargingTypeChanging(System.Nullable<int> value);
    partial void OnChargingTypeChanged();
    partial void OnPosessionTypeChanging(System.Nullable<int> value);
    partial void OnPosessionTypeChanged();
    partial void OnInitialInstallationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInitialInstallationDateChanged();
    partial void OnInitialDischargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInitialDischargeDateChanged();
    partial void OnCauseOfTakePossessionIDChanging(System.Nullable<int> value);
    partial void OnCauseOfTakePossessionIDChanged();
    partial void OnShahkarClassifiedChanging(string value);
    partial void OnShahkarClassifiedChanged();
    #endregion
		
		public Telephone()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._BlackLists = new EntitySet<BlackList>(new Action<BlackList>(this.attach_BlackLists), new Action<BlackList>(this.detach_BlackLists));
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._CenterToCenterTranslationTelephones = new EntitySet<CenterToCenterTranslationTelephone>(new Action<CenterToCenterTranslationTelephone>(this.attach_CenterToCenterTranslationTelephones), new Action<CenterToCenterTranslationTelephone>(this.detach_CenterToCenterTranslationTelephones));
			this._CenterToCenterTranslationTelephones1 = new EntitySet<CenterToCenterTranslationTelephone>(new Action<CenterToCenterTranslationTelephone>(this.attach_CenterToCenterTranslationTelephones1), new Action<CenterToCenterTranslationTelephone>(this.detach_CenterToCenterTranslationTelephones1));
			this._ChangeNos = new EntitySet<ChangeNo>(new Action<ChangeNo>(this.attach_ChangeNos), new Action<ChangeNo>(this.detach_ChangeNos));
			this._ChangeNos1 = new EntitySet<ChangeNo>(new Action<ChangeNo>(this.attach_ChangeNos1), new Action<ChangeNo>(this.detach_ChangeNos1));
			this._E1s = new EntitySet<E1>(new Action<E1>(this.attach_E1s), new Action<E1>(this.detach_E1s));
			this._ExchangeBrokenPCMs = new EntitySet<ExchangeBrokenPCM>(new Action<ExchangeBrokenPCM>(this.attach_ExchangeBrokenPCMs), new Action<ExchangeBrokenPCM>(this.detach_ExchangeBrokenPCMs));
			this._ExchangeCabinetInputConncetions = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions));
			this._ExchangeCentralCableMDFConncetions = new EntitySet<ExchangeCentralCableMDFConncetion>(new Action<ExchangeCentralCableMDFConncetion>(this.attach_ExchangeCentralCableMDFConncetions), new Action<ExchangeCentralCableMDFConncetion>(this.detach_ExchangeCentralCableMDFConncetions));
			this._InvestigatePossibilityWaitinglists = new EntitySet<InvestigatePossibilityWaitinglist>(new Action<InvestigatePossibilityWaitinglist>(this.attach_InvestigatePossibilityWaitinglists), new Action<InvestigatePossibilityWaitinglist>(this.detach_InvestigatePossibilityWaitinglists));
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._SelectTelephones = new EntitySet<SelectTelephone>(new Action<SelectTelephone>(this.attach_SelectTelephones), new Action<SelectTelephone>(this.detach_SelectTelephones));
			this._SpecialWireAddresses = new EntitySet<SpecialWireAddress>(new Action<SpecialWireAddress>(this.attach_SpecialWireAddresses), new Action<SpecialWireAddress>(this.detach_SpecialWireAddresses));
			this._SwapPCMs = new EntitySet<SwapPCM>(new Action<SwapPCM>(this.attach_SwapPCMs), new Action<SwapPCM>(this.detach_SwapPCMs));
			this._SwapPCMs1 = new EntitySet<SwapPCM>(new Action<SwapPCM>(this.attach_SwapPCMs1), new Action<SwapPCM>(this.detach_SwapPCMs1));
			this._SwapTelephones = new EntitySet<SwapTelephone>(new Action<SwapTelephone>(this.attach_SwapTelephones), new Action<SwapTelephone>(this.detach_SwapTelephones));
			this._SwapTelephones1 = new EntitySet<SwapTelephone>(new Action<SwapTelephone>(this.attach_SwapTelephones1), new Action<SwapTelephone>(this.detach_SwapTelephones1));
			this._TakePossessions = new EntitySet<TakePossession>(new Action<TakePossession>(this.attach_TakePossessions), new Action<TakePossession>(this.detach_TakePossessions));
			this._Telephone2 = default(EntityRef<Telephone>);
			this._TelephonePBXes = new EntitySet<TelephonePBX>(new Action<TelephonePBX>(this.attach_TelephonePBXes), new Action<TelephonePBX>(this.detach_TelephonePBXes));
			this._TelephonePBXes1 = new EntitySet<TelephonePBX>(new Action<TelephonePBX>(this.attach_TelephonePBXes1), new Action<TelephonePBX>(this.detach_TelephonePBXes1));
			this._TelephoneSpecialServiceTypes = new EntitySet<TelephoneSpecialServiceType>(new Action<TelephoneSpecialServiceType>(this.attach_TelephoneSpecialServiceTypes), new Action<TelephoneSpecialServiceType>(this.detach_TelephoneSpecialServiceTypes));
			this._TelephoneStatusLogs = new EntitySet<TelephoneStatusLog>(new Action<TelephoneStatusLog>(this.attach_TelephoneStatusLogs), new Action<TelephoneStatusLog>(this.detach_TelephoneStatusLogs));
			this._TelRoundSales = new EntitySet<TelRoundSale>(new Action<TelRoundSale>(this.attach_TelRoundSales), new Action<TelRoundSale>(this.detach_TelRoundSales));
			this._TitleIn118s = new EntitySet<TitleIn118>(new Action<TitleIn118>(this.attach_TitleIn118s), new Action<TitleIn118>(this.detach_TitleIn118s));
			this._TranslationOpticalCabinetToNormalConncetions = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions));
			this._TranslationOpticalCabinetToNormalConncetions1 = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions1), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions1));
			this._TranslationOpticalCabinetToNormalTelephones = new EntitySet<TranslationOpticalCabinetToNormalTelephone>(new Action<TranslationOpticalCabinetToNormalTelephone>(this.attach_TranslationOpticalCabinetToNormalTelephones), new Action<TranslationOpticalCabinetToNormalTelephone>(this.detach_TranslationOpticalCabinetToNormalTelephones));
			this._TranslationOpticalCabinetToNormalTelephones1 = new EntitySet<TranslationOpticalCabinetToNormalTelephone>(new Action<TranslationOpticalCabinetToNormalTelephone>(this.attach_TranslationOpticalCabinetToNormalTelephones1), new Action<TranslationOpticalCabinetToNormalTelephone>(this.detach_TranslationOpticalCabinetToNormalTelephones1));
			this._WarningHistories = new EntitySet<WarningHistory>(new Action<WarningHistory>(this.attach_WarningHistories), new Action<WarningHistory>(this.detach_WarningHistories));
			this._Wirelesses = new EntitySet<Wireless>(new Action<Wireless>(this.attach_Wirelesses), new Action<Wireless>(this.detach_Wirelesses));
			this._ExchangeGSMs = new EntitySet<ExchangeGSM>(new Action<ExchangeGSM>(this.attach_ExchangeGSMs), new Action<ExchangeGSM>(this.detach_ExchangeGSMs));
			this._ExchangeGSMs1 = new EntitySet<ExchangeGSM>(new Action<ExchangeGSM>(this.attach_ExchangeGSMs1), new Action<ExchangeGSM>(this.detach_ExchangeGSMs1));
			this._ExchangeGSMConnections = new EntitySet<ExchangeGSMConnection>(new Action<ExchangeGSMConnection>(this.attach_ExchangeGSMConnections), new Action<ExchangeGSMConnection>(this.detach_ExchangeGSMConnections));
			this._ExchangeGSMConnections1 = new EntitySet<ExchangeGSMConnection>(new Action<ExchangeGSMConnection>(this.attach_ExchangeGSMConnections1), new Action<ExchangeGSMConnection>(this.detach_ExchangeGSMConnections1));
			this._GSMSimCard = default(EntityRef<GSMSimCard>);
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._CauseOfCut = default(EntityRef<CauseOfCut>);
			this._CauseOfTakePossession = default(EntityRef<CauseOfTakePossession>);
			this._Center = default(EntityRef<Center>);
			this._CustomerGroup = default(EntityRef<CustomerGroup>);
			this._CustomerType = default(EntityRef<CustomerType>);
			this._SwitchPort = default(EntityRef<SwitchPort>);
			this._SwitchPrecode = default(EntityRef<SwitchPrecode>);
			this._Telephone1 = default(EntityRef<Telephone>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNoIndividual", DbType="BigInt NOT NULL")]
		public long TelephoneNoIndividual
		{
			get
			{
				return this._TelephoneNoIndividual;
			}
			set
			{
				if ((this._TelephoneNoIndividual != value))
				{
					this.OnTelephoneNoIndividualChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNoIndividual = value;
					this.SendPropertyChanged("TelephoneNoIndividual");
					this.OnTelephoneNoIndividualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> VirtualTelephoneNo
		{
			get
			{
				return this._VirtualTelephoneNo;
			}
			set
			{
				if ((this._VirtualTelephoneNo != value))
				{
					this.OnVirtualTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._VirtualTelephoneNo = value;
					this.SendPropertyChanged("VirtualTelephoneNo");
					this.OnVirtualTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPrecodeID", DbType="Int")]
		public System.Nullable<int> SwitchPrecodeID
		{
			get
			{
				return this._SwitchPrecodeID;
			}
			set
			{
				if ((this._SwitchPrecodeID != value))
				{
					if (this._SwitchPrecode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchPrecodeIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPrecodeID = value;
					this.SendPropertyChanged("SwitchPrecodeID");
					this.OnSwitchPrecodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreCodeType", DbType="TinyInt")]
		public System.Nullable<byte> PreCodeType
		{
			get
			{
				return this._PreCodeType;
			}
			set
			{
				if ((this._PreCodeType != value))
				{
					this.OnPreCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._PreCodeType = value;
					this.SendPropertyChanged("PreCodeType");
					this.OnPreCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPortID", DbType="Int")]
		public System.Nullable<int> SwitchPortID
		{
			get
			{
				return this._SwitchPortID;
			}
			set
			{
				if ((this._SwitchPortID != value))
				{
					if (this._SwitchPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPortID = value;
					this.SendPropertyChanged("SwitchPortID");
					this.OnSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVIP", DbType="Bit")]
		public System.Nullable<bool> IsVIP
		{
			get
			{
				return this._IsVIP;
			}
			set
			{
				if ((this._IsVIP != value))
				{
					this.OnIsVIPChanging(value);
					this.SendPropertyChanging();
					this._IsVIP = value;
					this.SendPropertyChanged("IsVIP");
					this.OnIsVIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRound", DbType="Bit")]
		public System.Nullable<bool> IsRound
		{
			get
			{
				return this._IsRound;
			}
			set
			{
				if ((this._IsRound != value))
				{
					this.OnIsRoundChanging(value);
					this.SendPropertyChanging();
					this._IsRound = value;
					this.SendPropertyChanged("IsRound");
					this.OnIsRoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsageType", DbType="TinyInt")]
		public System.Nullable<byte> UsageType
		{
			get
			{
				return this._UsageType;
			}
			set
			{
				if ((this._UsageType != value))
				{
					this.OnUsageTypeChanging(value);
					this.SendPropertyChanging();
					this._UsageType = value;
					this.SendPropertyChanged("UsageType");
					this.OnUsageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundType", DbType="TinyInt")]
		public System.Nullable<byte> RoundType
		{
			get
			{
				return this._RoundType;
			}
			set
			{
				if ((this._RoundType != value))
				{
					this.OnRoundTypeChanging(value);
					this.SendPropertyChanging();
					this._RoundType = value;
					this.SendPropertyChanged("RoundType");
					this.OnRoundTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTelephone", DbType="TinyInt NOT NULL")]
		public byte ClassTelephone
		{
			get
			{
				return this._ClassTelephone;
			}
			set
			{
				if ((this._ClassTelephone != value))
				{
					this.OnClassTelephoneChanging(value);
					this.SendPropertyChanging();
					this._ClassTelephone = value;
					this.SendPropertyChanged("ClassTelephone");
					this.OnClassTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int")]
		public System.Nullable<int> CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGroupID", DbType="Int")]
		public System.Nullable<int> CustomerGroupID
		{
			get
			{
				return this._CustomerGroupID;
			}
			set
			{
				if ((this._CustomerGroupID != value))
				{
					if (this._CustomerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerGroupID = value;
					this.SendPropertyChanged("CustomerGroupID");
					this.OnCustomerGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InRoundSale", DbType="Bit NOT NULL")]
		public bool InRoundSale
		{
			get
			{
				return this._InRoundSale;
			}
			set
			{
				if ((this._InRoundSale != value))
				{
					this.OnInRoundSaleChanging(value);
					this.SendPropertyChanging();
					this._InRoundSale = value;
					this.SendPropertyChanged("InRoundSale");
					this.OnInRoundSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutAndEstablishStatus", DbType="TinyInt")]
		public System.Nullable<byte> CutAndEstablishStatus
		{
			get
			{
				return this._CutAndEstablishStatus;
			}
			set
			{
				if ((this._CutAndEstablishStatus != value))
				{
					this.OnCutAndEstablishStatusChanging(value);
					this.SendPropertyChanging();
					this._CutAndEstablishStatus = value;
					this.SendPropertyChanged("CutAndEstablishStatus");
					this.OnCutAndEstablishStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallationDate
		{
			get
			{
				return this._InstallationDate;
			}
			set
			{
				if ((this._InstallationDate != value))
				{
					this.OnInstallationDateChanging(value);
					this.SendPropertyChanging();
					this._InstallationDate = value;
					this.SendPropertyChanged("InstallationDate");
					this.OnInstallationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this.OnDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._DischargeDate = value;
					this.SendPropertyChanged("DischargeDate");
					this.OnDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CutDate
		{
			get
			{
				return this._CutDate;
			}
			set
			{
				if ((this._CutDate != value))
				{
					this.OnCutDateChanging(value);
					this.SendPropertyChanging();
					this._CutDate = value;
					this.SendPropertyChanged("CutDate");
					this.OnCutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ConnectDate
		{
			get
			{
				return this._ConnectDate;
			}
			set
			{
				if ((this._ConnectDate != value))
				{
					this.OnConnectDateChanging(value);
					this.SendPropertyChanging();
					this._ConnectDate = value;
					this.SendPropertyChanged("ConnectDate");
					this.OnConnectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseOfCutID", DbType="Int")]
		public System.Nullable<int> CauseOfCutID
		{
			get
			{
				return this._CauseOfCutID;
			}
			set
			{
				if ((this._CauseOfCutID != value))
				{
					if (this._CauseOfCut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauseOfCutIDChanging(value);
					this.SendPropertyChanging();
					this._CauseOfCutID = value;
					this.SendPropertyChanged("CauseOfCutID");
					this.OnCauseOfCutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargingType", DbType="Int")]
		public System.Nullable<int> ChargingType
		{
			get
			{
				return this._ChargingType;
			}
			set
			{
				if ((this._ChargingType != value))
				{
					this.OnChargingTypeChanging(value);
					this.SendPropertyChanging();
					this._ChargingType = value;
					this.SendPropertyChanged("ChargingType");
					this.OnChargingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosessionType", DbType="Int")]
		public System.Nullable<int> PosessionType
		{
			get
			{
				return this._PosessionType;
			}
			set
			{
				if ((this._PosessionType != value))
				{
					this.OnPosessionTypeChanging(value);
					this.SendPropertyChanging();
					this._PosessionType = value;
					this.SendPropertyChanged("PosessionType");
					this.OnPosessionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialInstallationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InitialInstallationDate
		{
			get
			{
				return this._InitialInstallationDate;
			}
			set
			{
				if ((this._InitialInstallationDate != value))
				{
					this.OnInitialInstallationDateChanging(value);
					this.SendPropertyChanging();
					this._InitialInstallationDate = value;
					this.SendPropertyChanged("InitialInstallationDate");
					this.OnInitialInstallationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialDischargeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InitialDischargeDate
		{
			get
			{
				return this._InitialDischargeDate;
			}
			set
			{
				if ((this._InitialDischargeDate != value))
				{
					this.OnInitialDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._InitialDischargeDate = value;
					this.SendPropertyChanged("InitialDischargeDate");
					this.OnInitialDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseOfTakePossessionID", DbType="Int")]
		public System.Nullable<int> CauseOfTakePossessionID
		{
			get
			{
				return this._CauseOfTakePossessionID;
			}
			set
			{
				if ((this._CauseOfTakePossessionID != value))
				{
					if (this._CauseOfTakePossession.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauseOfTakePossessionIDChanging(value);
					this.SendPropertyChanging();
					this._CauseOfTakePossessionID = value;
					this.SendPropertyChanged("CauseOfTakePossessionID");
					this.OnCauseOfTakePossessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShahkarClassified", DbType="NVarChar(150)")]
		public string ShahkarClassified
		{
			get
			{
				return this._ShahkarClassified;
			}
			set
			{
				if ((this._ShahkarClassified != value))
				{
					this.OnShahkarClassifiedChanging(value);
					this.SendPropertyChanging();
					this._ShahkarClassified = value;
					this.SendPropertyChanged("ShahkarClassified");
					this.OnShahkarClassifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ADSL", Storage="_ADSLs", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_BlackList", Storage="_BlackLists", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<BlackList> BlackLists
		{
			get
			{
				return this._BlackLists;
			}
			set
			{
				this._BlackLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_Bucht", Storage="_Buchts", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_CenterToCenterTranslationTelephone", Storage="_CenterToCenterTranslationTelephones", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<CenterToCenterTranslationTelephone> CenterToCenterTranslationTelephones
		{
			get
			{
				return this._CenterToCenterTranslationTelephones;
			}
			set
			{
				this._CenterToCenterTranslationTelephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_CenterToCenterTranslationTelephone1", Storage="_CenterToCenterTranslationTelephones1", ThisKey="TelephoneNo", OtherKey="NewTelephoneNo")]
		public EntitySet<CenterToCenterTranslationTelephone> CenterToCenterTranslationTelephones1
		{
			get
			{
				return this._CenterToCenterTranslationTelephones1;
			}
			set
			{
				this._CenterToCenterTranslationTelephones1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ChangeNo", Storage="_ChangeNos", ThisKey="TelephoneNo", OtherKey="NewTelephoneNo")]
		public EntitySet<ChangeNo> ChangeNos
		{
			get
			{
				return this._ChangeNos;
			}
			set
			{
				this._ChangeNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ChangeNo1", Storage="_ChangeNos1", ThisKey="TelephoneNo", OtherKey="OldTelephoneNo")]
		public EntitySet<ChangeNo> ChangeNos1
		{
			get
			{
				return this._ChangeNos1;
			}
			set
			{
				this._ChangeNos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_E1", Storage="_E1s", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<E1> E1s
		{
			get
			{
				return this._E1s;
			}
			set
			{
				this._E1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeBrokenPCM", Storage="_ExchangeBrokenPCMs", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<ExchangeBrokenPCM> ExchangeBrokenPCMs
		{
			get
			{
				return this._ExchangeBrokenPCMs;
			}
			set
			{
				this._ExchangeBrokenPCMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeCabinetInputConncetion", Storage="_ExchangeCabinetInputConncetions", ThisKey="TelephoneNo", OtherKey="FromTelephoneNo")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this._ExchangeCabinetInputConncetions;
			}
			set
			{
				this._ExchangeCabinetInputConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeCentralCableMDFConncetion", Storage="_ExchangeCentralCableMDFConncetions", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<ExchangeCentralCableMDFConncetion> ExchangeCentralCableMDFConncetions
		{
			get
			{
				return this._ExchangeCentralCableMDFConncetions;
			}
			set
			{
				this._ExchangeCentralCableMDFConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_InvestigatePossibilityWaitinglist", Storage="_InvestigatePossibilityWaitinglists", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<InvestigatePossibilityWaitinglist> InvestigatePossibilityWaitinglists
		{
			get
			{
				return this._InvestigatePossibilityWaitinglists;
			}
			set
			{
				this._InvestigatePossibilityWaitinglists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_Request", Storage="_Requests", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SelectTelephone", Storage="_SelectTelephones", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<SelectTelephone> SelectTelephones
		{
			get
			{
				return this._SelectTelephones;
			}
			set
			{
				this._SelectTelephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SpecialWireAddress", Storage="_SpecialWireAddresses", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<SpecialWireAddress> SpecialWireAddresses
		{
			get
			{
				return this._SpecialWireAddresses;
			}
			set
			{
				this._SpecialWireAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SwapPCM", Storage="_SwapPCMs", ThisKey="TelephoneNo", OtherKey="FromTelephoneNo")]
		public EntitySet<SwapPCM> SwapPCMs
		{
			get
			{
				return this._SwapPCMs;
			}
			set
			{
				this._SwapPCMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SwapPCM1", Storage="_SwapPCMs1", ThisKey="TelephoneNo", OtherKey="ToTelephoneNo")]
		public EntitySet<SwapPCM> SwapPCMs1
		{
			get
			{
				return this._SwapPCMs1;
			}
			set
			{
				this._SwapPCMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SwapTelephone", Storage="_SwapTelephones", ThisKey="TelephoneNo", OtherKey="FromTelephoneNo")]
		public EntitySet<SwapTelephone> SwapTelephones
		{
			get
			{
				return this._SwapTelephones;
			}
			set
			{
				this._SwapTelephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_SwapTelephone1", Storage="_SwapTelephones1", ThisKey="TelephoneNo", OtherKey="ToTelephoneNo")]
		public EntitySet<SwapTelephone> SwapTelephones1
		{
			get
			{
				return this._SwapTelephones1;
			}
			set
			{
				this._SwapTelephones1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TakePossession", Storage="_TakePossessions", ThisKey="TelephoneNo", OtherKey="OldTelephone")]
		public EntitySet<TakePossession> TakePossessions
		{
			get
			{
				return this._TakePossessions;
			}
			set
			{
				this._TakePossessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_Telephone", Storage="_Telephone2", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsUnique=true, IsForeignKey=false)]
		public Telephone Telephone2
		{
			get
			{
				return this._Telephone2.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone2.Entity;
				if (((previousValue != value) 
							|| (this._Telephone2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone2.Entity = null;
						previousValue.Telephone1 = null;
					}
					this._Telephone2.Entity = value;
					if ((value != null))
					{
						value.Telephone1 = this;
					}
					this.SendPropertyChanged("Telephone2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelephonePBX", Storage="_TelephonePBXes", ThisKey="TelephoneNo", OtherKey="HeadTelephone")]
		public EntitySet<TelephonePBX> TelephonePBXes
		{
			get
			{
				return this._TelephonePBXes;
			}
			set
			{
				this._TelephonePBXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelephonePBX1", Storage="_TelephonePBXes1", ThisKey="TelephoneNo", OtherKey="OtherTelephone")]
		public EntitySet<TelephonePBX> TelephonePBXes1
		{
			get
			{
				return this._TelephonePBXes1;
			}
			set
			{
				this._TelephonePBXes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelephoneSpecialServiceType", Storage="_TelephoneSpecialServiceTypes", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<TelephoneSpecialServiceType> TelephoneSpecialServiceTypes
		{
			get
			{
				return this._TelephoneSpecialServiceTypes;
			}
			set
			{
				this._TelephoneSpecialServiceTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelephoneStatusLog", Storage="_TelephoneStatusLogs", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<TelephoneStatusLog> TelephoneStatusLogs
		{
			get
			{
				return this._TelephoneStatusLogs;
			}
			set
			{
				this._TelephoneStatusLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelRoundSale", Storage="_TelRoundSales", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<TelRoundSale> TelRoundSales
		{
			get
			{
				return this._TelRoundSales;
			}
			set
			{
				this._TelRoundSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TitleIn118", Storage="_TitleIn118s", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<TitleIn118> TitleIn118s
		{
			get
			{
				return this._TitleIn118s;
			}
			set
			{
				this._TitleIn118s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TranslationOpticalCabinetToNormalConncetion", Storage="_TranslationOpticalCabinetToNormalConncetions", ThisKey="TelephoneNo", OtherKey="FromTelephoneNo")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TranslationOpticalCabinetToNormalConncetion1", Storage="_TranslationOpticalCabinetToNormalConncetions1", ThisKey="TelephoneNo", OtherKey="ToTelephoneNo")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TranslationOpticalCabinetToNormalTelephone", Storage="_TranslationOpticalCabinetToNormalTelephones", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<TranslationOpticalCabinetToNormalTelephone> TranslationOpticalCabinetToNormalTelephones
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalTelephones;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalTelephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TranslationOpticalCabinetToNormalTelephone1", Storage="_TranslationOpticalCabinetToNormalTelephones1", ThisKey="TelephoneNo", OtherKey="NewTelephoneNo")]
		public EntitySet<TranslationOpticalCabinetToNormalTelephone> TranslationOpticalCabinetToNormalTelephones1
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalTelephones1;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalTelephones1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_WarningHistory", Storage="_WarningHistories", ThisKey="TelephoneNo", OtherKey="TelephonNo")]
		public EntitySet<WarningHistory> WarningHistories
		{
			get
			{
				return this._WarningHistories;
			}
			set
			{
				this._WarningHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_Wireless", Storage="_Wirelesses", ThisKey="TelephoneNo", OtherKey="TelephoneNo")]
		public EntitySet<Wireless> Wirelesses
		{
			get
			{
				return this._Wirelesses;
			}
			set
			{
				this._Wirelesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeGSM", Storage="_ExchangeGSMs", ThisKey="TelephoneNo", OtherKey="FromTelephoneNo")]
		public EntitySet<ExchangeGSM> ExchangeGSMs
		{
			get
			{
				return this._ExchangeGSMs;
			}
			set
			{
				this._ExchangeGSMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeGSM1", Storage="_ExchangeGSMs1", ThisKey="TelephoneNo", OtherKey="ToTelephoneNo")]
		public EntitySet<ExchangeGSM> ExchangeGSMs1
		{
			get
			{
				return this._ExchangeGSMs1;
			}
			set
			{
				this._ExchangeGSMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeGSMConnection", Storage="_ExchangeGSMConnections", ThisKey="TelephoneNo", OtherKey="FromTelephoneNo")]
		public EntitySet<ExchangeGSMConnection> ExchangeGSMConnections
		{
			get
			{
				return this._ExchangeGSMConnections;
			}
			set
			{
				this._ExchangeGSMConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeGSMConnection1", Storage="_ExchangeGSMConnections1", ThisKey="TelephoneNo", OtherKey="ToTelephoneNo")]
		public EntitySet<ExchangeGSMConnection> ExchangeGSMConnections1
		{
			get
			{
				return this._ExchangeGSMConnections1;
			}
			set
			{
				this._ExchangeGSMConnections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_GSMSimCard", Storage="_GSMSimCard", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsUnique=true, IsForeignKey=false)]
		public GSMSimCard GSMSimCard
		{
			get
			{
				return this._GSMSimCard.Entity;
			}
			set
			{
				GSMSimCard previousValue = this._GSMSimCard.Entity;
				if (((previousValue != value) 
							|| (this._GSMSimCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GSMSimCard.Entity = null;
						previousValue.Telephone = null;
					}
					this._GSMSimCard.Entity = value;
					if ((value != null))
					{
						value.Telephone = this;
					}
					this.SendPropertyChanged("GSMSimCard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Telephone", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Telephone1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.Telephones1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.Telephones1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfCut_Telephone", Storage="_CauseOfCut", ThisKey="CauseOfCutID", OtherKey="ID", IsForeignKey=true)]
		public CauseOfCut CauseOfCut
		{
			get
			{
				return this._CauseOfCut.Entity;
			}
			set
			{
				CauseOfCut previousValue = this._CauseOfCut.Entity;
				if (((previousValue != value) 
							|| (this._CauseOfCut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauseOfCut.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._CauseOfCut.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._CauseOfCutID = value.ID;
					}
					else
					{
						this._CauseOfCutID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CauseOfCut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauseOfTakePossession_Telephone", Storage="_CauseOfTakePossession", ThisKey="CauseOfTakePossessionID", OtherKey="ID", IsForeignKey=true)]
		public CauseOfTakePossession CauseOfTakePossession
		{
			get
			{
				return this._CauseOfTakePossession.Entity;
			}
			set
			{
				CauseOfTakePossession previousValue = this._CauseOfTakePossession.Entity;
				if (((previousValue != value) 
							|| (this._CauseOfTakePossession.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauseOfTakePossession.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._CauseOfTakePossession.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._CauseOfTakePossessionID = value.ID;
					}
					else
					{
						this._CauseOfTakePossessionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CauseOfTakePossession");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Telephone", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerGroup_Telephone", Storage="_CustomerGroup", ThisKey="CustomerGroupID", OtherKey="ID", IsForeignKey=true)]
		public CustomerGroup CustomerGroup
		{
			get
			{
				return this._CustomerGroup.Entity;
			}
			set
			{
				CustomerGroup previousValue = this._CustomerGroup.Entity;
				if (((previousValue != value) 
							|| (this._CustomerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerGroup.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._CustomerGroup.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._CustomerGroupID = value.ID;
					}
					else
					{
						this._CustomerGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Telephone", Storage="_CustomerType", ThisKey="CustomerTypeID", OtherKey="ID", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._CustomerTypeID = value.ID;
					}
					else
					{
						this._CustomerTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_Telephone", Storage="_SwitchPort", ThisKey="SwitchPortID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SwitchPort SwitchPort
		{
			get
			{
				return this._SwitchPort.Entity;
			}
			set
			{
				SwitchPort previousValue = this._SwitchPort.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPort.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._SwitchPort.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._SwitchPortID = value.ID;
					}
					else
					{
						this._SwitchPortID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SwitchPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPrecode_Telephone", Storage="_SwitchPrecode", ThisKey="SwitchPrecodeID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SwitchPrecode SwitchPrecode
		{
			get
			{
				return this._SwitchPrecode.Entity;
			}
			set
			{
				SwitchPrecode previousValue = this._SwitchPrecode.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPrecode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPrecode.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._SwitchPrecode.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._SwitchPrecodeID = value.ID;
					}
					else
					{
						this._SwitchPrecodeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SwitchPrecode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_Telephone", Storage="_Telephone1", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.Telephone2 = null;
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.Telephone2 = this;
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Telephone", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Telephones.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Telephones.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_CenterToCenterTranslationTelephones(CenterToCenterTranslationTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_CenterToCenterTranslationTelephones(CenterToCenterTranslationTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_CenterToCenterTranslationTelephones1(CenterToCenterTranslationTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_CenterToCenterTranslationTelephones1(CenterToCenterTranslationTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
		
		private void attach_ChangeNos(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_ChangeNos(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_ChangeNos1(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_ChangeNos1(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
		
		private void attach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_E1s(E1 entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_ExchangeBrokenPCMs(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_ExchangeBrokenPCMs(ExchangeBrokenPCM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_ExchangeCentralCableMDFConncetions(ExchangeCentralCableMDFConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_ExchangeCentralCableMDFConncetions(ExchangeCentralCableMDFConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_SelectTelephones(SelectTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_SelectTelephones(SelectTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_SpecialWireAddresses(SpecialWireAddress entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_SpecialWireAddresses(SpecialWireAddress entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_SwapPCMs(SwapPCM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_SwapPCMs(SwapPCM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_SwapPCMs1(SwapPCM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_SwapPCMs1(SwapPCM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
		
		private void attach_SwapTelephones(SwapTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_SwapTelephones(SwapTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_SwapTelephones1(SwapTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_SwapTelephones1(SwapTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
		
		private void attach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_TelephonePBXes(TelephonePBX entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_TelephonePBXes(TelephonePBX entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_TelephonePBXes1(TelephonePBX entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_TelephonePBXes1(TelephonePBX entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
		
		private void attach_TelephoneSpecialServiceTypes(TelephoneSpecialServiceType entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_TelephoneSpecialServiceTypes(TelephoneSpecialServiceType entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_TelephoneStatusLogs(TelephoneStatusLog entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_TelephoneStatusLogs(TelephoneStatusLog entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_TelRoundSales(TelRoundSale entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_TelRoundSales(TelRoundSale entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_TitleIn118s(TitleIn118 entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_TitleIn118s(TitleIn118 entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions1(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalTelephones(TranslationOpticalCabinetToNormalTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalTelephones(TranslationOpticalCabinetToNormalTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalTelephones1(TranslationOpticalCabinetToNormalTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalTelephones1(TranslationOpticalCabinetToNormalTelephone entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
		
		private void attach_WarningHistories(WarningHistory entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_WarningHistories(WarningHistory entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_ExchangeGSMs(ExchangeGSM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_ExchangeGSMs(ExchangeGSM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_ExchangeGSMs1(ExchangeGSM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_ExchangeGSMs1(ExchangeGSM entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
		
		private void attach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = this;
		}
		
		private void detach_ExchangeGSMConnections(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Telephone = null;
		}
		
		private void attach_ExchangeGSMConnections1(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = this;
		}
		
		private void detach_ExchangeGSMConnections1(ExchangeGSMConnection entity)
		{
			this.SendPropertyChanging();
			entity.Telephone1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelephoneCycleFiche")]
	public partial class TelephoneCycleFiche : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private int _YearCode;
		
		private int _CycleCode;
		
		private System.Nullable<byte> _SubsidiaryCodeType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnYearCodeChanging(int value);
    partial void OnYearCodeChanged();
    partial void OnCycleCodeChanging(int value);
    partial void OnCycleCodeChanged();
    partial void OnSubsidiaryCodeTypeChanging(System.Nullable<byte> value);
    partial void OnSubsidiaryCodeTypeChanged();
    #endregion
		
		public TelephoneCycleFiche()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearCode", DbType="Int NOT NULL")]
		public int YearCode
		{
			get
			{
				return this._YearCode;
			}
			set
			{
				if ((this._YearCode != value))
				{
					this.OnYearCodeChanging(value);
					this.SendPropertyChanging();
					this._YearCode = value;
					this.SendPropertyChanged("YearCode");
					this.OnYearCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleCode", DbType="Int NOT NULL")]
		public int CycleCode
		{
			get
			{
				return this._CycleCode;
			}
			set
			{
				if ((this._CycleCode != value))
				{
					this.OnCycleCodeChanging(value);
					this.SendPropertyChanging();
					this._CycleCode = value;
					this.SendPropertyChanged("CycleCode");
					this.OnCycleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryCodeType", DbType="TinyInt")]
		public System.Nullable<byte> SubsidiaryCodeType
		{
			get
			{
				return this._SubsidiaryCodeType;
			}
			set
			{
				if ((this._SubsidiaryCodeType != value))
				{
					this.OnSubsidiaryCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._SubsidiaryCodeType = value;
					this.SendPropertyChanged("SubsidiaryCodeType");
					this.OnSubsidiaryCodeTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelephonePBX")]
	public partial class TelephonePBX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _HeadTelephone;
		
		private long _OtherTelephone;
		
		private int _priority;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHeadTelephoneChanging(long value);
    partial void OnHeadTelephoneChanged();
    partial void OnOtherTelephoneChanging(long value);
    partial void OnOtherTelephoneChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    #endregion
		
		public TelephonePBX()
		{
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadTelephone", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HeadTelephone
		{
			get
			{
				return this._HeadTelephone;
			}
			set
			{
				if ((this._HeadTelephone != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadTelephoneChanging(value);
					this.SendPropertyChanging();
					this._HeadTelephone = value;
					this.SendPropertyChanged("HeadTelephone");
					this.OnHeadTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTelephone", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OtherTelephone
		{
			get
			{
				return this._OtherTelephone;
			}
			set
			{
				if ((this._OtherTelephone != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOtherTelephoneChanging(value);
					this.SendPropertyChanging();
					this._OtherTelephone = value;
					this.SendPropertyChanged("OtherTelephone");
					this.OnOtherTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelephonePBX", Storage="_Telephone", ThisKey="HeadTelephone", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.TelephonePBXes.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.TelephonePBXes.Add(this);
						this._HeadTelephone = value.TelephoneNo;
					}
					else
					{
						this._HeadTelephone = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelephonePBX1", Storage="_Telephone1", ThisKey="OtherTelephone", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.TelephonePBXes1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.TelephonePBXes1.Add(this);
						this._OtherTelephone = value.TelephoneNo;
					}
					else
					{
						this._OtherTelephone = default(long);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelephoneSpecialServiceType")]
	public partial class TelephoneSpecialServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TelephoneNo;
		
		private int _SpecialServiceTypeID;
		
		private EntityRef<SpecialServiceType> _SpecialServiceType;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnSpecialServiceTypeIDChanging(int value);
    partial void OnSpecialServiceTypeIDChanged();
    #endregion
		
		public TelephoneSpecialServiceType()
		{
			this._SpecialServiceType = default(EntityRef<SpecialServiceType>);
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialServiceTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SpecialServiceTypeID
		{
			get
			{
				return this._SpecialServiceTypeID;
			}
			set
			{
				if ((this._SpecialServiceTypeID != value))
				{
					if (this._SpecialServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialServiceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialServiceTypeID = value;
					this.SendPropertyChanged("SpecialServiceTypeID");
					this.OnSpecialServiceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialServiceType_TelephoneSpecialServiceType", Storage="_SpecialServiceType", ThisKey="SpecialServiceTypeID", OtherKey="ID", IsForeignKey=true)]
		public SpecialServiceType SpecialServiceType
		{
			get
			{
				return this._SpecialServiceType.Entity;
			}
			set
			{
				SpecialServiceType previousValue = this._SpecialServiceType.Entity;
				if (((previousValue != value) 
							|| (this._SpecialServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialServiceType.Entity = null;
						previousValue.TelephoneSpecialServiceTypes.Remove(this);
					}
					this._SpecialServiceType.Entity = value;
					if ((value != null))
					{
						value.TelephoneSpecialServiceTypes.Add(this);
						this._SpecialServiceTypeID = value.ID;
					}
					else
					{
						this._SpecialServiceTypeID = default(int);
					}
					this.SendPropertyChanged("SpecialServiceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelephoneSpecialServiceType", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.TelephoneSpecialServiceTypes.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.TelephoneSpecialServiceTypes.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelephoneStatusLog")]
	public partial class TelephoneStatusLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _TelephoneNo;
		
		private System.DateTime _InsertData;
		
		private byte _FromStatus;
		
		private byte _ToStatus;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnInsertDataChanging(System.DateTime value);
    partial void OnInsertDataChanged();
    partial void OnFromStatusChanging(byte value);
    partial void OnFromStatusChanged();
    partial void OnToStatusChanging(byte value);
    partial void OnToStatusChanged();
    #endregion
		
		public TelephoneStatusLog()
		{
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertData", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertData
		{
			get
			{
				return this._InsertData;
			}
			set
			{
				if ((this._InsertData != value))
				{
					this.OnInsertDataChanging(value);
					this.SendPropertyChanging();
					this._InsertData = value;
					this.SendPropertyChanged("InsertData");
					this.OnInsertDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStatus", DbType="TinyInt NOT NULL")]
		public byte FromStatus
		{
			get
			{
				return this._FromStatus;
			}
			set
			{
				if ((this._FromStatus != value))
				{
					this.OnFromStatusChanging(value);
					this.SendPropertyChanging();
					this._FromStatus = value;
					this.SendPropertyChanged("FromStatus");
					this.OnFromStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStatus", DbType="TinyInt NOT NULL")]
		public byte ToStatus
		{
			get
			{
				return this._ToStatus;
			}
			set
			{
				if ((this._ToStatus != value))
				{
					this.OnToStatusChanging(value);
					this.SendPropertyChanging();
					this._ToStatus = value;
					this.SendPropertyChanged("ToStatus");
					this.OnToStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelephoneStatusLog", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.TelephoneStatusLogs.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.TelephoneStatusLogs.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelephoneTemp")]
	public partial class TelephoneTemp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TelephoneNo;
		
		private System.Nullable<int> _CenterID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnCenterIDChanging(System.Nullable<int> value);
    partial void OnCenterIDChanged();
    #endregion
		
		public TelephoneTemp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int")]
		public System.Nullable<int> CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelRoundSale")]
	public partial class TelRoundSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private long _RoundSaleInfoID;
		
		private byte _SaleStatus;
		
		private bool _IsActive;
		
		private EntitySet<Contract> _Contracts;
		
		private EntityRef<RoundSaleInfo> _RoundSaleInfo;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnRoundSaleInfoIDChanging(long value);
    partial void OnRoundSaleInfoIDChanged();
    partial void OnSaleStatusChanging(byte value);
    partial void OnSaleStatusChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public TelRoundSale()
		{
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._RoundSaleInfo = default(EntityRef<RoundSaleInfo>);
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundSaleInfoID", DbType="BigInt NOT NULL")]
		public long RoundSaleInfoID
		{
			get
			{
				return this._RoundSaleInfoID;
			}
			set
			{
				if ((this._RoundSaleInfoID != value))
				{
					if (this._RoundSaleInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoundSaleInfoIDChanging(value);
					this.SendPropertyChanging();
					this._RoundSaleInfoID = value;
					this.SendPropertyChanged("RoundSaleInfoID");
					this.OnRoundSaleInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleStatus", DbType="TinyInt NOT NULL")]
		public byte SaleStatus
		{
			get
			{
				return this._SaleStatus;
			}
			set
			{
				if ((this._SaleStatus != value))
				{
					this.OnSaleStatusChanging(value);
					this.SendPropertyChanging();
					this._SaleStatus = value;
					this.SendPropertyChanged("SaleStatus");
					this.OnSaleStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TelRoundSale_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="TelRoundSaleID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoundSaleInfo_TelRoundSale", Storage="_RoundSaleInfo", ThisKey="RoundSaleInfoID", OtherKey="ID", IsForeignKey=true)]
		public RoundSaleInfo RoundSaleInfo
		{
			get
			{
				return this._RoundSaleInfo.Entity;
			}
			set
			{
				RoundSaleInfo previousValue = this._RoundSaleInfo.Entity;
				if (((previousValue != value) 
							|| (this._RoundSaleInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoundSaleInfo.Entity = null;
						previousValue.TelRoundSales.Remove(this);
					}
					this._RoundSaleInfo.Entity = value;
					if ((value != null))
					{
						value.TelRoundSales.Add(this);
						this._RoundSaleInfoID = value.ID;
					}
					else
					{
						this._RoundSaleInfoID = default(long);
					}
					this.SendPropertyChanged("RoundSaleInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TelRoundSale", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.TelRoundSales.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.TelRoundSales.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.TelRoundSale = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.TelRoundSale = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temppap")]
	public partial class temppap
	{
		
		private System.Nullable<double> _center;
		
		private System.Nullable<double> _pap;
		
		private System.Nullable<double> _telephone;
		
		private System.Nullable<double> _temp;
		
		private System.Nullable<double> _port;
		
		public temppap()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_center", DbType="Float")]
		public System.Nullable<double> center
		{
			get
			{
				return this._center;
			}
			set
			{
				if ((this._center != value))
				{
					this._center = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pap", DbType="Float")]
		public System.Nullable<double> pap
		{
			get
			{
				return this._pap;
			}
			set
			{
				if ((this._pap != value))
				{
					this._pap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="Float")]
		public System.Nullable<double> telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this._telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temp", DbType="Float")]
		public System.Nullable<double> temp
		{
			get
			{
				return this._temp;
			}
			set
			{
				if ((this._temp != value))
				{
					this._temp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Float")]
		public System.Nullable<double> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this._port = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temppap1")]
	public partial class temppap1
	{
		
		private System.Nullable<double> _center;
		
		private System.Nullable<double> _pap;
		
		private System.Nullable<double> _telephone;
		
		private System.Nullable<double> _temp;
		
		private System.Nullable<double> _port;
		
		public temppap1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_center", DbType="Float")]
		public System.Nullable<double> center
		{
			get
			{
				return this._center;
			}
			set
			{
				if ((this._center != value))
				{
					this._center = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pap", DbType="Float")]
		public System.Nullable<double> pap
		{
			get
			{
				return this._pap;
			}
			set
			{
				if ((this._pap != value))
				{
					this._pap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="Float")]
		public System.Nullable<double> telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this._telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temp", DbType="Float")]
		public System.Nullable<double> temp
		{
			get
			{
				return this._temp;
			}
			set
			{
				if ((this._temp != value))
				{
					this._temp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Float")]
		public System.Nullable<double> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this._port = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temppap2")]
	public partial class temppap2
	{
		
		private System.Nullable<double> _center;
		
		private System.Nullable<double> _pap;
		
		private System.Nullable<double> _telephone;
		
		private System.Nullable<double> _temp;
		
		private System.Nullable<double> _port;
		
		public temppap2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_center", DbType="Float")]
		public System.Nullable<double> center
		{
			get
			{
				return this._center;
			}
			set
			{
				if ((this._center != value))
				{
					this._center = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pap", DbType="Float")]
		public System.Nullable<double> pap
		{
			get
			{
				return this._pap;
			}
			set
			{
				if ((this._pap != value))
				{
					this._pap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="Float")]
		public System.Nullable<double> telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this._telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temp", DbType="Float")]
		public System.Nullable<double> temp
		{
			get
			{
				return this._temp;
			}
			set
			{
				if ((this._temp != value))
				{
					this._temp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Float")]
		public System.Nullable<double> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this._port = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temppap3")]
	public partial class temppap3
	{
		
		private System.Nullable<double> _center;
		
		private System.Nullable<double> _pap;
		
		private System.Nullable<double> _telephone;
		
		private System.Nullable<double> _temp;
		
		private System.Nullable<double> _port;
		
		public temppap3()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_center", DbType="Float")]
		public System.Nullable<double> center
		{
			get
			{
				return this._center;
			}
			set
			{
				if ((this._center != value))
				{
					this._center = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pap", DbType="Float")]
		public System.Nullable<double> pap
		{
			get
			{
				return this._pap;
			}
			set
			{
				if ((this._pap != value))
				{
					this._pap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="Float")]
		public System.Nullable<double> telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this._telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temp", DbType="Float")]
		public System.Nullable<double> temp
		{
			get
			{
				return this._temp;
			}
			set
			{
				if ((this._temp != value))
				{
					this._temp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Float")]
		public System.Nullable<double> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this._port = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TitleIn118")]
	public partial class TitleIn118 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private string _NameTitleAt118;
		
		private string _LastNameAt118;
		
		private string _TitleAt118;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnNameTitleAt118Changing(string value);
    partial void OnNameTitleAt118Changed();
    partial void OnLastNameAt118Changing(string value);
    partial void OnLastNameAt118Changed();
    partial void OnTitleAt118Changing(string value);
    partial void OnTitleAt118Changed();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public TitleIn118()
		{
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTitleAt118", DbType="NVarChar(50)")]
		public string NameTitleAt118
		{
			get
			{
				return this._NameTitleAt118;
			}
			set
			{
				if ((this._NameTitleAt118 != value))
				{
					this.OnNameTitleAt118Changing(value);
					this.SendPropertyChanging();
					this._NameTitleAt118 = value;
					this.SendPropertyChanged("NameTitleAt118");
					this.OnNameTitleAt118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNameAt118", DbType="NVarChar(50)")]
		public string LastNameAt118
		{
			get
			{
				return this._LastNameAt118;
			}
			set
			{
				if ((this._LastNameAt118 != value))
				{
					this.OnLastNameAt118Changing(value);
					this.SendPropertyChanging();
					this._LastNameAt118 = value;
					this.SendPropertyChanged("LastNameAt118");
					this.OnLastNameAt118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleAt118", DbType="NVarChar(50)")]
		public string TitleAt118
		{
			get
			{
				return this._TitleAt118;
			}
			set
			{
				if ((this._TitleAt118 != value))
				{
					this.OnTitleAt118Changing(value);
					this.SendPropertyChanging();
					this._TitleAt118 = value;
					this.SendPropertyChanged("TitleAt118");
					this.OnTitleAt118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TitleIn118", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TitleIn118 = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TitleIn118 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TitleIn118", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.TitleIn118s.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.TitleIn118s.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransferDepartmentOffice")]
	public partial class TransferDepartmentOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _RequestID;
		
		private System.Guid _TransferDepartmentFileID;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnTransferDepartmentFileIDChanging(System.Guid value);
    partial void OnTransferDepartmentFileIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public TransferDepartmentOffice()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDepartmentFileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TransferDepartmentFileID
		{
			get
			{
				return this._TransferDepartmentFileID;
			}
			set
			{
				if ((this._TransferDepartmentFileID != value))
				{
					this.OnTransferDepartmentFileIDChanging(value);
					this.SendPropertyChanging();
					this._TransferDepartmentFileID = value;
					this.SendPropertyChanged("TransferDepartmentFileID");
					this.OnTransferDepartmentFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TransferDepartmentOffice", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TransferDepartmentOffices.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TransferDepartmentOffices.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransferFileInfo")]
	public partial class TransferFileInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _SourceCenterID;
		
		private int _DestinationCenterID;
		
		private byte _WithChangeOwnerFileInfo;
		
		private System.Nullable<long> _OwnerID;
		
		private System.Nullable<long> _TransferInvestigatePossibilityReportID;
		
		private System.Nullable<System.DateTime> _TransferInvestigatePossibilityReportDate;
		
		private string _TransferInvestigatePossibilityReportNo;
		
		private byte _TransferInvestigateStatus;
		
		private System.Nullable<long> _TransferInstallReportIDToDestination;
		
		private System.Nullable<System.DateTime> _TransferInstallReportToDestinationDate;
		
		private string _TransferInstallReportToDestinationReportNo;
		
		private long _SourceCenterTakePossessionID;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSourceCenterIDChanging(int value);
    partial void OnSourceCenterIDChanged();
    partial void OnDestinationCenterIDChanging(int value);
    partial void OnDestinationCenterIDChanged();
    partial void OnWithChangeOwnerFileInfoChanging(byte value);
    partial void OnWithChangeOwnerFileInfoChanged();
    partial void OnOwnerIDChanging(System.Nullable<long> value);
    partial void OnOwnerIDChanged();
    partial void OnTransferInvestigatePossibilityReportIDChanging(System.Nullable<long> value);
    partial void OnTransferInvestigatePossibilityReportIDChanged();
    partial void OnTransferInvestigatePossibilityReportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferInvestigatePossibilityReportDateChanged();
    partial void OnTransferInvestigatePossibilityReportNoChanging(string value);
    partial void OnTransferInvestigatePossibilityReportNoChanged();
    partial void OnTransferInvestigateStatusChanging(byte value);
    partial void OnTransferInvestigateStatusChanged();
    partial void OnTransferInstallReportIDToDestinationChanging(System.Nullable<long> value);
    partial void OnTransferInstallReportIDToDestinationChanged();
    partial void OnTransferInstallReportToDestinationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferInstallReportToDestinationDateChanged();
    partial void OnTransferInstallReportToDestinationReportNoChanging(string value);
    partial void OnTransferInstallReportToDestinationReportNoChanged();
    partial void OnSourceCenterTakePossessionIDChanging(long value);
    partial void OnSourceCenterTakePossessionIDChanged();
    #endregion
		
		public TransferFileInfo()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCenterID", DbType="Int NOT NULL")]
		public int SourceCenterID
		{
			get
			{
				return this._SourceCenterID;
			}
			set
			{
				if ((this._SourceCenterID != value))
				{
					this.OnSourceCenterIDChanging(value);
					this.SendPropertyChanging();
					this._SourceCenterID = value;
					this.SendPropertyChanged("SourceCenterID");
					this.OnSourceCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationCenterID", DbType="Int NOT NULL")]
		public int DestinationCenterID
		{
			get
			{
				return this._DestinationCenterID;
			}
			set
			{
				if ((this._DestinationCenterID != value))
				{
					this.OnDestinationCenterIDChanging(value);
					this.SendPropertyChanging();
					this._DestinationCenterID = value;
					this.SendPropertyChanged("DestinationCenterID");
					this.OnDestinationCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithChangeOwnerFileInfo", DbType="TinyInt NOT NULL")]
		public byte WithChangeOwnerFileInfo
		{
			get
			{
				return this._WithChangeOwnerFileInfo;
			}
			set
			{
				if ((this._WithChangeOwnerFileInfo != value))
				{
					this.OnWithChangeOwnerFileInfoChanging(value);
					this.SendPropertyChanging();
					this._WithChangeOwnerFileInfo = value;
					this.SendPropertyChanged("WithChangeOwnerFileInfo");
					this.OnWithChangeOwnerFileInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="BigInt")]
		public System.Nullable<long> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferInvestigatePossibilityReportID", DbType="BigInt")]
		public System.Nullable<long> TransferInvestigatePossibilityReportID
		{
			get
			{
				return this._TransferInvestigatePossibilityReportID;
			}
			set
			{
				if ((this._TransferInvestigatePossibilityReportID != value))
				{
					this.OnTransferInvestigatePossibilityReportIDChanging(value);
					this.SendPropertyChanging();
					this._TransferInvestigatePossibilityReportID = value;
					this.SendPropertyChanged("TransferInvestigatePossibilityReportID");
					this.OnTransferInvestigatePossibilityReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferInvestigatePossibilityReportDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TransferInvestigatePossibilityReportDate
		{
			get
			{
				return this._TransferInvestigatePossibilityReportDate;
			}
			set
			{
				if ((this._TransferInvestigatePossibilityReportDate != value))
				{
					this.OnTransferInvestigatePossibilityReportDateChanging(value);
					this.SendPropertyChanging();
					this._TransferInvestigatePossibilityReportDate = value;
					this.SendPropertyChanged("TransferInvestigatePossibilityReportDate");
					this.OnTransferInvestigatePossibilityReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferInvestigatePossibilityReportNo", DbType="NVarChar(50)")]
		public string TransferInvestigatePossibilityReportNo
		{
			get
			{
				return this._TransferInvestigatePossibilityReportNo;
			}
			set
			{
				if ((this._TransferInvestigatePossibilityReportNo != value))
				{
					this.OnTransferInvestigatePossibilityReportNoChanging(value);
					this.SendPropertyChanging();
					this._TransferInvestigatePossibilityReportNo = value;
					this.SendPropertyChanged("TransferInvestigatePossibilityReportNo");
					this.OnTransferInvestigatePossibilityReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferInvestigateStatus", DbType="TinyInt NOT NULL")]
		public byte TransferInvestigateStatus
		{
			get
			{
				return this._TransferInvestigateStatus;
			}
			set
			{
				if ((this._TransferInvestigateStatus != value))
				{
					this.OnTransferInvestigateStatusChanging(value);
					this.SendPropertyChanging();
					this._TransferInvestigateStatus = value;
					this.SendPropertyChanged("TransferInvestigateStatus");
					this.OnTransferInvestigateStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferInstallReportIDToDestination", DbType="BigInt")]
		public System.Nullable<long> TransferInstallReportIDToDestination
		{
			get
			{
				return this._TransferInstallReportIDToDestination;
			}
			set
			{
				if ((this._TransferInstallReportIDToDestination != value))
				{
					this.OnTransferInstallReportIDToDestinationChanging(value);
					this.SendPropertyChanging();
					this._TransferInstallReportIDToDestination = value;
					this.SendPropertyChanged("TransferInstallReportIDToDestination");
					this.OnTransferInstallReportIDToDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferInstallReportToDestinationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TransferInstallReportToDestinationDate
		{
			get
			{
				return this._TransferInstallReportToDestinationDate;
			}
			set
			{
				if ((this._TransferInstallReportToDestinationDate != value))
				{
					this.OnTransferInstallReportToDestinationDateChanging(value);
					this.SendPropertyChanging();
					this._TransferInstallReportToDestinationDate = value;
					this.SendPropertyChanged("TransferInstallReportToDestinationDate");
					this.OnTransferInstallReportToDestinationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferInstallReportToDestinationReportNo", DbType="NVarChar(50)")]
		public string TransferInstallReportToDestinationReportNo
		{
			get
			{
				return this._TransferInstallReportToDestinationReportNo;
			}
			set
			{
				if ((this._TransferInstallReportToDestinationReportNo != value))
				{
					this.OnTransferInstallReportToDestinationReportNoChanging(value);
					this.SendPropertyChanging();
					this._TransferInstallReportToDestinationReportNo = value;
					this.SendPropertyChanged("TransferInstallReportToDestinationReportNo");
					this.OnTransferInstallReportToDestinationReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCenterTakePossessionID", DbType="BigInt NOT NULL")]
		public long SourceCenterTakePossessionID
		{
			get
			{
				return this._SourceCenterTakePossessionID;
			}
			set
			{
				if ((this._SourceCenterTakePossessionID != value))
				{
					this.OnSourceCenterTakePossessionIDChanging(value);
					this.SendPropertyChanging();
					this._SourceCenterTakePossessionID = value;
					this.SendPropertyChanged("SourceCenterTakePossessionID");
					this.OnSourceCenterTakePossessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TransferFileInfo", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TransferFileInfo = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TransferFileInfo = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslationOpticalCabinetToNormal")]
	public partial class TranslationOpticalCabinetToNormal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _Type;
		
		private int _NewCabinetID;
		
		private System.Nullable<long> _FromNewCabinetInputID;
		
		private System.Nullable<long> _ToNewCabinetInputID;
		
		private int _OldCabinetID;
		
		private System.Nullable<long> _FromOldCabinetInputID;
		
		private System.Nullable<long> _ToOldCabinetInputID;
		
		private System.Nullable<System.DateTime> _MDFAccomplishmentDate;
		
		private string _MDFAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _NetworkAccomplishmentDate;
		
		private string _NetworkAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _ChoiceNumberAccomplishmentDate;
		
		private string _ChoiceNumberAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _SwitchAccomplishmentDate;
		
		private string _SwitchAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private bool _TransferWaitingList;
		
		private bool _TransferBrokenPostContact;
		
		private int _OldCabinetUsageTypeID;
		
		private int _NewCabinetUsageTypeID;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<Cabinet> _Cabinet1;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<CabinetInput> _CabinetInput1;
		
		private EntityRef<CabinetInput> _CabinetInput2;
		
		private EntityRef<CabinetInput> _CabinetInput3;
		
		private EntityRef<CabinetUsageType> _CabinetUsageType;
		
		private EntityRef<CabinetUsageType> _CabinetUsageType1;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnNewCabinetIDChanging(int value);
    partial void OnNewCabinetIDChanged();
    partial void OnFromNewCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnFromNewCabinetInputIDChanged();
    partial void OnToNewCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnToNewCabinetInputIDChanged();
    partial void OnOldCabinetIDChanging(int value);
    partial void OnOldCabinetIDChanged();
    partial void OnFromOldCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnFromOldCabinetInputIDChanged();
    partial void OnToOldCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnToOldCabinetInputIDChanged();
    partial void OnMDFAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFAccomplishmentDateChanged();
    partial void OnMDFAccomplishmentTimeChanging(string value);
    partial void OnMDFAccomplishmentTimeChanged();
    partial void OnNetworkAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkAccomplishmentDateChanged();
    partial void OnNetworkAccomplishmentTimeChanging(string value);
    partial void OnNetworkAccomplishmentTimeChanged();
    partial void OnChoiceNumberAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChoiceNumberAccomplishmentDateChanged();
    partial void OnChoiceNumberAccomplishmentTimeChanging(string value);
    partial void OnChoiceNumberAccomplishmentTimeChanged();
    partial void OnSwitchAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSwitchAccomplishmentDateChanged();
    partial void OnSwitchAccomplishmentTimeChanging(string value);
    partial void OnSwitchAccomplishmentTimeChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnTransferWaitingListChanging(bool value);
    partial void OnTransferWaitingListChanged();
    partial void OnTransferBrokenPostContactChanging(bool value);
    partial void OnTransferBrokenPostContactChanged();
    partial void OnOldCabinetUsageTypeIDChanging(int value);
    partial void OnOldCabinetUsageTypeIDChanged();
    partial void OnNewCabinetUsageTypeIDChanging(int value);
    partial void OnNewCabinetUsageTypeIDChanged();
    #endregion
		
		public TranslationOpticalCabinetToNormal()
		{
			this._Cabinet = default(EntityRef<Cabinet>);
			this._Cabinet1 = default(EntityRef<Cabinet>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._CabinetInput1 = default(EntityRef<CabinetInput>);
			this._CabinetInput2 = default(EntityRef<CabinetInput>);
			this._CabinetInput3 = default(EntityRef<CabinetInput>);
			this._CabinetUsageType = default(EntityRef<CabinetUsageType>);
			this._CabinetUsageType1 = default(EntityRef<CabinetUsageType>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetID", DbType="Int NOT NULL")]
		public int NewCabinetID
		{
			get
			{
				return this._NewCabinetID;
			}
			set
			{
				if ((this._NewCabinetID != value))
				{
					if (this._Cabinet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._NewCabinetID = value;
					this.SendPropertyChanged("NewCabinetID");
					this.OnNewCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromNewCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> FromNewCabinetInputID
		{
			get
			{
				return this._FromNewCabinetInputID;
			}
			set
			{
				if ((this._FromNewCabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromNewCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromNewCabinetInputID = value;
					this.SendPropertyChanged("FromNewCabinetInputID");
					this.OnFromNewCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToNewCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> ToNewCabinetInputID
		{
			get
			{
				return this._ToNewCabinetInputID;
			}
			set
			{
				if ((this._ToNewCabinetInputID != value))
				{
					if (this._CabinetInput2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToNewCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToNewCabinetInputID = value;
					this.SendPropertyChanged("ToNewCabinetInputID");
					this.OnToNewCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetID", DbType="Int NOT NULL")]
		public int OldCabinetID
		{
			get
			{
				return this._OldCabinetID;
			}
			set
			{
				if ((this._OldCabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetID = value;
					this.SendPropertyChanged("OldCabinetID");
					this.OnOldCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromOldCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> FromOldCabinetInputID
		{
			get
			{
				return this._FromOldCabinetInputID;
			}
			set
			{
				if ((this._FromOldCabinetInputID != value))
				{
					if (this._CabinetInput1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromOldCabinetInputID = value;
					this.SendPropertyChanged("FromOldCabinetInputID");
					this.OnFromOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToOldCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> ToOldCabinetInputID
		{
			get
			{
				return this._ToOldCabinetInputID;
			}
			set
			{
				if ((this._ToOldCabinetInputID != value))
				{
					if (this._CabinetInput3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToOldCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToOldCabinetInputID = value;
					this.SendPropertyChanged("ToOldCabinetInputID");
					this.OnToOldCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFAccomplishmentDate
		{
			get
			{
				return this._MDFAccomplishmentDate;
			}
			set
			{
				if ((this._MDFAccomplishmentDate != value))
				{
					this.OnMDFAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentDate = value;
					this.SendPropertyChanged("MDFAccomplishmentDate");
					this.OnMDFAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentTime", DbType="NChar(10)")]
		public string MDFAccomplishmentTime
		{
			get
			{
				return this._MDFAccomplishmentTime;
			}
			set
			{
				if ((this._MDFAccomplishmentTime != value))
				{
					this.OnMDFAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentTime = value;
					this.SendPropertyChanged("MDFAccomplishmentTime");
					this.OnMDFAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkAccomplishmentDate
		{
			get
			{
				return this._NetworkAccomplishmentDate;
			}
			set
			{
				if ((this._NetworkAccomplishmentDate != value))
				{
					this.OnNetworkAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentDate = value;
					this.SendPropertyChanged("NetworkAccomplishmentDate");
					this.OnNetworkAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentTime", DbType="NChar(10)")]
		public string NetworkAccomplishmentTime
		{
			get
			{
				return this._NetworkAccomplishmentTime;
			}
			set
			{
				if ((this._NetworkAccomplishmentTime != value))
				{
					this.OnNetworkAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentTime = value;
					this.SendPropertyChanged("NetworkAccomplishmentTime");
					this.OnNetworkAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceNumberAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ChoiceNumberAccomplishmentDate
		{
			get
			{
				return this._ChoiceNumberAccomplishmentDate;
			}
			set
			{
				if ((this._ChoiceNumberAccomplishmentDate != value))
				{
					this.OnChoiceNumberAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._ChoiceNumberAccomplishmentDate = value;
					this.SendPropertyChanged("ChoiceNumberAccomplishmentDate");
					this.OnChoiceNumberAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceNumberAccomplishmentTime", DbType="NChar(10)")]
		public string ChoiceNumberAccomplishmentTime
		{
			get
			{
				return this._ChoiceNumberAccomplishmentTime;
			}
			set
			{
				if ((this._ChoiceNumberAccomplishmentTime != value))
				{
					this.OnChoiceNumberAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._ChoiceNumberAccomplishmentTime = value;
					this.SendPropertyChanged("ChoiceNumberAccomplishmentTime");
					this.OnChoiceNumberAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SwitchAccomplishmentDate
		{
			get
			{
				return this._SwitchAccomplishmentDate;
			}
			set
			{
				if ((this._SwitchAccomplishmentDate != value))
				{
					this.OnSwitchAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._SwitchAccomplishmentDate = value;
					this.SendPropertyChanged("SwitchAccomplishmentDate");
					this.OnSwitchAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchAccomplishmentTime", DbType="NChar(10)")]
		public string SwitchAccomplishmentTime
		{
			get
			{
				return this._SwitchAccomplishmentTime;
			}
			set
			{
				if ((this._SwitchAccomplishmentTime != value))
				{
					this.OnSwitchAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._SwitchAccomplishmentTime = value;
					this.SendPropertyChanged("SwitchAccomplishmentTime");
					this.OnSwitchAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferWaitingList", DbType="Bit NOT NULL")]
		public bool TransferWaitingList
		{
			get
			{
				return this._TransferWaitingList;
			}
			set
			{
				if ((this._TransferWaitingList != value))
				{
					this.OnTransferWaitingListChanging(value);
					this.SendPropertyChanging();
					this._TransferWaitingList = value;
					this.SendPropertyChanged("TransferWaitingList");
					this.OnTransferWaitingListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferBrokenPostContact", DbType="Bit NOT NULL")]
		public bool TransferBrokenPostContact
		{
			get
			{
				return this._TransferBrokenPostContact;
			}
			set
			{
				if ((this._TransferBrokenPostContact != value))
				{
					this.OnTransferBrokenPostContactChanging(value);
					this.SendPropertyChanging();
					this._TransferBrokenPostContact = value;
					this.SendPropertyChanged("TransferBrokenPostContact");
					this.OnTransferBrokenPostContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetUsageTypeID", DbType="Int NOT NULL")]
		public int OldCabinetUsageTypeID
		{
			get
			{
				return this._OldCabinetUsageTypeID;
			}
			set
			{
				if ((this._OldCabinetUsageTypeID != value))
				{
					if (this._CabinetUsageType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCabinetUsageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetUsageTypeID = value;
					this.SendPropertyChanged("OldCabinetUsageTypeID");
					this.OnOldCabinetUsageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetUsageTypeID", DbType="Int NOT NULL")]
		public int NewCabinetUsageTypeID
		{
			get
			{
				return this._NewCabinetUsageTypeID;
			}
			set
			{
				if ((this._NewCabinetUsageTypeID != value))
				{
					if (this._CabinetUsageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewCabinetUsageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NewCabinetUsageTypeID = value;
					this.SendPropertyChanged("NewCabinetUsageTypeID");
					this.OnNewCabinetUsageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationOpticalCabinetToNormal", Storage="_Cabinet", ThisKey="OldCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.TranslationOpticalCabinetToNormals.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormals.Add(this);
						this._OldCabinetID = value.ID;
					}
					else
					{
						this._OldCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationOpticalCabinetToNormal1", Storage="_Cabinet1", ThisKey="NewCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet1
		{
			get
			{
				return this._Cabinet1.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet1.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormals1.Remove(this);
					}
					this._Cabinet1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormals1.Add(this);
						this._NewCabinetID = value.ID;
					}
					else
					{
						this._NewCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormal", Storage="_CabinetInput", ThisKey="FromNewCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.TranslationOpticalCabinetToNormals.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormals.Add(this);
						this._FromNewCabinetInputID = value.ID;
					}
					else
					{
						this._FromNewCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormal1", Storage="_CabinetInput1", ThisKey="FromOldCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput1
		{
			get
			{
				return this._CabinetInput1.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput1.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormals1.Remove(this);
					}
					this._CabinetInput1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormals1.Add(this);
						this._FromOldCabinetInputID = value.ID;
					}
					else
					{
						this._FromOldCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormal2", Storage="_CabinetInput2", ThisKey="ToNewCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput2
		{
			get
			{
				return this._CabinetInput2.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput2.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput2.Entity = null;
						previousValue.TranslationOpticalCabinetToNormals2.Remove(this);
					}
					this._CabinetInput2.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormals2.Add(this);
						this._ToNewCabinetInputID = value.ID;
					}
					else
					{
						this._ToNewCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormal3", Storage="_CabinetInput3", ThisKey="ToOldCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput3
		{
			get
			{
				return this._CabinetInput3.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput3.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput3.Entity = null;
						previousValue.TranslationOpticalCabinetToNormals3.Remove(this);
					}
					this._CabinetInput3.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormals3.Add(this);
						this._ToOldCabinetInputID = value.ID;
					}
					else
					{
						this._ToOldCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetUsageType_TranslationOpticalCabinetToNormal", Storage="_CabinetUsageType", ThisKey="NewCabinetUsageTypeID", OtherKey="ID", IsForeignKey=true)]
		public CabinetUsageType CabinetUsageType
		{
			get
			{
				return this._CabinetUsageType.Entity;
			}
			set
			{
				CabinetUsageType previousValue = this._CabinetUsageType.Entity;
				if (((previousValue != value) 
							|| (this._CabinetUsageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetUsageType.Entity = null;
						previousValue.TranslationOpticalCabinetToNormals.Remove(this);
					}
					this._CabinetUsageType.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormals.Add(this);
						this._NewCabinetUsageTypeID = value.ID;
					}
					else
					{
						this._NewCabinetUsageTypeID = default(int);
					}
					this.SendPropertyChanged("CabinetUsageType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetUsageType_TranslationOpticalCabinetToNormal1", Storage="_CabinetUsageType1", ThisKey="OldCabinetUsageTypeID", OtherKey="ID", IsForeignKey=true)]
		public CabinetUsageType CabinetUsageType1
		{
			get
			{
				return this._CabinetUsageType1.Entity;
			}
			set
			{
				CabinetUsageType previousValue = this._CabinetUsageType1.Entity;
				if (((previousValue != value) 
							|| (this._CabinetUsageType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetUsageType1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormals1.Remove(this);
					}
					this._CabinetUsageType1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormals1.Add(this);
						this._OldCabinetUsageTypeID = value.ID;
					}
					else
					{
						this._OldCabinetUsageTypeID = default(int);
					}
					this.SendPropertyChanged("CabinetUsageType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationOpticalCabinetToNormal", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TranslationOpticalCabinetToNormal = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormal = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslationOpticalCabinetToNormalConncetions")]
	public partial class TranslationOpticalCabinetToNormalConncetion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private int _FromPostID;
		
		private long _FromPostContactID;
		
		private System.Nullable<long> _FromCabinetInputID;
		
		private System.Nullable<long> _FromTelephoneNo;
		
		private System.Nullable<long> _FromBucht;
		
		private System.Nullable<long> _FromCounter;
		
		private System.Nullable<long> _FromCounterID;
		
		private int _ToPostID;
		
		private long _ToPostConntactID;
		
		private long _ToCabinetInputID;
		
		private System.Nullable<long> _ToTelephoneNo;
		
		private System.Nullable<long> _ToBucht;
		
		private System.Nullable<long> _ToCounter;
		
		private System.Nullable<long> _ToCounterID;
		
		private System.Nullable<long> _ToSwitchPrecodeID;
		
		private System.Nullable<long> _CustomerID;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Bucht> _Bucht1;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<CabinetInput> _CabinetInput1;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Post> _Post1;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<PostContact> _PostContact1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnFromPostIDChanging(int value);
    partial void OnFromPostIDChanged();
    partial void OnFromPostContactIDChanging(long value);
    partial void OnFromPostContactIDChanged();
    partial void OnFromCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnFromCabinetInputIDChanged();
    partial void OnFromTelephoneNoChanging(System.Nullable<long> value);
    partial void OnFromTelephoneNoChanged();
    partial void OnFromBuchtChanging(System.Nullable<long> value);
    partial void OnFromBuchtChanged();
    partial void OnFromCounterChanging(System.Nullable<long> value);
    partial void OnFromCounterChanged();
    partial void OnFromCounterIDChanging(System.Nullable<long> value);
    partial void OnFromCounterIDChanged();
    partial void OnToPostIDChanging(int value);
    partial void OnToPostIDChanged();
    partial void OnToPostConntactIDChanging(long value);
    partial void OnToPostConntactIDChanged();
    partial void OnToCabinetInputIDChanging(long value);
    partial void OnToCabinetInputIDChanged();
    partial void OnToTelephoneNoChanging(System.Nullable<long> value);
    partial void OnToTelephoneNoChanged();
    partial void OnToBuchtChanging(System.Nullable<long> value);
    partial void OnToBuchtChanged();
    partial void OnToCounterChanging(System.Nullable<long> value);
    partial void OnToCounterChanged();
    partial void OnToCounterIDChanging(System.Nullable<long> value);
    partial void OnToCounterIDChanged();
    partial void OnToSwitchPrecodeIDChanging(System.Nullable<long> value);
    partial void OnToSwitchPrecodeIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    #endregion
		
		public TranslationOpticalCabinetToNormalConncetion()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._Bucht1 = default(EntityRef<Bucht>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._CabinetInput1 = default(EntityRef<CabinetInput>);
			this._Post = default(EntityRef<Post>);
			this._Post1 = default(EntityRef<Post>);
			this._PostContact = default(EntityRef<PostContact>);
			this._PostContact1 = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPostID", DbType="Int NOT NULL")]
		public int FromPostID
		{
			get
			{
				return this._FromPostID;
			}
			set
			{
				if ((this._FromPostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromPostIDChanging(value);
					this.SendPropertyChanging();
					this._FromPostID = value;
					this.SendPropertyChanged("FromPostID");
					this.OnFromPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPostContactID", DbType="BigInt NOT NULL")]
		public long FromPostContactID
		{
			get
			{
				return this._FromPostContactID;
			}
			set
			{
				if ((this._FromPostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._FromPostContactID = value;
					this.SendPropertyChanged("FromPostContactID");
					this.OnFromPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCabinetInputID", DbType="BigInt")]
		public System.Nullable<long> FromCabinetInputID
		{
			get
			{
				return this._FromCabinetInputID;
			}
			set
			{
				if ((this._FromCabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._FromCabinetInputID = value;
					this.SendPropertyChanged("FromCabinetInputID");
					this.OnFromCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> FromTelephoneNo
		{
			get
			{
				return this._FromTelephoneNo;
			}
			set
			{
				if ((this._FromTelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._FromTelephoneNo = value;
					this.SendPropertyChanged("FromTelephoneNo");
					this.OnFromTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromBucht", DbType="BigInt")]
		public System.Nullable<long> FromBucht
		{
			get
			{
				return this._FromBucht;
			}
			set
			{
				if ((this._FromBucht != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromBuchtChanging(value);
					this.SendPropertyChanging();
					this._FromBucht = value;
					this.SendPropertyChanged("FromBucht");
					this.OnFromBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCounter", DbType="BigInt")]
		public System.Nullable<long> FromCounter
		{
			get
			{
				return this._FromCounter;
			}
			set
			{
				if ((this._FromCounter != value))
				{
					this.OnFromCounterChanging(value);
					this.SendPropertyChanging();
					this._FromCounter = value;
					this.SendPropertyChanged("FromCounter");
					this.OnFromCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCounterID", DbType="BigInt")]
		public System.Nullable<long> FromCounterID
		{
			get
			{
				return this._FromCounterID;
			}
			set
			{
				if ((this._FromCounterID != value))
				{
					this.OnFromCounterIDChanging(value);
					this.SendPropertyChanging();
					this._FromCounterID = value;
					this.SendPropertyChanged("FromCounterID");
					this.OnFromCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPostID", DbType="Int NOT NULL")]
		public int ToPostID
		{
			get
			{
				return this._ToPostID;
			}
			set
			{
				if ((this._ToPostID != value))
				{
					if (this._Post1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToPostIDChanging(value);
					this.SendPropertyChanging();
					this._ToPostID = value;
					this.SendPropertyChanged("ToPostID");
					this.OnToPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPostConntactID", DbType="BigInt NOT NULL")]
		public long ToPostConntactID
		{
			get
			{
				return this._ToPostConntactID;
			}
			set
			{
				if ((this._ToPostConntactID != value))
				{
					if (this._PostContact1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToPostConntactIDChanging(value);
					this.SendPropertyChanging();
					this._ToPostConntactID = value;
					this.SendPropertyChanged("ToPostConntactID");
					this.OnToPostConntactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCabinetInputID", DbType="BigInt NOT NULL")]
		public long ToCabinetInputID
		{
			get
			{
				return this._ToCabinetInputID;
			}
			set
			{
				if ((this._ToCabinetInputID != value))
				{
					if (this._CabinetInput1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._ToCabinetInputID = value;
					this.SendPropertyChanged("ToCabinetInputID");
					this.OnToCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> ToTelephoneNo
		{
			get
			{
				return this._ToTelephoneNo;
			}
			set
			{
				if ((this._ToTelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ToTelephoneNo = value;
					this.SendPropertyChanged("ToTelephoneNo");
					this.OnToTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToBucht", DbType="BigInt")]
		public System.Nullable<long> ToBucht
		{
			get
			{
				return this._ToBucht;
			}
			set
			{
				if ((this._ToBucht != value))
				{
					if (this._Bucht1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToBuchtChanging(value);
					this.SendPropertyChanging();
					this._ToBucht = value;
					this.SendPropertyChanged("ToBucht");
					this.OnToBuchtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCounter", DbType="BigInt")]
		public System.Nullable<long> ToCounter
		{
			get
			{
				return this._ToCounter;
			}
			set
			{
				if ((this._ToCounter != value))
				{
					this.OnToCounterChanging(value);
					this.SendPropertyChanging();
					this._ToCounter = value;
					this.SendPropertyChanged("ToCounter");
					this.OnToCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCounterID", DbType="BigInt")]
		public System.Nullable<long> ToCounterID
		{
			get
			{
				return this._ToCounterID;
			}
			set
			{
				if ((this._ToCounterID != value))
				{
					this.OnToCounterIDChanging(value);
					this.SendPropertyChanging();
					this._ToCounterID = value;
					this.SendPropertyChanged("ToCounterID");
					this.OnToCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToSwitchPrecodeID", DbType="BigInt")]
		public System.Nullable<long> ToSwitchPrecodeID
		{
			get
			{
				return this._ToSwitchPrecodeID;
			}
			set
			{
				if ((this._ToSwitchPrecodeID != value))
				{
					this.OnToSwitchPrecodeIDChanging(value);
					this.SendPropertyChanging();
					this._ToSwitchPrecodeID = value;
					this.SendPropertyChanged("ToSwitchPrecodeID");
					this.OnToSwitchPrecodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_TranslationOpticalCabinetToNormalConncetion", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_TranslationOpticalCabinetToNormalConncetion1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_TranslationOpticalCabinetToNormalConncetion", Storage="_Bucht", ThisKey="FromBucht", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions.Add(this);
						this._FromBucht = value.ID;
					}
					else
					{
						this._FromBucht = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_TranslationOpticalCabinetToNormalConncetion1", Storage="_Bucht1", ThisKey="ToBucht", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht1
		{
			get
			{
				return this._Bucht1.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht1.Entity;
				if (((previousValue != value) 
							|| (this._Bucht1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions1.Remove(this);
					}
					this._Bucht1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions1.Add(this);
						this._ToBucht = value.ID;
					}
					else
					{
						this._ToBucht = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormalConncetion", Storage="_CabinetInput", ThisKey="FromCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions.Add(this);
						this._FromCabinetInputID = value.ID;
					}
					else
					{
						this._FromCabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationOpticalCabinetToNormalConncetion1", Storage="_CabinetInput1", ThisKey="ToCabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput1
		{
			get
			{
				return this._CabinetInput1.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput1.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions1.Remove(this);
					}
					this._CabinetInput1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions1.Add(this);
						this._ToCabinetInputID = value.ID;
					}
					else
					{
						this._ToCabinetInputID = default(long);
					}
					this.SendPropertyChanged("CabinetInput1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationOpticalCabinetToNormalConncetion", Storage="_Post", ThisKey="FromPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions.Add(this);
						this._FromPostID = value.ID;
					}
					else
					{
						this._FromPostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationOpticalCabinetToNormalConncetion1", Storage="_Post1", ThisKey="ToPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post1
		{
			get
			{
				return this._Post1.Entity;
			}
			set
			{
				Post previousValue = this._Post1.Entity;
				if (((previousValue != value) 
							|| (this._Post1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions1.Remove(this);
					}
					this._Post1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions1.Add(this);
						this._ToPostID = value.ID;
					}
					else
					{
						this._ToPostID = default(int);
					}
					this.SendPropertyChanged("Post1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationOpticalCabinetToNormalConncetion", Storage="_PostContact", ThisKey="FromPostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions.Add(this);
						this._FromPostContactID = value.ID;
					}
					else
					{
						this._FromPostContactID = default(long);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationOpticalCabinetToNormalConncetion1", Storage="_PostContact1", ThisKey="ToPostConntactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact1
		{
			get
			{
				return this._PostContact1.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact1.Entity;
				if (((previousValue != value) 
							|| (this._PostContact1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions1.Remove(this);
					}
					this._PostContact1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions1.Add(this);
						this._ToPostConntactID = value.ID;
					}
					else
					{
						this._ToPostConntactID = default(long);
					}
					this.SendPropertyChanged("PostContact1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationOpticalCabinetToNormalConncetion", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TranslationOpticalCabinetToNormalConncetion", Storage="_Telephone", ThisKey="FromTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions.Add(this);
						this._FromTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._FromTelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TranslationOpticalCabinetToNormalConncetion1", Storage="_Telephone1", ThisKey="ToTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions1.Add(this);
						this._ToTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._ToTelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_TranslationOpticalCabinetToNormalConncetion", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalConncetions.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalConncetions.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslationOpticalCabinetToNormalTelephone")]
	public partial class TranslationOpticalCabinetToNormalTelephone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private long _TelephoneNo;
		
		private long _NewTelephoneNo;
		
		private int _NewSwitchPrecodeID;
		
		private System.Nullable<long> _OldCounter;
		
		private System.Nullable<long> _NewCounter;
		
		private System.Nullable<long> _OldCounterID;
		
		private System.Nullable<long> _NewCounterID;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnNewTelephoneNoChanging(long value);
    partial void OnNewTelephoneNoChanged();
    partial void OnNewSwitchPrecodeIDChanging(int value);
    partial void OnNewSwitchPrecodeIDChanged();
    partial void OnOldCounterChanging(System.Nullable<long> value);
    partial void OnOldCounterChanged();
    partial void OnNewCounterChanging(System.Nullable<long> value);
    partial void OnNewCounterChanged();
    partial void OnOldCounterIDChanging(System.Nullable<long> value);
    partial void OnOldCounterIDChanged();
    partial void OnNewCounterIDChanging(System.Nullable<long> value);
    partial void OnNewCounterIDChanged();
    #endregion
		
		public TranslationOpticalCabinetToNormalTelephone()
		{
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTelephoneNo", DbType="BigInt NOT NULL")]
		public long NewTelephoneNo
		{
			get
			{
				return this._NewTelephoneNo;
			}
			set
			{
				if ((this._NewTelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._NewTelephoneNo = value;
					this.SendPropertyChanged("NewTelephoneNo");
					this.OnNewTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSwitchPrecodeID", DbType="Int NOT NULL")]
		public int NewSwitchPrecodeID
		{
			get
			{
				return this._NewSwitchPrecodeID;
			}
			set
			{
				if ((this._NewSwitchPrecodeID != value))
				{
					this.OnNewSwitchPrecodeIDChanging(value);
					this.SendPropertyChanging();
					this._NewSwitchPrecodeID = value;
					this.SendPropertyChanged("NewSwitchPrecodeID");
					this.OnNewSwitchPrecodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCounter", DbType="BigInt")]
		public System.Nullable<long> OldCounter
		{
			get
			{
				return this._OldCounter;
			}
			set
			{
				if ((this._OldCounter != value))
				{
					this.OnOldCounterChanging(value);
					this.SendPropertyChanging();
					this._OldCounter = value;
					this.SendPropertyChanged("OldCounter");
					this.OnOldCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCounter", DbType="BigInt")]
		public System.Nullable<long> NewCounter
		{
			get
			{
				return this._NewCounter;
			}
			set
			{
				if ((this._NewCounter != value))
				{
					this.OnNewCounterChanging(value);
					this.SendPropertyChanging();
					this._NewCounter = value;
					this.SendPropertyChanged("NewCounter");
					this.OnNewCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCounterID", DbType="BigInt")]
		public System.Nullable<long> OldCounterID
		{
			get
			{
				return this._OldCounterID;
			}
			set
			{
				if ((this._OldCounterID != value))
				{
					this.OnOldCounterIDChanging(value);
					this.SendPropertyChanging();
					this._OldCounterID = value;
					this.SendPropertyChanged("OldCounterID");
					this.OnOldCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCounterID", DbType="BigInt")]
		public System.Nullable<long> NewCounterID
		{
			get
			{
				return this._NewCounterID;
			}
			set
			{
				if ((this._NewCounterID != value))
				{
					this.OnNewCounterIDChanging(value);
					this.SendPropertyChanging();
					this._NewCounterID = value;
					this.SendPropertyChanged("NewCounterID");
					this.OnNewCounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationOpticalCabinetToNormalTelephone", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalTelephones.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalTelephones.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TranslationOpticalCabinetToNormalTelephone", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalTelephones.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalTelephones.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_TranslationOpticalCabinetToNormalTelephone1", Storage="_Telephone1", ThisKey="NewTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.TranslationOpticalCabinetToNormalTelephones1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.TranslationOpticalCabinetToNormalTelephones1.Add(this);
						this._NewTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._NewTelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslationPCMToNormal")]
	public partial class TranslationPCMToNormal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _Type;
		
		private int _OldCabinetID;
		
		private int _OldPostID;
		
		private long _OldPostContactID;
		
		private int _NewCabinetID;
		
		private int _NewPostID;
		
		private long _NewPostContactID;
		
		private System.Nullable<long> _CabinetInputID;
		
		private System.Nullable<System.DateTime> _MDFAccomplishmentDate;
		
		private string _MDFAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _NetworkAccomplishmentDate;
		
		private string _NetworkAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnOldCabinetIDChanging(int value);
    partial void OnOldCabinetIDChanged();
    partial void OnOldPostIDChanging(int value);
    partial void OnOldPostIDChanged();
    partial void OnOldPostContactIDChanging(long value);
    partial void OnOldPostContactIDChanged();
    partial void OnNewCabinetIDChanging(int value);
    partial void OnNewCabinetIDChanged();
    partial void OnNewPostIDChanging(int value);
    partial void OnNewPostIDChanged();
    partial void OnNewPostContactIDChanging(long value);
    partial void OnNewPostContactIDChanged();
    partial void OnCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnCabinetInputIDChanged();
    partial void OnMDFAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFAccomplishmentDateChanged();
    partial void OnMDFAccomplishmentTimeChanging(string value);
    partial void OnMDFAccomplishmentTimeChanged();
    partial void OnNetworkAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkAccomplishmentDateChanged();
    partial void OnNetworkAccomplishmentTimeChanging(string value);
    partial void OnNetworkAccomplishmentTimeChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    #endregion
		
		public TranslationPCMToNormal()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetID", DbType="Int NOT NULL")]
		public int OldCabinetID
		{
			get
			{
				return this._OldCabinetID;
			}
			set
			{
				if ((this._OldCabinetID != value))
				{
					this.OnOldCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetID = value;
					this.SendPropertyChanged("OldCabinetID");
					this.OnOldCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostID", DbType="Int NOT NULL")]
		public int OldPostID
		{
			get
			{
				return this._OldPostID;
			}
			set
			{
				if ((this._OldPostID != value))
				{
					this.OnOldPostIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostID = value;
					this.SendPropertyChanged("OldPostID");
					this.OnOldPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostContactID", DbType="BigInt NOT NULL")]
		public long OldPostContactID
		{
			get
			{
				return this._OldPostContactID;
			}
			set
			{
				if ((this._OldPostContactID != value))
				{
					this.OnOldPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostContactID = value;
					this.SendPropertyChanged("OldPostContactID");
					this.OnOldPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetID", DbType="Int NOT NULL")]
		public int NewCabinetID
		{
			get
			{
				return this._NewCabinetID;
			}
			set
			{
				if ((this._NewCabinetID != value))
				{
					this.OnNewCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._NewCabinetID = value;
					this.SendPropertyChanged("NewCabinetID");
					this.OnNewCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostID", DbType="Int NOT NULL")]
		public int NewPostID
		{
			get
			{
				return this._NewPostID;
			}
			set
			{
				if ((this._NewPostID != value))
				{
					this.OnNewPostIDChanging(value);
					this.SendPropertyChanging();
					this._NewPostID = value;
					this.SendPropertyChanged("NewPostID");
					this.OnNewPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostContactID", DbType="BigInt NOT NULL")]
		public long NewPostContactID
		{
			get
			{
				return this._NewPostContactID;
			}
			set
			{
				if ((this._NewPostContactID != value))
				{
					this.OnNewPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._NewPostContactID = value;
					this.SendPropertyChanged("NewPostContactID");
					this.OnNewPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt")]
		public System.Nullable<long> CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFAccomplishmentDate
		{
			get
			{
				return this._MDFAccomplishmentDate;
			}
			set
			{
				if ((this._MDFAccomplishmentDate != value))
				{
					this.OnMDFAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentDate = value;
					this.SendPropertyChanged("MDFAccomplishmentDate");
					this.OnMDFAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentTime", DbType="NChar(10)")]
		public string MDFAccomplishmentTime
		{
			get
			{
				return this._MDFAccomplishmentTime;
			}
			set
			{
				if ((this._MDFAccomplishmentTime != value))
				{
					this.OnMDFAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentTime = value;
					this.SendPropertyChanged("MDFAccomplishmentTime");
					this.OnMDFAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkAccomplishmentDate
		{
			get
			{
				return this._NetworkAccomplishmentDate;
			}
			set
			{
				if ((this._NetworkAccomplishmentDate != value))
				{
					this.OnNetworkAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentDate = value;
					this.SendPropertyChanged("NetworkAccomplishmentDate");
					this.OnNetworkAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentTime", DbType="NChar(10)")]
		public string NetworkAccomplishmentTime
		{
			get
			{
				return this._NetworkAccomplishmentTime;
			}
			set
			{
				if ((this._NetworkAccomplishmentTime != value))
				{
					this.OnNetworkAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentTime = value;
					this.SendPropertyChanged("NetworkAccomplishmentTime");
					this.OnNetworkAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationPCMToNormal", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TranslationPCMToNormal = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TranslationPCMToNormal = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslationPost")]
	public partial class TranslationPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private int _OldCabinetID;
		
		private int _OldPostID;
		
		private int _NewPostID;
		
		private System.Nullable<long> _OldPostContactID;
		
		private System.Nullable<long> _NewPostContactID;
		
		private bool _OverallTransfer;
		
		private System.Nullable<System.DateTime> _AccomplishmentDate;
		
		private string _AccomplishmentTime;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private bool _TransferWaitingList;
		
		private bool _TransferBrokenPostContact;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Post> _Post1;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<PostContact> _PostContact1;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnOldCabinetIDChanging(int value);
    partial void OnOldCabinetIDChanged();
    partial void OnOldPostIDChanging(int value);
    partial void OnOldPostIDChanged();
    partial void OnNewPostIDChanging(int value);
    partial void OnNewPostIDChanged();
    partial void OnOldPostContactIDChanging(System.Nullable<long> value);
    partial void OnOldPostContactIDChanged();
    partial void OnNewPostContactIDChanging(System.Nullable<long> value);
    partial void OnNewPostContactIDChanged();
    partial void OnOverallTransferChanging(bool value);
    partial void OnOverallTransferChanged();
    partial void OnAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccomplishmentDateChanged();
    partial void OnAccomplishmentTimeChanging(string value);
    partial void OnAccomplishmentTimeChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnTransferWaitingListChanging(bool value);
    partial void OnTransferWaitingListChanged();
    partial void OnTransferBrokenPostContactChanging(bool value);
    partial void OnTransferBrokenPostContactChanged();
    #endregion
		
		public TranslationPost()
		{
			this._Cabinet = default(EntityRef<Cabinet>);
			this._Post = default(EntityRef<Post>);
			this._Post1 = default(EntityRef<Post>);
			this._PostContact = default(EntityRef<PostContact>);
			this._PostContact1 = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetID", DbType="Int NOT NULL")]
		public int OldCabinetID
		{
			get
			{
				return this._OldCabinetID;
			}
			set
			{
				if ((this._OldCabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetID = value;
					this.SendPropertyChanged("OldCabinetID");
					this.OnOldCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostID", DbType="Int NOT NULL")]
		public int OldPostID
		{
			get
			{
				return this._OldPostID;
			}
			set
			{
				if ((this._OldPostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPostIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostID = value;
					this.SendPropertyChanged("OldPostID");
					this.OnOldPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostID", DbType="Int NOT NULL")]
		public int NewPostID
		{
			get
			{
				return this._NewPostID;
			}
			set
			{
				if ((this._NewPostID != value))
				{
					if (this._Post1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewPostIDChanging(value);
					this.SendPropertyChanging();
					this._NewPostID = value;
					this.SendPropertyChanged("NewPostID");
					this.OnNewPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostContactID", DbType="BigInt")]
		public System.Nullable<long> OldPostContactID
		{
			get
			{
				return this._OldPostContactID;
			}
			set
			{
				if ((this._OldPostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._OldPostContactID = value;
					this.SendPropertyChanged("OldPostContactID");
					this.OnOldPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostContactID", DbType="BigInt")]
		public System.Nullable<long> NewPostContactID
		{
			get
			{
				return this._NewPostContactID;
			}
			set
			{
				if ((this._NewPostContactID != value))
				{
					if (this._PostContact1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._NewPostContactID = value;
					this.SendPropertyChanged("NewPostContactID");
					this.OnNewPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallTransfer", DbType="Bit NOT NULL")]
		public bool OverallTransfer
		{
			get
			{
				return this._OverallTransfer;
			}
			set
			{
				if ((this._OverallTransfer != value))
				{
					this.OnOverallTransferChanging(value);
					this.SendPropertyChanging();
					this._OverallTransfer = value;
					this.SendPropertyChanged("OverallTransfer");
					this.OnOverallTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AccomplishmentDate
		{
			get
			{
				return this._AccomplishmentDate;
			}
			set
			{
				if ((this._AccomplishmentDate != value))
				{
					this.OnAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentDate = value;
					this.SendPropertyChanged("AccomplishmentDate");
					this.OnAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomplishmentTime", DbType="NVarChar(10)")]
		public string AccomplishmentTime
		{
			get
			{
				return this._AccomplishmentTime;
			}
			set
			{
				if ((this._AccomplishmentTime != value))
				{
					this.OnAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._AccomplishmentTime = value;
					this.SendPropertyChanged("AccomplishmentTime");
					this.OnAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferWaitingList", DbType="Bit NOT NULL")]
		public bool TransferWaitingList
		{
			get
			{
				return this._TransferWaitingList;
			}
			set
			{
				if ((this._TransferWaitingList != value))
				{
					this.OnTransferWaitingListChanging(value);
					this.SendPropertyChanging();
					this._TransferWaitingList = value;
					this.SendPropertyChanged("TransferWaitingList");
					this.OnTransferWaitingListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferBrokenPostContact", DbType="Bit NOT NULL")]
		public bool TransferBrokenPostContact
		{
			get
			{
				return this._TransferBrokenPostContact;
			}
			set
			{
				if ((this._TransferBrokenPostContact != value))
				{
					this.OnTransferBrokenPostContactChanging(value);
					this.SendPropertyChanging();
					this._TransferBrokenPostContact = value;
					this.SendPropertyChanged("TransferBrokenPostContact");
					this.OnTransferBrokenPostContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationPost", Storage="_Cabinet", ThisKey="OldCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.TranslationPosts.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.TranslationPosts.Add(this);
						this._OldCabinetID = value.ID;
					}
					else
					{
						this._OldCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationPost", Storage="_Post", ThisKey="OldPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.TranslationPosts.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.TranslationPosts.Add(this);
						this._OldPostID = value.ID;
					}
					else
					{
						this._OldPostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationPost1", Storage="_Post1", ThisKey="NewPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post1
		{
			get
			{
				return this._Post1.Entity;
			}
			set
			{
				Post previousValue = this._Post1.Entity;
				if (((previousValue != value) 
							|| (this._Post1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post1.Entity = null;
						previousValue.TranslationPosts1.Remove(this);
					}
					this._Post1.Entity = value;
					if ((value != null))
					{
						value.TranslationPosts1.Add(this);
						this._NewPostID = value.ID;
					}
					else
					{
						this._NewPostID = default(int);
					}
					this.SendPropertyChanged("Post1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationPost", Storage="_PostContact", ThisKey="OldPostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.TranslationPosts.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.TranslationPosts.Add(this);
						this._OldPostContactID = value.ID;
					}
					else
					{
						this._OldPostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationPost1", Storage="_PostContact1", ThisKey="NewPostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact1
		{
			get
			{
				return this._PostContact1.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact1.Entity;
				if (((previousValue != value) 
							|| (this._PostContact1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact1.Entity = null;
						previousValue.TranslationPosts1.Remove(this);
					}
					this._PostContact1.Entity = value;
					if ((value != null))
					{
						value.TranslationPosts1.Add(this);
						this._NewPostContactID = value.ID;
					}
					else
					{
						this._NewPostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationPost", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TranslationPost = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TranslationPost = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslationPostInput")]
	public partial class TranslationPostInput : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private int _FromCabinetID;
		
		private int _FromPostID;
		
		private int _ToCabinetID;
		
		private int _ToPostID;
		
		private System.Nullable<System.DateTime> _NetworkAccomplishmentDate;
		
		private string _NetworkAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _DateOfFinal;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.DateTime> _MDFAccomplishmentDate;
		
		private string _MDFAccomplishmentTime;
		
		private EntitySet<TranslationPostInputConnection> _TranslationPostInputConnections;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<Cabinet> _Cabinet1;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Post> _Post1;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnFromCabinetIDChanging(int value);
    partial void OnFromCabinetIDChanged();
    partial void OnFromPostIDChanging(int value);
    partial void OnFromPostIDChanged();
    partial void OnToCabinetIDChanging(int value);
    partial void OnToCabinetIDChanged();
    partial void OnToPostIDChanging(int value);
    partial void OnToPostIDChanged();
    partial void OnNetworkAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkAccomplishmentDateChanged();
    partial void OnNetworkAccomplishmentTimeChanging(string value);
    partial void OnNetworkAccomplishmentTimeChanged();
    partial void OnDateOfFinalChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfFinalChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnMDFAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFAccomplishmentDateChanged();
    partial void OnMDFAccomplishmentTimeChanging(string value);
    partial void OnMDFAccomplishmentTimeChanged();
    #endregion
		
		public TranslationPostInput()
		{
			this._TranslationPostInputConnections = new EntitySet<TranslationPostInputConnection>(new Action<TranslationPostInputConnection>(this.attach_TranslationPostInputConnections), new Action<TranslationPostInputConnection>(this.detach_TranslationPostInputConnections));
			this._Cabinet = default(EntityRef<Cabinet>);
			this._Cabinet1 = default(EntityRef<Cabinet>);
			this._Post = default(EntityRef<Post>);
			this._Post1 = default(EntityRef<Post>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCabinetID", DbType="Int NOT NULL")]
		public int FromCabinetID
		{
			get
			{
				return this._FromCabinetID;
			}
			set
			{
				if ((this._FromCabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._FromCabinetID = value;
					this.SendPropertyChanged("FromCabinetID");
					this.OnFromCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPostID", DbType="Int NOT NULL")]
		public int FromPostID
		{
			get
			{
				return this._FromPostID;
			}
			set
			{
				if ((this._FromPostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromPostIDChanging(value);
					this.SendPropertyChanging();
					this._FromPostID = value;
					this.SendPropertyChanged("FromPostID");
					this.OnFromPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCabinetID", DbType="Int NOT NULL")]
		public int ToCabinetID
		{
			get
			{
				return this._ToCabinetID;
			}
			set
			{
				if ((this._ToCabinetID != value))
				{
					if (this._Cabinet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._ToCabinetID = value;
					this.SendPropertyChanged("ToCabinetID");
					this.OnToCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPostID", DbType="Int NOT NULL")]
		public int ToPostID
		{
			get
			{
				return this._ToPostID;
			}
			set
			{
				if ((this._ToPostID != value))
				{
					if (this._Post1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToPostIDChanging(value);
					this.SendPropertyChanging();
					this._ToPostID = value;
					this.SendPropertyChanged("ToPostID");
					this.OnToPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkAccomplishmentDate
		{
			get
			{
				return this._NetworkAccomplishmentDate;
			}
			set
			{
				if ((this._NetworkAccomplishmentDate != value))
				{
					this.OnNetworkAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentDate = value;
					this.SendPropertyChanged("NetworkAccomplishmentDate");
					this.OnNetworkAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentTime", DbType="NChar(10)")]
		public string NetworkAccomplishmentTime
		{
			get
			{
				return this._NetworkAccomplishmentTime;
			}
			set
			{
				if ((this._NetworkAccomplishmentTime != value))
				{
					this.OnNetworkAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentTime = value;
					this.SendPropertyChanged("NetworkAccomplishmentTime");
					this.OnNetworkAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfFinal", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateOfFinal
		{
			get
			{
				return this._DateOfFinal;
			}
			set
			{
				if ((this._DateOfFinal != value))
				{
					this.OnDateOfFinalChanging(value);
					this.SendPropertyChanging();
					this._DateOfFinal = value;
					this.SendPropertyChanged("DateOfFinal");
					this.OnDateOfFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFAccomplishmentDate
		{
			get
			{
				return this._MDFAccomplishmentDate;
			}
			set
			{
				if ((this._MDFAccomplishmentDate != value))
				{
					this.OnMDFAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentDate = value;
					this.SendPropertyChanged("MDFAccomplishmentDate");
					this.OnMDFAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentTime", DbType="NChar(10)")]
		public string MDFAccomplishmentTime
		{
			get
			{
				return this._MDFAccomplishmentTime;
			}
			set
			{
				if ((this._MDFAccomplishmentTime != value))
				{
					this.OnMDFAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentTime = value;
					this.SendPropertyChanged("MDFAccomplishmentTime");
					this.OnMDFAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TranslationPostInput_TranslationPostInputConnection", Storage="_TranslationPostInputConnections", ThisKey="RequestID", OtherKey="RequestID")]
		public EntitySet<TranslationPostInputConnection> TranslationPostInputConnections
		{
			get
			{
				return this._TranslationPostInputConnections;
			}
			set
			{
				this._TranslationPostInputConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationPostInput", Storage="_Cabinet", ThisKey="FromCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.TranslationPostInputs.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputs.Add(this);
						this._FromCabinetID = value.ID;
					}
					else
					{
						this._FromCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_TranslationPostInput1", Storage="_Cabinet1", ThisKey="ToCabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet1
		{
			get
			{
				return this._Cabinet1.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet1.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet1.Entity = null;
						previousValue.TranslationPostInputs1.Remove(this);
					}
					this._Cabinet1.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputs1.Add(this);
						this._ToCabinetID = value.ID;
					}
					else
					{
						this._ToCabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationPostInput", Storage="_Post", ThisKey="FromPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.TranslationPostInputs.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputs.Add(this);
						this._FromPostID = value.ID;
					}
					else
					{
						this._FromPostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TranslationPostInput1", Storage="_Post1", ThisKey="ToPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post1
		{
			get
			{
				return this._Post1.Entity;
			}
			set
			{
				Post previousValue = this._Post1.Entity;
				if (((previousValue != value) 
							|| (this._Post1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post1.Entity = null;
						previousValue.TranslationPostInputs1.Remove(this);
					}
					this._Post1.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputs1.Add(this);
						this._ToPostID = value.ID;
					}
					else
					{
						this._ToPostID = default(int);
					}
					this.SendPropertyChanged("Post1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationPostInput", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TranslationPostInput = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInput = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TranslationPostInputConnections(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.TranslationPostInput = this;
		}
		
		private void detach_TranslationPostInputConnections(TranslationPostInputConnection entity)
		{
			this.SendPropertyChanging();
			entity.TranslationPostInput = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslationPostInputConnections")]
	public partial class TranslationPostInputConnection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private long _ConnectionID;
		
		private long _NewConnectionID;
		
		private long _CabinetInputID;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<PostContact> _PostContact1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<TranslationPostInput> _TranslationPostInput;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnConnectionIDChanging(long value);
    partial void OnConnectionIDChanged();
    partial void OnNewConnectionIDChanging(long value);
    partial void OnNewConnectionIDChanged();
    partial void OnCabinetInputIDChanging(long value);
    partial void OnCabinetInputIDChanged();
    #endregion
		
		public TranslationPostInputConnection()
		{
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._PostContact = default(EntityRef<PostContact>);
			this._PostContact1 = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			this._TranslationPostInput = default(EntityRef<TranslationPostInput>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if ((this._Request.HasLoadedOrAssignedValue || this._TranslationPostInput.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionID", DbType="BigInt NOT NULL")]
		public long ConnectionID
		{
			get
			{
				return this._ConnectionID;
			}
			set
			{
				if ((this._ConnectionID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConnectionIDChanging(value);
					this.SendPropertyChanging();
					this._ConnectionID = value;
					this.SendPropertyChanged("ConnectionID");
					this.OnConnectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewConnectionID", DbType="BigInt NOT NULL")]
		public long NewConnectionID
		{
			get
			{
				return this._NewConnectionID;
			}
			set
			{
				if ((this._NewConnectionID != value))
				{
					if (this._PostContact1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewConnectionIDChanging(value);
					this.SendPropertyChanging();
					this._NewConnectionID = value;
					this.SendPropertyChanged("NewConnectionID");
					this.OnNewConnectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt NOT NULL")]
		public long CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_TranslationPostInputConnection", Storage="_CabinetInput", ThisKey="CabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.TranslationPostInputConnections.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputConnections.Add(this);
						this._CabinetInputID = value.ID;
					}
					else
					{
						this._CabinetInputID = default(long);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationPostInputConnection", Storage="_PostContact", ThisKey="ConnectionID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.TranslationPostInputConnections.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputConnections.Add(this);
						this._ConnectionID = value.ID;
					}
					else
					{
						this._ConnectionID = default(long);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_TranslationPostInputConnection1", Storage="_PostContact1", ThisKey="NewConnectionID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact1
		{
			get
			{
				return this._PostContact1.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact1.Entity;
				if (((previousValue != value) 
							|| (this._PostContact1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact1.Entity = null;
						previousValue.TranslationPostInputConnections1.Remove(this);
					}
					this._PostContact1.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputConnections1.Add(this);
						this._NewConnectionID = value.ID;
					}
					else
					{
						this._NewConnectionID = default(long);
					}
					this.SendPropertyChanged("PostContact1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TranslationPostInputConnection", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TranslationPostInputConnections.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputConnections.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TranslationPostInput_TranslationPostInputConnection", Storage="_TranslationPostInput", ThisKey="RequestID", OtherKey="RequestID", IsForeignKey=true)]
		public TranslationPostInput TranslationPostInput
		{
			get
			{
				return this._TranslationPostInput.Entity;
			}
			set
			{
				TranslationPostInput previousValue = this._TranslationPostInput.Entity;
				if (((previousValue != value) 
							|| (this._TranslationPostInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TranslationPostInput.Entity = null;
						previousValue.TranslationPostInputConnections.Remove(this);
					}
					this._TranslationPostInput.Entity = value;
					if ((value != null))
					{
						value.TranslationPostInputConnections.Add(this);
						this._RequestID = value.RequestID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("TranslationPostInput");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitMeasure")]
	public partial class UnitMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<TelecomminucationService> _TelecomminucationServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UnitMeasure()
		{
			this._TelecomminucationServices = new EntitySet<TelecomminucationService>(new Action<TelecomminucationService>(this.attach_TelecomminucationServices), new Action<TelecomminucationService>(this.detach_TelecomminucationServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_TelecomminucationService", Storage="_TelecomminucationServices", ThisKey="ID", OtherKey="UnitMeasureID")]
		public EntitySet<TelecomminucationService> TelecomminucationServices
		{
			get
			{
				return this._TelecomminucationServices;
			}
			set
			{
				this._TelecomminucationServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TelecomminucationServices(TelecomminucationService entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = this;
		}
		
		private void detach_TelecomminucationServices(TelecomminucationService entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsedProducts")]
	public partial class UsedProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Unit;
		
		private EntitySet<PostContactEquipment> _PostContactEquipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    #endregion
		
		public UsedProduct()
		{
			this._PostContactEquipments = new EntitySet<PostContactEquipment>(new Action<PostContactEquipment>(this.attach_PostContactEquipments), new Action<PostContactEquipment>(this.detach_PostContactEquipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsedProduct_PostContactEquipment", Storage="_PostContactEquipments", ThisKey="ID", OtherKey="UsedProductsID")]
		public EntitySet<PostContactEquipment> PostContactEquipments
		{
			get
			{
				return this._PostContactEquipments;
			}
			set
			{
				this._PostContactEquipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostContactEquipments(PostContactEquipment entity)
		{
			this.SendPropertyChanging();
			entity.UsedProduct = this;
		}
		
		private void detach_PostContactEquipments(PostContactEquipment entity)
		{
			this.SendPropertyChanging();
			entity.UsedProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Phone;
		
		private int _RoleID;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Xml.Linq.XElement _Config;
		
		private string _TimeStamp;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private bool _IsDelete;
		
		private EntitySet<ADSLChangeService> _ADSLChangeServices;
		
		private EntitySet<ADSLChangeService> _ADSLChangeServices1;
		
		private EntitySet<ADSLHistory> _ADSLHistories;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<ADSLRequest> _ADSLRequests1;
		
		private EntitySet<ADSLRequest> _ADSLRequests2;
		
		private EntitySet<ADSLRequest> _ADSLRequests3;
		
		private EntitySet<ADSLSellerAgentRecharge> _ADSLSellerAgentRecharges;
		
		private EntityRef<ADSLSellerAgentUser> _ADSLSellerAgentUser;
		
		private EntitySet<ADSLSellerAgentUserRecharge> _ADSLSellerAgentUserRecharges;
		
		private EntitySet<ADSLSetupContactInformation> _ADSLSetupContactInformations;
		
		private EntitySet<ADSLSupportCommnet> _ADSLSupportCommnets;
		
		private EntitySet<BlackList> _BlackLists;
		
		private EntitySet<BlackList> _BlackLists1;
		
		private EntitySet<DataGridColumnConfig> _DataGridColumnConfigs;
		
		private EntityRef<PAPInfoUser> _PAPInfoUser;
		
		private EntitySet<Request> _Requests;
		
		private EntitySet<Request> _Requests1;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers1;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers2;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers3;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers4;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers5;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers6;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers7;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers8;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers9;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers10;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers11;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers12;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers13;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers14;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers15;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers16;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers17;
		
		private EntitySet<UserCenter> _UserCenters;
		
		private EntitySet<WirelessChangeService> _WirelessChangeServices;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntitySet<WirelessRequest> _WirelessRequests1;
		
		private EntitySet<WirelessRequest> _WirelessRequests2;
		
		private EntitySet<WirelessRequest> _WirelessRequests3;
		
		private EntitySet<TelephoneConnectionInstallment> _TelephoneConnectionInstallments;
		
		private EntitySet<ShahkarWebApiLog> _ShahkarWebApiLogs;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnConfigChanging(System.Xml.Linq.XElement value);
    partial void OnConfigChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public User()
		{
			this._ADSLChangeServices = new EntitySet<ADSLChangeService>(new Action<ADSLChangeService>(this.attach_ADSLChangeServices), new Action<ADSLChangeService>(this.detach_ADSLChangeServices));
			this._ADSLChangeServices1 = new EntitySet<ADSLChangeService>(new Action<ADSLChangeService>(this.attach_ADSLChangeServices1), new Action<ADSLChangeService>(this.detach_ADSLChangeServices1));
			this._ADSLHistories = new EntitySet<ADSLHistory>(new Action<ADSLHistory>(this.attach_ADSLHistories), new Action<ADSLHistory>(this.detach_ADSLHistories));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._ADSLRequests1 = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests1), new Action<ADSLRequest>(this.detach_ADSLRequests1));
			this._ADSLRequests2 = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests2), new Action<ADSLRequest>(this.detach_ADSLRequests2));
			this._ADSLRequests3 = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests3), new Action<ADSLRequest>(this.detach_ADSLRequests3));
			this._ADSLSellerAgentRecharges = new EntitySet<ADSLSellerAgentRecharge>(new Action<ADSLSellerAgentRecharge>(this.attach_ADSLSellerAgentRecharges), new Action<ADSLSellerAgentRecharge>(this.detach_ADSLSellerAgentRecharges));
			this._ADSLSellerAgentUser = default(EntityRef<ADSLSellerAgentUser>);
			this._ADSLSellerAgentUserRecharges = new EntitySet<ADSLSellerAgentUserRecharge>(new Action<ADSLSellerAgentUserRecharge>(this.attach_ADSLSellerAgentUserRecharges), new Action<ADSLSellerAgentUserRecharge>(this.detach_ADSLSellerAgentUserRecharges));
			this._ADSLSetupContactInformations = new EntitySet<ADSLSetupContactInformation>(new Action<ADSLSetupContactInformation>(this.attach_ADSLSetupContactInformations), new Action<ADSLSetupContactInformation>(this.detach_ADSLSetupContactInformations));
			this._ADSLSupportCommnets = new EntitySet<ADSLSupportCommnet>(new Action<ADSLSupportCommnet>(this.attach_ADSLSupportCommnets), new Action<ADSLSupportCommnet>(this.detach_ADSLSupportCommnets));
			this._BlackLists = new EntitySet<BlackList>(new Action<BlackList>(this.attach_BlackLists), new Action<BlackList>(this.detach_BlackLists));
			this._BlackLists1 = new EntitySet<BlackList>(new Action<BlackList>(this.attach_BlackLists1), new Action<BlackList>(this.detach_BlackLists1));
			this._DataGridColumnConfigs = new EntitySet<DataGridColumnConfig>(new Action<DataGridColumnConfig>(this.attach_DataGridColumnConfigs), new Action<DataGridColumnConfig>(this.detach_DataGridColumnConfigs));
			this._PAPInfoUser = default(EntityRef<PAPInfoUser>);
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._Requests1 = new EntitySet<Request>(new Action<Request>(this.attach_Requests1), new Action<Request>(this.detach_Requests1));
			this._SpaceAndPowers = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers), new Action<SpaceAndPower>(this.detach_SpaceAndPowers));
			this._SpaceAndPowers1 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers1), new Action<SpaceAndPower>(this.detach_SpaceAndPowers1));
			this._SpaceAndPowers2 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers2), new Action<SpaceAndPower>(this.detach_SpaceAndPowers2));
			this._SpaceAndPowers3 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers3), new Action<SpaceAndPower>(this.detach_SpaceAndPowers3));
			this._SpaceAndPowers4 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers4), new Action<SpaceAndPower>(this.detach_SpaceAndPowers4));
			this._SpaceAndPowers5 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers5), new Action<SpaceAndPower>(this.detach_SpaceAndPowers5));
			this._SpaceAndPowers6 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers6), new Action<SpaceAndPower>(this.detach_SpaceAndPowers6));
			this._SpaceAndPowers7 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers7), new Action<SpaceAndPower>(this.detach_SpaceAndPowers7));
			this._SpaceAndPowers8 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers8), new Action<SpaceAndPower>(this.detach_SpaceAndPowers8));
			this._SpaceAndPowers9 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers9), new Action<SpaceAndPower>(this.detach_SpaceAndPowers9));
			this._SpaceAndPowers10 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers10), new Action<SpaceAndPower>(this.detach_SpaceAndPowers10));
			this._SpaceAndPowers11 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers11), new Action<SpaceAndPower>(this.detach_SpaceAndPowers11));
			this._SpaceAndPowers12 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers12), new Action<SpaceAndPower>(this.detach_SpaceAndPowers12));
			this._SpaceAndPowers13 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers13), new Action<SpaceAndPower>(this.detach_SpaceAndPowers13));
			this._SpaceAndPowers14 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers14), new Action<SpaceAndPower>(this.detach_SpaceAndPowers14));
			this._SpaceAndPowers15 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers15), new Action<SpaceAndPower>(this.detach_SpaceAndPowers15));
			this._SpaceAndPowers16 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers16), new Action<SpaceAndPower>(this.detach_SpaceAndPowers16));
			this._SpaceAndPowers17 = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers17), new Action<SpaceAndPower>(this.detach_SpaceAndPowers17));
			this._UserCenters = new EntitySet<UserCenter>(new Action<UserCenter>(this.attach_UserCenters), new Action<UserCenter>(this.detach_UserCenters));
			this._WirelessChangeServices = new EntitySet<WirelessChangeService>(new Action<WirelessChangeService>(this.attach_WirelessChangeServices), new Action<WirelessChangeService>(this.detach_WirelessChangeServices));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._WirelessRequests1 = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests1), new Action<WirelessRequest>(this.detach_WirelessRequests1));
			this._WirelessRequests2 = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests2), new Action<WirelessRequest>(this.detach_WirelessRequests2));
			this._WirelessRequests3 = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests3), new Action<WirelessRequest>(this.detach_WirelessRequests3));
			this._TelephoneConnectionInstallments = new EntitySet<TelephoneConnectionInstallment>(new Action<TelephoneConnectionInstallment>(this.attach_TelephoneConnectionInstallments), new Action<TelephoneConnectionInstallment>(this.detach_TelephoneConnectionInstallments));
			this._ShahkarWebApiLogs = new EntitySet<ShahkarWebApiLog>(new Action<ShahkarWebApiLog>(this.attach_ShahkarWebApiLogs), new Action<ShahkarWebApiLog>(this.detach_ShahkarWebApiLogs));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(63) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(511)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(127)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Config", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Config
		{
			get
			{
				return this._Config;
			}
			set
			{
				if ((this._Config != value))
				{
					this.OnConfigChanging(value);
					this.SendPropertyChanging();
					this._Config = value;
					this.SendPropertyChanged("Config");
					this.OnConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLChangeService", Storage="_ADSLChangeServices", ThisKey="ID", OtherKey="OMCUserID")]
		public EntitySet<ADSLChangeService> ADSLChangeServices
		{
			get
			{
				return this._ADSLChangeServices;
			}
			set
			{
				this._ADSLChangeServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLChangeService1", Storage="_ADSLChangeServices1", ThisKey="ID", OtherKey="FinalUserID")]
		public EntitySet<ADSLChangeService> ADSLChangeServices1
		{
			get
			{
				return this._ADSLChangeServices1;
			}
			set
			{
				this._ADSLChangeServices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLHistory", Storage="_ADSLHistories", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ADSLHistory> ADSLHistories
		{
			get
			{
				return this._ADSLHistories;
			}
			set
			{
				this._ADSLHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="MDFUserID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLRequest1", Storage="_ADSLRequests1", ThisKey="ID", OtherKey="OMCUserID")]
		public EntitySet<ADSLRequest> ADSLRequests1
		{
			get
			{
				return this._ADSLRequests1;
			}
			set
			{
				this._ADSLRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLRequest2", Storage="_ADSLRequests2", ThisKey="ID", OtherKey="SetupUserID")]
		public EntitySet<ADSLRequest> ADSLRequests2
		{
			get
			{
				return this._ADSLRequests2;
			}
			set
			{
				this._ADSLRequests2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLRequest3", Storage="_ADSLRequests3", ThisKey="ID", OtherKey="AssignmentLineUserID")]
		public EntitySet<ADSLRequest> ADSLRequests3
		{
			get
			{
				return this._ADSLRequests3;
			}
			set
			{
				this._ADSLRequests3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSellerAgentRecharge", Storage="_ADSLSellerAgentRecharges", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ADSLSellerAgentRecharge> ADSLSellerAgentRecharges
		{
			get
			{
				return this._ADSLSellerAgentRecharges;
			}
			set
			{
				this._ADSLSellerAgentRecharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSellerAgentUser", Storage="_ADSLSellerAgentUser", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ADSLSellerAgentUser ADSLSellerAgentUser
		{
			get
			{
				return this._ADSLSellerAgentUser.Entity;
			}
			set
			{
				ADSLSellerAgentUser previousValue = this._ADSLSellerAgentUser.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgentUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgentUser.Entity = null;
						previousValue.User = null;
					}
					this._ADSLSellerAgentUser.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("ADSLSellerAgentUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSellerAgentUserRecharge", Storage="_ADSLSellerAgentUserRecharges", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ADSLSellerAgentUserRecharge> ADSLSellerAgentUserRecharges
		{
			get
			{
				return this._ADSLSellerAgentUserRecharges;
			}
			set
			{
				this._ADSLSellerAgentUserRecharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSetupContactInformation", Storage="_ADSLSetupContactInformations", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ADSLSetupContactInformation> ADSLSetupContactInformations
		{
			get
			{
				return this._ADSLSetupContactInformations;
			}
			set
			{
				this._ADSLSetupContactInformations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ADSLSupportCommnet", Storage="_ADSLSupportCommnets", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ADSLSupportCommnet> ADSLSupportCommnets
		{
			get
			{
				return this._ADSLSupportCommnets;
			}
			set
			{
				this._ADSLSupportCommnets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlackList", Storage="_BlackLists", ThisKey="ID", OtherKey="CreatorUserID")]
		public EntitySet<BlackList> BlackLists
		{
			get
			{
				return this._BlackLists;
			}
			set
			{
				this._BlackLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BlackList1", Storage="_BlackLists1", ThisKey="ID", OtherKey="ExitUserID")]
		public EntitySet<BlackList> BlackLists1
		{
			get
			{
				return this._BlackLists1;
			}
			set
			{
				this._BlackLists1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DataGridColumnConfig", Storage="_DataGridColumnConfigs", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<DataGridColumnConfig> DataGridColumnConfigs
		{
			get
			{
				return this._DataGridColumnConfigs;
			}
			set
			{
				this._DataGridColumnConfigs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PAPInfoUser", Storage="_PAPInfoUser", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public PAPInfoUser PAPInfoUser
		{
			get
			{
				return this._PAPInfoUser.Entity;
			}
			set
			{
				PAPInfoUser previousValue = this._PAPInfoUser.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfoUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfoUser.Entity = null;
						previousValue.User = null;
					}
					this._PAPInfoUser.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("PAPInfoUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Request", Storage="_Requests", ThisKey="ID", OtherKey="CreatorUserID")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Request1", Storage="_Requests1", ThisKey="ID", OtherKey="ModifyUserID")]
		public EntitySet<Request> Requests1
		{
			get
			{
				return this._Requests1;
			}
			set
			{
				this._Requests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower", Storage="_SpaceAndPowers", ThisKey="ID", OtherKey="AdministrationOfTheTelecommunicationEquipmentUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers
		{
			get
			{
				return this._SpaceAndPowers;
			}
			set
			{
				this._SpaceAndPowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower1", Storage="_SpaceAndPowers1", ThisKey="ID", OtherKey="CableAndNetworkDesignOfficeUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers1
		{
			get
			{
				return this._SpaceAndPowers1;
			}
			set
			{
				this._SpaceAndPowers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower2", Storage="_SpaceAndPowers2", ThisKey="ID", OtherKey="DesignManagerUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers2
		{
			get
			{
				return this._SpaceAndPowers2;
			}
			set
			{
				this._SpaceAndPowers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower3", Storage="_SpaceAndPowers3", ThisKey="ID", OtherKey="DesignManagerFinalCheckUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers3
		{
			get
			{
				return this._SpaceAndPowers3;
			}
			set
			{
				this._SpaceAndPowers3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower4", Storage="_SpaceAndPowers4", ThisKey="ID", OtherKey="DeviceHallUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers4
		{
			get
			{
				return this._SpaceAndPowers4;
			}
			set
			{
				this._SpaceAndPowers4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower5", Storage="_SpaceAndPowers5", ThisKey="ID", OtherKey="EnteghalUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers5
		{
			get
			{
				return this._SpaceAndPowers5;
			}
			set
			{
				this._SpaceAndPowers5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower6", Storage="_SpaceAndPowers6", ThisKey="ID", OtherKey="FazaUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers6
		{
			get
			{
				return this._SpaceAndPowers6;
			}
			set
			{
				this._SpaceAndPowers6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower7", Storage="_SpaceAndPowers7", ThisKey="ID", OtherKey="FinancialScopeUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers7
		{
			get
			{
				return this._SpaceAndPowers7;
			}
			set
			{
				this._SpaceAndPowers7.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower8", Storage="_SpaceAndPowers8", ThisKey="ID", OtherKey="GhardadUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers8
		{
			get
			{
				return this._SpaceAndPowers8;
			}
			set
			{
				this._SpaceAndPowers8.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower9", Storage="_SpaceAndPowers9", ThisKey="ID", OtherKey="HerasatUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers9
		{
			get
			{
				return this._SpaceAndPowers9;
			}
			set
			{
				this._SpaceAndPowers9.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower10", Storage="_SpaceAndPowers10", ThisKey="ID", OtherKey="ManagerUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers10
		{
			get
			{
				return this._SpaceAndPowers10;
			}
			set
			{
				this._SpaceAndPowers10.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower11", Storage="_SpaceAndPowers11", ThisKey="ID", OtherKey="ModireMantagheUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers11
		{
			get
			{
				return this._SpaceAndPowers11;
			}
			set
			{
				this._SpaceAndPowers11.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower12", Storage="_SpaceAndPowers12", ThisKey="ID", OtherKey="ModireMohandesiUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers12
		{
			get
			{
				return this._SpaceAndPowers12;
			}
			set
			{
				this._SpaceAndPowers12.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower13", Storage="_SpaceAndPowers13", ThisKey="ID", OtherKey="NetworkAssistantUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers13
		{
			get
			{
				return this._SpaceAndPowers13;
			}
			set
			{
				this._SpaceAndPowers13.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower14", Storage="_SpaceAndPowers14", ThisKey="ID", OtherKey="NirooUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers14
		{
			get
			{
				return this._SpaceAndPowers14;
			}
			set
			{
				this._SpaceAndPowers14.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower15", Storage="_SpaceAndPowers15", ThisKey="ID", OtherKey="SakhtemanUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers15
		{
			get
			{
				return this._SpaceAndPowers15;
			}
			set
			{
				this._SpaceAndPowers15.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower16", Storage="_SpaceAndPowers16", ThisKey="ID", OtherKey="SooratHesabUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers16
		{
			get
			{
				return this._SpaceAndPowers16;
			}
			set
			{
				this._SpaceAndPowers16.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SpaceAndPower17", Storage="_SpaceAndPowers17", ThisKey="ID", OtherKey="SwitchDesigningOfficeUserID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers17
		{
			get
			{
				return this._SpaceAndPowers17;
			}
			set
			{
				this._SpaceAndPowers17.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCenter", Storage="_UserCenters", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserCenter> UserCenters
		{
			get
			{
				return this._UserCenters;
			}
			set
			{
				this._UserCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessChangeService", Storage="_WirelessChangeServices", ThisKey="ID", OtherKey="FinalUserID")]
		public EntitySet<WirelessChangeService> WirelessChangeServices
		{
			get
			{
				return this._WirelessChangeServices;
			}
			set
			{
				this._WirelessChangeServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="MDFUserID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessRequest1", Storage="_WirelessRequests1", ThisKey="ID", OtherKey="OMCUserID")]
		public EntitySet<WirelessRequest> WirelessRequests1
		{
			get
			{
				return this._WirelessRequests1;
			}
			set
			{
				this._WirelessRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessRequest2", Storage="_WirelessRequests2", ThisKey="ID", OtherKey="SetupUserID")]
		public EntitySet<WirelessRequest> WirelessRequests2
		{
			get
			{
				return this._WirelessRequests2;
			}
			set
			{
				this._WirelessRequests2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessRequest3", Storage="_WirelessRequests3", ThisKey="ID", OtherKey="AssignmentLineUserID")]
		public EntitySet<WirelessRequest> WirelessRequests3
		{
			get
			{
				return this._WirelessRequests3;
			}
			set
			{
				this._WirelessRequests3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TelephoneConnectionInstallment", Storage="_TelephoneConnectionInstallments", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<TelephoneConnectionInstallment> TelephoneConnectionInstallments
		{
			get
			{
				return this._TelephoneConnectionInstallments;
			}
			set
			{
				this._TelephoneConnectionInstallments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ShahkarWebApiLog", Storage="_ShahkarWebApiLogs", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ShahkarWebApiLog> ShahkarWebApiLogs
		{
			get
			{
				return this._ShahkarWebApiLogs;
			}
			set
			{
				this._ShahkarWebApiLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLChangeServices(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ADSLChangeServices(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ADSLChangeServices1(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ADSLChangeServices1(ADSLChangeService entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_ADSLHistories(ADSLHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ADSLHistories(ADSLHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ADSLRequests1(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ADSLRequests1(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_ADSLRequests2(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_ADSLRequests2(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_ADSLRequests3(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.User3 = this;
		}
		
		private void detach_ADSLRequests3(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.User3 = null;
		}
		
		private void attach_ADSLSellerAgentRecharges(ADSLSellerAgentRecharge entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ADSLSellerAgentRecharges(ADSLSellerAgentRecharge entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ADSLSellerAgentUserRecharges(ADSLSellerAgentUserRecharge entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ADSLSellerAgentUserRecharges(ADSLSellerAgentUserRecharge entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ADSLSetupContactInformations(ADSLSetupContactInformation entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ADSLSetupContactInformations(ADSLSetupContactInformation entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ADSLSupportCommnets(ADSLSupportCommnet entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ADSLSupportCommnets(ADSLSupportCommnet entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BlackLists1(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_BlackLists1(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_DataGridColumnConfigs(DataGridColumnConfig entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DataGridColumnConfigs(DataGridColumnConfig entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Requests1(Request entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Requests1(Request entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_SpaceAndPowers(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SpaceAndPowers(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SpaceAndPowers1(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_SpaceAndPowers1(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_SpaceAndPowers2(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_SpaceAndPowers2(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_SpaceAndPowers3(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User3 = this;
		}
		
		private void detach_SpaceAndPowers3(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User3 = null;
		}
		
		private void attach_SpaceAndPowers4(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User4 = this;
		}
		
		private void detach_SpaceAndPowers4(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User4 = null;
		}
		
		private void attach_SpaceAndPowers5(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User5 = this;
		}
		
		private void detach_SpaceAndPowers5(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User5 = null;
		}
		
		private void attach_SpaceAndPowers6(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User6 = this;
		}
		
		private void detach_SpaceAndPowers6(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User6 = null;
		}
		
		private void attach_SpaceAndPowers7(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User7 = this;
		}
		
		private void detach_SpaceAndPowers7(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User7 = null;
		}
		
		private void attach_SpaceAndPowers8(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User8 = this;
		}
		
		private void detach_SpaceAndPowers8(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User8 = null;
		}
		
		private void attach_SpaceAndPowers9(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User9 = this;
		}
		
		private void detach_SpaceAndPowers9(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User9 = null;
		}
		
		private void attach_SpaceAndPowers10(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User10 = this;
		}
		
		private void detach_SpaceAndPowers10(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User10 = null;
		}
		
		private void attach_SpaceAndPowers11(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User11 = this;
		}
		
		private void detach_SpaceAndPowers11(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User11 = null;
		}
		
		private void attach_SpaceAndPowers12(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User12 = this;
		}
		
		private void detach_SpaceAndPowers12(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User12 = null;
		}
		
		private void attach_SpaceAndPowers13(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User13 = this;
		}
		
		private void detach_SpaceAndPowers13(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User13 = null;
		}
		
		private void attach_SpaceAndPowers14(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User14 = this;
		}
		
		private void detach_SpaceAndPowers14(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User14 = null;
		}
		
		private void attach_SpaceAndPowers15(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User15 = this;
		}
		
		private void detach_SpaceAndPowers15(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User15 = null;
		}
		
		private void attach_SpaceAndPowers16(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User16 = this;
		}
		
		private void detach_SpaceAndPowers16(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User16 = null;
		}
		
		private void attach_SpaceAndPowers17(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User17 = this;
		}
		
		private void detach_SpaceAndPowers17(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.User17 = null;
		}
		
		private void attach_UserCenters(UserCenter entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserCenters(UserCenter entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WirelessChangeServices(WirelessChangeService entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WirelessChangeServices(WirelessChangeService entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WirelessRequests1(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_WirelessRequests1(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_WirelessRequests2(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_WirelessRequests2(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_WirelessRequests3(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.User3 = this;
		}
		
		private void detach_WirelessRequests3(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.User3 = null;
		}
		
		private void attach_TelephoneConnectionInstallments(TelephoneConnectionInstallment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TelephoneConnectionInstallments(TelephoneConnectionInstallment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ShahkarWebApiLogs(ShahkarWebApiLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ShahkarWebApiLogs(ShahkarWebApiLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCenter")]
	public partial class UserCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _CenterID;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    #endregion
		
		public UserCenter()
		{
			this._Center = default(EntityRef<Center>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_UserCenter", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.UserCenters.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.UserCenters.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCenter", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserCenters.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserCenters.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VacateE1")]
	public partial class VacateE1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private long _BuchtID;
		
		private System.Nullable<System.DateTime> _VacateMDFDate;
		
		private System.Nullable<System.DateTime> _VacateNetworkDatae;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnBuchtIDChanging(long value);
    partial void OnBuchtIDChanged();
    partial void OnVacateMDFDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVacateMDFDateChanged();
    partial void OnVacateNetworkDataeChanging(System.Nullable<System.DateTime> value);
    partial void OnVacateNetworkDataeChanged();
    #endregion
		
		public VacateE1()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt NOT NULL")]
		public long BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacateMDFDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> VacateMDFDate
		{
			get
			{
				return this._VacateMDFDate;
			}
			set
			{
				if ((this._VacateMDFDate != value))
				{
					this.OnVacateMDFDateChanging(value);
					this.SendPropertyChanging();
					this._VacateMDFDate = value;
					this.SendPropertyChanged("VacateMDFDate");
					this.OnVacateMDFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacateNetworkDatae", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> VacateNetworkDatae
		{
			get
			{
				return this._VacateNetworkDatae;
			}
			set
			{
				if ((this._VacateNetworkDatae != value))
				{
					this.OnVacateNetworkDataeChanging(value);
					this.SendPropertyChanging();
					this._VacateNetworkDatae = value;
					this.SendPropertyChanged("VacateNetworkDatae");
					this.OnVacateNetworkDataeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_VacateE1", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.VacateE1s.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.VacateE1s.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VacateSpecialWire")]
	public partial class VacateSpecialWire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RequestID;
		
		private System.Nullable<long> _PostContactID;
		
		private System.Nullable<long> _CabinetInputID;
		
		private long _BuchtID;
		
		private System.Nullable<long> _OtherBuchtID;
		
		private int _SwitchPortID;
		
		private System.Nullable<long> _OldInstallAddressID;
		
		private System.Nullable<long> _OldCorrespondenceAddressID;
		
		private System.Nullable<long> _OldCustomerID;
		
		private System.Nullable<System.DateTime> _VacateDate;
		
		private System.Nullable<int> _SpecialTypeID;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<SwitchPort> _SwitchPort;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    partial void OnCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnCabinetInputIDChanged();
    partial void OnBuchtIDChanging(long value);
    partial void OnBuchtIDChanged();
    partial void OnOtherBuchtIDChanging(System.Nullable<long> value);
    partial void OnOtherBuchtIDChanged();
    partial void OnSwitchPortIDChanging(int value);
    partial void OnSwitchPortIDChanged();
    partial void OnOldInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnOldInstallAddressIDChanged();
    partial void OnOldCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnOldCorrespondenceAddressIDChanged();
    partial void OnOldCustomerIDChanging(System.Nullable<long> value);
    partial void OnOldCustomerIDChanged();
    partial void OnVacateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVacateDateChanged();
    partial void OnSpecialTypeIDChanging(System.Nullable<int> value);
    partial void OnSpecialTypeIDChanged();
    #endregion
		
		public VacateSpecialWire()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Bucht = default(EntityRef<Bucht>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._PostContact = default(EntityRef<PostContact>);
			this._Request = default(EntityRef<Request>);
			this._SwitchPort = default(EntityRef<SwitchPort>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt")]
		public System.Nullable<long> CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt NOT NULL")]
		public long BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtID", DbType="BigInt")]
		public System.Nullable<long> OtherBuchtID
		{
			get
			{
				return this._OtherBuchtID;
			}
			set
			{
				if ((this._OtherBuchtID != value))
				{
					this.OnOtherBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OtherBuchtID = value;
					this.SendPropertyChanged("OtherBuchtID");
					this.OnOtherBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchPortID", DbType="Int NOT NULL")]
		public int SwitchPortID
		{
			get
			{
				return this._SwitchPortID;
			}
			set
			{
				if ((this._SwitchPortID != value))
				{
					if (this._SwitchPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSwitchPortIDChanging(value);
					this.SendPropertyChanging();
					this._SwitchPortID = value;
					this.SendPropertyChanged("SwitchPortID");
					this.OnSwitchPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInstallAddressID", DbType="BigInt")]
		public System.Nullable<long> OldInstallAddressID
		{
			get
			{
				return this._OldInstallAddressID;
			}
			set
			{
				if ((this._OldInstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._OldInstallAddressID = value;
					this.SendPropertyChanged("OldInstallAddressID");
					this.OnOldInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> OldCorrespondenceAddressID
		{
			get
			{
				return this._OldCorrespondenceAddressID;
			}
			set
			{
				if ((this._OldCorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._OldCorrespondenceAddressID = value;
					this.SendPropertyChanged("OldCorrespondenceAddressID");
					this.OnOldCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCustomerID", DbType="BigInt")]
		public System.Nullable<long> OldCustomerID
		{
			get
			{
				return this._OldCustomerID;
			}
			set
			{
				if ((this._OldCustomerID != value))
				{
					this.OnOldCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._OldCustomerID = value;
					this.SendPropertyChanged("OldCustomerID");
					this.OnOldCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacateDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> VacateDate
		{
			get
			{
				return this._VacateDate;
			}
			set
			{
				if ((this._VacateDate != value))
				{
					this.OnVacateDateChanging(value);
					this.SendPropertyChanging();
					this._VacateDate = value;
					this.SendPropertyChanged("VacateDate");
					this.OnVacateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialTypeID", DbType="Int")]
		public System.Nullable<int> SpecialTypeID
		{
			get
			{
				return this._SpecialTypeID;
			}
			set
			{
				if ((this._SpecialTypeID != value))
				{
					this.OnSpecialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialTypeID = value;
					this.SendPropertyChanged("SpecialTypeID");
					this.OnSpecialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_VacateSpecialWire", Storage="_Address", ThisKey="OldInstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.VacateSpecialWires.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWires.Add(this);
						this._OldInstallAddressID = value.ID;
					}
					else
					{
						this._OldInstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_VacateSpecialWire1", Storage="_Address1", ThisKey="OldCorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.VacateSpecialWires1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWires1.Add(this);
						this._OldCorrespondenceAddressID = value.ID;
					}
					else
					{
						this._OldCorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_VacateSpecialWire", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.VacateSpecialWires.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWires.Add(this);
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_VacateSpecialWire", Storage="_CabinetInput", ThisKey="CabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.VacateSpecialWires.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWires.Add(this);
						this._CabinetInputID = value.ID;
					}
					else
					{
						this._CabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_VacateSpecialWire", Storage="_PostContact", ThisKey="PostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.VacateSpecialWires.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWires.Add(this);
						this._PostContactID = value.ID;
					}
					else
					{
						this._PostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_VacateSpecialWire", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.VacateSpecialWire = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWire = this;
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SwitchPort_VacateSpecialWire", Storage="_SwitchPort", ThisKey="SwitchPortID", OtherKey="ID", IsForeignKey=true)]
		public SwitchPort SwitchPort
		{
			get
			{
				return this._SwitchPort.Entity;
			}
			set
			{
				SwitchPort previousValue = this._SwitchPort.Entity;
				if (((previousValue != value) 
							|| (this._SwitchPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SwitchPort.Entity = null;
						previousValue.VacateSpecialWires.Remove(this);
					}
					this._SwitchPort.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWires.Add(this);
						this._SwitchPortID = value.ID;
					}
					else
					{
						this._SwitchPortID = default(int);
					}
					this.SendPropertyChanged("SwitchPort");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VacateSpecialWirePoints")]
	public partial class VacateSpecialWirePoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private long _BuchtID;
		
		private int _CenterID;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Center> _Center;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnBuchtIDChanging(long value);
    partial void OnBuchtIDChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    #endregion
		
		public VacateSpecialWirePoint()
		{
			this._Bucht = default(EntityRef<Bucht>);
			this._Center = default(EntityRef<Center>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt NOT NULL")]
		public long BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_VacateSpecialWirePoint", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.VacateSpecialWirePoints.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWirePoints.Add(this);
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(long);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_VacateSpecialWirePoint", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.VacateSpecialWirePoints.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWirePoints.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_VacateSpecialWirePoint", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.VacateSpecialWirePoints.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.VacateSpecialWirePoints.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VerticalMDFColumn")]
	public partial class VerticalMDFColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _VerticalCloumnNo;
		
		private int _MDFFrameID;
		
		private EntitySet<VerticalMDFRow> _VerticalMDFRows;
		
		private EntityRef<MDFFrame> _MDFFrame;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVerticalCloumnNoChanging(int value);
    partial void OnVerticalCloumnNoChanged();
    partial void OnMDFFrameIDChanging(int value);
    partial void OnMDFFrameIDChanged();
    #endregion
		
		public VerticalMDFColumn()
		{
			this._VerticalMDFRows = new EntitySet<VerticalMDFRow>(new Action<VerticalMDFRow>(this.attach_VerticalMDFRows), new Action<VerticalMDFRow>(this.detach_VerticalMDFRows));
			this._MDFFrame = default(EntityRef<MDFFrame>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalCloumnNo", DbType="Int NOT NULL")]
		public int VerticalCloumnNo
		{
			get
			{
				return this._VerticalCloumnNo;
			}
			set
			{
				if ((this._VerticalCloumnNo != value))
				{
					this.OnVerticalCloumnNoChanging(value);
					this.SendPropertyChanging();
					this._VerticalCloumnNo = value;
					this.SendPropertyChanged("VerticalCloumnNo");
					this.OnVerticalCloumnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFFrameID", DbType="Int NOT NULL")]
		public int MDFFrameID
		{
			get
			{
				return this._MDFFrameID;
			}
			set
			{
				if ((this._MDFFrameID != value))
				{
					if (this._MDFFrame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDFFrameIDChanging(value);
					this.SendPropertyChanging();
					this._MDFFrameID = value;
					this.SendPropertyChanged("MDFFrameID");
					this.OnMDFFrameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VerticalMDFColumn_VerticalMDFRow", Storage="_VerticalMDFRows", ThisKey="ID", OtherKey="VerticalMDFColumnID")]
		public EntitySet<VerticalMDFRow> VerticalMDFRows
		{
			get
			{
				return this._VerticalMDFRows;
			}
			set
			{
				this._VerticalMDFRows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MDFFrame_VerticalMDFColumn", Storage="_MDFFrame", ThisKey="MDFFrameID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MDFFrame MDFFrame
		{
			get
			{
				return this._MDFFrame.Entity;
			}
			set
			{
				MDFFrame previousValue = this._MDFFrame.Entity;
				if (((previousValue != value) 
							|| (this._MDFFrame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MDFFrame.Entity = null;
						previousValue.VerticalMDFColumns.Remove(this);
					}
					this._MDFFrame.Entity = value;
					if ((value != null))
					{
						value.VerticalMDFColumns.Add(this);
						this._MDFFrameID = value.ID;
					}
					else
					{
						this._MDFFrameID = default(int);
					}
					this.SendPropertyChanged("MDFFrame");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VerticalMDFRows(VerticalMDFRow entity)
		{
			this.SendPropertyChanging();
			entity.VerticalMDFColumn = this;
		}
		
		private void detach_VerticalMDFRows(VerticalMDFRow entity)
		{
			this.SendPropertyChanging();
			entity.VerticalMDFColumn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VerticalMDFRow")]
	public partial class VerticalMDFRow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _VerticalMDFColumnID;
		
		private int _VerticalRowNo;
		
		private int _RowCapacity;
		
		private EntitySet<Bucht> _Buchts;
		
		private EntityRef<VerticalMDFColumn> _VerticalMDFColumn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVerticalMDFColumnIDChanging(int value);
    partial void OnVerticalMDFColumnIDChanged();
    partial void OnVerticalRowNoChanging(int value);
    partial void OnVerticalRowNoChanged();
    partial void OnRowCapacityChanging(int value);
    partial void OnRowCapacityChanged();
    #endregion
		
		public VerticalMDFRow()
		{
			this._Buchts = new EntitySet<Bucht>(new Action<Bucht>(this.attach_Buchts), new Action<Bucht>(this.detach_Buchts));
			this._VerticalMDFColumn = default(EntityRef<VerticalMDFColumn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalMDFColumnID", DbType="Int NOT NULL")]
		public int VerticalMDFColumnID
		{
			get
			{
				return this._VerticalMDFColumnID;
			}
			set
			{
				if ((this._VerticalMDFColumnID != value))
				{
					if (this._VerticalMDFColumn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVerticalMDFColumnIDChanging(value);
					this.SendPropertyChanging();
					this._VerticalMDFColumnID = value;
					this.SendPropertyChanged("VerticalMDFColumnID");
					this.OnVerticalMDFColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalRowNo", DbType="Int NOT NULL")]
		public int VerticalRowNo
		{
			get
			{
				return this._VerticalRowNo;
			}
			set
			{
				if ((this._VerticalRowNo != value))
				{
					this.OnVerticalRowNoChanging(value);
					this.SendPropertyChanging();
					this._VerticalRowNo = value;
					this.SendPropertyChanged("VerticalRowNo");
					this.OnVerticalRowNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowCapacity", DbType="Int NOT NULL")]
		public int RowCapacity
		{
			get
			{
				return this._RowCapacity;
			}
			set
			{
				if ((this._RowCapacity != value))
				{
					this.OnRowCapacityChanging(value);
					this.SendPropertyChanging();
					this._RowCapacity = value;
					this.SendPropertyChanged("RowCapacity");
					this.OnRowCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VerticalMDFRow_Bucht", Storage="_Buchts", ThisKey="ID", OtherKey="MDFRowID")]
		public EntitySet<Bucht> Buchts
		{
			get
			{
				return this._Buchts;
			}
			set
			{
				this._Buchts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VerticalMDFColumn_VerticalMDFRow", Storage="_VerticalMDFColumn", ThisKey="VerticalMDFColumnID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public VerticalMDFColumn VerticalMDFColumn
		{
			get
			{
				return this._VerticalMDFColumn.Entity;
			}
			set
			{
				VerticalMDFColumn previousValue = this._VerticalMDFColumn.Entity;
				if (((previousValue != value) 
							|| (this._VerticalMDFColumn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VerticalMDFColumn.Entity = null;
						previousValue.VerticalMDFRows.Remove(this);
					}
					this._VerticalMDFColumn.Entity = value;
					if ((value != null))
					{
						value.VerticalMDFRows.Add(this);
						this._VerticalMDFColumnID = value.ID;
					}
					else
					{
						this._VerticalMDFColumnID = default(int);
					}
					this.SendPropertyChanged("VerticalMDFColumn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.VerticalMDFRow = this;
		}
		
		private void detach_Buchts(Bucht entity)
		{
			this.SendPropertyChanging();
			entity.VerticalMDFRow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitAddress")]
	public partial class VisitAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _AddressID;
		
		private long _RequestID;
		
		private System.Nullable<int> _RelatedVisitID;
		
		private System.DateTime _VisitDate;
		
		private string _VisitHour;
		
		private System.Nullable<int> _AirCableMeter;
		
		private bool _IsOutBound;
		
		private System.Nullable<int> _OutBoundMeter;
		
		private System.Nullable<System.DateTime> _OutBoundEstablishDate;
		
		private string _CommentStatus;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<int> _SixMeterMasts;
		
		private System.Nullable<int> _EightMeterMasts;
		
		private System.Nullable<int> _ThroughWidth;
		
		private System.Nullable<int> _CrossPostID;
		
		private byte _Status;
		
		private bool _ConfirmInvestigatePossibility;
		
		private System.Nullable<long> _CableMeter;
		
		private EntitySet<SugesstionPossibility> _SugesstionPossibilities;
		
		private EntitySet<VisitAddress> _VisitAddresses;
		
		private EntitySet<VisitPlacesCabinetAndPost> _VisitPlacesCabinetAndPosts;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<VisitAddress> _VisitAddress1;
		
		private EntityRef<Address> _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAddressIDChanging(long value);
    partial void OnAddressIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnRelatedVisitIDChanging(System.Nullable<int> value);
    partial void OnRelatedVisitIDChanged();
    partial void OnVisitDateChanging(System.DateTime value);
    partial void OnVisitDateChanged();
    partial void OnVisitHourChanging(string value);
    partial void OnVisitHourChanged();
    partial void OnAirCableMeterChanging(System.Nullable<int> value);
    partial void OnAirCableMeterChanged();
    partial void OnIsOutBoundChanging(bool value);
    partial void OnIsOutBoundChanged();
    partial void OnOutBoundMeterChanging(System.Nullable<int> value);
    partial void OnOutBoundMeterChanged();
    partial void OnOutBoundEstablishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOutBoundEstablishDateChanged();
    partial void OnCommentStatusChanging(string value);
    partial void OnCommentStatusChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnSixMeterMastsChanging(System.Nullable<int> value);
    partial void OnSixMeterMastsChanged();
    partial void OnEightMeterMastsChanging(System.Nullable<int> value);
    partial void OnEightMeterMastsChanged();
    partial void OnThroughWidthChanging(System.Nullable<int> value);
    partial void OnThroughWidthChanged();
    partial void OnCrossPostIDChanging(System.Nullable<int> value);
    partial void OnCrossPostIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnConfirmInvestigatePossibilityChanging(bool value);
    partial void OnConfirmInvestigatePossibilityChanged();
    partial void OnCableMeterChanging(System.Nullable<long> value);
    partial void OnCableMeterChanged();
    #endregion
		
		public VisitAddress()
		{
			this._SugesstionPossibilities = new EntitySet<SugesstionPossibility>(new Action<SugesstionPossibility>(this.attach_SugesstionPossibilities), new Action<SugesstionPossibility>(this.detach_SugesstionPossibilities));
			this._VisitAddresses = new EntitySet<VisitAddress>(new Action<VisitAddress>(this.attach_VisitAddresses), new Action<VisitAddress>(this.detach_VisitAddresses));
			this._VisitPlacesCabinetAndPosts = new EntitySet<VisitPlacesCabinetAndPost>(new Action<VisitPlacesCabinetAndPost>(this.attach_VisitPlacesCabinetAndPosts), new Action<VisitPlacesCabinetAndPost>(this.detach_VisitPlacesCabinetAndPosts));
			this._Post = default(EntityRef<Post>);
			this._Request = default(EntityRef<Request>);
			this._VisitAddress1 = default(EntityRef<VisitAddress>);
			this._Address = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="BigInt NOT NULL")]
		public long AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedVisitID", DbType="Int")]
		public System.Nullable<int> RelatedVisitID
		{
			get
			{
				return this._RelatedVisitID;
			}
			set
			{
				if ((this._RelatedVisitID != value))
				{
					if (this._VisitAddress1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelatedVisitIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedVisitID = value;
					this.SendPropertyChanged("RelatedVisitID");
					this.OnRelatedVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this.OnVisitDateChanging(value);
					this.SendPropertyChanging();
					this._VisitDate = value;
					this.SendPropertyChanged("VisitDate");
					this.OnVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitHour", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VisitHour
		{
			get
			{
				return this._VisitHour;
			}
			set
			{
				if ((this._VisitHour != value))
				{
					this.OnVisitHourChanging(value);
					this.SendPropertyChanging();
					this._VisitHour = value;
					this.SendPropertyChanged("VisitHour");
					this.OnVisitHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirCableMeter", DbType="Int")]
		public System.Nullable<int> AirCableMeter
		{
			get
			{
				return this._AirCableMeter;
			}
			set
			{
				if ((this._AirCableMeter != value))
				{
					this.OnAirCableMeterChanging(value);
					this.SendPropertyChanging();
					this._AirCableMeter = value;
					this.SendPropertyChanged("AirCableMeter");
					this.OnAirCableMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutBound", DbType="Bit NOT NULL")]
		public bool IsOutBound
		{
			get
			{
				return this._IsOutBound;
			}
			set
			{
				if ((this._IsOutBound != value))
				{
					this.OnIsOutBoundChanging(value);
					this.SendPropertyChanging();
					this._IsOutBound = value;
					this.SendPropertyChanged("IsOutBound");
					this.OnIsOutBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutBoundMeter", DbType="Int")]
		public System.Nullable<int> OutBoundMeter
		{
			get
			{
				return this._OutBoundMeter;
			}
			set
			{
				if ((this._OutBoundMeter != value))
				{
					this.OnOutBoundMeterChanging(value);
					this.SendPropertyChanging();
					this._OutBoundMeter = value;
					this.SendPropertyChanged("OutBoundMeter");
					this.OnOutBoundMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutBoundEstablishDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OutBoundEstablishDate
		{
			get
			{
				return this._OutBoundEstablishDate;
			}
			set
			{
				if ((this._OutBoundEstablishDate != value))
				{
					this.OnOutBoundEstablishDateChanging(value);
					this.SendPropertyChanging();
					this._OutBoundEstablishDate = value;
					this.SendPropertyChanged("OutBoundEstablishDate");
					this.OnOutBoundEstablishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentStatus", DbType="NVarChar(500)")]
		public string CommentStatus
		{
			get
			{
				return this._CommentStatus;
			}
			set
			{
				if ((this._CommentStatus != value))
				{
					this.OnCommentStatusChanging(value);
					this.SendPropertyChanging();
					this._CommentStatus = value;
					this.SendPropertyChanged("CommentStatus");
					this.OnCommentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SixMeterMasts", DbType="Int")]
		public System.Nullable<int> SixMeterMasts
		{
			get
			{
				return this._SixMeterMasts;
			}
			set
			{
				if ((this._SixMeterMasts != value))
				{
					this.OnSixMeterMastsChanging(value);
					this.SendPropertyChanging();
					this._SixMeterMasts = value;
					this.SendPropertyChanged("SixMeterMasts");
					this.OnSixMeterMastsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EightMeterMasts", DbType="Int")]
		public System.Nullable<int> EightMeterMasts
		{
			get
			{
				return this._EightMeterMasts;
			}
			set
			{
				if ((this._EightMeterMasts != value))
				{
					this.OnEightMeterMastsChanging(value);
					this.SendPropertyChanging();
					this._EightMeterMasts = value;
					this.SendPropertyChanged("EightMeterMasts");
					this.OnEightMeterMastsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThroughWidth", DbType="Int")]
		public System.Nullable<int> ThroughWidth
		{
			get
			{
				return this._ThroughWidth;
			}
			set
			{
				if ((this._ThroughWidth != value))
				{
					this.OnThroughWidthChanging(value);
					this.SendPropertyChanging();
					this._ThroughWidth = value;
					this.SendPropertyChanged("ThroughWidth");
					this.OnThroughWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrossPostID", DbType="Int")]
		public System.Nullable<int> CrossPostID
		{
			get
			{
				return this._CrossPostID;
			}
			set
			{
				if ((this._CrossPostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrossPostIDChanging(value);
					this.SendPropertyChanging();
					this._CrossPostID = value;
					this.SendPropertyChanged("CrossPostID");
					this.OnCrossPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmInvestigatePossibility", DbType="Bit NOT NULL")]
		public bool ConfirmInvestigatePossibility
		{
			get
			{
				return this._ConfirmInvestigatePossibility;
			}
			set
			{
				if ((this._ConfirmInvestigatePossibility != value))
				{
					this.OnConfirmInvestigatePossibilityChanging(value);
					this.SendPropertyChanging();
					this._ConfirmInvestigatePossibility = value;
					this.SendPropertyChanged("ConfirmInvestigatePossibility");
					this.OnConfirmInvestigatePossibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableMeter", DbType="BigInt")]
		public System.Nullable<long> CableMeter
		{
			get
			{
				return this._CableMeter;
			}
			set
			{
				if ((this._CableMeter != value))
				{
					this.OnCableMeterChanging(value);
					this.SendPropertyChanging();
					this._CableMeter = value;
					this.SendPropertyChanged("CableMeter");
					this.OnCableMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitAddress_SugesstionPossibility", Storage="_SugesstionPossibilities", ThisKey="ID", OtherKey="VisitAddressID")]
		public EntitySet<SugesstionPossibility> SugesstionPossibilities
		{
			get
			{
				return this._SugesstionPossibilities;
			}
			set
			{
				this._SugesstionPossibilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitAddress_VisitAddress", Storage="_VisitAddresses", ThisKey="ID", OtherKey="RelatedVisitID")]
		public EntitySet<VisitAddress> VisitAddresses
		{
			get
			{
				return this._VisitAddresses;
			}
			set
			{
				this._VisitAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitAddress_VisitPlacesCabinetAndPost", Storage="_VisitPlacesCabinetAndPosts", ThisKey="ID", OtherKey="VisitAddressID")]
		public EntitySet<VisitPlacesCabinetAndPost> VisitPlacesCabinetAndPosts
		{
			get
			{
				return this._VisitPlacesCabinetAndPosts;
			}
			set
			{
				this._VisitPlacesCabinetAndPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_VisitAddress", Storage="_Post", ThisKey="CrossPostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.VisitAddresses.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.VisitAddresses.Add(this);
						this._CrossPostID = value.ID;
					}
					else
					{
						this._CrossPostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_VisitAddress", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.VisitAddresses.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.VisitAddresses.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitAddress_VisitAddress", Storage="_VisitAddress1", ThisKey="RelatedVisitID", OtherKey="ID", IsForeignKey=true)]
		public VisitAddress VisitAddress1
		{
			get
			{
				return this._VisitAddress1.Entity;
			}
			set
			{
				VisitAddress previousValue = this._VisitAddress1.Entity;
				if (((previousValue != value) 
							|| (this._VisitAddress1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VisitAddress1.Entity = null;
						previousValue.VisitAddresses.Remove(this);
					}
					this._VisitAddress1.Entity = value;
					if ((value != null))
					{
						value.VisitAddresses.Add(this);
						this._RelatedVisitID = value.ID;
					}
					else
					{
						this._RelatedVisitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("VisitAddress1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_VisitAddress", Storage="_Address", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.VisitAddresses.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.VisitAddresses.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(long);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SugesstionPossibilities(SugesstionPossibility entity)
		{
			this.SendPropertyChanging();
			entity.VisitAddress = this;
		}
		
		private void detach_SugesstionPossibilities(SugesstionPossibility entity)
		{
			this.SendPropertyChanging();
			entity.VisitAddress = null;
		}
		
		private void attach_VisitAddresses(VisitAddress entity)
		{
			this.SendPropertyChanging();
			entity.VisitAddress1 = this;
		}
		
		private void detach_VisitAddresses(VisitAddress entity)
		{
			this.SendPropertyChanging();
			entity.VisitAddress1 = null;
		}
		
		private void attach_VisitPlacesCabinetAndPosts(VisitPlacesCabinetAndPost entity)
		{
			this.SendPropertyChanging();
			entity.VisitAddress = this;
		}
		
		private void detach_VisitPlacesCabinetAndPosts(VisitPlacesCabinetAndPost entity)
		{
			this.SendPropertyChanging();
			entity.VisitAddress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitPlacesCabinetAndPost")]
	public partial class VisitPlacesCabinetAndPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _VisitAddressID;
		
		private int _CabinetID;
		
		private int _PostID;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<VisitAddress> _VisitAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVisitAddressIDChanging(int value);
    partial void OnVisitAddressIDChanged();
    partial void OnCabinetIDChanging(int value);
    partial void OnCabinetIDChanged();
    partial void OnPostIDChanging(int value);
    partial void OnPostIDChanged();
    #endregion
		
		public VisitPlacesCabinetAndPost()
		{
			this._Cabinet = default(EntityRef<Cabinet>);
			this._Post = default(EntityRef<Post>);
			this._VisitAddress = default(EntityRef<VisitAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitAddressID", DbType="Int NOT NULL")]
		public int VisitAddressID
		{
			get
			{
				return this._VisitAddressID;
			}
			set
			{
				if ((this._VisitAddressID != value))
				{
					if (this._VisitAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitAddressIDChanging(value);
					this.SendPropertyChanging();
					this._VisitAddressID = value;
					this.SendPropertyChanged("VisitAddressID");
					this.OnVisitAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int NOT NULL")]
		public int CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int NOT NULL")]
		public int PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_VisitPlacesCabinetAndPost", Storage="_Cabinet", ThisKey="CabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.VisitPlacesCabinetAndPosts.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.VisitPlacesCabinetAndPosts.Add(this);
						this._CabinetID = value.ID;
					}
					else
					{
						this._CabinetID = default(int);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_VisitPlacesCabinetAndPost", Storage="_Post", ThisKey="PostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.VisitPlacesCabinetAndPosts.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.VisitPlacesCabinetAndPosts.Add(this);
						this._PostID = value.ID;
					}
					else
					{
						this._PostID = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VisitAddress_VisitPlacesCabinetAndPost", Storage="_VisitAddress", ThisKey="VisitAddressID", OtherKey="ID", IsForeignKey=true)]
		public VisitAddress VisitAddress
		{
			get
			{
				return this._VisitAddress.Entity;
			}
			set
			{
				VisitAddress previousValue = this._VisitAddress.Entity;
				if (((previousValue != value) 
							|| (this._VisitAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VisitAddress.Entity = null;
						previousValue.VisitPlacesCabinetAndPosts.Remove(this);
					}
					this._VisitAddress.Entity = value;
					if ((value != null))
					{
						value.VisitPlacesCabinetAndPosts.Add(this);
						this._VisitAddressID = value.ID;
					}
					else
					{
						this._VisitAddressID = default(int);
					}
					this.SendPropertyChanged("VisitAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WaitingList")]
	public partial class WaitingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private System.Nullable<int> _ReasonID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<int> _CreatorUserID;
		
		private System.Nullable<System.DateTime> _ExitDate;
		
		private System.Nullable<int> _ExitUserID;
		
		private System.Nullable<int> _StatusID;
		
		private string _Description;
		
		private System.Nullable<byte> _WaitingListType;
		
		private bool _Status;
		
		private EntityRef<InvestigatePossibilityWaitinglist> _InvestigatePossibilityWaitinglist;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Status> _Status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnReasonIDChanging(System.Nullable<int> value);
    partial void OnReasonIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnExitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExitDateChanged();
    partial void OnExitUserIDChanging(System.Nullable<int> value);
    partial void OnExitUserIDChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWaitingListTypeChanging(System.Nullable<byte> value);
    partial void OnWaitingListTypeChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public WaitingList()
		{
			this._InvestigatePossibilityWaitinglist = default(EntityRef<InvestigatePossibilityWaitinglist>);
			this._Request = default(EntityRef<Request>);
			this._Status1 = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="Int")]
		public System.Nullable<int> ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExitDate
		{
			get
			{
				return this._ExitDate;
			}
			set
			{
				if ((this._ExitDate != value))
				{
					this.OnExitDateChanging(value);
					this.SendPropertyChanging();
					this._ExitDate = value;
					this.SendPropertyChanged("ExitDate");
					this.OnExitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitUserID", DbType="Int")]
		public System.Nullable<int> ExitUserID
		{
			get
			{
				return this._ExitUserID;
			}
			set
			{
				if ((this._ExitUserID != value))
				{
					this.OnExitUserIDChanging(value);
					this.SendPropertyChanging();
					this._ExitUserID = value;
					this.SendPropertyChanged("ExitUserID");
					this.OnExitUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingListType", DbType="TinyInt")]
		public System.Nullable<byte> WaitingListType
		{
			get
			{
				return this._WaitingListType;
			}
			set
			{
				if ((this._WaitingListType != value))
				{
					this.OnWaitingListTypeChanging(value);
					this.SendPropertyChanging();
					this._WaitingListType = value;
					this.SendPropertyChanged("WaitingListType");
					this.OnWaitingListTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WaitingList_InvestigatePossibilityWaitinglist", Storage="_InvestigatePossibilityWaitinglist", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public InvestigatePossibilityWaitinglist InvestigatePossibilityWaitinglist
		{
			get
			{
				return this._InvestigatePossibilityWaitinglist.Entity;
			}
			set
			{
				InvestigatePossibilityWaitinglist previousValue = this._InvestigatePossibilityWaitinglist.Entity;
				if (((previousValue != value) 
							|| (this._InvestigatePossibilityWaitinglist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvestigatePossibilityWaitinglist.Entity = null;
						previousValue.WaitingList = null;
					}
					this._InvestigatePossibilityWaitinglist.Entity = value;
					if ((value != null))
					{
						value.WaitingList = this;
					}
					this.SendPropertyChanged("InvestigatePossibilityWaitinglist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WaitingList", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.WaitingLists.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.WaitingLists.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WaitingList", Storage="_Status1", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.WaitingLists.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.WaitingLists.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WaitingListReason")]
	public partial class WaitingListReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RequestTypeID;
		
		private string _Title;
		
		private EntityRef<RequestType> _RequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public WaitingListReason()
		{
			this._RequestType = default(EntityRef<RequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_WaitingListReason", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.WaitingListReasons.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.WaitingListReasons.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(int);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarningHistory")]
	public partial class WarningHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _TelephonNo;
		
		private byte _Type;
		
		private System.DateTime _Date;
		
		private string _Time;
		
		private System.DateTime _InsertDate;
		
		private string _ArrestReference;
		
		private string _ArrestLetterNo;
		
		private System.Nullable<System.DateTime> _ArrestLetterNoDate;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTelephonNoChanging(long value);
    partial void OnTelephonNoChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnArrestReferenceChanging(string value);
    partial void OnArrestReferenceChanged();
    partial void OnArrestLetterNoChanging(string value);
    partial void OnArrestLetterNoChanged();
    partial void OnArrestLetterNoDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrestLetterNoDateChanged();
    #endregion
		
		public WarningHistory()
		{
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephonNo", DbType="BigInt NOT NULL")]
		public long TelephonNo
		{
			get
			{
				return this._TelephonNo;
			}
			set
			{
				if ((this._TelephonNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephonNoChanging(value);
					this.SendPropertyChanging();
					this._TelephonNo = value;
					this.SendPropertyChanged("TelephonNo");
					this.OnTelephonNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrestReference", DbType="NVarChar(100)")]
		public string ArrestReference
		{
			get
			{
				return this._ArrestReference;
			}
			set
			{
				if ((this._ArrestReference != value))
				{
					this.OnArrestReferenceChanging(value);
					this.SendPropertyChanging();
					this._ArrestReference = value;
					this.SendPropertyChanged("ArrestReference");
					this.OnArrestReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrestLetterNo", DbType="NVarChar(20)")]
		public string ArrestLetterNo
		{
			get
			{
				return this._ArrestLetterNo;
			}
			set
			{
				if ((this._ArrestLetterNo != value))
				{
					this.OnArrestLetterNoChanging(value);
					this.SendPropertyChanging();
					this._ArrestLetterNo = value;
					this.SendPropertyChanged("ArrestLetterNo");
					this.OnArrestLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrestLetterNoDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ArrestLetterNoDate
		{
			get
			{
				return this._ArrestLetterNoDate;
			}
			set
			{
				if ((this._ArrestLetterNoDate != value))
				{
					this.OnArrestLetterNoDateChanging(value);
					this.SendPropertyChanging();
					this._ArrestLetterNoDate = value;
					this.SendPropertyChanged("ArrestLetterNoDate");
					this.OnArrestLetterNoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_WarningHistory", Storage="_Telephone", ThisKey="TelephonNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.WarningHistories.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.WarningHistories.Add(this);
						this._TelephonNo = value.TelephoneNo;
					}
					else
					{
						this._TelephonNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarningMessage")]
	public partial class WarningMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Message;
		
		private byte _WarningType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnWarningTypeChanging(byte value);
    partial void OnWarningTypeChanged();
    #endregion
		
		public WarningMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningType", DbType="TinyInt NOT NULL")]
		public byte WarningType
		{
			get
			{
				return this._WarningType;
			}
			set
			{
				if ((this._WarningType != value))
				{
					this.OnWarningTypeChanging(value);
					this.SendPropertyChanging();
					this._WarningType = value;
					this.SendPropertyChanged("WarningType");
					this.OnWarningTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wireless")]
	public partial class Wireless : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private System.Nullable<long> _CustomerOwnerID;
		
		private string _CustomerOwnerName;
		
		private System.Nullable<byte> _CustomerOwnerStatus;
		
		private System.Nullable<int> _CustomerTypeID;
		
		private System.Nullable<int> _TariffID;
		
		private string _LicenseLetterNo;
		
		private System.Nullable<byte> _ServiceType;
		
		private System.Nullable<byte> _RegistrationProjectType;
		
		private System.Nullable<int> _PAPInfoID;
		
		private System.Nullable<long> _WirelessPortID;
		
		private System.Nullable<bool> _HasIP;
		
		private System.Nullable<long> _IPStaticID;
		
		private System.Nullable<long> _GroupIPStaticID;
		
		private System.Nullable<int> _ModemID;
		
		private string _UserID;
		
		private string _UserName;
		
		private string _OrginalPassword;
		
		private string _HashPassword;
		
		private string _AAAPassword;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private System.Nullable<System.DateTime> _ExpDate;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<bool> _WasPCM;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<byte> _WirelessType;
		
		private EntityRef<PAPInfo> _PAPInfo;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<ADSLCustomerType> _ADSLCustomerType;
		
		private EntityRef<ADSLGroupIP> _ADSLGroupIP;
		
		private EntityRef<ADSLIP> _ADSLIP;
		
		private EntityRef<ADSLModemProperty> _ADSLModemProperty;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnCustomerOwnerIDChanging(System.Nullable<long> value);
    partial void OnCustomerOwnerIDChanged();
    partial void OnCustomerOwnerNameChanging(string value);
    partial void OnCustomerOwnerNameChanged();
    partial void OnCustomerOwnerStatusChanging(System.Nullable<byte> value);
    partial void OnCustomerOwnerStatusChanged();
    partial void OnCustomerTypeIDChanging(System.Nullable<int> value);
    partial void OnCustomerTypeIDChanged();
    partial void OnTariffIDChanging(System.Nullable<int> value);
    partial void OnTariffIDChanged();
    partial void OnLicenseLetterNoChanging(string value);
    partial void OnLicenseLetterNoChanged();
    partial void OnServiceTypeChanging(System.Nullable<byte> value);
    partial void OnServiceTypeChanged();
    partial void OnRegistrationProjectTypeChanging(System.Nullable<byte> value);
    partial void OnRegistrationProjectTypeChanged();
    partial void OnPAPInfoIDChanging(System.Nullable<int> value);
    partial void OnPAPInfoIDChanged();
    partial void OnWirelessPortIDChanging(System.Nullable<long> value);
    partial void OnWirelessPortIDChanged();
    partial void OnHasIPChanging(System.Nullable<bool> value);
    partial void OnHasIPChanged();
    partial void OnIPStaticIDChanging(System.Nullable<long> value);
    partial void OnIPStaticIDChanged();
    partial void OnGroupIPStaticIDChanging(System.Nullable<long> value);
    partial void OnGroupIPStaticIDChanged();
    partial void OnModemIDChanging(System.Nullable<int> value);
    partial void OnModemIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnOrginalPasswordChanging(string value);
    partial void OnOrginalPasswordChanged();
    partial void OnHashPasswordChanging(string value);
    partial void OnHashPasswordChanged();
    partial void OnAAAPasswordChanging(string value);
    partial void OnAAAPasswordChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpDateChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnWasPCMChanging(System.Nullable<bool> value);
    partial void OnWasPCMChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnWirelessTypeChanging(System.Nullable<byte> value);
    partial void OnWirelessTypeChanged();
    #endregion
		
		public Wireless()
		{
			this._PAPInfo = default(EntityRef<PAPInfo>);
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._ADSLCustomerType = default(EntityRef<ADSLCustomerType>);
			this._ADSLGroupIP = default(EntityRef<ADSLGroupIP>);
			this._ADSLIP = default(EntityRef<ADSLIP>);
			this._ADSLModemProperty = default(EntityRef<ADSLModemProperty>);
			this._ADSLService = default(EntityRef<ADSLService>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerID", DbType="BigInt")]
		public System.Nullable<long> CustomerOwnerID
		{
			get
			{
				return this._CustomerOwnerID;
			}
			set
			{
				if ((this._CustomerOwnerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerID = value;
					this.SendPropertyChanged("CustomerOwnerID");
					this.OnCustomerOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerName", DbType="NVarChar(200)")]
		public string CustomerOwnerName
		{
			get
			{
				return this._CustomerOwnerName;
			}
			set
			{
				if ((this._CustomerOwnerName != value))
				{
					this.OnCustomerOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerName = value;
					this.SendPropertyChanged("CustomerOwnerName");
					this.OnCustomerOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerStatus", DbType="TinyInt")]
		public System.Nullable<byte> CustomerOwnerStatus
		{
			get
			{
				return this._CustomerOwnerStatus;
			}
			set
			{
				if ((this._CustomerOwnerStatus != value))
				{
					this.OnCustomerOwnerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerStatus = value;
					this.SendPropertyChanged("CustomerOwnerStatus");
					this.OnCustomerOwnerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int")]
		public System.Nullable<int> CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._ADSLCustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="Int")]
		public System.Nullable<int> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTariffIDChanging(value);
					this.SendPropertyChanging();
					this._TariffID = value;
					this.SendPropertyChanged("TariffID");
					this.OnTariffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseLetterNo", DbType="NVarChar(50)")]
		public string LicenseLetterNo
		{
			get
			{
				return this._LicenseLetterNo;
			}
			set
			{
				if ((this._LicenseLetterNo != value))
				{
					this.OnLicenseLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseLetterNo = value;
					this.SendPropertyChanged("LicenseLetterNo");
					this.OnLicenseLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="TinyInt")]
		public System.Nullable<byte> ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationProjectType", DbType="TinyInt")]
		public System.Nullable<byte> RegistrationProjectType
		{
			get
			{
				return this._RegistrationProjectType;
			}
			set
			{
				if ((this._RegistrationProjectType != value))
				{
					this.OnRegistrationProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationProjectType = value;
					this.SendPropertyChanged("RegistrationProjectType");
					this.OnRegistrationProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAPInfoID", DbType="Int")]
		public System.Nullable<int> PAPInfoID
		{
			get
			{
				return this._PAPInfoID;
			}
			set
			{
				if ((this._PAPInfoID != value))
				{
					if (this._PAPInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAPInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PAPInfoID = value;
					this.SendPropertyChanged("PAPInfoID");
					this.OnPAPInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WirelessPortID", DbType="BigInt")]
		public System.Nullable<long> WirelessPortID
		{
			get
			{
				return this._WirelessPortID;
			}
			set
			{
				if ((this._WirelessPortID != value))
				{
					this.OnWirelessPortIDChanging(value);
					this.SendPropertyChanging();
					this._WirelessPortID = value;
					this.SendPropertyChanged("WirelessPortID");
					this.OnWirelessPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIP", DbType="Bit")]
		public System.Nullable<bool> HasIP
		{
			get
			{
				return this._HasIP;
			}
			set
			{
				if ((this._HasIP != value))
				{
					this.OnHasIPChanging(value);
					this.SendPropertyChanging();
					this._HasIP = value;
					this.SendPropertyChanged("HasIP");
					this.OnHasIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPStaticID", DbType="BigInt")]
		public System.Nullable<long> IPStaticID
		{
			get
			{
				return this._IPStaticID;
			}
			set
			{
				if ((this._IPStaticID != value))
				{
					if (this._ADSLIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._IPStaticID = value;
					this.SendPropertyChanged("IPStaticID");
					this.OnIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupIPStaticID", DbType="BigInt")]
		public System.Nullable<long> GroupIPStaticID
		{
			get
			{
				return this._GroupIPStaticID;
			}
			set
			{
				if ((this._GroupIPStaticID != value))
				{
					if (this._ADSLGroupIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._GroupIPStaticID = value;
					this.SendPropertyChanged("GroupIPStaticID");
					this.OnGroupIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemID", DbType="Int")]
		public System.Nullable<int> ModemID
		{
			get
			{
				return this._ModemID;
			}
			set
			{
				if ((this._ModemID != value))
				{
					if (this._ADSLModemProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModemIDChanging(value);
					this.SendPropertyChanging();
					this._ModemID = value;
					this.SendPropertyChanged("ModemID");
					this.OnModemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrginalPassword", DbType="NVarChar(50)")]
		public string OrginalPassword
		{
			get
			{
				return this._OrginalPassword;
			}
			set
			{
				if ((this._OrginalPassword != value))
				{
					this.OnOrginalPasswordChanging(value);
					this.SendPropertyChanging();
					this._OrginalPassword = value;
					this.SendPropertyChanged("OrginalPassword");
					this.OnOrginalPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashPassword", DbType="NVarChar(50)")]
		public string HashPassword
		{
			get
			{
				return this._HashPassword;
			}
			set
			{
				if ((this._HashPassword != value))
				{
					this.OnHashPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashPassword = value;
					this.SendPropertyChanged("HashPassword");
					this.OnHashPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAAPassword", DbType="NVarChar(50)")]
		public string AAAPassword
		{
			get
			{
				return this._AAAPassword;
			}
			set
			{
				if ((this._AAAPassword != value))
				{
					this.OnAAAPasswordChanging(value);
					this.SendPropertyChanging();
					this._AAAPassword = value;
					this.SendPropertyChanged("AAAPassword");
					this.OnAAAPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this.OnExpDateChanging(value);
					this.SendPropertyChanging();
					this._ExpDate = value;
					this.SendPropertyChanged("ExpDate");
					this.OnExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasPCM", DbType="Bit")]
		public System.Nullable<bool> WasPCM
		{
			get
			{
				return this._WasPCM;
			}
			set
			{
				if ((this._WasPCM != value))
				{
					this.OnWasPCMChanging(value);
					this.SendPropertyChanging();
					this._WasPCM = value;
					this.SendPropertyChanged("WasPCM");
					this.OnWasPCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WirelessType", DbType="TinyInt")]
		public System.Nullable<byte> WirelessType
		{
			get
			{
				return this._WirelessType;
			}
			set
			{
				if ((this._WirelessType != value))
				{
					this.OnWirelessTypeChanging(value);
					this.SendPropertyChanging();
					this._WirelessType = value;
					this.SendPropertyChanged("WirelessType");
					this.OnWirelessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAPInfo_Wireless", Storage="_PAPInfo", ThisKey="PAPInfoID", OtherKey="ID", IsForeignKey=true)]
		public PAPInfo PAPInfo
		{
			get
			{
				return this._PAPInfo.Entity;
			}
			set
			{
				PAPInfo previousValue = this._PAPInfo.Entity;
				if (((previousValue != value) 
							|| (this._PAPInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAPInfo.Entity = null;
						previousValue.Wirelesses.Remove(this);
					}
					this._PAPInfo.Entity = value;
					if ((value != null))
					{
						value.Wirelesses.Add(this);
						this._PAPInfoID = value.ID;
					}
					else
					{
						this._PAPInfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAPInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Wireless", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Wireless = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Wireless = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_Wireless", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.Wirelesses.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.Wirelesses.Add(this);
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerType_Wireless", Storage="_ADSLCustomerType", ThisKey="CustomerTypeID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerType ADSLCustomerType
		{
			get
			{
				return this._ADSLCustomerType.Entity;
			}
			set
			{
				ADSLCustomerType previousValue = this._ADSLCustomerType.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerType.Entity = null;
						previousValue.Wirelesses.Remove(this);
					}
					this._ADSLCustomerType.Entity = value;
					if ((value != null))
					{
						value.Wirelesses.Add(this);
						this._CustomerTypeID = value.ID;
					}
					else
					{
						this._CustomerTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_Wireless", Storage="_ADSLGroupIP", ThisKey="GroupIPStaticID", OtherKey="ID", IsForeignKey=true)]
		public ADSLGroupIP ADSLGroupIP
		{
			get
			{
				return this._ADSLGroupIP.Entity;
			}
			set
			{
				ADSLGroupIP previousValue = this._ADSLGroupIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLGroupIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLGroupIP.Entity = null;
						previousValue.Wirelesses.Remove(this);
					}
					this._ADSLGroupIP.Entity = value;
					if ((value != null))
					{
						value.Wirelesses.Add(this);
						this._GroupIPStaticID = value.ID;
					}
					else
					{
						this._GroupIPStaticID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLGroupIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_Wireless", Storage="_ADSLIP", ThisKey="IPStaticID", OtherKey="ID", IsForeignKey=true)]
		public ADSLIP ADSLIP
		{
			get
			{
				return this._ADSLIP.Entity;
			}
			set
			{
				ADSLIP previousValue = this._ADSLIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLIP.Entity = null;
						previousValue.Wirelesses.Remove(this);
					}
					this._ADSLIP.Entity = value;
					if ((value != null))
					{
						value.Wirelesses.Add(this);
						this._IPStaticID = value.ID;
					}
					else
					{
						this._IPStaticID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModemProperty_Wireless", Storage="_ADSLModemProperty", ThisKey="ModemID", OtherKey="ID", IsForeignKey=true)]
		public ADSLModemProperty ADSLModemProperty
		{
			get
			{
				return this._ADSLModemProperty.Entity;
			}
			set
			{
				ADSLModemProperty previousValue = this._ADSLModemProperty.Entity;
				if (((previousValue != value) 
							|| (this._ADSLModemProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLModemProperty.Entity = null;
						previousValue.Wirelesses.Remove(this);
					}
					this._ADSLModemProperty.Entity = value;
					if ((value != null))
					{
						value.Wirelesses.Add(this);
						this._ModemID = value.ID;
					}
					else
					{
						this._ModemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLModemProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_Wireless", Storage="_ADSLService", ThisKey="TariffID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.Wirelesses.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.Wirelesses.Add(this);
						this._TariffID = value.ID;
					}
					else
					{
						this._TariffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Wireless", Storage="_Customer", ThisKey="CustomerOwnerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Wirelesses.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Wirelesses.Add(this);
						this._CustomerOwnerID = value.ID;
					}
					else
					{
						this._CustomerOwnerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WirelessChangeService")]
	public partial class WirelessChangeService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _WirelessCode;
		
		private System.Nullable<int> _OldServiceID;
		
		private System.Nullable<int> _NewServiceID;
		
		private string _LicenseLetterNo;
		
		private byte _ChangeServiceType;
		
		private byte _ChangeServiceActionType;
		
		private System.Nullable<bool> _NeedModem;
		
		private System.Nullable<int> _ModemID;
		
		private string _ModemMACAddress;
		
		private System.Nullable<int> _ModemSerialNoID;
		
		private string _CommentCustomers;
		
		private System.Nullable<int> _FinalUserID;
		
		private System.Nullable<System.DateTime> _FinalDate;
		
		private string _FinalComment;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<byte> _SaleWay;
		
		private System.Nullable<bool> _IsIBSngUpdated;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<ADSLService> _ADSLService1;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWirelessCodeChanging(string value);
    partial void OnWirelessCodeChanged();
    partial void OnOldServiceIDChanging(System.Nullable<int> value);
    partial void OnOldServiceIDChanged();
    partial void OnNewServiceIDChanging(System.Nullable<int> value);
    partial void OnNewServiceIDChanged();
    partial void OnLicenseLetterNoChanging(string value);
    partial void OnLicenseLetterNoChanged();
    partial void OnChangeServiceTypeChanging(byte value);
    partial void OnChangeServiceTypeChanged();
    partial void OnChangeServiceActionTypeChanging(byte value);
    partial void OnChangeServiceActionTypeChanged();
    partial void OnNeedModemChanging(System.Nullable<bool> value);
    partial void OnNeedModemChanged();
    partial void OnModemIDChanging(System.Nullable<int> value);
    partial void OnModemIDChanged();
    partial void OnModemMACAddressChanging(string value);
    partial void OnModemMACAddressChanged();
    partial void OnModemSerialNoIDChanging(System.Nullable<int> value);
    partial void OnModemSerialNoIDChanged();
    partial void OnCommentCustomersChanging(string value);
    partial void OnCommentCustomersChanged();
    partial void OnFinalUserIDChanging(System.Nullable<int> value);
    partial void OnFinalUserIDChanged();
    partial void OnFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDateChanged();
    partial void OnFinalCommentChanging(string value);
    partial void OnFinalCommentChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnSaleWayChanging(System.Nullable<byte> value);
    partial void OnSaleWayChanged();
    partial void OnIsIBSngUpdatedChanging(System.Nullable<bool> value);
    partial void OnIsIBSngUpdatedChanged();
    #endregion
		
		public WirelessChangeService()
		{
			this._ADSLService = default(EntityRef<ADSLService>);
			this._ADSLService1 = default(EntityRef<ADSLService>);
			this._Request = default(EntityRef<Request>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WirelessCode", DbType="NVarChar(50)")]
		public string WirelessCode
		{
			get
			{
				return this._WirelessCode;
			}
			set
			{
				if ((this._WirelessCode != value))
				{
					this.OnWirelessCodeChanging(value);
					this.SendPropertyChanging();
					this._WirelessCode = value;
					this.SendPropertyChanged("WirelessCode");
					this.OnWirelessCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldServiceID", DbType="Int")]
		public System.Nullable<int> OldServiceID
		{
			get
			{
				return this._OldServiceID;
			}
			set
			{
				if ((this._OldServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOldServiceIDChanging(value);
					this.SendPropertyChanging();
					this._OldServiceID = value;
					this.SendPropertyChanged("OldServiceID");
					this.OnOldServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewServiceID", DbType="Int")]
		public System.Nullable<int> NewServiceID
		{
			get
			{
				return this._NewServiceID;
			}
			set
			{
				if ((this._NewServiceID != value))
				{
					if (this._ADSLService1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewServiceIDChanging(value);
					this.SendPropertyChanging();
					this._NewServiceID = value;
					this.SendPropertyChanged("NewServiceID");
					this.OnNewServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseLetterNo", DbType="NVarChar(50)")]
		public string LicenseLetterNo
		{
			get
			{
				return this._LicenseLetterNo;
			}
			set
			{
				if ((this._LicenseLetterNo != value))
				{
					this.OnLicenseLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseLetterNo = value;
					this.SendPropertyChanged("LicenseLetterNo");
					this.OnLicenseLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeServiceType", DbType="TinyInt NOT NULL")]
		public byte ChangeServiceType
		{
			get
			{
				return this._ChangeServiceType;
			}
			set
			{
				if ((this._ChangeServiceType != value))
				{
					this.OnChangeServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeServiceType = value;
					this.SendPropertyChanged("ChangeServiceType");
					this.OnChangeServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeServiceActionType", DbType="TinyInt NOT NULL")]
		public byte ChangeServiceActionType
		{
			get
			{
				return this._ChangeServiceActionType;
			}
			set
			{
				if ((this._ChangeServiceActionType != value))
				{
					this.OnChangeServiceActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeServiceActionType = value;
					this.SendPropertyChanged("ChangeServiceActionType");
					this.OnChangeServiceActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedModem", DbType="Bit")]
		public System.Nullable<bool> NeedModem
		{
			get
			{
				return this._NeedModem;
			}
			set
			{
				if ((this._NeedModem != value))
				{
					this.OnNeedModemChanging(value);
					this.SendPropertyChanging();
					this._NeedModem = value;
					this.SendPropertyChanged("NeedModem");
					this.OnNeedModemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemID", DbType="Int")]
		public System.Nullable<int> ModemID
		{
			get
			{
				return this._ModemID;
			}
			set
			{
				if ((this._ModemID != value))
				{
					this.OnModemIDChanging(value);
					this.SendPropertyChanging();
					this._ModemID = value;
					this.SendPropertyChanged("ModemID");
					this.OnModemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemMACAddress", DbType="NVarChar(50)")]
		public string ModemMACAddress
		{
			get
			{
				return this._ModemMACAddress;
			}
			set
			{
				if ((this._ModemMACAddress != value))
				{
					this.OnModemMACAddressChanging(value);
					this.SendPropertyChanging();
					this._ModemMACAddress = value;
					this.SendPropertyChanged("ModemMACAddress");
					this.OnModemMACAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemSerialNoID", DbType="Int")]
		public System.Nullable<int> ModemSerialNoID
		{
			get
			{
				return this._ModemSerialNoID;
			}
			set
			{
				if ((this._ModemSerialNoID != value))
				{
					this.OnModemSerialNoIDChanging(value);
					this.SendPropertyChanging();
					this._ModemSerialNoID = value;
					this.SendPropertyChanged("ModemSerialNoID");
					this.OnModemSerialNoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentCustomers", DbType="NVarChar(MAX)")]
		public string CommentCustomers
		{
			get
			{
				return this._CommentCustomers;
			}
			set
			{
				if ((this._CommentCustomers != value))
				{
					this.OnCommentCustomersChanging(value);
					this.SendPropertyChanging();
					this._CommentCustomers = value;
					this.SendPropertyChanged("CommentCustomers");
					this.OnCommentCustomersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalUserID", DbType="Int")]
		public System.Nullable<int> FinalUserID
		{
			get
			{
				return this._FinalUserID;
			}
			set
			{
				if ((this._FinalUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinalUserIDChanging(value);
					this.SendPropertyChanging();
					this._FinalUserID = value;
					this.SendPropertyChanged("FinalUserID");
					this.OnFinalUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FinalDate
		{
			get
			{
				return this._FinalDate;
			}
			set
			{
				if ((this._FinalDate != value))
				{
					this.OnFinalDateChanging(value);
					this.SendPropertyChanging();
					this._FinalDate = value;
					this.SendPropertyChanged("FinalDate");
					this.OnFinalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalComment", DbType="NVarChar(MAX)")]
		public string FinalComment
		{
			get
			{
				return this._FinalComment;
			}
			set
			{
				if ((this._FinalComment != value))
				{
					this.OnFinalCommentChanging(value);
					this.SendPropertyChanging();
					this._FinalComment = value;
					this.SendPropertyChanged("FinalComment");
					this.OnFinalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleWay", DbType="TinyInt")]
		public System.Nullable<byte> SaleWay
		{
			get
			{
				return this._SaleWay;
			}
			set
			{
				if ((this._SaleWay != value))
				{
					this.OnSaleWayChanging(value);
					this.SendPropertyChanging();
					this._SaleWay = value;
					this.SendPropertyChanged("SaleWay");
					this.OnSaleWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIBSngUpdated", DbType="Bit")]
		public System.Nullable<bool> IsIBSngUpdated
		{
			get
			{
				return this._IsIBSngUpdated;
			}
			set
			{
				if ((this._IsIBSngUpdated != value))
				{
					this.OnIsIBSngUpdatedChanging(value);
					this.SendPropertyChanging();
					this._IsIBSngUpdated = value;
					this.SendPropertyChanged("IsIBSngUpdated");
					this.OnIsIBSngUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_WirelessChangeService", Storage="_ADSLService", ThisKey="OldServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.WirelessChangeServices.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.WirelessChangeServices.Add(this);
						this._OldServiceID = value.ID;
					}
					else
					{
						this._OldServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_WirelessChangeService1", Storage="_ADSLService1", ThisKey="NewServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService1
		{
			get
			{
				return this._ADSLService1.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService1.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService1.Entity = null;
						previousValue.WirelessChangeServices1.Remove(this);
					}
					this._ADSLService1.Entity = value;
					if ((value != null))
					{
						value.WirelessChangeServices1.Add(this);
						this._NewServiceID = value.ID;
					}
					else
					{
						this._NewServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WirelessChangeService", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.WirelessChangeService = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.WirelessChangeService = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessChangeService", Storage="_User", ThisKey="FinalUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WirelessChangeServices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WirelessChangeServices.Add(this);
						this._FinalUserID = value.ID;
					}
					else
					{
						this._FinalUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WirelessRequest")]
	public partial class WirelessRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _InstallmentsTelephoneNo;
		
		private long _CustomerOwnerID;
		
		private System.Nullable<long> _CustomerOwnerElkaID;
		
		private System.Nullable<byte> _CustomerOwnerStatus;
		
		private System.Nullable<System.DateTime> _CustomerEndRentDate;
		
		private System.Nullable<byte> _SaleWay;
		
		private System.Nullable<int> _ADSLSellerAgentID;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<int> _AdditionalServiceID;
		
		private string _LicenseLetterNo;
		
		private System.Nullable<bool> _HasIP;
		
		private System.Nullable<long> _IPStaticID;
		
		private System.Nullable<long> _GroupIPStaticID;
		
		private System.Nullable<int> _IPDuration;
		
		private System.Nullable<int> _CustomerGroupID;
		
		private System.Nullable<int> _CustomerTypeID;
		
		private System.Nullable<int> _JobGroupID;
		
		private string _ReagentTelephoneNo;
		
		private System.Nullable<byte> _CustomerPriority;
		
		private System.Nullable<bool> _RequiredInstalation;
		
		private System.Nullable<bool> _NeedModem;
		
		private System.Nullable<int> _ModemID;
		
		private string _ModemMACAddress;
		
		private System.Nullable<int> _ModemSerialNoID;
		
		private System.Nullable<byte> _RegistrationProjectType;
		
		private System.Nullable<long> _ADSLPortID;
		
		private string _CommentCustomers;
		
		private System.Nullable<int> _ContractorID;
		
		private System.Nullable<byte> _CustomerSatisfaction;
		
		private System.Nullable<int> _AssignmentLineUserID;
		
		private System.Nullable<System.DateTime> _AssignmentLineDate;
		
		private string _AssignmentLineCommnet;
		
		private System.Nullable<int> _MDFUserID;
		
		private System.Nullable<System.DateTime> _MDFDate;
		
		private string _MDFCommnet;
		
		private System.Nullable<int> _OMCUserID;
		
		private System.Nullable<System.DateTime> _OMCDate;
		
		private string _OMCCommnet;
		
		private System.Nullable<int> _SetupUserID;
		
		private System.Nullable<System.DateTime> _SetupDate;
		
		private string _SetupCommnet;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private System.Nullable<bool> _Status;
		
		private long _AddressID;
		
		private string _UserName;
		
		private string _OrginalPassword;
		
		private string _HashPassword;
		
		private string _AAAPassword;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<byte> _WirelessType;
		
		private string _UserID;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<ADSLCustomerGroup> _ADSLCustomerGroup;
		
		private EntityRef<ADSLCustomerType> _ADSLCustomerType;
		
		private EntityRef<ADSLGroupIP> _ADSLGroupIP;
		
		private EntityRef<ADSLIP> _ADSLIP;
		
		private EntityRef<ADSLModem> _ADSLModem;
		
		private EntityRef<ADSLPort> _ADSLPort;
		
		private EntityRef<ADSLSellerAgent> _ADSLSellerAgent;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<Contractor> _Contractor;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User3;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInstallmentsTelephoneNoChanging(long value);
    partial void OnInstallmentsTelephoneNoChanged();
    partial void OnCustomerOwnerIDChanging(long value);
    partial void OnCustomerOwnerIDChanged();
    partial void OnCustomerOwnerElkaIDChanging(System.Nullable<long> value);
    partial void OnCustomerOwnerElkaIDChanged();
    partial void OnCustomerOwnerStatusChanging(System.Nullable<byte> value);
    partial void OnCustomerOwnerStatusChanged();
    partial void OnCustomerEndRentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomerEndRentDateChanged();
    partial void OnSaleWayChanging(System.Nullable<byte> value);
    partial void OnSaleWayChanged();
    partial void OnADSLSellerAgentIDChanging(System.Nullable<int> value);
    partial void OnADSLSellerAgentIDChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    partial void OnAdditionalServiceIDChanging(System.Nullable<int> value);
    partial void OnAdditionalServiceIDChanged();
    partial void OnLicenseLetterNoChanging(string value);
    partial void OnLicenseLetterNoChanged();
    partial void OnHasIPChanging(System.Nullable<bool> value);
    partial void OnHasIPChanged();
    partial void OnIPStaticIDChanging(System.Nullable<long> value);
    partial void OnIPStaticIDChanged();
    partial void OnGroupIPStaticIDChanging(System.Nullable<long> value);
    partial void OnGroupIPStaticIDChanged();
    partial void OnIPDurationChanging(System.Nullable<int> value);
    partial void OnIPDurationChanged();
    partial void OnCustomerGroupIDChanging(System.Nullable<int> value);
    partial void OnCustomerGroupIDChanged();
    partial void OnCustomerTypeIDChanging(System.Nullable<int> value);
    partial void OnCustomerTypeIDChanged();
    partial void OnJobGroupIDChanging(System.Nullable<int> value);
    partial void OnJobGroupIDChanged();
    partial void OnReagentTelephoneNoChanging(string value);
    partial void OnReagentTelephoneNoChanged();
    partial void OnCustomerPriorityChanging(System.Nullable<byte> value);
    partial void OnCustomerPriorityChanged();
    partial void OnRequiredInstalationChanging(System.Nullable<bool> value);
    partial void OnRequiredInstalationChanged();
    partial void OnNeedModemChanging(System.Nullable<bool> value);
    partial void OnNeedModemChanged();
    partial void OnModemIDChanging(System.Nullable<int> value);
    partial void OnModemIDChanged();
    partial void OnModemMACAddressChanging(string value);
    partial void OnModemMACAddressChanged();
    partial void OnModemSerialNoIDChanging(System.Nullable<int> value);
    partial void OnModemSerialNoIDChanged();
    partial void OnRegistrationProjectTypeChanging(System.Nullable<byte> value);
    partial void OnRegistrationProjectTypeChanged();
    partial void OnADSLPortIDChanging(System.Nullable<long> value);
    partial void OnADSLPortIDChanged();
    partial void OnCommentCustomersChanging(string value);
    partial void OnCommentCustomersChanged();
    partial void OnContractorIDChanging(System.Nullable<int> value);
    partial void OnContractorIDChanged();
    partial void OnCustomerSatisfactionChanging(System.Nullable<byte> value);
    partial void OnCustomerSatisfactionChanged();
    partial void OnAssignmentLineUserIDChanging(System.Nullable<int> value);
    partial void OnAssignmentLineUserIDChanged();
    partial void OnAssignmentLineDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssignmentLineDateChanged();
    partial void OnAssignmentLineCommnetChanging(string value);
    partial void OnAssignmentLineCommnetChanged();
    partial void OnMDFUserIDChanging(System.Nullable<int> value);
    partial void OnMDFUserIDChanged();
    partial void OnMDFDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFDateChanged();
    partial void OnMDFCommnetChanging(string value);
    partial void OnMDFCommnetChanged();
    partial void OnOMCUserIDChanging(System.Nullable<int> value);
    partial void OnOMCUserIDChanged();
    partial void OnOMCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOMCDateChanged();
    partial void OnOMCCommnetChanging(string value);
    partial void OnOMCCommnetChanged();
    partial void OnSetupUserIDChanging(System.Nullable<int> value);
    partial void OnSetupUserIDChanged();
    partial void OnSetupDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSetupDateChanged();
    partial void OnSetupCommnetChanging(string value);
    partial void OnSetupCommnetChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnAddressIDChanging(long value);
    partial void OnAddressIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnOrginalPasswordChanging(string value);
    partial void OnOrginalPasswordChanged();
    partial void OnHashPasswordChanging(string value);
    partial void OnHashPasswordChanged();
    partial void OnAAAPasswordChanging(string value);
    partial void OnAAAPasswordChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnWirelessTypeChanging(System.Nullable<byte> value);
    partial void OnWirelessTypeChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    #endregion
		
		public WirelessRequest()
		{
			this._Address = default(EntityRef<Address>);
			this._ADSLCustomerGroup = default(EntityRef<ADSLCustomerGroup>);
			this._ADSLCustomerType = default(EntityRef<ADSLCustomerType>);
			this._ADSLGroupIP = default(EntityRef<ADSLGroupIP>);
			this._ADSLIP = default(EntityRef<ADSLIP>);
			this._ADSLModem = default(EntityRef<ADSLModem>);
			this._ADSLPort = default(EntityRef<ADSLPort>);
			this._ADSLSellerAgent = default(EntityRef<ADSLSellerAgent>);
			this._ADSLService = default(EntityRef<ADSLService>);
			this._Contractor = default(EntityRef<Contractor>);
			this._Request = default(EntityRef<Request>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallmentsTelephoneNo", DbType="BigInt NOT NULL")]
		public long InstallmentsTelephoneNo
		{
			get
			{
				return this._InstallmentsTelephoneNo;
			}
			set
			{
				if ((this._InstallmentsTelephoneNo != value))
				{
					this.OnInstallmentsTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._InstallmentsTelephoneNo = value;
					this.SendPropertyChanged("InstallmentsTelephoneNo");
					this.OnInstallmentsTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerID", DbType="BigInt NOT NULL")]
		public long CustomerOwnerID
		{
			get
			{
				return this._CustomerOwnerID;
			}
			set
			{
				if ((this._CustomerOwnerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerID = value;
					this.SendPropertyChanged("CustomerOwnerID");
					this.OnCustomerOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerElkaID", DbType="BigInt")]
		public System.Nullable<long> CustomerOwnerElkaID
		{
			get
			{
				return this._CustomerOwnerElkaID;
			}
			set
			{
				if ((this._CustomerOwnerElkaID != value))
				{
					this.OnCustomerOwnerElkaIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerElkaID = value;
					this.SendPropertyChanged("CustomerOwnerElkaID");
					this.OnCustomerOwnerElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOwnerStatus", DbType="TinyInt")]
		public System.Nullable<byte> CustomerOwnerStatus
		{
			get
			{
				return this._CustomerOwnerStatus;
			}
			set
			{
				if ((this._CustomerOwnerStatus != value))
				{
					this.OnCustomerOwnerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerOwnerStatus = value;
					this.SendPropertyChanged("CustomerOwnerStatus");
					this.OnCustomerOwnerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEndRentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CustomerEndRentDate
		{
			get
			{
				return this._CustomerEndRentDate;
			}
			set
			{
				if ((this._CustomerEndRentDate != value))
				{
					this.OnCustomerEndRentDateChanging(value);
					this.SendPropertyChanging();
					this._CustomerEndRentDate = value;
					this.SendPropertyChanged("CustomerEndRentDate");
					this.OnCustomerEndRentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleWay", DbType="TinyInt")]
		public System.Nullable<byte> SaleWay
		{
			get
			{
				return this._SaleWay;
			}
			set
			{
				if ((this._SaleWay != value))
				{
					this.OnSaleWayChanging(value);
					this.SendPropertyChanging();
					this._SaleWay = value;
					this.SendPropertyChanged("SaleWay");
					this.OnSaleWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLSellerAgentID", DbType="Int")]
		public System.Nullable<int> ADSLSellerAgentID
		{
			get
			{
				return this._ADSLSellerAgentID;
			}
			set
			{
				if ((this._ADSLSellerAgentID != value))
				{
					if (this._ADSLSellerAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLSellerAgentIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLSellerAgentID = value;
					this.SendPropertyChanged("ADSLSellerAgentID");
					this.OnADSLSellerAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalServiceID", DbType="Int")]
		public System.Nullable<int> AdditionalServiceID
		{
			get
			{
				return this._AdditionalServiceID;
			}
			set
			{
				if ((this._AdditionalServiceID != value))
				{
					this.OnAdditionalServiceIDChanging(value);
					this.SendPropertyChanging();
					this._AdditionalServiceID = value;
					this.SendPropertyChanged("AdditionalServiceID");
					this.OnAdditionalServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseLetterNo", DbType="NVarChar(50)")]
		public string LicenseLetterNo
		{
			get
			{
				return this._LicenseLetterNo;
			}
			set
			{
				if ((this._LicenseLetterNo != value))
				{
					this.OnLicenseLetterNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseLetterNo = value;
					this.SendPropertyChanged("LicenseLetterNo");
					this.OnLicenseLetterNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIP", DbType="Bit")]
		public System.Nullable<bool> HasIP
		{
			get
			{
				return this._HasIP;
			}
			set
			{
				if ((this._HasIP != value))
				{
					this.OnHasIPChanging(value);
					this.SendPropertyChanging();
					this._HasIP = value;
					this.SendPropertyChanged("HasIP");
					this.OnHasIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPStaticID", DbType="BigInt")]
		public System.Nullable<long> IPStaticID
		{
			get
			{
				return this._IPStaticID;
			}
			set
			{
				if ((this._IPStaticID != value))
				{
					if (this._ADSLIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._IPStaticID = value;
					this.SendPropertyChanged("IPStaticID");
					this.OnIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupIPStaticID", DbType="BigInt")]
		public System.Nullable<long> GroupIPStaticID
		{
			get
			{
				return this._GroupIPStaticID;
			}
			set
			{
				if ((this._GroupIPStaticID != value))
				{
					if (this._ADSLGroupIP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIPStaticIDChanging(value);
					this.SendPropertyChanging();
					this._GroupIPStaticID = value;
					this.SendPropertyChanged("GroupIPStaticID");
					this.OnGroupIPStaticIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPDuration", DbType="Int")]
		public System.Nullable<int> IPDuration
		{
			get
			{
				return this._IPDuration;
			}
			set
			{
				if ((this._IPDuration != value))
				{
					this.OnIPDurationChanging(value);
					this.SendPropertyChanging();
					this._IPDuration = value;
					this.SendPropertyChanged("IPDuration");
					this.OnIPDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGroupID", DbType="Int")]
		public System.Nullable<int> CustomerGroupID
		{
			get
			{
				return this._CustomerGroupID;
			}
			set
			{
				if ((this._CustomerGroupID != value))
				{
					if (this._ADSLCustomerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerGroupID = value;
					this.SendPropertyChanged("CustomerGroupID");
					this.OnCustomerGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int")]
		public System.Nullable<int> CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._ADSLCustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobGroupID", DbType="Int")]
		public System.Nullable<int> JobGroupID
		{
			get
			{
				return this._JobGroupID;
			}
			set
			{
				if ((this._JobGroupID != value))
				{
					this.OnJobGroupIDChanging(value);
					this.SendPropertyChanging();
					this._JobGroupID = value;
					this.SendPropertyChanged("JobGroupID");
					this.OnJobGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReagentTelephoneNo", DbType="NVarChar(50)")]
		public string ReagentTelephoneNo
		{
			get
			{
				return this._ReagentTelephoneNo;
			}
			set
			{
				if ((this._ReagentTelephoneNo != value))
				{
					this.OnReagentTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ReagentTelephoneNo = value;
					this.SendPropertyChanged("ReagentTelephoneNo");
					this.OnReagentTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPriority", DbType="TinyInt")]
		public System.Nullable<byte> CustomerPriority
		{
			get
			{
				return this._CustomerPriority;
			}
			set
			{
				if ((this._CustomerPriority != value))
				{
					this.OnCustomerPriorityChanging(value);
					this.SendPropertyChanging();
					this._CustomerPriority = value;
					this.SendPropertyChanged("CustomerPriority");
					this.OnCustomerPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredInstalation", DbType="Bit")]
		public System.Nullable<bool> RequiredInstalation
		{
			get
			{
				return this._RequiredInstalation;
			}
			set
			{
				if ((this._RequiredInstalation != value))
				{
					this.OnRequiredInstalationChanging(value);
					this.SendPropertyChanging();
					this._RequiredInstalation = value;
					this.SendPropertyChanged("RequiredInstalation");
					this.OnRequiredInstalationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedModem", DbType="Bit")]
		public System.Nullable<bool> NeedModem
		{
			get
			{
				return this._NeedModem;
			}
			set
			{
				if ((this._NeedModem != value))
				{
					this.OnNeedModemChanging(value);
					this.SendPropertyChanging();
					this._NeedModem = value;
					this.SendPropertyChanged("NeedModem");
					this.OnNeedModemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemID", DbType="Int")]
		public System.Nullable<int> ModemID
		{
			get
			{
				return this._ModemID;
			}
			set
			{
				if ((this._ModemID != value))
				{
					if (this._ADSLModem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModemIDChanging(value);
					this.SendPropertyChanging();
					this._ModemID = value;
					this.SendPropertyChanged("ModemID");
					this.OnModemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemMACAddress", DbType="NVarChar(50)")]
		public string ModemMACAddress
		{
			get
			{
				return this._ModemMACAddress;
			}
			set
			{
				if ((this._ModemMACAddress != value))
				{
					this.OnModemMACAddressChanging(value);
					this.SendPropertyChanging();
					this._ModemMACAddress = value;
					this.SendPropertyChanged("ModemMACAddress");
					this.OnModemMACAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModemSerialNoID", DbType="Int")]
		public System.Nullable<int> ModemSerialNoID
		{
			get
			{
				return this._ModemSerialNoID;
			}
			set
			{
				if ((this._ModemSerialNoID != value))
				{
					this.OnModemSerialNoIDChanging(value);
					this.SendPropertyChanging();
					this._ModemSerialNoID = value;
					this.SendPropertyChanged("ModemSerialNoID");
					this.OnModemSerialNoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationProjectType", DbType="TinyInt")]
		public System.Nullable<byte> RegistrationProjectType
		{
			get
			{
				return this._RegistrationProjectType;
			}
			set
			{
				if ((this._RegistrationProjectType != value))
				{
					this.OnRegistrationProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationProjectType = value;
					this.SendPropertyChanged("RegistrationProjectType");
					this.OnRegistrationProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLPortID", DbType="BigInt")]
		public System.Nullable<long> ADSLPortID
		{
			get
			{
				return this._ADSLPortID;
			}
			set
			{
				if ((this._ADSLPortID != value))
				{
					if (this._ADSLPort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADSLPortIDChanging(value);
					this.SendPropertyChanging();
					this._ADSLPortID = value;
					this.SendPropertyChanged("ADSLPortID");
					this.OnADSLPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentCustomers", DbType="NVarChar(MAX)")]
		public string CommentCustomers
		{
			get
			{
				return this._CommentCustomers;
			}
			set
			{
				if ((this._CommentCustomers != value))
				{
					this.OnCommentCustomersChanging(value);
					this.SendPropertyChanging();
					this._CommentCustomers = value;
					this.SendPropertyChanged("CommentCustomers");
					this.OnCommentCustomersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorID", DbType="Int")]
		public System.Nullable<int> ContractorID
		{
			get
			{
				return this._ContractorID;
			}
			set
			{
				if ((this._ContractorID != value))
				{
					if (this._Contractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIDChanging(value);
					this.SendPropertyChanging();
					this._ContractorID = value;
					this.SendPropertyChanged("ContractorID");
					this.OnContractorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerSatisfaction", DbType="TinyInt")]
		public System.Nullable<byte> CustomerSatisfaction
		{
			get
			{
				return this._CustomerSatisfaction;
			}
			set
			{
				if ((this._CustomerSatisfaction != value))
				{
					this.OnCustomerSatisfactionChanging(value);
					this.SendPropertyChanging();
					this._CustomerSatisfaction = value;
					this.SendPropertyChanged("CustomerSatisfaction");
					this.OnCustomerSatisfactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLineUserID", DbType="Int")]
		public System.Nullable<int> AssignmentLineUserID
		{
			get
			{
				return this._AssignmentLineUserID;
			}
			set
			{
				if ((this._AssignmentLineUserID != value))
				{
					if (this._User3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignmentLineUserIDChanging(value);
					this.SendPropertyChanging();
					this._AssignmentLineUserID = value;
					this.SendPropertyChanged("AssignmentLineUserID");
					this.OnAssignmentLineUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLineDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AssignmentLineDate
		{
			get
			{
				return this._AssignmentLineDate;
			}
			set
			{
				if ((this._AssignmentLineDate != value))
				{
					this.OnAssignmentLineDateChanging(value);
					this.SendPropertyChanging();
					this._AssignmentLineDate = value;
					this.SendPropertyChanged("AssignmentLineDate");
					this.OnAssignmentLineDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLineCommnet", DbType="NVarChar(MAX)")]
		public string AssignmentLineCommnet
		{
			get
			{
				return this._AssignmentLineCommnet;
			}
			set
			{
				if ((this._AssignmentLineCommnet != value))
				{
					this.OnAssignmentLineCommnetChanging(value);
					this.SendPropertyChanging();
					this._AssignmentLineCommnet = value;
					this.SendPropertyChanged("AssignmentLineCommnet");
					this.OnAssignmentLineCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFUserID", DbType="Int")]
		public System.Nullable<int> MDFUserID
		{
			get
			{
				return this._MDFUserID;
			}
			set
			{
				if ((this._MDFUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDFUserIDChanging(value);
					this.SendPropertyChanging();
					this._MDFUserID = value;
					this.SendPropertyChanged("MDFUserID");
					this.OnMDFUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFDate
		{
			get
			{
				return this._MDFDate;
			}
			set
			{
				if ((this._MDFDate != value))
				{
					this.OnMDFDateChanging(value);
					this.SendPropertyChanging();
					this._MDFDate = value;
					this.SendPropertyChanged("MDFDate");
					this.OnMDFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFCommnet", DbType="NVarChar(MAX)")]
		public string MDFCommnet
		{
			get
			{
				return this._MDFCommnet;
			}
			set
			{
				if ((this._MDFCommnet != value))
				{
					this.OnMDFCommnetChanging(value);
					this.SendPropertyChanging();
					this._MDFCommnet = value;
					this.SendPropertyChanged("MDFCommnet");
					this.OnMDFCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCUserID", DbType="Int")]
		public System.Nullable<int> OMCUserID
		{
			get
			{
				return this._OMCUserID;
			}
			set
			{
				if ((this._OMCUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOMCUserIDChanging(value);
					this.SendPropertyChanging();
					this._OMCUserID = value;
					this.SendPropertyChanged("OMCUserID");
					this.OnOMCUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> OMCDate
		{
			get
			{
				return this._OMCDate;
			}
			set
			{
				if ((this._OMCDate != value))
				{
					this.OnOMCDateChanging(value);
					this.SendPropertyChanging();
					this._OMCDate = value;
					this.SendPropertyChanged("OMCDate");
					this.OnOMCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMCCommnet", DbType="NVarChar(MAX)")]
		public string OMCCommnet
		{
			get
			{
				return this._OMCCommnet;
			}
			set
			{
				if ((this._OMCCommnet != value))
				{
					this.OnOMCCommnetChanging(value);
					this.SendPropertyChanging();
					this._OMCCommnet = value;
					this.SendPropertyChanged("OMCCommnet");
					this.OnOMCCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupUserID", DbType="Int")]
		public System.Nullable<int> SetupUserID
		{
			get
			{
				return this._SetupUserID;
			}
			set
			{
				if ((this._SetupUserID != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetupUserIDChanging(value);
					this.SendPropertyChanging();
					this._SetupUserID = value;
					this.SendPropertyChanged("SetupUserID");
					this.OnSetupUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SetupDate
		{
			get
			{
				return this._SetupDate;
			}
			set
			{
				if ((this._SetupDate != value))
				{
					this.OnSetupDateChanging(value);
					this.SendPropertyChanging();
					this._SetupDate = value;
					this.SendPropertyChanged("SetupDate");
					this.OnSetupDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetupCommnet", DbType="NVarChar(MAX)")]
		public string SetupCommnet
		{
			get
			{
				return this._SetupCommnet;
			}
			set
			{
				if ((this._SetupCommnet != value))
				{
					this.OnSetupCommnetChanging(value);
					this.SendPropertyChanging();
					this._SetupCommnet = value;
					this.SendPropertyChanged("SetupCommnet");
					this.OnSetupCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="BigInt NOT NULL")]
		public long AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrginalPassword", DbType="NVarChar(50)")]
		public string OrginalPassword
		{
			get
			{
				return this._OrginalPassword;
			}
			set
			{
				if ((this._OrginalPassword != value))
				{
					this.OnOrginalPasswordChanging(value);
					this.SendPropertyChanging();
					this._OrginalPassword = value;
					this.SendPropertyChanged("OrginalPassword");
					this.OnOrginalPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashPassword", DbType="NVarChar(50)")]
		public string HashPassword
		{
			get
			{
				return this._HashPassword;
			}
			set
			{
				if ((this._HashPassword != value))
				{
					this.OnHashPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashPassword = value;
					this.SendPropertyChanged("HashPassword");
					this.OnHashPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAAPassword", DbType="NVarChar(50)")]
		public string AAAPassword
		{
			get
			{
				return this._AAAPassword;
			}
			set
			{
				if ((this._AAAPassword != value))
				{
					this.OnAAAPasswordChanging(value);
					this.SendPropertyChanging();
					this._AAAPassword = value;
					this.SendPropertyChanged("AAAPassword");
					this.OnAAAPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WirelessType", DbType="TinyInt")]
		public System.Nullable<byte> WirelessType
		{
			get
			{
				return this._WirelessType;
			}
			set
			{
				if ((this._WirelessType != value))
				{
					this.OnWirelessTypeChanging(value);
					this.SendPropertyChanging();
					this._WirelessType = value;
					this.SendPropertyChanged("WirelessType");
					this.OnWirelessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_WirelessRequest", Storage="_Address", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(long);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerGroup_WirelessRequest", Storage="_ADSLCustomerGroup", ThisKey="CustomerGroupID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerGroup ADSLCustomerGroup
		{
			get
			{
				return this._ADSLCustomerGroup.Entity;
			}
			set
			{
				ADSLCustomerGroup previousValue = this._ADSLCustomerGroup.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerGroup.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._ADSLCustomerGroup.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._CustomerGroupID = value.ID;
					}
					else
					{
						this._CustomerGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLCustomerType_WirelessRequest", Storage="_ADSLCustomerType", ThisKey="CustomerTypeID", OtherKey="ID", IsForeignKey=true)]
		public ADSLCustomerType ADSLCustomerType
		{
			get
			{
				return this._ADSLCustomerType.Entity;
			}
			set
			{
				ADSLCustomerType previousValue = this._ADSLCustomerType.Entity;
				if (((previousValue != value) 
							|| (this._ADSLCustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLCustomerType.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._ADSLCustomerType.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._CustomerTypeID = value.ID;
					}
					else
					{
						this._CustomerTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLCustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLGroupIP_WirelessRequest", Storage="_ADSLGroupIP", ThisKey="GroupIPStaticID", OtherKey="ID", IsForeignKey=true)]
		public ADSLGroupIP ADSLGroupIP
		{
			get
			{
				return this._ADSLGroupIP.Entity;
			}
			set
			{
				ADSLGroupIP previousValue = this._ADSLGroupIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLGroupIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLGroupIP.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._ADSLGroupIP.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._GroupIPStaticID = value.ID;
					}
					else
					{
						this._GroupIPStaticID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLGroupIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLIP_WirelessRequest", Storage="_ADSLIP", ThisKey="IPStaticID", OtherKey="ID", IsForeignKey=true)]
		public ADSLIP ADSLIP
		{
			get
			{
				return this._ADSLIP.Entity;
			}
			set
			{
				ADSLIP previousValue = this._ADSLIP.Entity;
				if (((previousValue != value) 
							|| (this._ADSLIP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLIP.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._ADSLIP.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._IPStaticID = value.ID;
					}
					else
					{
						this._IPStaticID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLIP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLModem_WirelessRequest", Storage="_ADSLModem", ThisKey="ModemID", OtherKey="ID", IsForeignKey=true)]
		public ADSLModem ADSLModem
		{
			get
			{
				return this._ADSLModem.Entity;
			}
			set
			{
				ADSLModem previousValue = this._ADSLModem.Entity;
				if (((previousValue != value) 
							|| (this._ADSLModem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLModem.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._ADSLModem.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._ModemID = value.ID;
					}
					else
					{
						this._ModemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLModem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLPort_WirelessRequest", Storage="_ADSLPort", ThisKey="ADSLPortID", OtherKey="ID", IsForeignKey=true)]
		public ADSLPort ADSLPort
		{
			get
			{
				return this._ADSLPort.Entity;
			}
			set
			{
				ADSLPort previousValue = this._ADSLPort.Entity;
				if (((previousValue != value) 
							|| (this._ADSLPort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLPort.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._ADSLPort.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._ADSLPortID = value.ID;
					}
					else
					{
						this._ADSLPortID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ADSLPort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLSellerAgent_WirelessRequest", Storage="_ADSLSellerAgent", ThisKey="ADSLSellerAgentID", OtherKey="ID", IsForeignKey=true)]
		public ADSLSellerAgent ADSLSellerAgent
		{
			get
			{
				return this._ADSLSellerAgent.Entity;
			}
			set
			{
				ADSLSellerAgent previousValue = this._ADSLSellerAgent.Entity;
				if (((previousValue != value) 
							|| (this._ADSLSellerAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLSellerAgent.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._ADSLSellerAgent.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._ADSLSellerAgentID = value.ID;
					}
					else
					{
						this._ADSLSellerAgentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLSellerAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_WirelessRequest", Storage="_ADSLService", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_WirelessRequest", Storage="_Contractor", ThisKey="ContractorID", OtherKey="ID", IsForeignKey=true)]
		public Contractor Contractor
		{
			get
			{
				return this._Contractor.Entity;
			}
			set
			{
				Contractor previousValue = this._Contractor.Entity;
				if (((previousValue != value) 
							|| (this._Contractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contractor.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._Contractor.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._ContractorID = value.ID;
					}
					else
					{
						this._ContractorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contractor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WirelessRequest", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.WirelessRequest = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.WirelessRequest = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessRequest", Storage="_User", ThisKey="MDFUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._MDFUserID = value.ID;
					}
					else
					{
						this._MDFUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessRequest1", Storage="_User1", ThisKey="OMCUserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.WirelessRequests1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests1.Add(this);
						this._OMCUserID = value.ID;
					}
					else
					{
						this._OMCUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessRequest2", Storage="_User2", ThisKey="SetupUserID", OtherKey="ID", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.WirelessRequests2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests2.Add(this);
						this._SetupUserID = value.ID;
					}
					else
					{
						this._SetupUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WirelessRequest3", Storage="_User3", ThisKey="AssignmentLineUserID", OtherKey="ID", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.WirelessRequests3.Remove(this);
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests3.Add(this);
						this._AssignmentLineUserID = value.ID;
					}
					else
					{
						this._AssignmentLineUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_WirelessRequest", Storage="_Customer", ThisKey="CustomerOwnerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.WirelessRequests.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.WirelessRequests.Add(this);
						this._CustomerOwnerID = value.ID;
					}
					else
					{
						this._CustomerOwnerID = default(long);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WirelessSellTraffic")]
	public partial class WirelessSellTraffic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _WirelessCode;
		
		private int _AdditionalServiceID;
		
		private System.Nullable<byte> _ChangeServiceType;
		
		private System.Nullable<int> _FinalUserID;
		
		private System.Nullable<System.DateTime> _FinalDate;
		
		private string _FinalComment;
		
		private System.Nullable<bool> _IsIBSngUpdated;
		
		private EntityRef<ADSLService> _ADSLService;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWirelessCodeChanging(string value);
    partial void OnWirelessCodeChanged();
    partial void OnAdditionalServiceIDChanging(int value);
    partial void OnAdditionalServiceIDChanged();
    partial void OnChangeServiceTypeChanging(System.Nullable<byte> value);
    partial void OnChangeServiceTypeChanged();
    partial void OnFinalUserIDChanging(System.Nullable<int> value);
    partial void OnFinalUserIDChanged();
    partial void OnFinalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalDateChanged();
    partial void OnFinalCommentChanging(string value);
    partial void OnFinalCommentChanged();
    partial void OnIsIBSngUpdatedChanging(System.Nullable<bool> value);
    partial void OnIsIBSngUpdatedChanged();
    #endregion
		
		public WirelessSellTraffic()
		{
			this._ADSLService = default(EntityRef<ADSLService>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WirelessCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WirelessCode
		{
			get
			{
				return this._WirelessCode;
			}
			set
			{
				if ((this._WirelessCode != value))
				{
					this.OnWirelessCodeChanging(value);
					this.SendPropertyChanging();
					this._WirelessCode = value;
					this.SendPropertyChanged("WirelessCode");
					this.OnWirelessCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalServiceID", DbType="Int NOT NULL")]
		public int AdditionalServiceID
		{
			get
			{
				return this._AdditionalServiceID;
			}
			set
			{
				if ((this._AdditionalServiceID != value))
				{
					if (this._ADSLService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdditionalServiceIDChanging(value);
					this.SendPropertyChanging();
					this._AdditionalServiceID = value;
					this.SendPropertyChanged("AdditionalServiceID");
					this.OnAdditionalServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeServiceType", DbType="TinyInt")]
		public System.Nullable<byte> ChangeServiceType
		{
			get
			{
				return this._ChangeServiceType;
			}
			set
			{
				if ((this._ChangeServiceType != value))
				{
					this.OnChangeServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ChangeServiceType = value;
					this.SendPropertyChanged("ChangeServiceType");
					this.OnChangeServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalUserID", DbType="Int")]
		public System.Nullable<int> FinalUserID
		{
			get
			{
				return this._FinalUserID;
			}
			set
			{
				if ((this._FinalUserID != value))
				{
					this.OnFinalUserIDChanging(value);
					this.SendPropertyChanging();
					this._FinalUserID = value;
					this.SendPropertyChanged("FinalUserID");
					this.OnFinalUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FinalDate
		{
			get
			{
				return this._FinalDate;
			}
			set
			{
				if ((this._FinalDate != value))
				{
					this.OnFinalDateChanging(value);
					this.SendPropertyChanging();
					this._FinalDate = value;
					this.SendPropertyChanged("FinalDate");
					this.OnFinalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalComment", DbType="NVarChar(MAX)")]
		public string FinalComment
		{
			get
			{
				return this._FinalComment;
			}
			set
			{
				if ((this._FinalComment != value))
				{
					this.OnFinalCommentChanging(value);
					this.SendPropertyChanging();
					this._FinalComment = value;
					this.SendPropertyChanged("FinalComment");
					this.OnFinalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIBSngUpdated", DbType="Bit")]
		public System.Nullable<bool> IsIBSngUpdated
		{
			get
			{
				return this._IsIBSngUpdated;
			}
			set
			{
				if ((this._IsIBSngUpdated != value))
				{
					this.OnIsIBSngUpdatedChanging(value);
					this.SendPropertyChanging();
					this._IsIBSngUpdated = value;
					this.SendPropertyChanged("IsIBSngUpdated");
					this.OnIsIBSngUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADSLService_WirelessSellTraffic", Storage="_ADSLService", ThisKey="AdditionalServiceID", OtherKey="ID", IsForeignKey=true)]
		public ADSLService ADSLService
		{
			get
			{
				return this._ADSLService.Entity;
			}
			set
			{
				ADSLService previousValue = this._ADSLService.Entity;
				if (((previousValue != value) 
							|| (this._ADSLService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADSLService.Entity = null;
						previousValue.WirelessSellTraffics.Remove(this);
					}
					this._ADSLService.Entity = value;
					if ((value != null))
					{
						value.WirelessSellTraffics.Add(this);
						this._AdditionalServiceID = value.ID;
					}
					else
					{
						this._AdditionalServiceID = default(int);
					}
					this.SendPropertyChanged("ADSLService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WirelessSellTraffic", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.WirelessSellTraffic = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.WirelessSellTraffic = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wiring")]
	public partial class Wiring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _IssueWiringID;
		
		private long _RequestID;
		
		private System.Nullable<long> _InvestigatePossibilityID;
		
		private System.Nullable<long> _OldTelephoneNo;
		
		private System.Nullable<long> _NewTelephoneNo;
		
		private System.Nullable<long> _OldConnectionID;
		
		private System.Nullable<byte> _OldConnectionType;
		
		private System.Nullable<long> _OldBuchtID;
		
		private System.Nullable<byte> _OldBuchtType;
		
		private System.Nullable<long> _ConnectionID;
		
		private System.Nullable<byte> _ConnectionType;
		
		private System.Nullable<long> _BuchtID;
		
		private System.Nullable<byte> _BuchtType;
		
		private System.Nullable<System.DateTime> _WiringDate;
		
		private string _WiringHour;
		
		private string _WiringComment;
		
		private System.Nullable<System.DateTime> _WiringInsertDate;
		
		private System.Nullable<int> _WiringStatus;
		
		private System.Nullable<System.DateTime> _ResolveObstacleDate;
		
		private string _ResolveObstacleHour;
		
		private System.Nullable<bool> _HasContinueWiringPermission;
		
		private System.Nullable<System.DateTime> _MDFWiringDate;
		
		private string _MDFWiringHour;
		
		private string _MDFComment;
		
		private System.Nullable<System.DateTime> _MDFInsertDate;
		
		private System.Nullable<int> _MDFStatus;
		
		private System.Nullable<bool> _HasReport;
		
		private System.Nullable<int> _NetworkOfficerID;
		
		private int _Status;
		
		private EntitySet<InstallLine> _InstallLines;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Failure117NetworkContractorOfficer> _Failure117NetworkContractorOfficer;
		
		private EntityRef<IssueWiring> _IssueWiring;
		
		private EntityRef<Status> _Status1;
		
		private EntityRef<Status> _Status2;
		
		private EntityRef<Status> _Status3;
		
		private EntityRef<InvestigatePossibility> _InvestigatePossibility;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnIssueWiringIDChanging(long value);
    partial void OnIssueWiringIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnInvestigatePossibilityIDChanging(System.Nullable<long> value);
    partial void OnInvestigatePossibilityIDChanged();
    partial void OnOldTelephoneNoChanging(System.Nullable<long> value);
    partial void OnOldTelephoneNoChanged();
    partial void OnNewTelephoneNoChanging(System.Nullable<long> value);
    partial void OnNewTelephoneNoChanged();
    partial void OnOldConnectionIDChanging(System.Nullable<long> value);
    partial void OnOldConnectionIDChanged();
    partial void OnOldConnectionTypeChanging(System.Nullable<byte> value);
    partial void OnOldConnectionTypeChanged();
    partial void OnOldBuchtIDChanging(System.Nullable<long> value);
    partial void OnOldBuchtIDChanged();
    partial void OnOldBuchtTypeChanging(System.Nullable<byte> value);
    partial void OnOldBuchtTypeChanged();
    partial void OnConnectionIDChanging(System.Nullable<long> value);
    partial void OnConnectionIDChanged();
    partial void OnConnectionTypeChanging(System.Nullable<byte> value);
    partial void OnConnectionTypeChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnBuchtTypeChanging(System.Nullable<byte> value);
    partial void OnBuchtTypeChanged();
    partial void OnWiringDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWiringDateChanged();
    partial void OnWiringHourChanging(string value);
    partial void OnWiringHourChanged();
    partial void OnWiringCommentChanging(string value);
    partial void OnWiringCommentChanged();
    partial void OnWiringInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWiringInsertDateChanged();
    partial void OnWiringStatusChanging(System.Nullable<int> value);
    partial void OnWiringStatusChanged();
    partial void OnResolveObstacleDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResolveObstacleDateChanged();
    partial void OnResolveObstacleHourChanging(string value);
    partial void OnResolveObstacleHourChanged();
    partial void OnHasContinueWiringPermissionChanging(System.Nullable<bool> value);
    partial void OnHasContinueWiringPermissionChanged();
    partial void OnMDFWiringDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFWiringDateChanged();
    partial void OnMDFWiringHourChanging(string value);
    partial void OnMDFWiringHourChanged();
    partial void OnMDFCommentChanging(string value);
    partial void OnMDFCommentChanged();
    partial void OnMDFInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFInsertDateChanged();
    partial void OnMDFStatusChanging(System.Nullable<int> value);
    partial void OnMDFStatusChanged();
    partial void OnHasReportChanging(System.Nullable<bool> value);
    partial void OnHasReportChanged();
    partial void OnNetworkOfficerIDChanging(System.Nullable<int> value);
    partial void OnNetworkOfficerIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Wiring()
		{
			this._InstallLines = new EntitySet<InstallLine>(new Action<InstallLine>(this.attach_InstallLines), new Action<InstallLine>(this.detach_InstallLines));
			this._Bucht = default(EntityRef<Bucht>);
			this._Failure117NetworkContractorOfficer = default(EntityRef<Failure117NetworkContractorOfficer>);
			this._IssueWiring = default(EntityRef<IssueWiring>);
			this._Status1 = default(EntityRef<Status>);
			this._Status2 = default(EntityRef<Status>);
			this._Status3 = default(EntityRef<Status>);
			this._InvestigatePossibility = default(EntityRef<InvestigatePossibility>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueWiringID", DbType="BigInt NOT NULL")]
		public long IssueWiringID
		{
			get
			{
				return this._IssueWiringID;
			}
			set
			{
				if ((this._IssueWiringID != value))
				{
					if (this._IssueWiring.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIssueWiringIDChanging(value);
					this.SendPropertyChanging();
					this._IssueWiringID = value;
					this.SendPropertyChanged("IssueWiringID");
					this.OnIssueWiringIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestigatePossibilityID", DbType="BigInt")]
		public System.Nullable<long> InvestigatePossibilityID
		{
			get
			{
				return this._InvestigatePossibilityID;
			}
			set
			{
				if ((this._InvestigatePossibilityID != value))
				{
					if (this._InvestigatePossibility.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvestigatePossibilityIDChanging(value);
					this.SendPropertyChanging();
					this._InvestigatePossibilityID = value;
					this.SendPropertyChanged("InvestigatePossibilityID");
					this.OnInvestigatePossibilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> OldTelephoneNo
		{
			get
			{
				return this._OldTelephoneNo;
			}
			set
			{
				if ((this._OldTelephoneNo != value))
				{
					this.OnOldTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._OldTelephoneNo = value;
					this.SendPropertyChanged("OldTelephoneNo");
					this.OnOldTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> NewTelephoneNo
		{
			get
			{
				return this._NewTelephoneNo;
			}
			set
			{
				if ((this._NewTelephoneNo != value))
				{
					this.OnNewTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._NewTelephoneNo = value;
					this.SendPropertyChanged("NewTelephoneNo");
					this.OnNewTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldConnectionID", DbType="BigInt")]
		public System.Nullable<long> OldConnectionID
		{
			get
			{
				return this._OldConnectionID;
			}
			set
			{
				if ((this._OldConnectionID != value))
				{
					this.OnOldConnectionIDChanging(value);
					this.SendPropertyChanging();
					this._OldConnectionID = value;
					this.SendPropertyChanged("OldConnectionID");
					this.OnOldConnectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldConnectionType", DbType="TinyInt")]
		public System.Nullable<byte> OldConnectionType
		{
			get
			{
				return this._OldConnectionType;
			}
			set
			{
				if ((this._OldConnectionType != value))
				{
					this.OnOldConnectionTypeChanging(value);
					this.SendPropertyChanging();
					this._OldConnectionType = value;
					this.SendPropertyChanged("OldConnectionType");
					this.OnOldConnectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtID", DbType="BigInt")]
		public System.Nullable<long> OldBuchtID
		{
			get
			{
				return this._OldBuchtID;
			}
			set
			{
				if ((this._OldBuchtID != value))
				{
					this.OnOldBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtID = value;
					this.SendPropertyChanged("OldBuchtID");
					this.OnOldBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtType", DbType="TinyInt")]
		public System.Nullable<byte> OldBuchtType
		{
			get
			{
				return this._OldBuchtType;
			}
			set
			{
				if ((this._OldBuchtType != value))
				{
					this.OnOldBuchtTypeChanging(value);
					this.SendPropertyChanging();
					this._OldBuchtType = value;
					this.SendPropertyChanged("OldBuchtType");
					this.OnOldBuchtTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionID", DbType="BigInt")]
		public System.Nullable<long> ConnectionID
		{
			get
			{
				return this._ConnectionID;
			}
			set
			{
				if ((this._ConnectionID != value))
				{
					this.OnConnectionIDChanging(value);
					this.SendPropertyChanging();
					this._ConnectionID = value;
					this.SendPropertyChanged("ConnectionID");
					this.OnConnectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionType", DbType="TinyInt")]
		public System.Nullable<byte> ConnectionType
		{
			get
			{
				return this._ConnectionType;
			}
			set
			{
				if ((this._ConnectionType != value))
				{
					this.OnConnectionTypeChanging(value);
					this.SendPropertyChanging();
					this._ConnectionType = value;
					this.SendPropertyChanged("ConnectionType");
					this.OnConnectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtType", DbType="TinyInt")]
		public System.Nullable<byte> BuchtType
		{
			get
			{
				return this._BuchtType;
			}
			set
			{
				if ((this._BuchtType != value))
				{
					this.OnBuchtTypeChanging(value);
					this.SendPropertyChanging();
					this._BuchtType = value;
					this.SendPropertyChanged("BuchtType");
					this.OnBuchtTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> WiringDate
		{
			get
			{
				return this._WiringDate;
			}
			set
			{
				if ((this._WiringDate != value))
				{
					this.OnWiringDateChanging(value);
					this.SendPropertyChanging();
					this._WiringDate = value;
					this.SendPropertyChanged("WiringDate");
					this.OnWiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringHour", DbType="NChar(10)")]
		public string WiringHour
		{
			get
			{
				return this._WiringHour;
			}
			set
			{
				if ((this._WiringHour != value))
				{
					this.OnWiringHourChanging(value);
					this.SendPropertyChanging();
					this._WiringHour = value;
					this.SendPropertyChanged("WiringHour");
					this.OnWiringHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringComment", DbType="NVarChar(1000)")]
		public string WiringComment
		{
			get
			{
				return this._WiringComment;
			}
			set
			{
				if ((this._WiringComment != value))
				{
					this.OnWiringCommentChanging(value);
					this.SendPropertyChanging();
					this._WiringComment = value;
					this.SendPropertyChanged("WiringComment");
					this.OnWiringCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringInsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> WiringInsertDate
		{
			get
			{
				return this._WiringInsertDate;
			}
			set
			{
				if ((this._WiringInsertDate != value))
				{
					this.OnWiringInsertDateChanging(value);
					this.SendPropertyChanging();
					this._WiringInsertDate = value;
					this.SendPropertyChanged("WiringInsertDate");
					this.OnWiringInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiringStatus", DbType="Int")]
		public System.Nullable<int> WiringStatus
		{
			get
			{
				return this._WiringStatus;
			}
			set
			{
				if ((this._WiringStatus != value))
				{
					if (this._Status3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWiringStatusChanging(value);
					this.SendPropertyChanging();
					this._WiringStatus = value;
					this.SendPropertyChanged("WiringStatus");
					this.OnWiringStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolveObstacleDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ResolveObstacleDate
		{
			get
			{
				return this._ResolveObstacleDate;
			}
			set
			{
				if ((this._ResolveObstacleDate != value))
				{
					this.OnResolveObstacleDateChanging(value);
					this.SendPropertyChanging();
					this._ResolveObstacleDate = value;
					this.SendPropertyChanged("ResolveObstacleDate");
					this.OnResolveObstacleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolveObstacleHour", DbType="NChar(10)")]
		public string ResolveObstacleHour
		{
			get
			{
				return this._ResolveObstacleHour;
			}
			set
			{
				if ((this._ResolveObstacleHour != value))
				{
					this.OnResolveObstacleHourChanging(value);
					this.SendPropertyChanging();
					this._ResolveObstacleHour = value;
					this.SendPropertyChanged("ResolveObstacleHour");
					this.OnResolveObstacleHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasContinueWiringPermission", DbType="Bit")]
		public System.Nullable<bool> HasContinueWiringPermission
		{
			get
			{
				return this._HasContinueWiringPermission;
			}
			set
			{
				if ((this._HasContinueWiringPermission != value))
				{
					this.OnHasContinueWiringPermissionChanging(value);
					this.SendPropertyChanging();
					this._HasContinueWiringPermission = value;
					this.SendPropertyChanged("HasContinueWiringPermission");
					this.OnHasContinueWiringPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFWiringDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFWiringDate
		{
			get
			{
				return this._MDFWiringDate;
			}
			set
			{
				if ((this._MDFWiringDate != value))
				{
					this.OnMDFWiringDateChanging(value);
					this.SendPropertyChanging();
					this._MDFWiringDate = value;
					this.SendPropertyChanged("MDFWiringDate");
					this.OnMDFWiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFWiringHour", DbType="NChar(10)")]
		public string MDFWiringHour
		{
			get
			{
				return this._MDFWiringHour;
			}
			set
			{
				if ((this._MDFWiringHour != value))
				{
					this.OnMDFWiringHourChanging(value);
					this.SendPropertyChanging();
					this._MDFWiringHour = value;
					this.SendPropertyChanged("MDFWiringHour");
					this.OnMDFWiringHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFComment", DbType="NVarChar(1000)")]
		public string MDFComment
		{
			get
			{
				return this._MDFComment;
			}
			set
			{
				if ((this._MDFComment != value))
				{
					this.OnMDFCommentChanging(value);
					this.SendPropertyChanging();
					this._MDFComment = value;
					this.SendPropertyChanged("MDFComment");
					this.OnMDFCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFInsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFInsertDate
		{
			get
			{
				return this._MDFInsertDate;
			}
			set
			{
				if ((this._MDFInsertDate != value))
				{
					this.OnMDFInsertDateChanging(value);
					this.SendPropertyChanging();
					this._MDFInsertDate = value;
					this.SendPropertyChanged("MDFInsertDate");
					this.OnMDFInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFStatus", DbType="Int")]
		public System.Nullable<int> MDFStatus
		{
			get
			{
				return this._MDFStatus;
			}
			set
			{
				if ((this._MDFStatus != value))
				{
					if (this._Status2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMDFStatusChanging(value);
					this.SendPropertyChanging();
					this._MDFStatus = value;
					this.SendPropertyChanged("MDFStatus");
					this.OnMDFStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasReport", DbType="Bit")]
		public System.Nullable<bool> HasReport
		{
			get
			{
				return this._HasReport;
			}
			set
			{
				if ((this._HasReport != value))
				{
					this.OnHasReportChanging(value);
					this.SendPropertyChanging();
					this._HasReport = value;
					this.SendPropertyChanged("HasReport");
					this.OnHasReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkOfficerID", DbType="Int")]
		public System.Nullable<int> NetworkOfficerID
		{
			get
			{
				return this._NetworkOfficerID;
			}
			set
			{
				if ((this._NetworkOfficerID != value))
				{
					if (this._Failure117NetworkContractorOfficer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNetworkOfficerIDChanging(value);
					this.SendPropertyChanging();
					this._NetworkOfficerID = value;
					this.SendPropertyChanged("NetworkOfficerID");
					this.OnNetworkOfficerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wiring_InstallLine", Storage="_InstallLines", ThisKey="ID", OtherKey="WiringID")]
		public EntitySet<InstallLine> InstallLines
		{
			get
			{
				return this._InstallLines;
			}
			set
			{
				this._InstallLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_Wiring", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.Wirings.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.Wirings.Add(this);
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Failure117NetworkContractorOfficer_Wiring", Storage="_Failure117NetworkContractorOfficer", ThisKey="NetworkOfficerID", OtherKey="ID", IsForeignKey=true)]
		public Failure117NetworkContractorOfficer Failure117NetworkContractorOfficer
		{
			get
			{
				return this._Failure117NetworkContractorOfficer.Entity;
			}
			set
			{
				Failure117NetworkContractorOfficer previousValue = this._Failure117NetworkContractorOfficer.Entity;
				if (((previousValue != value) 
							|| (this._Failure117NetworkContractorOfficer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Failure117NetworkContractorOfficer.Entity = null;
						previousValue.Wirings.Remove(this);
					}
					this._Failure117NetworkContractorOfficer.Entity = value;
					if ((value != null))
					{
						value.Wirings.Add(this);
						this._NetworkOfficerID = value.ID;
					}
					else
					{
						this._NetworkOfficerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Failure117NetworkContractorOfficer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IssueWiring_Wiring", Storage="_IssueWiring", ThisKey="IssueWiringID", OtherKey="ID", IsForeignKey=true)]
		public IssueWiring IssueWiring
		{
			get
			{
				return this._IssueWiring.Entity;
			}
			set
			{
				IssueWiring previousValue = this._IssueWiring.Entity;
				if (((previousValue != value) 
							|| (this._IssueWiring.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IssueWiring.Entity = null;
						previousValue.Wirings.Remove(this);
					}
					this._IssueWiring.Entity = value;
					if ((value != null))
					{
						value.Wirings.Add(this);
						this._IssueWiringID = value.ID;
					}
					else
					{
						this._IssueWiringID = default(long);
					}
					this.SendPropertyChanged("IssueWiring");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Wiring", Storage="_Status1", ThisKey="Status", OtherKey="ID", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.Wirings.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.Wirings.Add(this);
						this._Status = value.ID;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Wiring1", Storage="_Status2", ThisKey="MDFStatus", OtherKey="ID", IsForeignKey=true)]
		public Status Status2
		{
			get
			{
				return this._Status2.Entity;
			}
			set
			{
				Status previousValue = this._Status2.Entity;
				if (((previousValue != value) 
							|| (this._Status2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status2.Entity = null;
						previousValue.Wirings1.Remove(this);
					}
					this._Status2.Entity = value;
					if ((value != null))
					{
						value.Wirings1.Add(this);
						this._MDFStatus = value.ID;
					}
					else
					{
						this._MDFStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Status2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Wiring2", Storage="_Status3", ThisKey="WiringStatus", OtherKey="ID", IsForeignKey=true)]
		public Status Status3
		{
			get
			{
				return this._Status3.Entity;
			}
			set
			{
				Status previousValue = this._Status3.Entity;
				if (((previousValue != value) 
							|| (this._Status3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status3.Entity = null;
						previousValue.Wirings2.Remove(this);
					}
					this._Status3.Entity = value;
					if ((value != null))
					{
						value.Wirings2.Add(this);
						this._WiringStatus = value.ID;
					}
					else
					{
						this._WiringStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Status3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvestigatePossibility_Wiring", Storage="_InvestigatePossibility", ThisKey="InvestigatePossibilityID", OtherKey="ID", IsForeignKey=true)]
		public InvestigatePossibility InvestigatePossibility
		{
			get
			{
				return this._InvestigatePossibility.Entity;
			}
			set
			{
				InvestigatePossibility previousValue = this._InvestigatePossibility.Entity;
				if (((previousValue != value) 
							|| (this._InvestigatePossibility.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvestigatePossibility.Entity = null;
						previousValue.Wirings.Remove(this);
					}
					this._InvestigatePossibility.Entity = value;
					if ((value != null))
					{
						value.Wirings.Add(this);
						this._InvestigatePossibilityID = value.ID;
					}
					else
					{
						this._InvestigatePossibilityID = default(Nullable<long>);
					}
					this.SendPropertyChanged("InvestigatePossibility");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Wiring", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Wirings.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Wirings.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstallLines(InstallLine entity)
		{
			this.SendPropertyChanging();
			entity.Wiring = this;
		}
		
		private void detach_InstallLines(InstallLine entity)
		{
			this.SendPropertyChanging();
			entity.Wiring = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkFlowLog")]
	public partial class WorkFlowLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _ParentID;
		
		private long _WorkMapID;
		
		private long _RequestID;
		
		private System.Guid _FromUserID;
		
		private System.Nullable<System.Guid> _ToUserID;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _ArchiveDate;
		
		private byte _Status;
		
		private EntitySet<WorkFlowLog> _WorkFlowLogs;
		
		private EntitySet<WorkUnitAction> _WorkUnitActions;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<WorkFlowLog> _WorkFlowLog1;
		
		private EntityRef<WorkFlowRule> _WorkFlowRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    partial void OnWorkMapIDChanging(long value);
    partial void OnWorkMapIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnFromUserIDChanging(System.Guid value);
    partial void OnFromUserIDChanged();
    partial void OnToUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnToUserIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnArchiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArchiveDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public WorkFlowLog()
		{
			this._WorkFlowLogs = new EntitySet<WorkFlowLog>(new Action<WorkFlowLog>(this.attach_WorkFlowLogs), new Action<WorkFlowLog>(this.detach_WorkFlowLogs));
			this._WorkUnitActions = new EntitySet<WorkUnitAction>(new Action<WorkUnitAction>(this.attach_WorkUnitActions), new Action<WorkUnitAction>(this.detach_WorkUnitActions));
			this._Request = default(EntityRef<Request>);
			this._WorkFlowLog1 = default(EntityRef<WorkFlowLog>);
			this._WorkFlowRule = default(EntityRef<WorkFlowRule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt")]
		public System.Nullable<long> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._WorkFlowLog1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkMapID", DbType="BigInt NOT NULL")]
		public long WorkMapID
		{
			get
			{
				return this._WorkMapID;
			}
			set
			{
				if ((this._WorkMapID != value))
				{
					if (this._WorkFlowRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkMapIDChanging(value);
					this.SendPropertyChanging();
					this._WorkMapID = value;
					this.SendPropertyChanged("WorkMapID");
					this.OnWorkMapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FromUserID
		{
			get
			{
				return this._FromUserID;
			}
			set
			{
				if ((this._FromUserID != value))
				{
					this.OnFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromUserID = value;
					this.SendPropertyChanged("FromUserID");
					this.OnFromUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ToUserID
		{
			get
			{
				return this._ToUserID;
			}
			set
			{
				if ((this._ToUserID != value))
				{
					this.OnToUserIDChanging(value);
					this.SendPropertyChanging();
					this._ToUserID = value;
					this.SendPropertyChanged("ToUserID");
					this.OnToUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ArchiveDate
		{
			get
			{
				return this._ArchiveDate;
			}
			set
			{
				if ((this._ArchiveDate != value))
				{
					this.OnArchiveDateChanging(value);
					this.SendPropertyChanging();
					this._ArchiveDate = value;
					this.SendPropertyChanged("ArchiveDate");
					this.OnArchiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowLog_WorkFlowLog", Storage="_WorkFlowLogs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<WorkFlowLog> WorkFlowLogs
		{
			get
			{
				return this._WorkFlowLogs;
			}
			set
			{
				this._WorkFlowLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowLog_WorkUnitAction", Storage="_WorkUnitActions", ThisKey="ID", OtherKey="WorkID")]
		public EntitySet<WorkUnitAction> WorkUnitActions
		{
			get
			{
				return this._WorkUnitActions;
			}
			set
			{
				this._WorkUnitActions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WorkFlowLog", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.WorkFlowLogs.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.WorkFlowLogs.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowLog_WorkFlowLog", Storage="_WorkFlowLog1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public WorkFlowLog WorkFlowLog1
		{
			get
			{
				return this._WorkFlowLog1.Entity;
			}
			set
			{
				WorkFlowLog previousValue = this._WorkFlowLog1.Entity;
				if (((previousValue != value) 
							|| (this._WorkFlowLog1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkFlowLog1.Entity = null;
						previousValue.WorkFlowLogs.Remove(this);
					}
					this._WorkFlowLog1.Entity = value;
					if ((value != null))
					{
						value.WorkFlowLogs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("WorkFlowLog1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowRule_WorkFlowLog", Storage="_WorkFlowRule", ThisKey="WorkMapID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkFlowRule WorkFlowRule
		{
			get
			{
				return this._WorkFlowRule.Entity;
			}
			set
			{
				WorkFlowRule previousValue = this._WorkFlowRule.Entity;
				if (((previousValue != value) 
							|| (this._WorkFlowRule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkFlowRule.Entity = null;
						previousValue.WorkFlowLogs.Remove(this);
					}
					this._WorkFlowRule.Entity = value;
					if ((value != null))
					{
						value.WorkFlowLogs.Add(this);
						this._WorkMapID = value.ID;
					}
					else
					{
						this._WorkMapID = default(long);
					}
					this.SendPropertyChanged("WorkFlowRule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkFlowLogs(WorkFlowLog entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowLog1 = this;
		}
		
		private void detach_WorkFlowLogs(WorkFlowLog entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowLog1 = null;
		}
		
		private void attach_WorkUnitActions(WorkUnitAction entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowLog = this;
		}
		
		private void detach_WorkUnitActions(WorkUnitAction entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowLog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkFlowRule")]
	public partial class WorkFlowRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _ParentRowID;
		
		private int _CurrentStatusID;
		
		private int _NextStatusID;
		
		private int _WorkFlowVersionID;
		
		private int _RequestTypeID;
		
		private System.Nullable<int> _SenderID;
		
		private System.Nullable<int> _RecieverID;
		
		private System.Nullable<int> _ActionID;
		
		private System.Nullable<int> _SpecialConditionsID;
		
		private System.Nullable<int> _FormID;
		
		private int _Priority;
		
		private EntitySet<WorkFlowLog> _WorkFlowLogs;
		
		private EntitySet<WorkFlowRule> _WorkFlowRules;
		
		private EntityRef<Status> _Status;
		
		private EntityRef<Status> _Status1;
		
		private EntityRef<WorkFlowRule> _WorkFlowRule1;
		
		private EntityRef<RequestType> _RequestType;
		
		private EntityRef<WorkFlowVersion> _WorkFlowVersion;
		
		private EntityRef<WorkUnit> _WorkUnit;
		
		private EntityRef<WorkUnit> _WorkUnit1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnParentRowIDChanging(System.Nullable<long> value);
    partial void OnParentRowIDChanged();
    partial void OnCurrentStatusIDChanging(int value);
    partial void OnCurrentStatusIDChanged();
    partial void OnNextStatusIDChanging(int value);
    partial void OnNextStatusIDChanged();
    partial void OnWorkFlowVersionIDChanging(int value);
    partial void OnWorkFlowVersionIDChanged();
    partial void OnRequestTypeIDChanging(int value);
    partial void OnRequestTypeIDChanged();
    partial void OnSenderIDChanging(System.Nullable<int> value);
    partial void OnSenderIDChanged();
    partial void OnRecieverIDChanging(System.Nullable<int> value);
    partial void OnRecieverIDChanged();
    partial void OnActionIDChanging(System.Nullable<int> value);
    partial void OnActionIDChanged();
    partial void OnSpecialConditionsIDChanging(System.Nullable<int> value);
    partial void OnSpecialConditionsIDChanged();
    partial void OnFormIDChanging(System.Nullable<int> value);
    partial void OnFormIDChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public WorkFlowRule()
		{
			this._WorkFlowLogs = new EntitySet<WorkFlowLog>(new Action<WorkFlowLog>(this.attach_WorkFlowLogs), new Action<WorkFlowLog>(this.detach_WorkFlowLogs));
			this._WorkFlowRules = new EntitySet<WorkFlowRule>(new Action<WorkFlowRule>(this.attach_WorkFlowRules), new Action<WorkFlowRule>(this.detach_WorkFlowRules));
			this._Status = default(EntityRef<Status>);
			this._Status1 = default(EntityRef<Status>);
			this._WorkFlowRule1 = default(EntityRef<WorkFlowRule>);
			this._RequestType = default(EntityRef<RequestType>);
			this._WorkFlowVersion = default(EntityRef<WorkFlowVersion>);
			this._WorkUnit = default(EntityRef<WorkUnit>);
			this._WorkUnit1 = default(EntityRef<WorkUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentRowID", DbType="BigInt")]
		public System.Nullable<long> ParentRowID
		{
			get
			{
				return this._ParentRowID;
			}
			set
			{
				if ((this._ParentRowID != value))
				{
					if (this._WorkFlowRule1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentRowIDChanging(value);
					this.SendPropertyChanging();
					this._ParentRowID = value;
					this.SendPropertyChanged("ParentRowID");
					this.OnParentRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStatusID", DbType="Int NOT NULL")]
		public int CurrentStatusID
		{
			get
			{
				return this._CurrentStatusID;
			}
			set
			{
				if ((this._CurrentStatusID != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentStatusIDChanging(value);
					this.SendPropertyChanging();
					this._CurrentStatusID = value;
					this.SendPropertyChanged("CurrentStatusID");
					this.OnCurrentStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextStatusID", DbType="Int NOT NULL")]
		public int NextStatusID
		{
			get
			{
				return this._NextStatusID;
			}
			set
			{
				if ((this._NextStatusID != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNextStatusIDChanging(value);
					this.SendPropertyChanging();
					this._NextStatusID = value;
					this.SendPropertyChanged("NextStatusID");
					this.OnNextStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkFlowVersionID", DbType="Int NOT NULL")]
		public int WorkFlowVersionID
		{
			get
			{
				return this._WorkFlowVersionID;
			}
			set
			{
				if ((this._WorkFlowVersionID != value))
				{
					if (this._WorkFlowVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkFlowVersionIDChanging(value);
					this.SendPropertyChanging();
					this._WorkFlowVersionID = value;
					this.SendPropertyChanged("WorkFlowVersionID");
					this.OnWorkFlowVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="Int")]
		public System.Nullable<int> SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._WorkUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieverID", DbType="Int")]
		public System.Nullable<int> RecieverID
		{
			get
			{
				return this._RecieverID;
			}
			set
			{
				if ((this._RecieverID != value))
				{
					if (this._WorkUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecieverIDChanging(value);
					this.SendPropertyChanging();
					this._RecieverID = value;
					this.SendPropertyChanged("RecieverID");
					this.OnRecieverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int")]
		public System.Nullable<int> ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialConditionsID", DbType="Int")]
		public System.Nullable<int> SpecialConditionsID
		{
			get
			{
				return this._SpecialConditionsID;
			}
			set
			{
				if ((this._SpecialConditionsID != value))
				{
					this.OnSpecialConditionsIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialConditionsID = value;
					this.SendPropertyChanged("SpecialConditionsID");
					this.OnSpecialConditionsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int")]
		public System.Nullable<int> FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowRule_WorkFlowLog", Storage="_WorkFlowLogs", ThisKey="ID", OtherKey="WorkMapID")]
		public EntitySet<WorkFlowLog> WorkFlowLogs
		{
			get
			{
				return this._WorkFlowLogs;
			}
			set
			{
				this._WorkFlowLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowRule_WorkFlowRule", Storage="_WorkFlowRules", ThisKey="ID", OtherKey="ParentRowID")]
		public EntitySet<WorkFlowRule> WorkFlowRules
		{
			get
			{
				return this._WorkFlowRules;
			}
			set
			{
				this._WorkFlowRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WorkFlowRule", Storage="_Status", ThisKey="CurrentStatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.WorkFlowRules.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.WorkFlowRules.Add(this);
						this._CurrentStatusID = value.ID;
					}
					else
					{
						this._CurrentStatusID = default(int);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WorkFlowRule1", Storage="_Status1", ThisKey="NextStatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.WorkFlowRules1.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.WorkFlowRules1.Add(this);
						this._NextStatusID = value.ID;
					}
					else
					{
						this._NextStatusID = default(int);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowRule_WorkFlowRule", Storage="_WorkFlowRule1", ThisKey="ParentRowID", OtherKey="ID", IsForeignKey=true)]
		public WorkFlowRule WorkFlowRule1
		{
			get
			{
				return this._WorkFlowRule1.Entity;
			}
			set
			{
				WorkFlowRule previousValue = this._WorkFlowRule1.Entity;
				if (((previousValue != value) 
							|| (this._WorkFlowRule1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkFlowRule1.Entity = null;
						previousValue.WorkFlowRules.Remove(this);
					}
					this._WorkFlowRule1.Entity = value;
					if ((value != null))
					{
						value.WorkFlowRules.Add(this);
						this._ParentRowID = value.ID;
					}
					else
					{
						this._ParentRowID = default(Nullable<long>);
					}
					this.SendPropertyChanged("WorkFlowRule1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_WorkFlowRule", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.WorkFlowRules.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.WorkFlowRules.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(int);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowVersion_WorkFlowRule", Storage="_WorkFlowVersion", ThisKey="WorkFlowVersionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkFlowVersion WorkFlowVersion
		{
			get
			{
				return this._WorkFlowVersion.Entity;
			}
			set
			{
				WorkFlowVersion previousValue = this._WorkFlowVersion.Entity;
				if (((previousValue != value) 
							|| (this._WorkFlowVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkFlowVersion.Entity = null;
						previousValue.WorkFlowRules.Remove(this);
					}
					this._WorkFlowVersion.Entity = value;
					if ((value != null))
					{
						value.WorkFlowRules.Add(this);
						this._WorkFlowVersionID = value.ID;
					}
					else
					{
						this._WorkFlowVersionID = default(int);
					}
					this.SendPropertyChanged("WorkFlowVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkUnit_WorkFlowRule", Storage="_WorkUnit", ThisKey="RecieverID", OtherKey="ID", IsForeignKey=true)]
		public WorkUnit WorkUnit
		{
			get
			{
				return this._WorkUnit.Entity;
			}
			set
			{
				WorkUnit previousValue = this._WorkUnit.Entity;
				if (((previousValue != value) 
							|| (this._WorkUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkUnit.Entity = null;
						previousValue.WorkFlowRules.Remove(this);
					}
					this._WorkUnit.Entity = value;
					if ((value != null))
					{
						value.WorkFlowRules.Add(this);
						this._RecieverID = value.ID;
					}
					else
					{
						this._RecieverID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkUnit_WorkFlowRule1", Storage="_WorkUnit1", ThisKey="SenderID", OtherKey="ID", IsForeignKey=true)]
		public WorkUnit WorkUnit1
		{
			get
			{
				return this._WorkUnit1.Entity;
			}
			set
			{
				WorkUnit previousValue = this._WorkUnit1.Entity;
				if (((previousValue != value) 
							|| (this._WorkUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkUnit1.Entity = null;
						previousValue.WorkFlowRules1.Remove(this);
					}
					this._WorkUnit1.Entity = value;
					if ((value != null))
					{
						value.WorkFlowRules1.Add(this);
						this._SenderID = value.ID;
					}
					else
					{
						this._SenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkUnit1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkFlowLogs(WorkFlowLog entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowRule = this;
		}
		
		private void detach_WorkFlowLogs(WorkFlowLog entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowRule = null;
		}
		
		private void attach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowRule1 = this;
		}
		
		private void detach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowRule1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkFlowVersion")]
	public partial class WorkFlowVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private long _UserID;
		
		private System.DateTime _InsertDate;
		
		private byte _Status;
		
		private EntitySet<WorkFlowRule> _WorkFlowRules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public WorkFlowVersion()
		{
			this._WorkFlowRules = new EntitySet<WorkFlowRule>(new Action<WorkFlowRule>(this.attach_WorkFlowRules), new Action<WorkFlowRule>(this.detach_WorkFlowRules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowVersion_WorkFlowRule", Storage="_WorkFlowRules", ThisKey="ID", OtherKey="WorkFlowVersionID")]
		public EntitySet<WorkFlowRule> WorkFlowRules
		{
			get
			{
				return this._WorkFlowRules;
			}
			set
			{
				this._WorkFlowRules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowVersion = this;
		}
		
		private void detach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.WorkFlowVersion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkUnit")]
	public partial class WorkUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WorkUnitName;
		
		private System.Guid _IDInFolder;
		
		private System.DateTime _InsertDate;
		
		private EntitySet<WorkFlowRule> _WorkFlowRules;
		
		private EntitySet<WorkFlowRule> _WorkFlowRules1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWorkUnitNameChanging(string value);
    partial void OnWorkUnitNameChanged();
    partial void OnIDInFolderChanging(System.Guid value);
    partial void OnIDInFolderChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public WorkUnit()
		{
			this._WorkFlowRules = new EntitySet<WorkFlowRule>(new Action<WorkFlowRule>(this.attach_WorkFlowRules), new Action<WorkFlowRule>(this.detach_WorkFlowRules));
			this._WorkFlowRules1 = new EntitySet<WorkFlowRule>(new Action<WorkFlowRule>(this.attach_WorkFlowRules1), new Action<WorkFlowRule>(this.detach_WorkFlowRules1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkUnitName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string WorkUnitName
		{
			get
			{
				return this._WorkUnitName;
			}
			set
			{
				if ((this._WorkUnitName != value))
				{
					this.OnWorkUnitNameChanging(value);
					this.SendPropertyChanging();
					this._WorkUnitName = value;
					this.SendPropertyChanged("WorkUnitName");
					this.OnWorkUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInFolder", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDInFolder
		{
			get
			{
				return this._IDInFolder;
			}
			set
			{
				if ((this._IDInFolder != value))
				{
					this.OnIDInFolderChanging(value);
					this.SendPropertyChanging();
					this._IDInFolder = value;
					this.SendPropertyChanged("IDInFolder");
					this.OnIDInFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkUnit_WorkFlowRule", Storage="_WorkFlowRules", ThisKey="ID", OtherKey="RecieverID")]
		public EntitySet<WorkFlowRule> WorkFlowRules
		{
			get
			{
				return this._WorkFlowRules;
			}
			set
			{
				this._WorkFlowRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkUnit_WorkFlowRule1", Storage="_WorkFlowRules1", ThisKey="ID", OtherKey="SenderID")]
		public EntitySet<WorkFlowRule> WorkFlowRules1
		{
			get
			{
				return this._WorkFlowRules1;
			}
			set
			{
				this._WorkFlowRules1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.WorkUnit = this;
		}
		
		private void detach_WorkFlowRules(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.WorkUnit = null;
		}
		
		private void attach_WorkFlowRules1(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.WorkUnit1 = this;
		}
		
		private void detach_WorkFlowRules1(WorkFlowRule entity)
		{
			this.SendPropertyChanging();
			entity.WorkUnit1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkUnitAction")]
	public partial class WorkUnitAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _WorkID;
		
		private System.Guid _UserID;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _ActionStartDate;
		
		private System.DateTime _InsertDate;
		
		private byte _Status;
		
		private EntityRef<WorkFlowLog> _WorkFlowLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWorkIDChanging(long value);
    partial void OnWorkIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnActionStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionStartDateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public WorkUnitAction()
		{
			this._WorkFlowLog = default(EntityRef<WorkFlowLog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkID", DbType="BigInt NOT NULL")]
		public long WorkID
		{
			get
			{
				return this._WorkID;
			}
			set
			{
				if ((this._WorkID != value))
				{
					if (this._WorkFlowLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIDChanging(value);
					this.SendPropertyChanging();
					this._WorkID = value;
					this.SendPropertyChanged("WorkID");
					this.OnWorkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionStartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ActionStartDate
		{
			get
			{
				return this._ActionStartDate;
			}
			set
			{
				if ((this._ActionStartDate != value))
				{
					this.OnActionStartDateChanging(value);
					this.SendPropertyChanging();
					this._ActionStartDate = value;
					this.SendPropertyChanged("ActionStartDate");
					this.OnActionStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkFlowLog_WorkUnitAction", Storage="_WorkFlowLog", ThisKey="WorkID", OtherKey="ID", IsForeignKey=true)]
		public WorkFlowLog WorkFlowLog
		{
			get
			{
				return this._WorkFlowLog.Entity;
			}
			set
			{
				WorkFlowLog previousValue = this._WorkFlowLog.Entity;
				if (((previousValue != value) 
							|| (this._WorkFlowLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkFlowLog.Entity = null;
						previousValue.WorkUnitActions.Remove(this);
					}
					this._WorkFlowLog.Entity = value;
					if ((value != null))
					{
						value.WorkUnitActions.Add(this);
						this._WorkID = value.ID;
					}
					else
					{
						this._WorkID = default(long);
					}
					this.SendPropertyChanged("WorkFlowLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewReservBucht")]
	public partial class ViewReservBucht
	{
		
		private System.Nullable<long> _RequestID;
		
		private System.Nullable<long> _BuchtID;
		
		private System.Nullable<long> _PostContactID;
		
		public ViewReservBucht()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					this._BuchtID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					this._PostContactID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeGSM")]
	public partial class ExchangeGSM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _Type;
		
		private System.Nullable<long> _FromTelephoneNo;
		
		private System.Nullable<long> _ToTelephoneNo;
		
		private int _OldCabinetID;
		
		private System.Nullable<System.DateTime> _MDFAccomplishmentDate;
		
		private string _MDFAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _NetworkAccomplishmentDate;
		
		private string _NetworkAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _ChoiceNumberAccomplishmentDate;
		
		private string _ChoiceNumberAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _SwitchAccomplishmentDate;
		
		private string _SwitchAccomplishmentTime;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnFromTelephoneNoChanging(System.Nullable<long> value);
    partial void OnFromTelephoneNoChanged();
    partial void OnToTelephoneNoChanging(System.Nullable<long> value);
    partial void OnToTelephoneNoChanged();
    partial void OnOldCabinetIDChanging(int value);
    partial void OnOldCabinetIDChanged();
    partial void OnMDFAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMDFAccomplishmentDateChanged();
    partial void OnMDFAccomplishmentTimeChanging(string value);
    partial void OnMDFAccomplishmentTimeChanged();
    partial void OnNetworkAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetworkAccomplishmentDateChanged();
    partial void OnNetworkAccomplishmentTimeChanging(string value);
    partial void OnNetworkAccomplishmentTimeChanged();
    partial void OnChoiceNumberAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChoiceNumberAccomplishmentDateChanged();
    partial void OnChoiceNumberAccomplishmentTimeChanging(string value);
    partial void OnChoiceNumberAccomplishmentTimeChanged();
    partial void OnSwitchAccomplishmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSwitchAccomplishmentDateChanged();
    partial void OnSwitchAccomplishmentTimeChanging(string value);
    partial void OnSwitchAccomplishmentTimeChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    #endregion
		
		public ExchangeGSM()
		{
			this._Request = default(EntityRef<Request>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> FromTelephoneNo
		{
			get
			{
				return this._FromTelephoneNo;
			}
			set
			{
				if ((this._FromTelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._FromTelephoneNo = value;
					this.SendPropertyChanged("FromTelephoneNo");
					this.OnFromTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> ToTelephoneNo
		{
			get
			{
				return this._ToTelephoneNo;
			}
			set
			{
				if ((this._ToTelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ToTelephoneNo = value;
					this.SendPropertyChanged("ToTelephoneNo");
					this.OnToTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetID", DbType="Int NOT NULL")]
		public int OldCabinetID
		{
			get
			{
				return this._OldCabinetID;
			}
			set
			{
				if ((this._OldCabinetID != value))
				{
					this.OnOldCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._OldCabinetID = value;
					this.SendPropertyChanged("OldCabinetID");
					this.OnOldCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> MDFAccomplishmentDate
		{
			get
			{
				return this._MDFAccomplishmentDate;
			}
			set
			{
				if ((this._MDFAccomplishmentDate != value))
				{
					this.OnMDFAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentDate = value;
					this.SendPropertyChanged("MDFAccomplishmentDate");
					this.OnMDFAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFAccomplishmentTime", DbType="NChar(10)")]
		public string MDFAccomplishmentTime
		{
			get
			{
				return this._MDFAccomplishmentTime;
			}
			set
			{
				if ((this._MDFAccomplishmentTime != value))
				{
					this.OnMDFAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._MDFAccomplishmentTime = value;
					this.SendPropertyChanged("MDFAccomplishmentTime");
					this.OnMDFAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NetworkAccomplishmentDate
		{
			get
			{
				return this._NetworkAccomplishmentDate;
			}
			set
			{
				if ((this._NetworkAccomplishmentDate != value))
				{
					this.OnNetworkAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentDate = value;
					this.SendPropertyChanged("NetworkAccomplishmentDate");
					this.OnNetworkAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAccomplishmentTime", DbType="NChar(10)")]
		public string NetworkAccomplishmentTime
		{
			get
			{
				return this._NetworkAccomplishmentTime;
			}
			set
			{
				if ((this._NetworkAccomplishmentTime != value))
				{
					this.OnNetworkAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._NetworkAccomplishmentTime = value;
					this.SendPropertyChanged("NetworkAccomplishmentTime");
					this.OnNetworkAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceNumberAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ChoiceNumberAccomplishmentDate
		{
			get
			{
				return this._ChoiceNumberAccomplishmentDate;
			}
			set
			{
				if ((this._ChoiceNumberAccomplishmentDate != value))
				{
					this.OnChoiceNumberAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._ChoiceNumberAccomplishmentDate = value;
					this.SendPropertyChanged("ChoiceNumberAccomplishmentDate");
					this.OnChoiceNumberAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceNumberAccomplishmentTime", DbType="NChar(10)")]
		public string ChoiceNumberAccomplishmentTime
		{
			get
			{
				return this._ChoiceNumberAccomplishmentTime;
			}
			set
			{
				if ((this._ChoiceNumberAccomplishmentTime != value))
				{
					this.OnChoiceNumberAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._ChoiceNumberAccomplishmentTime = value;
					this.SendPropertyChanged("ChoiceNumberAccomplishmentTime");
					this.OnChoiceNumberAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchAccomplishmentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SwitchAccomplishmentDate
		{
			get
			{
				return this._SwitchAccomplishmentDate;
			}
			set
			{
				if ((this._SwitchAccomplishmentDate != value))
				{
					this.OnSwitchAccomplishmentDateChanging(value);
					this.SendPropertyChanging();
					this._SwitchAccomplishmentDate = value;
					this.SendPropertyChanged("SwitchAccomplishmentDate");
					this.OnSwitchAccomplishmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwitchAccomplishmentTime", DbType="NChar(10)")]
		public string SwitchAccomplishmentTime
		{
			get
			{
				return this._SwitchAccomplishmentTime;
			}
			set
			{
				if ((this._SwitchAccomplishmentTime != value))
				{
					this.OnSwitchAccomplishmentTimeChanging(value);
					this.SendPropertyChanging();
					this._SwitchAccomplishmentTime = value;
					this.SendPropertyChanged("SwitchAccomplishmentTime");
					this.OnSwitchAccomplishmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ExchangeGSM", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ExchangeGSM = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSM = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeGSM", Storage="_Telephone", ThisKey="FromTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.ExchangeGSMs.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMs.Add(this);
						this._FromTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._FromTelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeGSM1", Storage="_Telephone1", ThisKey="ToTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.ExchangeGSMs1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMs1.Add(this);
						this._ToTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._ToTelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExchangeGSMConnections")]
	public partial class ExchangeGSMConnection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _RequestID;
		
		private System.Nullable<long> _BuchtID;
		
		private System.Nullable<byte> _BuchtStatus;
		
		private System.Nullable<int> _CabinetID;
		
		private System.Nullable<long> _CabinetInputID;
		
		private System.Nullable<int> _PostID;
		
		private System.Nullable<long> _PostContactID;
		
		private System.Nullable<byte> _PostContactStatus;
		
		private System.Nullable<long> _FromTelephoneNo;
		
		private System.Nullable<int> _FromSwitchPreCodeID;
		
		private System.Nullable<byte> _FromTelephoneStatus;
		
		private System.Nullable<long> _ToTelephoneNo;
		
		private System.Nullable<int> _ToSwitchPreCodeID;
		
		private System.Nullable<byte> _ToTelephoneStatus;
		
		private EntityRef<Bucht> _Bucht;
		
		private EntityRef<Cabinet> _Cabinet;
		
		private EntityRef<CabinetInput> _CabinetInput;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<PostContact> _PostContact;
		
		private EntityRef<Telephone> _Telephone;
		
		private EntityRef<Telephone> _Telephone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnBuchtIDChanging(System.Nullable<long> value);
    partial void OnBuchtIDChanged();
    partial void OnBuchtStatusChanging(System.Nullable<byte> value);
    partial void OnBuchtStatusChanged();
    partial void OnCabinetIDChanging(System.Nullable<int> value);
    partial void OnCabinetIDChanged();
    partial void OnCabinetInputIDChanging(System.Nullable<long> value);
    partial void OnCabinetInputIDChanged();
    partial void OnPostIDChanging(System.Nullable<int> value);
    partial void OnPostIDChanged();
    partial void OnPostContactIDChanging(System.Nullable<long> value);
    partial void OnPostContactIDChanged();
    partial void OnPostContactStatusChanging(System.Nullable<byte> value);
    partial void OnPostContactStatusChanged();
    partial void OnFromTelephoneNoChanging(System.Nullable<long> value);
    partial void OnFromTelephoneNoChanged();
    partial void OnFromSwitchPreCodeIDChanging(System.Nullable<int> value);
    partial void OnFromSwitchPreCodeIDChanged();
    partial void OnFromTelephoneStatusChanging(System.Nullable<byte> value);
    partial void OnFromTelephoneStatusChanged();
    partial void OnToTelephoneNoChanging(System.Nullable<long> value);
    partial void OnToTelephoneNoChanged();
    partial void OnToSwitchPreCodeIDChanging(System.Nullable<int> value);
    partial void OnToSwitchPreCodeIDChanged();
    partial void OnToTelephoneStatusChanging(System.Nullable<byte> value);
    partial void OnToTelephoneStatusChanged();
    #endregion
		
		public ExchangeGSMConnection()
		{
			this._Bucht = default(EntityRef<Bucht>);
			this._Cabinet = default(EntityRef<Cabinet>);
			this._CabinetInput = default(EntityRef<CabinetInput>);
			this._Post = default(EntityRef<Post>);
			this._PostContact = default(EntityRef<PostContact>);
			this._Telephone = default(EntityRef<Telephone>);
			this._Telephone1 = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtID", DbType="BigInt")]
		public System.Nullable<long> BuchtID
		{
			get
			{
				return this._BuchtID;
			}
			set
			{
				if ((this._BuchtID != value))
				{
					if (this._Bucht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuchtIDChanging(value);
					this.SendPropertyChanging();
					this._BuchtID = value;
					this.SendPropertyChanged("BuchtID");
					this.OnBuchtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtStatus", DbType="TinyInt")]
		public System.Nullable<byte> BuchtStatus
		{
			get
			{
				return this._BuchtStatus;
			}
			set
			{
				if ((this._BuchtStatus != value))
				{
					this.OnBuchtStatusChanging(value);
					this.SendPropertyChanging();
					this._BuchtStatus = value;
					this.SendPropertyChanged("BuchtStatus");
					this.OnBuchtStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetID", DbType="Int")]
		public System.Nullable<int> CabinetID
		{
			get
			{
				return this._CabinetID;
			}
			set
			{
				if ((this._CabinetID != value))
				{
					if (this._Cabinet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetID = value;
					this.SendPropertyChanged("CabinetID");
					this.OnCabinetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputID", DbType="BigInt")]
		public System.Nullable<long> CabinetInputID
		{
			get
			{
				return this._CabinetInputID;
			}
			set
			{
				if ((this._CabinetInputID != value))
				{
					if (this._CabinetInput.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCabinetInputIDChanging(value);
					this.SendPropertyChanging();
					this._CabinetInputID = value;
					this.SendPropertyChanged("CabinetInputID");
					this.OnCabinetInputIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="Int")]
		public System.Nullable<int> PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactID", DbType="BigInt")]
		public System.Nullable<long> PostContactID
		{
			get
			{
				return this._PostContactID;
			}
			set
			{
				if ((this._PostContactID != value))
				{
					if (this._PostContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostContactIDChanging(value);
					this.SendPropertyChanging();
					this._PostContactID = value;
					this.SendPropertyChanged("PostContactID");
					this.OnPostContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContactStatus", DbType="TinyInt")]
		public System.Nullable<byte> PostContactStatus
		{
			get
			{
				return this._PostContactStatus;
			}
			set
			{
				if ((this._PostContactStatus != value))
				{
					this.OnPostContactStatusChanging(value);
					this.SendPropertyChanging();
					this._PostContactStatus = value;
					this.SendPropertyChanged("PostContactStatus");
					this.OnPostContactStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> FromTelephoneNo
		{
			get
			{
				return this._FromTelephoneNo;
			}
			set
			{
				if ((this._FromTelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._FromTelephoneNo = value;
					this.SendPropertyChanged("FromTelephoneNo");
					this.OnFromTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSwitchPreCodeID", DbType="Int")]
		public System.Nullable<int> FromSwitchPreCodeID
		{
			get
			{
				return this._FromSwitchPreCodeID;
			}
			set
			{
				if ((this._FromSwitchPreCodeID != value))
				{
					this.OnFromSwitchPreCodeIDChanging(value);
					this.SendPropertyChanging();
					this._FromSwitchPreCodeID = value;
					this.SendPropertyChanged("FromSwitchPreCodeID");
					this.OnFromSwitchPreCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephoneStatus", DbType="TinyInt")]
		public System.Nullable<byte> FromTelephoneStatus
		{
			get
			{
				return this._FromTelephoneStatus;
			}
			set
			{
				if ((this._FromTelephoneStatus != value))
				{
					this.OnFromTelephoneStatusChanging(value);
					this.SendPropertyChanging();
					this._FromTelephoneStatus = value;
					this.SendPropertyChanged("FromTelephoneStatus");
					this.OnFromTelephoneStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> ToTelephoneNo
		{
			get
			{
				return this._ToTelephoneNo;
			}
			set
			{
				if ((this._ToTelephoneNo != value))
				{
					if (this._Telephone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._ToTelephoneNo = value;
					this.SendPropertyChanged("ToTelephoneNo");
					this.OnToTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToSwitchPreCodeID", DbType="Int")]
		public System.Nullable<int> ToSwitchPreCodeID
		{
			get
			{
				return this._ToSwitchPreCodeID;
			}
			set
			{
				if ((this._ToSwitchPreCodeID != value))
				{
					this.OnToSwitchPreCodeIDChanging(value);
					this.SendPropertyChanging();
					this._ToSwitchPreCodeID = value;
					this.SendPropertyChanged("ToSwitchPreCodeID");
					this.OnToSwitchPreCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneStatus", DbType="TinyInt")]
		public System.Nullable<byte> ToTelephoneStatus
		{
			get
			{
				return this._ToTelephoneStatus;
			}
			set
			{
				if ((this._ToTelephoneStatus != value))
				{
					this.OnToTelephoneStatusChanging(value);
					this.SendPropertyChanging();
					this._ToTelephoneStatus = value;
					this.SendPropertyChanged("ToTelephoneStatus");
					this.OnToTelephoneStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bucht_ExchangeGSMConnection", Storage="_Bucht", ThisKey="BuchtID", OtherKey="ID", IsForeignKey=true)]
		public Bucht Bucht
		{
			get
			{
				return this._Bucht.Entity;
			}
			set
			{
				Bucht previousValue = this._Bucht.Entity;
				if (((previousValue != value) 
							|| (this._Bucht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bucht.Entity = null;
						previousValue.ExchangeGSMConnections.Remove(this);
					}
					this._Bucht.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMConnections.Add(this);
						this._BuchtID = value.ID;
					}
					else
					{
						this._BuchtID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Bucht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cabinet_ExchangeGSMConnection", Storage="_Cabinet", ThisKey="CabinetID", OtherKey="ID", IsForeignKey=true)]
		public Cabinet Cabinet
		{
			get
			{
				return this._Cabinet.Entity;
			}
			set
			{
				Cabinet previousValue = this._Cabinet.Entity;
				if (((previousValue != value) 
							|| (this._Cabinet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cabinet.Entity = null;
						previousValue.ExchangeGSMConnections.Remove(this);
					}
					this._Cabinet.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMConnections.Add(this);
						this._CabinetID = value.ID;
					}
					else
					{
						this._CabinetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cabinet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabinetInput_ExchangeGSMConnection", Storage="_CabinetInput", ThisKey="CabinetInputID", OtherKey="ID", IsForeignKey=true)]
		public CabinetInput CabinetInput
		{
			get
			{
				return this._CabinetInput.Entity;
			}
			set
			{
				CabinetInput previousValue = this._CabinetInput.Entity;
				if (((previousValue != value) 
							|| (this._CabinetInput.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabinetInput.Entity = null;
						previousValue.ExchangeGSMConnections.Remove(this);
					}
					this._CabinetInput.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMConnections.Add(this);
						this._CabinetInputID = value.ID;
					}
					else
					{
						this._CabinetInputID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CabinetInput");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_ExchangeGSMConnection", Storage="_Post", ThisKey="PostID", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.ExchangeGSMConnections.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMConnections.Add(this);
						this._PostID = value.ID;
					}
					else
					{
						this._PostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostContact_ExchangeGSMConnection", Storage="_PostContact", ThisKey="PostContactID", OtherKey="ID", IsForeignKey=true)]
		public PostContact PostContact
		{
			get
			{
				return this._PostContact.Entity;
			}
			set
			{
				PostContact previousValue = this._PostContact.Entity;
				if (((previousValue != value) 
							|| (this._PostContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostContact.Entity = null;
						previousValue.ExchangeGSMConnections.Remove(this);
					}
					this._PostContact.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMConnections.Add(this);
						this._PostContactID = value.ID;
					}
					else
					{
						this._PostContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PostContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeGSMConnection", Storage="_Telephone", ThisKey="FromTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.ExchangeGSMConnections.Remove(this);
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMConnections.Add(this);
						this._FromTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._FromTelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_ExchangeGSMConnection1", Storage="_Telephone1", ThisKey="ToTelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone1
		{
			get
			{
				return this._Telephone1.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone1.Entity;
				if (((previousValue != value) 
							|| (this._Telephone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone1.Entity = null;
						previousValue.ExchangeGSMConnections1.Remove(this);
					}
					this._Telephone1.Entity = value;
					if ((value != null))
					{
						value.ExchangeGSMConnections1.Add(this);
						this._ToTelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._ToTelephoneNo = default(Nullable<long>);
					}
					this.SendPropertyChanged("Telephone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelecomminucationServicePayment")]
	public partial class TelecomminucationServicePayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelecomminucationServiceID;
		
		private long _RequestID;
		
		private decimal _Quantity;
		
		private decimal _NetAmount;
		
		private int _Discount;
		
		private decimal _NetAmountWithDiscount;
		
		private int _TaxAndTollAmount;
		
		private decimal _AmountSum;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<TelecomminucationService> _TelecomminucationService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelecomminucationServiceIDChanging(long value);
    partial void OnTelecomminucationServiceIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnNetAmountChanging(decimal value);
    partial void OnNetAmountChanged();
    partial void OnDiscountChanging(int value);
    partial void OnDiscountChanged();
    partial void OnNetAmountWithDiscountChanging(decimal value);
    partial void OnNetAmountWithDiscountChanged();
    partial void OnTaxAndTollAmountChanging(int value);
    partial void OnTaxAndTollAmountChanged();
    partial void OnAmountSumChanging(decimal value);
    partial void OnAmountSumChanged();
    #endregion
		
		public TelecomminucationServicePayment()
		{
			this._Request = default(EntityRef<Request>);
			this._TelecomminucationService = default(EntityRef<TelecomminucationService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelecomminucationServiceID", DbType="BigInt NOT NULL")]
		public long TelecomminucationServiceID
		{
			get
			{
				return this._TelecomminucationServiceID;
			}
			set
			{
				if ((this._TelecomminucationServiceID != value))
				{
					if (this._TelecomminucationService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelecomminucationServiceIDChanging(value);
					this.SendPropertyChanging();
					this._TelecomminucationServiceID = value;
					this.SendPropertyChanged("TelecomminucationServiceID");
					this.OnTelecomminucationServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Money NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmount", DbType="Money NOT NULL")]
		public decimal NetAmount
		{
			get
			{
				return this._NetAmount;
			}
			set
			{
				if ((this._NetAmount != value))
				{
					this.OnNetAmountChanging(value);
					this.SendPropertyChanging();
					this._NetAmount = value;
					this.SendPropertyChanged("NetAmount");
					this.OnNetAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int NOT NULL")]
		public int Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmountWithDiscount", DbType="Money NOT NULL")]
		public decimal NetAmountWithDiscount
		{
			get
			{
				return this._NetAmountWithDiscount;
			}
			set
			{
				if ((this._NetAmountWithDiscount != value))
				{
					this.OnNetAmountWithDiscountChanging(value);
					this.SendPropertyChanging();
					this._NetAmountWithDiscount = value;
					this.SendPropertyChanged("NetAmountWithDiscount");
					this.OnNetAmountWithDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAndTollAmount", DbType="Int NOT NULL")]
		public int TaxAndTollAmount
		{
			get
			{
				return this._TaxAndTollAmount;
			}
			set
			{
				if ((this._TaxAndTollAmount != value))
				{
					this.OnTaxAndTollAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAndTollAmount = value;
					this.SendPropertyChanged("TaxAndTollAmount");
					this.OnTaxAndTollAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountSum", DbType="Money NOT NULL")]
		public decimal AmountSum
		{
			get
			{
				return this._AmountSum;
			}
			set
			{
				if ((this._AmountSum != value))
				{
					this.OnAmountSumChanging(value);
					this.SendPropertyChanging();
					this._AmountSum = value;
					this.SendPropertyChanged("AmountSum");
					this.OnAmountSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_TelecomminucationServicePayment", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.TelecomminucationServicePayments.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.TelecomminucationServicePayments.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TelecomminucationService_TelecomminucationServicePayment", Storage="_TelecomminucationService", ThisKey="TelecomminucationServiceID", OtherKey="ID", IsForeignKey=true)]
		public TelecomminucationService TelecomminucationService
		{
			get
			{
				return this._TelecomminucationService.Entity;
			}
			set
			{
				TelecomminucationService previousValue = this._TelecomminucationService.Entity;
				if (((previousValue != value) 
							|| (this._TelecomminucationService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TelecomminucationService.Entity = null;
						previousValue.TelecomminucationServicePayments.Remove(this);
					}
					this._TelecomminucationService.Entity = value;
					if ((value != null))
					{
						value.TelecomminucationServicePayments.Add(this);
						this._TelecomminucationServiceID = value.ID;
					}
					else
					{
						this._TelecomminucationServiceID = default(long);
					}
					this.SendPropertyChanged("TelecomminucationService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Antenna")]
	public partial class Antenna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private int _Count;
		
		private string _Height;
		
		private System.Nullable<long> _SpaceAndPowerID;
		
		private EntityRef<SpaceAndPower> _SpaceAndPower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnSpaceAndPowerIDChanging(System.Nullable<long> value);
    partial void OnSpaceAndPowerIDChanged();
    #endregion
		
		public Antenna()
		{
			this._SpaceAndPower = default(EntityRef<SpaceAndPower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceAndPowerID", DbType="BigInt")]
		public System.Nullable<long> SpaceAndPowerID
		{
			get
			{
				return this._SpaceAndPowerID;
			}
			set
			{
				if ((this._SpaceAndPowerID != value))
				{
					if (this._SpaceAndPower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpaceAndPowerIDChanging(value);
					this.SendPropertyChanging();
					this._SpaceAndPowerID = value;
					this.SendPropertyChanged("SpaceAndPowerID");
					this.OnSpaceAndPowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpaceAndPower_Antenna", Storage="_SpaceAndPower", ThisKey="SpaceAndPowerID", OtherKey="ID", IsForeignKey=true)]
		public SpaceAndPower SpaceAndPower
		{
			get
			{
				return this._SpaceAndPower.Entity;
			}
			set
			{
				SpaceAndPower previousValue = this._SpaceAndPower.Entity;
				if (((previousValue != value) 
							|| (this._SpaceAndPower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpaceAndPower.Entity = null;
						previousValue.Antennas.Remove(this);
					}
					this._SpaceAndPower.Entity = value;
					if ((value != null))
					{
						value.Antennas.Add(this);
						this._SpaceAndPowerID = value.ID;
					}
					else
					{
						this._SpaceAndPowerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("SpaceAndPower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZeroStatus")]
	public partial class ZeroStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _ClassTelephone;
		
		private byte _OldClassTelephone;
		
		private System.Nullable<long> _ZeroTypeCloseStatusReportID;
		
		private System.Nullable<long> _ZeroTypeOpenStatusReportID;
		
		private string _InstallHour;
		
		private System.Nullable<System.DateTime> _InstallDate;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private System.Nullable<bool> _HasSecondZeroBlockCost;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnClassTelephoneChanging(byte value);
    partial void OnClassTelephoneChanged();
    partial void OnOldClassTelephoneChanging(byte value);
    partial void OnOldClassTelephoneChanged();
    partial void OnZeroTypeCloseStatusReportIDChanging(System.Nullable<long> value);
    partial void OnZeroTypeCloseStatusReportIDChanged();
    partial void OnZeroTypeOpenStatusReportIDChanging(System.Nullable<long> value);
    partial void OnZeroTypeOpenStatusReportIDChanged();
    partial void OnInstallHourChanging(string value);
    partial void OnInstallHourChanged();
    partial void OnInstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallDateChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnHasSecondZeroBlockCostChanging(System.Nullable<bool> value);
    partial void OnHasSecondZeroBlockCostChanged();
    #endregion
		
		public ZeroStatus()
		{
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTelephone", DbType="TinyInt NOT NULL")]
		public byte ClassTelephone
		{
			get
			{
				return this._ClassTelephone;
			}
			set
			{
				if ((this._ClassTelephone != value))
				{
					this.OnClassTelephoneChanging(value);
					this.SendPropertyChanging();
					this._ClassTelephone = value;
					this.SendPropertyChanged("ClassTelephone");
					this.OnClassTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldClassTelephone", DbType="TinyInt NOT NULL")]
		public byte OldClassTelephone
		{
			get
			{
				return this._OldClassTelephone;
			}
			set
			{
				if ((this._OldClassTelephone != value))
				{
					this.OnOldClassTelephoneChanging(value);
					this.SendPropertyChanging();
					this._OldClassTelephone = value;
					this.SendPropertyChanged("OldClassTelephone");
					this.OnOldClassTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZeroTypeCloseStatusReportID", DbType="BigInt")]
		public System.Nullable<long> ZeroTypeCloseStatusReportID
		{
			get
			{
				return this._ZeroTypeCloseStatusReportID;
			}
			set
			{
				if ((this._ZeroTypeCloseStatusReportID != value))
				{
					this.OnZeroTypeCloseStatusReportIDChanging(value);
					this.SendPropertyChanging();
					this._ZeroTypeCloseStatusReportID = value;
					this.SendPropertyChanged("ZeroTypeCloseStatusReportID");
					this.OnZeroTypeCloseStatusReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZeroTypeOpenStatusReportID", DbType="BigInt")]
		public System.Nullable<long> ZeroTypeOpenStatusReportID
		{
			get
			{
				return this._ZeroTypeOpenStatusReportID;
			}
			set
			{
				if ((this._ZeroTypeOpenStatusReportID != value))
				{
					this.OnZeroTypeOpenStatusReportIDChanging(value);
					this.SendPropertyChanging();
					this._ZeroTypeOpenStatusReportID = value;
					this.SendPropertyChanged("ZeroTypeOpenStatusReportID");
					this.OnZeroTypeOpenStatusReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallHour", DbType="Char(10)")]
		public string InstallHour
		{
			get
			{
				return this._InstallHour;
			}
			set
			{
				if ((this._InstallHour != value))
				{
					this.OnInstallHourChanging(value);
					this.SendPropertyChanging();
					this._InstallHour = value;
					this.SendPropertyChanged("InstallHour");
					this.OnInstallHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallDate
		{
			get
			{
				return this._InstallDate;
			}
			set
			{
				if ((this._InstallDate != value))
				{
					this.OnInstallDateChanging(value);
					this.SendPropertyChanging();
					this._InstallDate = value;
					this.SendPropertyChanged("InstallDate");
					this.OnInstallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSecondZeroBlockCost", DbType="Bit")]
		public System.Nullable<bool> HasSecondZeroBlockCost
		{
			get
			{
				return this._HasSecondZeroBlockCost;
			}
			set
			{
				if ((this._HasSecondZeroBlockCost != value))
				{
					this.OnHasSecondZeroBlockCostChanging(value);
					this.SendPropertyChanging();
					this._HasSecondZeroBlockCost = value;
					this.SendPropertyChanged("HasSecondZeroBlockCost");
					this.OnHasSecondZeroBlockCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_ZeroStatus", Storage="_Request", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.ZeroStatus = null;
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.ZeroStatus = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Failure117UB")]
	public partial class Failure117UB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _TelephoneNo;
		
		private int _CenterID;
		
		private System.DateTime _UBDate;
		
		private int _UserID;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<Center> _Center;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnCenterIDChanging(int value);
    partial void OnCenterIDChanged();
    partial void OnUBDateChanging(System.DateTime value);
    partial void OnUBDateChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public Failure117UB()
		{
			this._Center = default(EntityRef<Center>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterID", DbType="Int NOT NULL")]
		public int CenterID
		{
			get
			{
				return this._CenterID;
			}
			set
			{
				if ((this._CenterID != value))
				{
					if (this._Center.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CenterID = value;
					this.SendPropertyChanged("CenterID");
					this.OnCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UBDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UBDate
		{
			get
			{
				return this._UBDate;
			}
			set
			{
				if ((this._UBDate != value))
				{
					this.OnUBDateChanging(value);
					this.SendPropertyChanging();
					this._UBDate = value;
					this.SendPropertyChanged("UBDate");
					this.OnUBDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Center_Failure117UB", Storage="_Center", ThisKey="CenterID", OtherKey="ID", IsForeignKey=true)]
		public Center Center
		{
			get
			{
				return this._Center.Entity;
			}
			set
			{
				Center previousValue = this._Center.Entity;
				if (((previousValue != value) 
							|| (this._Center.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Center.Entity = null;
						previousValue.Failure117UBs.Remove(this);
					}
					this._Center.Entity = value;
					if ((value != null))
					{
						value.Failure117UBs.Add(this);
						this._CenterID = value.ID;
					}
					else
					{
						this._CenterID = default(int);
					}
					this.SendPropertyChanged("Center");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GSMSimCard")]
	public partial class GSMSimCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TelephoneNo;
		
		private string _Code;
		
		private EntityRef<Telephone> _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelephoneNoChanging(long value);
    partial void OnTelephoneNoChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public GSMSimCard()
		{
			this._Telephone = default(EntityRef<Telephone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					if (this._Telephone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Telephone_GSMSimCard", Storage="_Telephone", ThisKey="TelephoneNo", OtherKey="TelephoneNo", IsForeignKey=true)]
		public Telephone Telephone
		{
			get
			{
				return this._Telephone.Entity;
			}
			set
			{
				Telephone previousValue = this._Telephone.Entity;
				if (((previousValue != value) 
							|| (this._Telephone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Telephone.Entity = null;
						previousValue.GSMSimCard = null;
					}
					this._Telephone.Entity = value;
					if ((value != null))
					{
						value.GSMSimCard = this;
						this._TelephoneNo = value.TelephoneNo;
					}
					else
					{
						this._TelephoneNo = default(long);
					}
					this.SendPropertyChanged("Telephone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsVisible;
		
		private bool _IsServiceRole;
		
		private EntitySet<RoleReportTemplate> _RoleReportTemplates;
		
		private EntitySet<RoleRequestStep> _RoleRequestSteps;
		
		private EntitySet<RoleResource> _RoleResources;
		
		private EntitySet<User> _Users;
		
		private EntitySet<RoleWebService> _RoleWebServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnIsServiceRoleChanging(bool value);
    partial void OnIsServiceRoleChanged();
    #endregion
		
		public Role()
		{
			this._RoleReportTemplates = new EntitySet<RoleReportTemplate>(new Action<RoleReportTemplate>(this.attach_RoleReportTemplates), new Action<RoleReportTemplate>(this.detach_RoleReportTemplates));
			this._RoleRequestSteps = new EntitySet<RoleRequestStep>(new Action<RoleRequestStep>(this.attach_RoleRequestSteps), new Action<RoleRequestStep>(this.detach_RoleRequestSteps));
			this._RoleResources = new EntitySet<RoleResource>(new Action<RoleResource>(this.attach_RoleResources), new Action<RoleResource>(this.detach_RoleResources));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._RoleWebServices = new EntitySet<RoleWebService>(new Action<RoleWebService>(this.attach_RoleWebServices), new Action<RoleWebService>(this.detach_RoleWebServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(63) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(63)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsServiceRole", DbType="Bit NOT NULL")]
		public bool IsServiceRole
		{
			get
			{
				return this._IsServiceRole;
			}
			set
			{
				if ((this._IsServiceRole != value))
				{
					this.OnIsServiceRoleChanging(value);
					this.SendPropertyChanging();
					this._IsServiceRole = value;
					this.SendPropertyChanged("IsServiceRole");
					this.OnIsServiceRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleReportTemplate", Storage="_RoleReportTemplates", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<RoleReportTemplate> RoleReportTemplates
		{
			get
			{
				return this._RoleReportTemplates;
			}
			set
			{
				this._RoleReportTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleRequestStep", Storage="_RoleRequestSteps", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<RoleRequestStep> RoleRequestSteps
		{
			get
			{
				return this._RoleRequestSteps;
			}
			set
			{
				this._RoleRequestSteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleResource", Storage="_RoleResources", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<RoleResource> RoleResources
		{
			get
			{
				return this._RoleResources;
			}
			set
			{
				this._RoleResources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleWebService", Storage="_RoleWebServices", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<RoleWebService> RoleWebServices
		{
			get
			{
				return this._RoleWebServices;
			}
			set
			{
				this._RoleWebServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleReportTemplates(RoleReportTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleReportTemplates(RoleReportTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_RoleRequestSteps(RoleRequestStep entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleRequestSteps(RoleRequestStep entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_RoleResources(RoleResource entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleResources(RoleResource entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_RoleWebServices(RoleWebService entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleWebServices(RoleWebService entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleWebService")]
	public partial class RoleWebService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _WebServiceID;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<WebService> _WebService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnWebServiceIDChanging(System.Nullable<int> value);
    partial void OnWebServiceIDChanged();
    #endregion
		
		public RoleWebService()
		{
			this._Role = default(EntityRef<Role>);
			this._WebService = default(EntityRef<WebService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebServiceID", DbType="Int")]
		public System.Nullable<int> WebServiceID
		{
			get
			{
				return this._WebServiceID;
			}
			set
			{
				if ((this._WebServiceID != value))
				{
					if (this._WebService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebServiceIDChanging(value);
					this.SendPropertyChanging();
					this._WebServiceID = value;
					this.SendPropertyChanged("WebServiceID");
					this.OnWebServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleWebService", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleWebServices.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleWebServices.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebService_RoleWebService", Storage="_WebService", ThisKey="WebServiceID", OtherKey="ID", IsForeignKey=true)]
		public WebService WebService
		{
			get
			{
				return this._WebService.Entity;
			}
			set
			{
				WebService previousValue = this._WebService.Entity;
				if (((previousValue != value) 
							|| (this._WebService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebService.Entity = null;
						previousValue.RoleWebServices.Remove(this);
					}
					this._WebService.Entity = value;
					if ((value != null))
					{
						value.RoleWebServices.Add(this);
						this._WebServiceID = value.ID;
					}
					else
					{
						this._WebServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WebService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebService")]
	public partial class WebService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<RoleWebService> _RoleWebServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public WebService()
		{
			this._RoleWebServices = new EntitySet<RoleWebService>(new Action<RoleWebService>(this.attach_RoleWebServices), new Action<RoleWebService>(this.detach_RoleWebServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebService_RoleWebService", Storage="_RoleWebServices", ThisKey="ID", OtherKey="WebServiceID")]
		public EntitySet<RoleWebService> RoleWebServices
		{
			get
			{
				return this._RoleWebServices;
			}
			set
			{
				this._RoleWebServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleWebServices(RoleWebService entity)
		{
			this.SendPropertyChanging();
			entity.WebService = this;
		}
		
		private void detach_RoleWebServices(RoleWebService entity)
		{
			this.SendPropertyChanging();
			entity.WebService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallRequest")]
	public partial class InstallRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestID;
		
		private System.Nullable<int> _SaleFicheID;
		
		private byte _ChargingType;
		
		private int _TelephoneType;
		
		private System.Nullable<int> _TelephoneTypeGroup;
		
		private string _TelephoneForCharge;
		
		private byte _PosessionType;
		
		private byte _OrderType;
		
		private string _DepositeNo;
		
		private string _MoneyInTrustNo;
		
		private System.Nullable<System.DateTime> _Installdate;
		
		private bool _RegisterAt118;
		
		private string _NameTitleAt118;
		
		private string _LastNameAt118;
		
		private string _TitleAt118;
		
		private byte _ClassTelephone;
		
		private System.Nullable<System.DateTime> _Uninstalldate;
		
		private System.Nullable<int> _InstallRequestTypeID;
		
		private string _LetterNumberOfReinstalling;
		
		private System.Nullable<System.DateTime> _LetterDateOfReinstall;
		
		private System.Nullable<byte> _ReasonReinstall;
		
		private string _LicenseNumber;
		
		private System.Nullable<System.DateTime> _LicenseDate;
		
		private string _Authorized;
		
		private System.Nullable<long> _PassTelephone;
		
		private System.Nullable<long> _CurrentTelephone;
		
		private System.Nullable<long> _InstallAddressID;
		
		private System.Nullable<long> _NearestTelephon;
		
		private System.Nullable<long> _CorrespondenceAddressID;
		
		private System.DateTime _InsertDate;
		
		private int _Status;
		
		private bool _IsADSL;
		
		private System.Nullable<System.DateTime> _InstallationDate;
		
		private bool _IsGSM;
		
		private System.Nullable<byte> _MethodOfPaymentForTelephoneConnection;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<CustomerGroup> _CustomerGroup;
		
		private EntityRef<CustomerType> _CustomerType;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<RequestType> _RequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(long value);
    partial void OnRequestIDChanged();
    partial void OnSaleFicheIDChanging(System.Nullable<int> value);
    partial void OnSaleFicheIDChanged();
    partial void OnChargingTypeChanging(byte value);
    partial void OnChargingTypeChanged();
    partial void OnTelephoneTypeChanging(int value);
    partial void OnTelephoneTypeChanged();
    partial void OnTelephoneTypeGroupChanging(System.Nullable<int> value);
    partial void OnTelephoneTypeGroupChanged();
    partial void OnTelephoneForChargeChanging(string value);
    partial void OnTelephoneForChargeChanged();
    partial void OnPosessionTypeChanging(byte value);
    partial void OnPosessionTypeChanged();
    partial void OnOrderTypeChanging(byte value);
    partial void OnOrderTypeChanged();
    partial void OnDepositeNoChanging(string value);
    partial void OnDepositeNoChanged();
    partial void OnMoneyInTrustNoChanging(string value);
    partial void OnMoneyInTrustNoChanged();
    partial void OnInstalldateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstalldateChanged();
    partial void OnRegisterAt118Changing(bool value);
    partial void OnRegisterAt118Changed();
    partial void OnNameTitleAt118Changing(string value);
    partial void OnNameTitleAt118Changed();
    partial void OnLastNameAt118Changing(string value);
    partial void OnLastNameAt118Changed();
    partial void OnTitleAt118Changing(string value);
    partial void OnTitleAt118Changed();
    partial void OnClassTelephoneChanging(byte value);
    partial void OnClassTelephoneChanged();
    partial void OnUninstalldateChanging(System.Nullable<System.DateTime> value);
    partial void OnUninstalldateChanged();
    partial void OnInstallRequestTypeIDChanging(System.Nullable<int> value);
    partial void OnInstallRequestTypeIDChanged();
    partial void OnLetterNumberOfReinstallingChanging(string value);
    partial void OnLetterNumberOfReinstallingChanged();
    partial void OnLetterDateOfReinstallChanging(System.Nullable<System.DateTime> value);
    partial void OnLetterDateOfReinstallChanged();
    partial void OnReasonReinstallChanging(System.Nullable<byte> value);
    partial void OnReasonReinstallChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnLicenseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLicenseDateChanged();
    partial void OnAuthorizedChanging(string value);
    partial void OnAuthorizedChanged();
    partial void OnPassTelephoneChanging(System.Nullable<long> value);
    partial void OnPassTelephoneChanged();
    partial void OnCurrentTelephoneChanging(System.Nullable<long> value);
    partial void OnCurrentTelephoneChanged();
    partial void OnInstallAddressIDChanging(System.Nullable<long> value);
    partial void OnInstallAddressIDChanged();
    partial void OnNearestTelephonChanging(System.Nullable<long> value);
    partial void OnNearestTelephonChanged();
    partial void OnCorrespondenceAddressIDChanging(System.Nullable<long> value);
    partial void OnCorrespondenceAddressIDChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIsADSLChanging(bool value);
    partial void OnIsADSLChanged();
    partial void OnInstallationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallationDateChanged();
    partial void OnIsGSMChanging(bool value);
    partial void OnIsGSMChanged();
    partial void OnMethodOfPaymentForTelephoneConnectionChanging(System.Nullable<byte> value);
    partial void OnMethodOfPaymentForTelephoneConnectionChanged();
    #endregion
		
		public InstallRequest()
		{
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._CustomerGroup = default(EntityRef<CustomerGroup>);
			this._CustomerType = default(EntityRef<CustomerType>);
			this._Request = default(EntityRef<Request>);
			this._RequestType = default(EntityRef<RequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleFicheID", DbType="Int")]
		public System.Nullable<int> SaleFicheID
		{
			get
			{
				return this._SaleFicheID;
			}
			set
			{
				if ((this._SaleFicheID != value))
				{
					this.OnSaleFicheIDChanging(value);
					this.SendPropertyChanging();
					this._SaleFicheID = value;
					this.SendPropertyChanged("SaleFicheID");
					this.OnSaleFicheIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargingType", DbType="TinyInt NOT NULL")]
		public byte ChargingType
		{
			get
			{
				return this._ChargingType;
			}
			set
			{
				if ((this._ChargingType != value))
				{
					this.OnChargingTypeChanging(value);
					this.SendPropertyChanging();
					this._ChargingType = value;
					this.SendPropertyChanged("ChargingType");
					this.OnChargingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="Int NOT NULL")]
		public int TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneTypeChanging(value);
					this.SendPropertyChanging();
					this._TelephoneType = value;
					this.SendPropertyChanged("TelephoneType");
					this.OnTelephoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneTypeGroup", DbType="Int")]
		public System.Nullable<int> TelephoneTypeGroup
		{
			get
			{
				return this._TelephoneTypeGroup;
			}
			set
			{
				if ((this._TelephoneTypeGroup != value))
				{
					if (this._CustomerGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelephoneTypeGroupChanging(value);
					this.SendPropertyChanging();
					this._TelephoneTypeGroup = value;
					this.SendPropertyChanged("TelephoneTypeGroup");
					this.OnTelephoneTypeGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneForCharge", DbType="NVarChar(20)")]
		public string TelephoneForCharge
		{
			get
			{
				return this._TelephoneForCharge;
			}
			set
			{
				if ((this._TelephoneForCharge != value))
				{
					this.OnTelephoneForChargeChanging(value);
					this.SendPropertyChanging();
					this._TelephoneForCharge = value;
					this.SendPropertyChanged("TelephoneForCharge");
					this.OnTelephoneForChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosessionType", DbType="TinyInt NOT NULL")]
		public byte PosessionType
		{
			get
			{
				return this._PosessionType;
			}
			set
			{
				if ((this._PosessionType != value))
				{
					this.OnPosessionTypeChanging(value);
					this.SendPropertyChanging();
					this._PosessionType = value;
					this.SendPropertyChanged("PosessionType");
					this.OnPosessionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="TinyInt NOT NULL")]
		public byte OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositeNo", DbType="NVarChar(20)")]
		public string DepositeNo
		{
			get
			{
				return this._DepositeNo;
			}
			set
			{
				if ((this._DepositeNo != value))
				{
					this.OnDepositeNoChanging(value);
					this.SendPropertyChanging();
					this._DepositeNo = value;
					this.SendPropertyChanged("DepositeNo");
					this.OnDepositeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyInTrustNo", DbType="NVarChar(20)")]
		public string MoneyInTrustNo
		{
			get
			{
				return this._MoneyInTrustNo;
			}
			set
			{
				if ((this._MoneyInTrustNo != value))
				{
					this.OnMoneyInTrustNoChanging(value);
					this.SendPropertyChanging();
					this._MoneyInTrustNo = value;
					this.SendPropertyChanged("MoneyInTrustNo");
					this.OnMoneyInTrustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installdate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Installdate
		{
			get
			{
				return this._Installdate;
			}
			set
			{
				if ((this._Installdate != value))
				{
					this.OnInstalldateChanging(value);
					this.SendPropertyChanging();
					this._Installdate = value;
					this.SendPropertyChanged("Installdate");
					this.OnInstalldateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterAt118", DbType="Bit NOT NULL")]
		public bool RegisterAt118
		{
			get
			{
				return this._RegisterAt118;
			}
			set
			{
				if ((this._RegisterAt118 != value))
				{
					this.OnRegisterAt118Changing(value);
					this.SendPropertyChanging();
					this._RegisterAt118 = value;
					this.SendPropertyChanged("RegisterAt118");
					this.OnRegisterAt118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTitleAt118", DbType="NVarChar(50)")]
		public string NameTitleAt118
		{
			get
			{
				return this._NameTitleAt118;
			}
			set
			{
				if ((this._NameTitleAt118 != value))
				{
					this.OnNameTitleAt118Changing(value);
					this.SendPropertyChanging();
					this._NameTitleAt118 = value;
					this.SendPropertyChanged("NameTitleAt118");
					this.OnNameTitleAt118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNameAt118", DbType="NVarChar(50)")]
		public string LastNameAt118
		{
			get
			{
				return this._LastNameAt118;
			}
			set
			{
				if ((this._LastNameAt118 != value))
				{
					this.OnLastNameAt118Changing(value);
					this.SendPropertyChanging();
					this._LastNameAt118 = value;
					this.SendPropertyChanged("LastNameAt118");
					this.OnLastNameAt118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleAt118", DbType="NVarChar(50)")]
		public string TitleAt118
		{
			get
			{
				return this._TitleAt118;
			}
			set
			{
				if ((this._TitleAt118 != value))
				{
					this.OnTitleAt118Changing(value);
					this.SendPropertyChanging();
					this._TitleAt118 = value;
					this.SendPropertyChanged("TitleAt118");
					this.OnTitleAt118Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTelephone", DbType="TinyInt NOT NULL")]
		public byte ClassTelephone
		{
			get
			{
				return this._ClassTelephone;
			}
			set
			{
				if ((this._ClassTelephone != value))
				{
					this.OnClassTelephoneChanging(value);
					this.SendPropertyChanging();
					this._ClassTelephone = value;
					this.SendPropertyChanged("ClassTelephone");
					this.OnClassTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uninstalldate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Uninstalldate
		{
			get
			{
				return this._Uninstalldate;
			}
			set
			{
				if ((this._Uninstalldate != value))
				{
					this.OnUninstalldateChanging(value);
					this.SendPropertyChanging();
					this._Uninstalldate = value;
					this.SendPropertyChanged("Uninstalldate");
					this.OnUninstalldateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallRequestTypeID", DbType="Int")]
		public System.Nullable<int> InstallRequestTypeID
		{
			get
			{
				return this._InstallRequestTypeID;
			}
			set
			{
				if ((this._InstallRequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstallRequestTypeID = value;
					this.SendPropertyChanged("InstallRequestTypeID");
					this.OnInstallRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterNumberOfReinstalling", DbType="NVarChar(50)")]
		public string LetterNumberOfReinstalling
		{
			get
			{
				return this._LetterNumberOfReinstalling;
			}
			set
			{
				if ((this._LetterNumberOfReinstalling != value))
				{
					this.OnLetterNumberOfReinstallingChanging(value);
					this.SendPropertyChanging();
					this._LetterNumberOfReinstalling = value;
					this.SendPropertyChanged("LetterNumberOfReinstalling");
					this.OnLetterNumberOfReinstallingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterDateOfReinstall", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LetterDateOfReinstall
		{
			get
			{
				return this._LetterDateOfReinstall;
			}
			set
			{
				if ((this._LetterDateOfReinstall != value))
				{
					this.OnLetterDateOfReinstallChanging(value);
					this.SendPropertyChanging();
					this._LetterDateOfReinstall = value;
					this.SendPropertyChanged("LetterDateOfReinstall");
					this.OnLetterDateOfReinstallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonReinstall", DbType="TinyInt")]
		public System.Nullable<byte> ReasonReinstall
		{
			get
			{
				return this._ReasonReinstall;
			}
			set
			{
				if ((this._ReasonReinstall != value))
				{
					this.OnReasonReinstallChanging(value);
					this.SendPropertyChanging();
					this._ReasonReinstall = value;
					this.SendPropertyChanged("ReasonReinstall");
					this.OnReasonReinstallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="NVarChar(50)")]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LicenseDate
		{
			get
			{
				return this._LicenseDate;
			}
			set
			{
				if ((this._LicenseDate != value))
				{
					this.OnLicenseDateChanging(value);
					this.SendPropertyChanging();
					this._LicenseDate = value;
					this.SendPropertyChanged("LicenseDate");
					this.OnLicenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorized", DbType="NVarChar(50)")]
		public string Authorized
		{
			get
			{
				return this._Authorized;
			}
			set
			{
				if ((this._Authorized != value))
				{
					this.OnAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._Authorized = value;
					this.SendPropertyChanged("Authorized");
					this.OnAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassTelephone", DbType="BigInt")]
		public System.Nullable<long> PassTelephone
		{
			get
			{
				return this._PassTelephone;
			}
			set
			{
				if ((this._PassTelephone != value))
				{
					this.OnPassTelephoneChanging(value);
					this.SendPropertyChanging();
					this._PassTelephone = value;
					this.SendPropertyChanged("PassTelephone");
					this.OnPassTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentTelephone", DbType="BigInt")]
		public System.Nullable<long> CurrentTelephone
		{
			get
			{
				return this._CurrentTelephone;
			}
			set
			{
				if ((this._CurrentTelephone != value))
				{
					this.OnCurrentTelephoneChanging(value);
					this.SendPropertyChanging();
					this._CurrentTelephone = value;
					this.SendPropertyChanged("CurrentTelephone");
					this.OnCurrentTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddressID", DbType="BigInt")]
		public System.Nullable<long> InstallAddressID
		{
			get
			{
				return this._InstallAddressID;
			}
			set
			{
				if ((this._InstallAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallAddressIDChanging(value);
					this.SendPropertyChanging();
					this._InstallAddressID = value;
					this.SendPropertyChanged("InstallAddressID");
					this.OnInstallAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephon", DbType="BigInt")]
		public System.Nullable<long> NearestTelephon
		{
			get
			{
				return this._NearestTelephon;
			}
			set
			{
				if ((this._NearestTelephon != value))
				{
					this.OnNearestTelephonChanging(value);
					this.SendPropertyChanging();
					this._NearestTelephon = value;
					this.SendPropertyChanged("NearestTelephon");
					this.OnNearestTelephonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddressID", DbType="BigInt")]
		public System.Nullable<long> CorrespondenceAddressID
		{
			get
			{
				return this._CorrespondenceAddressID;
			}
			set
			{
				if ((this._CorrespondenceAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorrespondenceAddressIDChanging(value);
					this.SendPropertyChanging();
					this._CorrespondenceAddressID = value;
					this.SendPropertyChanged("CorrespondenceAddressID");
					this.OnCorrespondenceAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsADSL", DbType="Bit NOT NULL")]
		public bool IsADSL
		{
			get
			{
				return this._IsADSL;
			}
			set
			{
				if ((this._IsADSL != value))
				{
					this.OnIsADSLChanging(value);
					this.SendPropertyChanging();
					this._IsADSL = value;
					this.SendPropertyChanged("IsADSL");
					this.OnIsADSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InstallationDate
		{
			get
			{
				return this._InstallationDate;
			}
			set
			{
				if ((this._InstallationDate != value))
				{
					this.OnInstallationDateChanging(value);
					this.SendPropertyChanging();
					this._InstallationDate = value;
					this.SendPropertyChanged("InstallationDate");
					this.OnInstallationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGSM", DbType="Bit NOT NULL")]
		public bool IsGSM
		{
			get
			{
				return this._IsGSM;
			}
			set
			{
				if ((this._IsGSM != value))
				{
					this.OnIsGSMChanging(value);
					this.SendPropertyChanging();
					this._IsGSM = value;
					this.SendPropertyChanged("IsGSM");
					this.OnIsGSMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodOfPaymentForTelephoneConnection", DbType="TinyInt")]
		public System.Nullable<byte> MethodOfPaymentForTelephoneConnection
		{
			get
			{
				return this._MethodOfPaymentForTelephoneConnection;
			}
			set
			{
				if ((this._MethodOfPaymentForTelephoneConnection != value))
				{
					this.OnMethodOfPaymentForTelephoneConnectionChanging(value);
					this.SendPropertyChanging();
					this._MethodOfPaymentForTelephoneConnection = value;
					this.SendPropertyChanged("MethodOfPaymentForTelephoneConnection");
					this.OnMethodOfPaymentForTelephoneConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_InstallRequest", Storage="_Address", ThisKey="InstallAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.InstallRequests.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.InstallRequests.Add(this);
						this._InstallAddressID = value.ID;
					}
					else
					{
						this._InstallAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_InstallRequest1", Storage="_Address1", ThisKey="CorrespondenceAddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.InstallRequests1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.InstallRequests1.Add(this);
						this._CorrespondenceAddressID = value.ID;
					}
					else
					{
						this._CorrespondenceAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerGroup_InstallRequest", Storage="_CustomerGroup", ThisKey="TelephoneTypeGroup", OtherKey="ID", IsForeignKey=true)]
		public CustomerGroup CustomerGroup
		{
			get
			{
				return this._CustomerGroup.Entity;
			}
			set
			{
				CustomerGroup previousValue = this._CustomerGroup.Entity;
				if (((previousValue != value) 
							|| (this._CustomerGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerGroup.Entity = null;
						previousValue.InstallRequests.Remove(this);
					}
					this._CustomerGroup.Entity = value;
					if ((value != null))
					{
						value.InstallRequests.Add(this);
						this._TelephoneTypeGroup = value.ID;
					}
					else
					{
						this._TelephoneTypeGroup = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_InstallRequest", Storage="_CustomerType", ThisKey="TelephoneType", OtherKey="ID", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.InstallRequests.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.InstallRequests.Add(this);
						this._TelephoneType = value.ID;
					}
					else
					{
						this._TelephoneType = default(int);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_InstallRequest", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.InstallRequests.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.InstallRequests.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(long);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_InstallRequest", Storage="_RequestType", ThisKey="InstallRequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.InstallRequests.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.InstallRequests.Add(this);
						this._InstallRequestTypeID = value.ID;
					}
					else
					{
						this._InstallRequestTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelephoneConnectionInstallment")]
	public partial class TelephoneConnectionInstallment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _RequestPaymentID;
		
		private int _UserID;
		
		private int _InstallmentsCount;
		
		private System.DateTime _InsertDate;
		
		private EntityRef<RequestPayment> _RequestPayment;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRequestPaymentIDChanging(long value);
    partial void OnRequestPaymentIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnInstallmentsCountChanging(int value);
    partial void OnInstallmentsCountChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    #endregion
		
		public TelephoneConnectionInstallment()
		{
			this._RequestPayment = default(EntityRef<RequestPayment>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPaymentID", DbType="BigInt NOT NULL")]
		public long RequestPaymentID
		{
			get
			{
				return this._RequestPaymentID;
			}
			set
			{
				if ((this._RequestPaymentID != value))
				{
					if (this._RequestPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._RequestPaymentID = value;
					this.SendPropertyChanged("RequestPaymentID");
					this.OnRequestPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallmentsCount", DbType="Int NOT NULL")]
		public int InstallmentsCount
		{
			get
			{
				return this._InstallmentsCount;
			}
			set
			{
				if ((this._InstallmentsCount != value))
				{
					this.OnInstallmentsCountChanging(value);
					this.SendPropertyChanging();
					this._InstallmentsCount = value;
					this.SendPropertyChanged("InstallmentsCount");
					this.OnInstallmentsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestPayment_TelephoneConnectionInstallment", Storage="_RequestPayment", ThisKey="RequestPaymentID", OtherKey="ID", IsForeignKey=true)]
		public RequestPayment RequestPayment
		{
			get
			{
				return this._RequestPayment.Entity;
			}
			set
			{
				RequestPayment previousValue = this._RequestPayment.Entity;
				if (((previousValue != value) 
							|| (this._RequestPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestPayment.Entity = null;
						previousValue.TelephoneConnectionInstallments.Remove(this);
					}
					this._RequestPayment.Entity = value;
					if ((value != null))
					{
						value.TelephoneConnectionInstallments.Add(this);
						this._RequestPaymentID = value.ID;
					}
					else
					{
						this._RequestPaymentID = default(long);
					}
					this.SendPropertyChanged("RequestPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TelephoneConnectionInstallment", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TelephoneConnectionInstallments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TelephoneConnectionInstallments.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agent")]
	public partial class Agent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Father;
		
		private string _BirthCertificateId;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private string _NationlCode;
		
		private string _Mobile;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFatherChanging(string value);
    partial void OnFatherChanged();
    partial void OnBirthCertificateIdChanging(string value);
    partial void OnBirthCertificateIdChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnNationlCodeChanging(string value);
    partial void OnNationlCodeChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    #endregion
		
		public Agent()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Father", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Father
		{
			get
			{
				return this._Father;
			}
			set
			{
				if ((this._Father != value))
				{
					this.OnFatherChanging(value);
					this.SendPropertyChanging();
					this._Father = value;
					this.SendPropertyChanged("Father");
					this.OnFatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCertificateId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BirthCertificateId
		{
			get
			{
				return this._BirthCertificateId;
			}
			set
			{
				if ((this._BirthCertificateId != value))
				{
					this.OnBirthCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._BirthCertificateId = value;
					this.SendPropertyChanged("BirthCertificateId");
					this.OnBirthCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationlCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationlCode
		{
			get
			{
				return this._NationlCode;
			}
			set
			{
				if ((this._NationlCode != value))
				{
					this.OnNationlCodeChanging(value);
					this.SendPropertyChanging();
					this._NationlCode = value;
					this.SendPropertyChanged("NationlCode");
					this.OnNationlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(11)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Customer", Storage="_Customers", ThisKey="ID", OtherKey="AgentID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Agent = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Agent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _CustomerID;
		
		private byte _PersonType;
		
		private string _NationalID;
		
		private string _NationalCodeOrRecordNo;
		
		private string _FirstNameOrTitle;
		
		private string _LastName;
		
		private string _FatherName;
		
		private System.Nullable<byte> _Gender;
		
		private string _BirthCertificateID;
		
		private System.Nullable<System.DateTime> _BirthDateOrRecordDate;
		
		private string _IssuePlace;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _Email;
		
		private string _Agency;
		
		private string _AgencyNumber;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<long> _ElkaID;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private System.Nullable<long> _AddressID;
		
		private string _Fax;
		
		private System.Nullable<byte> _CompanyType;
		
		private System.Nullable<int> _AgentID;
		
		private System.Nullable<bool> _IsAuthenticated;
		
		private EntitySet<ADSL> _ADSLs;
		
		private EntitySet<ADSLChangeCustomerOwnerCharacteristic> _ADSLChangeCustomerOwnerCharacteristics;
		
		private EntitySet<ADSLChangeCustomerOwnerCharacteristic> _ADSLChangeCustomerOwnerCharacteristics1;
		
		private EntitySet<ADSLChangePlace> _ADSLChangePlaces;
		
		private EntitySet<ADSLRequest> _ADSLRequests;
		
		private EntitySet<BlackList> _BlackLists;
		
		private EntitySet<ChangeLocation> _ChangeLocations;
		
		private EntitySet<ChangeName> _ChangeNames;
		
		private EntitySet<ChangeName> _ChangeNames1;
		
		private EntitySet<ChangeNo> _ChangeNos;
		
		private EntitySet<ExchangeCabinetInputConncetion> _ExchangeCabinetInputConncetions;
		
		private EntitySet<InvestigatePossibilityWaitinglist> _InvestigatePossibilityWaitinglists;
		
		private EntitySet<Request> _Requests;
		
		private EntitySet<RequestDocument> _RequestDocuments;
		
		private EntitySet<SpaceAndPower> _SpaceAndPowers;
		
		private EntitySet<SpecialPrivateCable> _SpecialPrivateCables;
		
		private EntitySet<TakePossession> _TakePossessions;
		
		private EntitySet<Telephone> _Telephones;
		
		private EntitySet<TranslationOpticalCabinetToNormalConncetion> _TranslationOpticalCabinetToNormalConncetions;
		
		private EntitySet<Wireless> _Wirelesses;
		
		private EntitySet<WirelessRequest> _WirelessRequests;
		
		private EntityRef<Customer> _Customer2;
		
		private EntitySet<ShahkarWebApiLog> _ShahkarWebApiLogs;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Agent> _Agent;
		
		private EntityRef<Customer> _Customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnPersonTypeChanging(byte value);
    partial void OnPersonTypeChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnNationalCodeOrRecordNoChanging(string value);
    partial void OnNationalCodeOrRecordNoChanged();
    partial void OnFirstNameOrTitleChanging(string value);
    partial void OnFirstNameOrTitleChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnGenderChanging(System.Nullable<byte> value);
    partial void OnGenderChanged();
    partial void OnBirthCertificateIDChanging(string value);
    partial void OnBirthCertificateIDChanged();
    partial void OnBirthDateOrRecordDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateOrRecordDateChanged();
    partial void OnIssuePlaceChanging(string value);
    partial void OnIssuePlaceChanged();
    partial void OnUrgentTelNoChanging(string value);
    partial void OnUrgentTelNoChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAgencyChanging(string value);
    partial void OnAgencyChanged();
    partial void OnAgencyNumberChanging(string value);
    partial void OnAgencyNumberChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnElkaIDChanging(System.Nullable<long> value);
    partial void OnElkaIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    partial void OnAddressIDChanging(System.Nullable<long> value);
    partial void OnAddressIDChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCompanyTypeChanging(System.Nullable<byte> value);
    partial void OnCompanyTypeChanged();
    partial void OnAgentIDChanging(System.Nullable<int> value);
    partial void OnAgentIDChanged();
    partial void OnIsAuthenticatedChanging(System.Nullable<bool> value);
    partial void OnIsAuthenticatedChanged();
    #endregion
		
		public Customer()
		{
			this._ADSLs = new EntitySet<ADSL>(new Action<ADSL>(this.attach_ADSLs), new Action<ADSL>(this.detach_ADSLs));
			this._ADSLChangeCustomerOwnerCharacteristics = new EntitySet<ADSLChangeCustomerOwnerCharacteristic>(new Action<ADSLChangeCustomerOwnerCharacteristic>(this.attach_ADSLChangeCustomerOwnerCharacteristics), new Action<ADSLChangeCustomerOwnerCharacteristic>(this.detach_ADSLChangeCustomerOwnerCharacteristics));
			this._ADSLChangeCustomerOwnerCharacteristics1 = new EntitySet<ADSLChangeCustomerOwnerCharacteristic>(new Action<ADSLChangeCustomerOwnerCharacteristic>(this.attach_ADSLChangeCustomerOwnerCharacteristics1), new Action<ADSLChangeCustomerOwnerCharacteristic>(this.detach_ADSLChangeCustomerOwnerCharacteristics1));
			this._ADSLChangePlaces = new EntitySet<ADSLChangePlace>(new Action<ADSLChangePlace>(this.attach_ADSLChangePlaces), new Action<ADSLChangePlace>(this.detach_ADSLChangePlaces));
			this._ADSLRequests = new EntitySet<ADSLRequest>(new Action<ADSLRequest>(this.attach_ADSLRequests), new Action<ADSLRequest>(this.detach_ADSLRequests));
			this._BlackLists = new EntitySet<BlackList>(new Action<BlackList>(this.attach_BlackLists), new Action<BlackList>(this.detach_BlackLists));
			this._ChangeLocations = new EntitySet<ChangeLocation>(new Action<ChangeLocation>(this.attach_ChangeLocations), new Action<ChangeLocation>(this.detach_ChangeLocations));
			this._ChangeNames = new EntitySet<ChangeName>(new Action<ChangeName>(this.attach_ChangeNames), new Action<ChangeName>(this.detach_ChangeNames));
			this._ChangeNames1 = new EntitySet<ChangeName>(new Action<ChangeName>(this.attach_ChangeNames1), new Action<ChangeName>(this.detach_ChangeNames1));
			this._ChangeNos = new EntitySet<ChangeNo>(new Action<ChangeNo>(this.attach_ChangeNos), new Action<ChangeNo>(this.detach_ChangeNos));
			this._ExchangeCabinetInputConncetions = new EntitySet<ExchangeCabinetInputConncetion>(new Action<ExchangeCabinetInputConncetion>(this.attach_ExchangeCabinetInputConncetions), new Action<ExchangeCabinetInputConncetion>(this.detach_ExchangeCabinetInputConncetions));
			this._InvestigatePossibilityWaitinglists = new EntitySet<InvestigatePossibilityWaitinglist>(new Action<InvestigatePossibilityWaitinglist>(this.attach_InvestigatePossibilityWaitinglists), new Action<InvestigatePossibilityWaitinglist>(this.detach_InvestigatePossibilityWaitinglists));
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._RequestDocuments = new EntitySet<RequestDocument>(new Action<RequestDocument>(this.attach_RequestDocuments), new Action<RequestDocument>(this.detach_RequestDocuments));
			this._SpaceAndPowers = new EntitySet<SpaceAndPower>(new Action<SpaceAndPower>(this.attach_SpaceAndPowers), new Action<SpaceAndPower>(this.detach_SpaceAndPowers));
			this._SpecialPrivateCables = new EntitySet<SpecialPrivateCable>(new Action<SpecialPrivateCable>(this.attach_SpecialPrivateCables), new Action<SpecialPrivateCable>(this.detach_SpecialPrivateCables));
			this._TakePossessions = new EntitySet<TakePossession>(new Action<TakePossession>(this.attach_TakePossessions), new Action<TakePossession>(this.detach_TakePossessions));
			this._Telephones = new EntitySet<Telephone>(new Action<Telephone>(this.attach_Telephones), new Action<Telephone>(this.detach_Telephones));
			this._TranslationOpticalCabinetToNormalConncetions = new EntitySet<TranslationOpticalCabinetToNormalConncetion>(new Action<TranslationOpticalCabinetToNormalConncetion>(this.attach_TranslationOpticalCabinetToNormalConncetions), new Action<TranslationOpticalCabinetToNormalConncetion>(this.detach_TranslationOpticalCabinetToNormalConncetions));
			this._Wirelesses = new EntitySet<Wireless>(new Action<Wireless>(this.attach_Wirelesses), new Action<Wireless>(this.detach_Wirelesses));
			this._WirelessRequests = new EntitySet<WirelessRequest>(new Action<WirelessRequest>(this.attach_WirelessRequests), new Action<WirelessRequest>(this.detach_WirelessRequests));
			this._Customer2 = default(EntityRef<Customer>);
			this._ShahkarWebApiLogs = new EntitySet<ShahkarWebApiLog>(new Action<ShahkarWebApiLog>(this.attach_ShahkarWebApiLogs), new Action<ShahkarWebApiLog>(this.detach_ShahkarWebApiLogs));
			this._Address = default(EntityRef<Address>);
			this._Agent = default(EntityRef<Agent>);
			this._Customer1 = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(30)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="TinyInt NOT NULL")]
		public byte PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this.OnPersonTypeChanging(value);
					this.SendPropertyChanging();
					this._PersonType = value;
					this.SendPropertyChanged("PersonType");
					this.OnPersonTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(50)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCodeOrRecordNo", DbType="NVarChar(50)")]
		public string NationalCodeOrRecordNo
		{
			get
			{
				return this._NationalCodeOrRecordNo;
			}
			set
			{
				if ((this._NationalCodeOrRecordNo != value))
				{
					this.OnNationalCodeOrRecordNoChanging(value);
					this.SendPropertyChanging();
					this._NationalCodeOrRecordNo = value;
					this.SendPropertyChanged("NationalCodeOrRecordNo");
					this.OnNationalCodeOrRecordNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameOrTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstNameOrTitle
		{
			get
			{
				return this._FirstNameOrTitle;
			}
			set
			{
				if ((this._FirstNameOrTitle != value))
				{
					this.OnFirstNameOrTitleChanging(value);
					this.SendPropertyChanging();
					this._FirstNameOrTitle = value;
					this.SendPropertyChanged("FirstNameOrTitle");
					this.OnFirstNameOrTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt")]
		public System.Nullable<byte> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCertificateID", DbType="NVarChar(50)")]
		public string BirthCertificateID
		{
			get
			{
				return this._BirthCertificateID;
			}
			set
			{
				if ((this._BirthCertificateID != value))
				{
					this.OnBirthCertificateIDChanging(value);
					this.SendPropertyChanging();
					this._BirthCertificateID = value;
					this.SendPropertyChanged("BirthCertificateID");
					this.OnBirthCertificateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDateOrRecordDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> BirthDateOrRecordDate
		{
			get
			{
				return this._BirthDateOrRecordDate;
			}
			set
			{
				if ((this._BirthDateOrRecordDate != value))
				{
					this.OnBirthDateOrRecordDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDateOrRecordDate = value;
					this.SendPropertyChanged("BirthDateOrRecordDate");
					this.OnBirthDateOrRecordDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuePlace", DbType="NVarChar(50)")]
		public string IssuePlace
		{
			get
			{
				return this._IssuePlace;
			}
			set
			{
				if ((this._IssuePlace != value))
				{
					this.OnIssuePlaceChanging(value);
					this.SendPropertyChanging();
					this._IssuePlace = value;
					this.SendPropertyChanged("IssuePlace");
					this.OnIssuePlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="NVarChar(20)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this.OnUrgentTelNoChanging(value);
					this.SendPropertyChanging();
					this._UrgentTelNo = value;
					this.SendPropertyChanged("UrgentTelNo");
					this.OnUrgentTelNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(20)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agency", DbType="NVarChar(50)")]
		public string Agency
		{
			get
			{
				return this._Agency;
			}
			set
			{
				if ((this._Agency != value))
				{
					this.OnAgencyChanging(value);
					this.SendPropertyChanging();
					this._Agency = value;
					this.SendPropertyChanged("Agency");
					this.OnAgencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyNumber", DbType="NVarChar(50)")]
		public string AgencyNumber
		{
			get
			{
				return this._AgencyNumber;
			}
			set
			{
				if ((this._AgencyNumber != value))
				{
					this.OnAgencyNumberChanging(value);
					this.SendPropertyChanging();
					this._AgencyNumber = value;
					this.SendPropertyChanged("AgencyNumber");
					this.OnAgencyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElkaID", DbType="BigInt")]
		public System.Nullable<long> ElkaID
		{
			get
			{
				return this._ElkaID;
			}
			set
			{
				if ((this._ElkaID != value))
				{
					this.OnElkaIDChanging(value);
					this.SendPropertyChanging();
					this._ElkaID = value;
					this.SendPropertyChanged("ElkaID");
					this.OnElkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="BigInt")]
		public System.Nullable<long> AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(40)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="TinyInt")]
		public System.Nullable<byte> CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentID", DbType="Int")]
		public System.Nullable<int> AgentID
		{
			get
			{
				return this._AgentID;
			}
			set
			{
				if ((this._AgentID != value))
				{
					if (this._Agent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgentIDChanging(value);
					this.SendPropertyChanging();
					this._AgentID = value;
					this.SendPropertyChanged("AgentID");
					this.OnAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuthenticated", DbType="Bit")]
		public System.Nullable<bool> IsAuthenticated
		{
			get
			{
				return this._IsAuthenticated;
			}
			set
			{
				if ((this._IsAuthenticated != value))
				{
					this.OnIsAuthenticatedChanging(value);
					this.SendPropertyChanging();
					this._IsAuthenticated = value;
					this.SendPropertyChanged("IsAuthenticated");
					this.OnIsAuthenticatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSL", Storage="_ADSLs", ThisKey="ID", OtherKey="CustomerOwnerID")]
		public EntitySet<ADSL> ADSLs
		{
			get
			{
				return this._ADSLs;
			}
			set
			{
				this._ADSLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSLChangeCustomerOwnerCharacteristic", Storage="_ADSLChangeCustomerOwnerCharacteristics", ThisKey="ID", OtherKey="NewCustomerOwnerID")]
		public EntitySet<ADSLChangeCustomerOwnerCharacteristic> ADSLChangeCustomerOwnerCharacteristics
		{
			get
			{
				return this._ADSLChangeCustomerOwnerCharacteristics;
			}
			set
			{
				this._ADSLChangeCustomerOwnerCharacteristics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSLChangeCustomerOwnerCharacteristic1", Storage="_ADSLChangeCustomerOwnerCharacteristics1", ThisKey="ID", OtherKey="OldCustomerOwnerID")]
		public EntitySet<ADSLChangeCustomerOwnerCharacteristic> ADSLChangeCustomerOwnerCharacteristics1
		{
			get
			{
				return this._ADSLChangeCustomerOwnerCharacteristics1;
			}
			set
			{
				this._ADSLChangeCustomerOwnerCharacteristics1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSLChangePlace", Storage="_ADSLChangePlaces", ThisKey="ID", OtherKey="CustomerOwnerID")]
		public EntitySet<ADSLChangePlace> ADSLChangePlaces
		{
			get
			{
				return this._ADSLChangePlaces;
			}
			set
			{
				this._ADSLChangePlaces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ADSLRequest", Storage="_ADSLRequests", ThisKey="ID", OtherKey="CustomerOwnerID")]
		public EntitySet<ADSLRequest> ADSLRequests
		{
			get
			{
				return this._ADSLRequests;
			}
			set
			{
				this._ADSLRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_BlackList", Storage="_BlackLists", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<BlackList> BlackLists
		{
			get
			{
				return this._BlackLists;
			}
			set
			{
				this._BlackLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeLocation", Storage="_ChangeLocations", ThisKey="ID", OtherKey="NewCustomerID")]
		public EntitySet<ChangeLocation> ChangeLocations
		{
			get
			{
				return this._ChangeLocations;
			}
			set
			{
				this._ChangeLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeName", Storage="_ChangeNames", ThisKey="ID", OtherKey="NewCustomerID")]
		public EntitySet<ChangeName> ChangeNames
		{
			get
			{
				return this._ChangeNames;
			}
			set
			{
				this._ChangeNames.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeName1", Storage="_ChangeNames1", ThisKey="ID", OtherKey="OldCustomerID")]
		public EntitySet<ChangeName> ChangeNames1
		{
			get
			{
				return this._ChangeNames1;
			}
			set
			{
				this._ChangeNames1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeNo", Storage="_ChangeNos", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<ChangeNo> ChangeNos
		{
			get
			{
				return this._ChangeNos;
			}
			set
			{
				this._ChangeNos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ExchangeCabinetInputConncetion", Storage="_ExchangeCabinetInputConncetions", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<ExchangeCabinetInputConncetion> ExchangeCabinetInputConncetions
		{
			get
			{
				return this._ExchangeCabinetInputConncetions;
			}
			set
			{
				this._ExchangeCabinetInputConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_InvestigatePossibilityWaitinglist", Storage="_InvestigatePossibilityWaitinglists", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<InvestigatePossibilityWaitinglist> InvestigatePossibilityWaitinglists
		{
			get
			{
				return this._InvestigatePossibilityWaitinglists;
			}
			set
			{
				this._InvestigatePossibilityWaitinglists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Request", Storage="_Requests", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_RequestDocument", Storage="_RequestDocuments", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<RequestDocument> RequestDocuments
		{
			get
			{
				return this._RequestDocuments;
			}
			set
			{
				this._RequestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SpaceAndPower", Storage="_SpaceAndPowers", ThisKey="ID", OtherKey="SpaceAndPowerCustomerID")]
		public EntitySet<SpaceAndPower> SpaceAndPowers
		{
			get
			{
				return this._SpaceAndPowers;
			}
			set
			{
				this._SpaceAndPowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SpecialPrivateCable", Storage="_SpecialPrivateCables", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<SpecialPrivateCable> SpecialPrivateCables
		{
			get
			{
				return this._SpecialPrivateCables;
			}
			set
			{
				this._SpecialPrivateCables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_TakePossession", Storage="_TakePossessions", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<TakePossession> TakePossessions
		{
			get
			{
				return this._TakePossessions;
			}
			set
			{
				this._TakePossessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Telephone", Storage="_Telephones", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<Telephone> Telephones
		{
			get
			{
				return this._Telephones;
			}
			set
			{
				this._Telephones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_TranslationOpticalCabinetToNormalConncetion", Storage="_TranslationOpticalCabinetToNormalConncetions", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<TranslationOpticalCabinetToNormalConncetion> TranslationOpticalCabinetToNormalConncetions
		{
			get
			{
				return this._TranslationOpticalCabinetToNormalConncetions;
			}
			set
			{
				this._TranslationOpticalCabinetToNormalConncetions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Wireless", Storage="_Wirelesses", ThisKey="ID", OtherKey="CustomerOwnerID")]
		public EntitySet<Wireless> Wirelesses
		{
			get
			{
				return this._Wirelesses;
			}
			set
			{
				this._Wirelesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_WirelessRequest", Storage="_WirelessRequests", ThisKey="ID", OtherKey="CustomerOwnerID")]
		public EntitySet<WirelessRequest> WirelessRequests
		{
			get
			{
				return this._WirelessRequests;
			}
			set
			{
				this._WirelessRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer", Storage="_Customer2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Customer Customer2
		{
			get
			{
				return this._Customer2.Entity;
			}
			set
			{
				Customer previousValue = this._Customer2.Entity;
				if (((previousValue != value) 
							|| (this._Customer2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer2.Entity = null;
						previousValue.Customer1 = null;
					}
					this._Customer2.Entity = value;
					if ((value != null))
					{
						value.Customer1 = this;
					}
					this.SendPropertyChanged("Customer2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ShahkarWebApiLog", Storage="_ShahkarWebApiLogs", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<ShahkarWebApiLog> ShahkarWebApiLogs
		{
			get
			{
				return this._ShahkarWebApiLogs;
			}
			set
			{
				this._ShahkarWebApiLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Customer", Storage="_Address", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Customer", Storage="_Agent", ThisKey="AgentID", OtherKey="ID", IsForeignKey=true)]
		public Agent Agent
		{
			get
			{
				return this._Agent.Entity;
			}
			set
			{
				Agent previousValue = this._Agent.Entity;
				if (((previousValue != value) 
							|| (this._Agent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Agent.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._AgentID = value.ID;
					}
					else
					{
						this._AgentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Agent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer", Storage="_Customer1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customer2 = null;
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customer2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ADSLs(ADSL entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ADSLChangeCustomerOwnerCharacteristics(ADSLChangeCustomerOwnerCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ADSLChangeCustomerOwnerCharacteristics(ADSLChangeCustomerOwnerCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ADSLChangeCustomerOwnerCharacteristics1(ADSLChangeCustomerOwnerCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_ADSLChangeCustomerOwnerCharacteristics1(ADSLChangeCustomerOwnerCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_ADSLChangePlaces(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ADSLChangePlaces(ADSLChangePlace entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ADSLRequests(ADSLRequest entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_BlackLists(BlackList entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ChangeLocations(ChangeLocation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ChangeNames(ChangeName entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ChangeNames(ChangeName entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ChangeNames1(ChangeName entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_ChangeNames1(ChangeName entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_ChangeNos(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ChangeNos(ChangeNo entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ExchangeCabinetInputConncetions(ExchangeCabinetInputConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_InvestigatePossibilityWaitinglists(InvestigatePossibilityWaitinglist entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_RequestDocuments(RequestDocument entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_RequestDocuments(RequestDocument entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_SpaceAndPowers(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_SpaceAndPowers(SpaceAndPower entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_SpecialPrivateCables(SpecialPrivateCable entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_SpecialPrivateCables(SpecialPrivateCable entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_TakePossessions(TakePossession entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Telephones(Telephone entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_TranslationOpticalCabinetToNormalConncetions(TranslationOpticalCabinetToNormalConncetion entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Wirelesses(Wireless entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_WirelessRequests(WirelessRequest entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ShahkarWebApiLogs(ShahkarWebApiLog entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ShahkarWebApiLogs(ShahkarWebApiLog entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShaskamLog")]
	public partial class ShaskamLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<byte> _ActionType;
		
		private System.Nullable<System.DateTime> _ResponseDate;
		
		private System.Xml.Linq.XElement _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnActionTypeChanging(System.Nullable<byte> value);
    partial void OnActionTypeChanged();
    partial void OnResponseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResponseDateChanged();
    partial void OnDetailsChanging(System.Xml.Linq.XElement value);
    partial void OnDetailsChanged();
    #endregion
		
		public ShaskamLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="TinyInt")]
		public System.Nullable<byte> ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ResponseDate
		{
			get
			{
				return this._ResponseDate;
			}
			set
			{
				if ((this._ResponseDate != value))
				{
					this.OnResponseDateChanging(value);
					this.SendPropertyChanging();
					this._ResponseDate = value;
					this.SendPropertyChanged("ResponseDate");
					this.OnResponseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShahkarWebApiLog")]
	public partial class ShahkarWebApiLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _SendDate;
		
		private System.Xml.Linq.XElement _ActionDetails;
		
		private string _ActionRelativeURL;
		
		private int _ActionType;
		
		private System.Nullable<long> _CustomerID;
		
		private int _UserID;
		
		private System.Nullable<long> _TelephoneNo;
		
		private System.Nullable<long> _RequestID;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSendDateChanging(System.DateTime value);
    partial void OnSendDateChanged();
    partial void OnActionDetailsChanging(System.Xml.Linq.XElement value);
    partial void OnActionDetailsChanged();
    partial void OnActionRelativeURLChanging(string value);
    partial void OnActionRelativeURLChanged();
    partial void OnActionTypeChanging(int value);
    partial void OnActionTypeChanged();
    partial void OnCustomerIDChanging(System.Nullable<long> value);
    partial void OnCustomerIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTelephoneNoChanging(System.Nullable<long> value);
    partial void OnTelephoneNoChanged();
    partial void OnRequestIDChanging(System.Nullable<long> value);
    partial void OnRequestIDChanged();
    #endregion
		
		public ShahkarWebApiLog()
		{
			this._Customer = default(EntityRef<Customer>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDetails", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ActionDetails
		{
			get
			{
				return this._ActionDetails;
			}
			set
			{
				if ((this._ActionDetails != value))
				{
					this.OnActionDetailsChanging(value);
					this.SendPropertyChanging();
					this._ActionDetails = value;
					this.SendPropertyChanged("ActionDetails");
					this.OnActionDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionRelativeURL", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ActionRelativeURL
		{
			get
			{
				return this._ActionRelativeURL;
			}
			set
			{
				if ((this._ActionRelativeURL != value))
				{
					this.OnActionRelativeURLChanging(value);
					this.SendPropertyChanging();
					this._ActionRelativeURL = value;
					this.SendPropertyChanged("ActionRelativeURL");
					this.OnActionRelativeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="Int NOT NULL")]
		public int ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ShahkarWebApiLog", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ShahkarWebApiLogs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ShahkarWebApiLogs.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ShahkarWebApiLog", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ShahkarWebApiLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ShahkarWebApiLogs.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetAllDocsTypeResult
	{
		
		private System.Nullable<long> _ReqDocId;
		
		private System.Nullable<System.DateTime> _DocInsertDate;
		
		private System.Nullable<int> _AnnounceID;
		
		private System.Nullable<byte> _ChargingType;
		
		private int _DocumentTypeID;
		
		private long _DocumentRequestTypeID;
		
		private System.DateTime _InsertDate;
		
		private byte _NeedForCustomerType;
		
		private System.Nullable<byte> _OrderType;
		
		private int _RequestTypeID;
		
		private byte _Status;
		
		private System.Nullable<byte> _TelephonePosessionType;
		
		private System.Nullable<byte> _TelephoneType;
		
		private string _AnnounceTitle;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Title;
		
		private System.Nullable<bool> _IsSpecialService;
		
		private string _DocumentName;
		
		private System.Nullable<byte> _TypeID;
		
		private System.Nullable<bool> _ExistOnce;
		
		private System.Nullable<bool> _IsRelatedToRoundContract;
		
		private System.Nullable<bool> _IsRelatedTo3PercentQuota;
		
		private System.Nullable<System.DateTime> _validUntil;
		
		private System.Nullable<long> _CustomerID;
		
		private int _IsExists;
		
		private System.Nullable<long> _LastRequestID;
		
		public GetAllDocsTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqDocId", DbType="BigInt")]
		public System.Nullable<long> ReqDocId
		{
			get
			{
				return this._ReqDocId;
			}
			set
			{
				if ((this._ReqDocId != value))
				{
					this._ReqDocId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocInsertDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DocInsertDate
		{
			get
			{
				return this._DocInsertDate;
			}
			set
			{
				if ((this._DocInsertDate != value))
				{
					this._DocInsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceID", DbType="Int")]
		public System.Nullable<int> AnnounceID
		{
			get
			{
				return this._AnnounceID;
			}
			set
			{
				if ((this._AnnounceID != value))
				{
					this._AnnounceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargingType", DbType="TinyInt")]
		public System.Nullable<byte> ChargingType
		{
			get
			{
				return this._ChargingType;
			}
			set
			{
				if ((this._ChargingType != value))
				{
					this._ChargingType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int NOT NULL")]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					this._DocumentTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRequestTypeID", DbType="BigInt NOT NULL")]
		public long DocumentRequestTypeID
		{
			get
			{
				return this._DocumentRequestTypeID;
			}
			set
			{
				if ((this._DocumentRequestTypeID != value))
				{
					this._DocumentRequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedForCustomerType", DbType="TinyInt NOT NULL")]
		public byte NeedForCustomerType
		{
			get
			{
				return this._NeedForCustomerType;
			}
			set
			{
				if ((this._NeedForCustomerType != value))
				{
					this._NeedForCustomerType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="TinyInt")]
		public System.Nullable<byte> OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this._OrderType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					this._RequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephonePosessionType", DbType="TinyInt")]
		public System.Nullable<byte> TelephonePosessionType
		{
			get
			{
				return this._TelephonePosessionType;
			}
			set
			{
				if ((this._TelephonePosessionType != value))
				{
					this._TelephonePosessionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="TinyInt")]
		public System.Nullable<byte> TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					this._TelephoneType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceTitle", DbType="NVarChar(500)")]
		public string AnnounceTitle
		{
			get
			{
				return this._AnnounceTitle;
			}
			set
			{
				if ((this._AnnounceTitle != value))
				{
					this._AnnounceTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecialService", DbType="Bit")]
		public System.Nullable<bool> IsSpecialService
		{
			get
			{
				return this._IsSpecialService;
			}
			set
			{
				if ((this._IsSpecialService != value))
				{
					this._IsSpecialService = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(500)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this._DocumentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="TinyInt")]
		public System.Nullable<byte> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this._TypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistOnce", DbType="Bit")]
		public System.Nullable<bool> ExistOnce
		{
			get
			{
				return this._ExistOnce;
			}
			set
			{
				if ((this._ExistOnce != value))
				{
					this._ExistOnce = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedToRoundContract", DbType="Bit")]
		public System.Nullable<bool> IsRelatedToRoundContract
		{
			get
			{
				return this._IsRelatedToRoundContract;
			}
			set
			{
				if ((this._IsRelatedToRoundContract != value))
				{
					this._IsRelatedToRoundContract = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedTo3PercentQuota", DbType="Bit")]
		public System.Nullable<bool> IsRelatedTo3PercentQuota
		{
			get
			{
				return this._IsRelatedTo3PercentQuota;
			}
			set
			{
				if ((this._IsRelatedTo3PercentQuota != value))
				{
					this._IsRelatedTo3PercentQuota = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validUntil", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> validUntil
		{
			get
			{
				return this._validUntil;
			}
			set
			{
				if ((this._validUntil != value))
				{
					this._validUntil = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExists", DbType="Int NOT NULL")]
		public int IsExists
		{
			get
			{
				return this._IsExists;
			}
			set
			{
				if ((this._IsExists != value))
				{
					this._IsExists = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRequestID", DbType="BigInt")]
		public System.Nullable<long> LastRequestID
		{
			get
			{
				return this._LastRequestID;
			}
			set
			{
				if ((this._LastRequestID != value))
				{
					this._LastRequestID = value;
				}
			}
		}
	}
	
	public partial class GetDateResult
	{
		
		private System.DateTime _Column1;
		
		public GetDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="DateTime NOT NULL")]
		public System.DateTime Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetUsedDocsResult
	{
		
		private System.Nullable<byte> _PersonType;
		
		private System.Nullable<long> _RequestID;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private System.Nullable<long> _CustomerID;
		
		private long _RequestDocumentID;
		
		private System.Nullable<long> _DocumentRequestTypeID;
		
		private System.Nullable<int> _AnnounceID;
		
		private System.Nullable<int> _DocumentTypeID;
		
		private System.Nullable<byte> _TypeID;
		
		private string _DocumentName;
		
		private System.Nullable<int> _RequestTypeID;
		
		private System.Nullable<bool> _IsRelatedTo3PercentQuota;
		
		private System.Nullable<bool> _IsRelatedToRoundContract;
		
		public GetUsedDocsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="TinyInt")]
		public System.Nullable<byte> PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt")]
		public System.Nullable<long> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt")]
		public System.Nullable<long> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDocumentID", DbType="BigInt NOT NULL")]
		public long RequestDocumentID
		{
			get
			{
				return this._RequestDocumentID;
			}
			set
			{
				if ((this._RequestDocumentID != value))
				{
					this._RequestDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRequestTypeID", DbType="BigInt")]
		public System.Nullable<long> DocumentRequestTypeID
		{
			get
			{
				return this._DocumentRequestTypeID;
			}
			set
			{
				if ((this._DocumentRequestTypeID != value))
				{
					this._DocumentRequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceID", DbType="Int")]
		public System.Nullable<int> AnnounceID
		{
			get
			{
				return this._AnnounceID;
			}
			set
			{
				if ((this._AnnounceID != value))
				{
					this._AnnounceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int")]
		public System.Nullable<int> DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					this._DocumentTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="TinyInt")]
		public System.Nullable<byte> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this._TypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(500)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this._DocumentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int")]
		public System.Nullable<int> RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					this._RequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedTo3PercentQuota", DbType="Bit")]
		public System.Nullable<bool> IsRelatedTo3PercentQuota
		{
			get
			{
				return this._IsRelatedTo3PercentQuota;
			}
			set
			{
				if ((this._IsRelatedTo3PercentQuota != value))
				{
					this._IsRelatedTo3PercentQuota = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedToRoundContract", DbType="Bit")]
		public System.Nullable<bool> IsRelatedToRoundContract
		{
			get
			{
				return this._IsRelatedToRoundContract;
			}
			set
			{
				if ((this._IsRelatedToRoundContract != value))
				{
					this._IsRelatedToRoundContract = value;
				}
			}
		}
	}
	
	public partial class NeededDocsForRequestResult
	{
		
		private System.Nullable<int> _AnnounceID;
		
		private string _AnnounceTitle;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _IssueNumber;
		
		private System.Nullable<byte> _AnnounceStatus;
		
		private byte _NeedForCustomerType;
		
		private int _RequestTypeID;
		
		private System.Nullable<byte> _OrderType;
		
		private System.Nullable<byte> _TelephonePosessionType;
		
		private System.Nullable<byte> _ChargingType;
		
		private System.Nullable<byte> _TelephoneType;
		
		private System.DateTime _DocumentRequestTypeInsertDate;
		
		private byte _DocumentRequestTypeStatus;
		
		private long _DocumentRequestTypeID;
		
		private int _DocumentTypeID;
		
		private string _DocumentName;
		
		private System.Nullable<bool> _ExistOnce;
		
		private System.Nullable<byte> _TypeID;
		
		private System.Nullable<bool> _IsRelatedTo3PercentQuota;
		
		private System.Nullable<bool> _IsRelatedToRoundContract;
		
		public NeededDocsForRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceID", DbType="Int")]
		public System.Nullable<int> AnnounceID
		{
			get
			{
				return this._AnnounceID;
			}
			set
			{
				if ((this._AnnounceID != value))
				{
					this._AnnounceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceTitle", DbType="NVarChar(500)")]
		public string AnnounceTitle
		{
			get
			{
				return this._AnnounceTitle;
			}
			set
			{
				if ((this._AnnounceTitle != value))
				{
					this._AnnounceTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this._IssueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueNumber", DbType="NVarChar(50)")]
		public string IssueNumber
		{
			get
			{
				return this._IssueNumber;
			}
			set
			{
				if ((this._IssueNumber != value))
				{
					this._IssueNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceStatus", DbType="TinyInt")]
		public System.Nullable<byte> AnnounceStatus
		{
			get
			{
				return this._AnnounceStatus;
			}
			set
			{
				if ((this._AnnounceStatus != value))
				{
					this._AnnounceStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedForCustomerType", DbType="TinyInt NOT NULL")]
		public byte NeedForCustomerType
		{
			get
			{
				return this._NeedForCustomerType;
			}
			set
			{
				if ((this._NeedForCustomerType != value))
				{
					this._NeedForCustomerType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					this._RequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="TinyInt")]
		public System.Nullable<byte> OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this._OrderType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephonePosessionType", DbType="TinyInt")]
		public System.Nullable<byte> TelephonePosessionType
		{
			get
			{
				return this._TelephonePosessionType;
			}
			set
			{
				if ((this._TelephonePosessionType != value))
				{
					this._TelephonePosessionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargingType", DbType="TinyInt")]
		public System.Nullable<byte> ChargingType
		{
			get
			{
				return this._ChargingType;
			}
			set
			{
				if ((this._ChargingType != value))
				{
					this._ChargingType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="TinyInt")]
		public System.Nullable<byte> TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					this._TelephoneType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRequestTypeInsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DocumentRequestTypeInsertDate
		{
			get
			{
				return this._DocumentRequestTypeInsertDate;
			}
			set
			{
				if ((this._DocumentRequestTypeInsertDate != value))
				{
					this._DocumentRequestTypeInsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRequestTypeStatus", DbType="TinyInt NOT NULL")]
		public byte DocumentRequestTypeStatus
		{
			get
			{
				return this._DocumentRequestTypeStatus;
			}
			set
			{
				if ((this._DocumentRequestTypeStatus != value))
				{
					this._DocumentRequestTypeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRequestTypeID", DbType="BigInt NOT NULL")]
		public long DocumentRequestTypeID
		{
			get
			{
				return this._DocumentRequestTypeID;
			}
			set
			{
				if ((this._DocumentRequestTypeID != value))
				{
					this._DocumentRequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int NOT NULL")]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					this._DocumentTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(500)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this._DocumentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistOnce", DbType="Bit")]
		public System.Nullable<bool> ExistOnce
		{
			get
			{
				return this._ExistOnce;
			}
			set
			{
				if ((this._ExistOnce != value))
				{
					this._ExistOnce = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="TinyInt")]
		public System.Nullable<byte> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this._TypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedTo3PercentQuota", DbType="Bit")]
		public System.Nullable<bool> IsRelatedTo3PercentQuota
		{
			get
			{
				return this._IsRelatedTo3PercentQuota;
			}
			set
			{
				if ((this._IsRelatedTo3PercentQuota != value))
				{
					this._IsRelatedTo3PercentQuota = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelatedToRoundContract", DbType="Bit")]
		public System.Nullable<bool> IsRelatedToRoundContract
		{
			get
			{
				return this._IsRelatedToRoundContract;
			}
			set
			{
				if ((this._IsRelatedToRoundContract != value))
				{
					this._IsRelatedToRoundContract = value;
				}
			}
		}
	}
	
	public partial class RecursiveRequestStepsProcedureResult
	{
		
		private int _ID;
		
		private int _RequestTypeID;
		
		private string _StepTitle;
		
		private System.Nullable<bool> _IsVisible;
		
		public RecursiveRequestStepsProcedureResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int NOT NULL")]
		public int RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					this._RequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepTitle", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string StepTitle
		{
			get
			{
				return this._StepTitle;
			}
			set
			{
				if ((this._StepTitle != value))
				{
					this._StepTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this._IsVisible = value;
				}
			}
		}
	}
	
	public partial class Report_ChangeLocationNetworkSpecialWireResult
	{
		
		private long _RequestID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _NearestTelephon;
		
		private string _TelephoneNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _NEWPostEtesaliNo;
		
		private string _NEWPostNo;
		
		private string _NEWCabinetinputNo;
		
		private string _NEWCabinetNo;
		
		private string _OLDPostEtesaliNo;
		
		private string _OLDPostNo;
		
		private string _OLDCabinetinputNo;
		
		private string _OLDCabinetNo;
		
		private string _NEWInstallAddress;
		
		private string _OLDInstallAddress;
		
		private string _CorrespondenceAddress;
		
		private string _PostalCode;
		
		private string _PersonType;
		
		public Report_ChangeLocationNetworkSpecialWireResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephon", DbType="VarChar(MAX)")]
		public string NearestTelephon
		{
			get
			{
				return this._NearestTelephon;
			}
			set
			{
				if ((this._NearestTelephon != value))
				{
					this._NearestTelephon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500)")]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWPostEtesaliNo", DbType="VarChar(MAX)")]
		public string NEWPostEtesaliNo
		{
			get
			{
				return this._NEWPostEtesaliNo;
			}
			set
			{
				if ((this._NEWPostEtesaliNo != value))
				{
					this._NEWPostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWPostNo", DbType="VarChar(MAX)")]
		public string NEWPostNo
		{
			get
			{
				return this._NEWPostNo;
			}
			set
			{
				if ((this._NEWPostNo != value))
				{
					this._NEWPostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWCabinetinputNo", DbType="VarChar(MAX)")]
		public string NEWCabinetinputNo
		{
			get
			{
				return this._NEWCabinetinputNo;
			}
			set
			{
				if ((this._NEWCabinetinputNo != value))
				{
					this._NEWCabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWCabinetNo", DbType="VarChar(MAX)")]
		public string NEWCabinetNo
		{
			get
			{
				return this._NEWCabinetNo;
			}
			set
			{
				if ((this._NEWCabinetNo != value))
				{
					this._NEWCabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDPostEtesaliNo", DbType="VarChar(MAX)")]
		public string OLDPostEtesaliNo
		{
			get
			{
				return this._OLDPostEtesaliNo;
			}
			set
			{
				if ((this._OLDPostEtesaliNo != value))
				{
					this._OLDPostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDPostNo", DbType="VarChar(MAX)")]
		public string OLDPostNo
		{
			get
			{
				return this._OLDPostNo;
			}
			set
			{
				if ((this._OLDPostNo != value))
				{
					this._OLDPostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDCabinetinputNo", DbType="VarChar(MAX)")]
		public string OLDCabinetinputNo
		{
			get
			{
				return this._OLDCabinetinputNo;
			}
			set
			{
				if ((this._OLDCabinetinputNo != value))
				{
					this._OLDCabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDCabinetNo", DbType="VarChar(MAX)")]
		public string OLDCabinetNo
		{
			get
			{
				return this._OLDCabinetNo;
			}
			set
			{
				if ((this._OLDCabinetNo != value))
				{
					this._OLDCabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWInstallAddress", DbType="NVarChar(MAX)")]
		public string NEWInstallAddress
		{
			get
			{
				return this._NEWInstallAddress;
			}
			set
			{
				if ((this._NEWInstallAddress != value))
				{
					this._NEWInstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDInstallAddress", DbType="NVarChar(MAX)")]
		public string OLDInstallAddress
		{
			get
			{
				return this._OLDInstallAddress;
			}
			set
			{
				if ((this._OLDInstallAddress != value))
				{
					this._OLDInstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
	}
	
	public partial class Report_ChangeLocationSpecialWireCertificateResult
	{
		
		private string _FullCustomerName;
		
		private System.Nullable<long> _RequestNo;
		
		private string _InsertDate;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _NewInstallAddress;
		
		private string _OLDInstallAddress;
		
		public Report_ChangeLocationSpecialWireCertificateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullCustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string FullCustomerName
		{
			get
			{
				return this._FullCustomerName;
			}
			set
			{
				if ((this._FullCustomerName != value))
				{
					this._FullCustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNo", DbType="BigInt")]
		public System.Nullable<long> RequestNo
		{
			get
			{
				return this._RequestNo;
			}
			set
			{
				if ((this._RequestNo != value))
				{
					this._RequestNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="VarChar(10)")]
		public string InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInstallAddress", DbType="NVarChar(MAX)")]
		public string NewInstallAddress
		{
			get
			{
				return this._NewInstallAddress;
			}
			set
			{
				if ((this._NewInstallAddress != value))
				{
					this._NewInstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDInstallAddress", DbType="NVarChar(MAX)")]
		public string OLDInstallAddress
		{
			get
			{
				return this._OLDInstallAddress;
			}
			set
			{
				if ((this._OLDInstallAddress != value))
				{
					this._OLDInstallAddress = value;
				}
			}
		}
	}
	
	public partial class Report_DayeriWiringNetworkResult
	{
		
		private string _FieldID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _NearestTelephon;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Card;
		
		private string _Shelf;
		
		private string _Rock;
		
		private string _Port;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _TelephoneType;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _UNO;
		
		private string _CorrespondenceAddress;
		
		private string _OldTelephoneNo;
		
		public Report_DayeriWiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Char(15)")]
		public string FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this._FieldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephon", DbType="VarChar(MAX)")]
		public string NearestTelephon
		{
			get
			{
				return this._NearestTelephon;
			}
			set
			{
				if ((this._NearestTelephon != value))
				{
					this._NearestTelephon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(MAX)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(MAX)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="VarChar(MAX)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this._Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="VarChar(MAX)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rock", DbType="VarChar(MAX)")]
		public string Rock
		{
			get
			{
				return this._Rock;
			}
			set
			{
				if ((this._Rock != value))
				{
					this._Rock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(MAX)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(MAX)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(MAX)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(MAX)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					this._TelephoneType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(MAX)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(MAX)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNO", DbType="NVarChar(50)")]
		public string UNO
		{
			get
			{
				return this._UNO;
			}
			set
			{
				if ((this._UNO != value))
				{
					this._UNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephoneNo", DbType="VarChar(MAX)")]
		public string OldTelephoneNo
		{
			get
			{
				return this._OldTelephoneNo;
			}
			set
			{
				if ((this._OldTelephoneNo != value))
				{
					this._OldTelephoneNo = value;
				}
			}
		}
	}
	
	public partial class Report_DischargeWiringNetworkResult
	{
		
		private string _FieldID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _UNO;
		
		private string _CorrespondenceAddress;
		
		public Report_DischargeWiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Char(15)")]
		public string FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this._FieldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNO", DbType="NVarChar(50)")]
		public string UNO
		{
			get
			{
				return this._UNO;
			}
			set
			{
				if ((this._UNO != value))
				{
					this._UNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
	}
	
	public partial class Report_DischargingWiringNetworkResult
	{
		
		private string _FieldID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Card;
		
		private string _Shelf;
		
		private string _Rock;
		
		private string _Port;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _UNO;
		
		private string _CorrespondenceAddress;
		
		public Report_DischargingWiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Char(15)")]
		public string FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this._FieldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(MAX)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(MAX)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="VarChar(MAX)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this._Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="VarChar(MAX)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rock", DbType="VarChar(MAX)")]
		public string Rock
		{
			get
			{
				return this._Rock;
			}
			set
			{
				if ((this._Rock != value))
				{
					this._Rock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(MAX)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(MAX)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(MAX)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(MAX)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(MAX)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(MAX)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNO", DbType="NVarChar(50)")]
		public string UNO
		{
			get
			{
				return this._UNO;
			}
			set
			{
				if ((this._UNO != value))
				{
					this._UNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
	}
	
	public partial class Report_DtestResult
	{
		
		private string _FieldID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Card;
		
		private string _Shelf;
		
		private string _Rock;
		
		private string _Port;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _UNO;
		
		private string _CorrespondenceAddress;
		
		public Report_DtestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Char(15)")]
		public string FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this._FieldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(MAX)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(MAX)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="VarChar(MAX)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this._Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="VarChar(MAX)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rock", DbType="VarChar(MAX)")]
		public string Rock
		{
			get
			{
				return this._Rock;
			}
			set
			{
				if ((this._Rock != value))
				{
					this._Rock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(MAX)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(MAX)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(MAX)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(MAX)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(MAX)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(MAX)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNO", DbType="NVarChar(50)")]
		public string UNO
		{
			get
			{
				return this._UNO;
			}
			set
			{
				if ((this._UNO != value))
				{
					this._UNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
	}
	
	public partial class Report_NetworkVacateSpecialWireResult
	{
		
		private System.Nullable<long> _PhoneNo;
		
		private string _MDFID;
		
		private int _VerticalRowNo;
		
		private int _VerticalCloumnNo;
		
		private long _BuchtNo;
		
		private int _CabinetNumber;
		
		private int _CabinetInputNumber;
		
		private int _PostNo;
		
		private int _ConnectionNo;
		
		private string _OtherBuchtTypeName;
		
		private string _FullName;
		
		private string _PersonType;
		
		private string _NationalCodeOrRecordNo;
		
		private string _Gender;
		
		private string _UrgentTelNo;
		
		public Report_NetworkVacateSpecialWireResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="BigInt")]
		public System.Nullable<long> PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this._PhoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFID", DbType="NVarChar(65) NOT NULL", CanBeNull=false)]
		public string MDFID
		{
			get
			{
				return this._MDFID;
			}
			set
			{
				if ((this._MDFID != value))
				{
					this._MDFID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalRowNo", DbType="Int NOT NULL")]
		public int VerticalRowNo
		{
			get
			{
				return this._VerticalRowNo;
			}
			set
			{
				if ((this._VerticalRowNo != value))
				{
					this._VerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalCloumnNo", DbType="Int NOT NULL")]
		public int VerticalCloumnNo
		{
			get
			{
				return this._VerticalCloumnNo;
			}
			set
			{
				if ((this._VerticalCloumnNo != value))
				{
					this._VerticalCloumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtNo", DbType="BigInt NOT NULL")]
		public long BuchtNo
		{
			get
			{
				return this._BuchtNo;
			}
			set
			{
				if ((this._BuchtNo != value))
				{
					this._BuchtNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNumber", DbType="Int NOT NULL")]
		public int CabinetNumber
		{
			get
			{
				return this._CabinetNumber;
			}
			set
			{
				if ((this._CabinetNumber != value))
				{
					this._CabinetNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputNumber", DbType="Int NOT NULL")]
		public int CabinetInputNumber
		{
			get
			{
				return this._CabinetInputNumber;
			}
			set
			{
				if ((this._CabinetInputNumber != value))
				{
					this._CabinetInputNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="Int NOT NULL")]
		public int PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionNo", DbType="Int NOT NULL")]
		public int ConnectionNo
		{
			get
			{
				return this._ConnectionNo;
			}
			set
			{
				if ((this._ConnectionNo != value))
				{
					this._ConnectionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtTypeName", DbType="NVarChar(50)")]
		public string OtherBuchtTypeName
		{
			get
			{
				return this._OtherBuchtTypeName;
			}
			set
			{
				if ((this._OtherBuchtTypeName != value))
				{
					this._OtherBuchtTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCodeOrRecordNo", DbType="NVarChar(50)")]
		public string NationalCodeOrRecordNo
		{
			get
			{
				return this._NationalCodeOrRecordNo;
			}
			set
			{
				if ((this._NationalCodeOrRecordNo != value))
				{
					this._NationalCodeOrRecordNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="NVarChar(20)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
	}
	
	public partial class Report_SpecialWireCertificatePrintResult
	{
		
		private long _RequestID;
		
		private string _SpecialType;
		
		private string _FirstNameOrTitle;
		
		private string _LastName;
		
		private string _UrgentTelNo;
		
		private System.Nullable<byte> _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCodeInstallAddress;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _CorrespondenceAddress;
		
		private string _PostalCodeCorrespondenceAddress;
		
		public Report_SpecialWireCertificatePrintResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialType", DbType="NVarChar(2)")]
		public string SpecialType
		{
			get
			{
				return this._SpecialType;
			}
			set
			{
				if ((this._SpecialType != value))
				{
					this._SpecialType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameOrTitle", DbType="NVarChar(50)")]
		public string FirstNameOrTitle
		{
			get
			{
				return this._FirstNameOrTitle;
			}
			set
			{
				if ((this._FirstNameOrTitle != value))
				{
					this._FirstNameOrTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="NVarChar(20)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="TinyInt")]
		public System.Nullable<byte> PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCodeInstallAddress", DbType="NVarChar(20)")]
		public string PostalCodeInstallAddress
		{
			get
			{
				return this._PostalCodeInstallAddress;
			}
			set
			{
				if ((this._PostalCodeInstallAddress != value))
				{
					this._PostalCodeInstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500)")]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCodeCorrespondenceAddress", DbType="NVarChar(20)")]
		public string PostalCodeCorrespondenceAddress
		{
			get
			{
				return this._PostalCodeCorrespondenceAddress;
			}
			set
			{
				if ((this._PostalCodeCorrespondenceAddress != value))
				{
					this._PostalCodeCorrespondenceAddress = value;
				}
			}
		}
	}
	
	public partial class Report_SpecialWireWiringNetworkResult
	{
		
		private long _RequestID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _NearestTelephon;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Card;
		
		private string _Shelf;
		
		private string _Rock;
		
		private string _Port;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _TelephoneType;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _CorrespondenceAddress;
		
		public Report_SpecialWireWiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephon", DbType="VarChar(MAX)")]
		public string NearestTelephon
		{
			get
			{
				return this._NearestTelephon;
			}
			set
			{
				if ((this._NearestTelephon != value))
				{
					this._NearestTelephon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(MAX)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(MAX)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="VarChar(MAX)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this._Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="VarChar(MAX)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rock", DbType="VarChar(MAX)")]
		public string Rock
		{
			get
			{
				return this._Rock;
			}
			set
			{
				if ((this._Rock != value))
				{
					this._Rock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(MAX)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(MAX)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(MAX)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(MAX)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="NVarChar(100)")]
		public string TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					this._TelephoneType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(MAX)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500)")]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(1)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
	}
	
	public partial class uspReportMDFExchangeCabinuteInputResult
	{
		
		private string _ADSLPapInfo;
		
		private string _OldBuchtInfo;
		
		private string _OtherBuchtInfo;
		
		private string _PCMINFO;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _NEWBuchtInfo;
		
		public uspReportMDFExchangeCabinuteInputResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLPapInfo", DbType="NVarChar(65) NOT NULL", CanBeNull=false)]
		public string ADSLPapInfo
		{
			get
			{
				return this._ADSLPapInfo;
			}
			set
			{
				if ((this._ADSLPapInfo != value))
				{
					this._ADSLPapInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtInfo", DbType="NVarChar(MAX)")]
		public string OldBuchtInfo
		{
			get
			{
				return this._OldBuchtInfo;
			}
			set
			{
				if ((this._OldBuchtInfo != value))
				{
					this._OldBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtInfo", DbType="NVarChar(MAX)")]
		public string OtherBuchtInfo
		{
			get
			{
				return this._OtherBuchtInfo;
			}
			set
			{
				if ((this._OtherBuchtInfo != value))
				{
					this._OtherBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMINFO", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string PCMINFO
		{
			get
			{
				return this._PCMINFO;
			}
			set
			{
				if ((this._PCMINFO != value))
				{
					this._PCMINFO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWBuchtInfo", DbType="NVarChar(MAX)")]
		public string NEWBuchtInfo
		{
			get
			{
				return this._NEWBuchtInfo;
			}
			set
			{
				if ((this._NEWBuchtInfo != value))
				{
					this._NEWBuchtInfo = value;
				}
			}
		}
	}
	
	public partial class uspReportMDFExchangeCabinuteInputCentralResult
	{
		
		private string _OldBuchtInfo;
		
		private string _NEWBuchtInfo;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _ADSLPapInfo;
		
		private string _OtherBuchtInfo;
		
		private string _PCMINFO;
		
		private string _BuchtStatus;
		
		public uspReportMDFExchangeCabinuteInputCentralResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtInfo", DbType="NVarChar(MAX)")]
		public string OldBuchtInfo
		{
			get
			{
				return this._OldBuchtInfo;
			}
			set
			{
				if ((this._OldBuchtInfo != value))
				{
					this._OldBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWBuchtInfo", DbType="NVarChar(MAX)")]
		public string NEWBuchtInfo
		{
			get
			{
				return this._NEWBuchtInfo;
			}
			set
			{
				if ((this._NEWBuchtInfo != value))
				{
					this._NEWBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLPapInfo", DbType="NVarChar(65) NOT NULL", CanBeNull=false)]
		public string ADSLPapInfo
		{
			get
			{
				return this._ADSLPapInfo;
			}
			set
			{
				if ((this._ADSLPapInfo != value))
				{
					this._ADSLPapInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtInfo", DbType="NVarChar(MAX)")]
		public string OtherBuchtInfo
		{
			get
			{
				return this._OtherBuchtInfo;
			}
			set
			{
				if ((this._OtherBuchtInfo != value))
				{
					this._OtherBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMINFO", DbType="NVarChar(MAX)")]
		public string PCMINFO
		{
			get
			{
				return this._PCMINFO;
			}
			set
			{
				if ((this._PCMINFO != value))
				{
					this._PCMINFO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtStatus", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string BuchtStatus
		{
			get
			{
				return this._BuchtStatus;
			}
			set
			{
				if ((this._BuchtStatus != value))
				{
					this._BuchtStatus = value;
				}
			}
		}
	}
	
	public partial class uspReportMDFExchangeCentralPostResult
	{
		
		private string _ADSLPapInfo;
		
		private string _OldBuchtInfo;
		
		private string _OtherBuchtInfo;
		
		private string _PCMINFO;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _BuchtStatus;
		
		private string _NEWBuchtInfo;
		
		public uspReportMDFExchangeCentralPostResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADSLPapInfo", DbType="NVarChar(65) NOT NULL", CanBeNull=false)]
		public string ADSLPapInfo
		{
			get
			{
				return this._ADSLPapInfo;
			}
			set
			{
				if ((this._ADSLPapInfo != value))
				{
					this._ADSLPapInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtInfo", DbType="NVarChar(MAX)")]
		public string OldBuchtInfo
		{
			get
			{
				return this._OldBuchtInfo;
			}
			set
			{
				if ((this._OldBuchtInfo != value))
				{
					this._OldBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtInfo", DbType="NVarChar(MAX)")]
		public string OtherBuchtInfo
		{
			get
			{
				return this._OtherBuchtInfo;
			}
			set
			{
				if ((this._OtherBuchtInfo != value))
				{
					this._OtherBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMINFO", DbType="NVarChar(MAX)")]
		public string PCMINFO
		{
			get
			{
				return this._PCMINFO;
			}
			set
			{
				if ((this._PCMINFO != value))
				{
					this._PCMINFO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtStatus", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string BuchtStatus
		{
			get
			{
				return this._BuchtStatus;
			}
			set
			{
				if ((this._BuchtStatus != value))
				{
					this._BuchtStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWBuchtInfo", DbType="NVarChar(MAX)")]
		public string NEWBuchtInfo
		{
			get
			{
				return this._NEWBuchtInfo;
			}
			set
			{
				if ((this._NEWBuchtInfo != value))
				{
					this._NEWBuchtInfo = value;
				}
			}
		}
	}
	
	public partial class uspReportNetworkWireExchangeCabinuteInputResult
	{
		
		private long _TelephoneNo;
		
		private string _CustomerFullName;
		
		private string _UrgentTelNo;
		
		private string _OLDAboneInfo;
		
		private string _AddressContent;
		
		private string _NewAboneInfo;
		
		private string _OLDBuchtInfo;
		
		private string _NEWBuchtInfo;
		
		public uspReportNetworkWireExchangeCabinuteInputResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt NOT NULL")]
		public long TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerFullName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerFullName
		{
			get
			{
				return this._CustomerFullName;
			}
			set
			{
				if ((this._CustomerFullName != value))
				{
					this._CustomerFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="NVarChar(20)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDAboneInfo", DbType="NVarChar(69) NOT NULL", CanBeNull=false)]
		public string OLDAboneInfo
		{
			get
			{
				return this._OLDAboneInfo;
			}
			set
			{
				if ((this._OLDAboneInfo != value))
				{
					this._OLDAboneInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressContent", DbType="NVarChar(MAX)")]
		public string AddressContent
		{
			get
			{
				return this._AddressContent;
			}
			set
			{
				if ((this._AddressContent != value))
				{
					this._AddressContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewAboneInfo", DbType="NVarChar(69)")]
		public string NewAboneInfo
		{
			get
			{
				return this._NewAboneInfo;
			}
			set
			{
				if ((this._NewAboneInfo != value))
				{
					this._NewAboneInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDBuchtInfo", DbType="NVarChar(86) NOT NULL", CanBeNull=false)]
		public string OLDBuchtInfo
		{
			get
			{
				return this._OLDBuchtInfo;
			}
			set
			{
				if ((this._OLDBuchtInfo != value))
				{
					this._OLDBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWBuchtInfo", DbType="NVarChar(86)")]
		public string NEWBuchtInfo
		{
			get
			{
				return this._NEWBuchtInfo;
			}
			set
			{
				if ((this._NEWBuchtInfo != value))
				{
					this._NEWBuchtInfo = value;
				}
			}
		}
	}
	
	public partial class uspReportNetworkWireExchangeCentralPostResult
	{
		
		private string _OldBuchtInfo;
		
		private string _NEWBuchtInfo;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _CustomerFullName;
		
		private string _UrgentTelNo;
		
		private string _NEWAboneInfo;
		
		private string _OLDAboneInfo;
		
		private string _AddressContent;
		
		public uspReportNetworkWireExchangeCentralPostResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtInfo", DbType="NVarChar(MAX)")]
		public string OldBuchtInfo
		{
			get
			{
				return this._OldBuchtInfo;
			}
			set
			{
				if ((this._OldBuchtInfo != value))
				{
					this._OldBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWBuchtInfo", DbType="NVarChar(MAX)")]
		public string NEWBuchtInfo
		{
			get
			{
				return this._NEWBuchtInfo;
			}
			set
			{
				if ((this._NEWBuchtInfo != value))
				{
					this._NEWBuchtInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerFullName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerFullName
		{
			get
			{
				return this._CustomerFullName;
			}
			set
			{
				if ((this._CustomerFullName != value))
				{
					this._CustomerFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="NVarChar(20)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWAboneInfo", DbType="NVarChar(69) NOT NULL", CanBeNull=false)]
		public string NEWAboneInfo
		{
			get
			{
				return this._NEWAboneInfo;
			}
			set
			{
				if ((this._NEWAboneInfo != value))
				{
					this._NEWAboneInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDAboneInfo", DbType="NVarChar(69) NOT NULL", CanBeNull=false)]
		public string OLDAboneInfo
		{
			get
			{
				return this._OLDAboneInfo;
			}
			set
			{
				if ((this._OLDAboneInfo != value))
				{
					this._OLDAboneInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressContent", DbType="NVarChar(MAX)")]
		public string AddressContent
		{
			get
			{
				return this._AddressContent;
			}
			set
			{
				if ((this._AddressContent != value))
				{
					this._AddressContent = value;
				}
			}
		}
	}
	
	public partial class uspReportRequestStateResult
	{
		
		private string _Title;
		
		private string _Steptitle;
		
		private int _NotFinished;
		
		private int _Finished;
		
		private int _IsCanceled;
		
		public uspReportRequestStateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Steptitle", DbType="NVarChar(500)")]
		public string Steptitle
		{
			get
			{
				return this._Steptitle;
			}
			set
			{
				if ((this._Steptitle != value))
				{
					this._Steptitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotFinished", DbType="Int NOT NULL")]
		public int NotFinished
		{
			get
			{
				return this._NotFinished;
			}
			set
			{
				if ((this._NotFinished != value))
				{
					this._NotFinished = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finished", DbType="Int NOT NULL")]
		public int Finished
		{
			get
			{
				return this._Finished;
			}
			set
			{
				if ((this._Finished != value))
				{
					this._Finished = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Int NOT NULL")]
		public int IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this._IsCanceled = value;
				}
			}
		}
	}
	
	public partial class uspReportTransferPostResult
	{
		
		private System.Nullable<int> _CabinetNumber;
		
		private System.Nullable<int> _OLDPOSTNUMBER;
		
		private System.Nullable<int> _NEWPOSTNUMBER;
		
		private System.Nullable<int> _OLDPCConnectionNo;
		
		private System.Nullable<int> _NEWPCConnectionNo;
		
		private string _PCMSTATE;
		
		public uspReportTransferPostResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNumber", DbType="Int")]
		public System.Nullable<int> CabinetNumber
		{
			get
			{
				return this._CabinetNumber;
			}
			set
			{
				if ((this._CabinetNumber != value))
				{
					this._CabinetNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDPOSTNUMBER", DbType="Int")]
		public System.Nullable<int> OLDPOSTNUMBER
		{
			get
			{
				return this._OLDPOSTNUMBER;
			}
			set
			{
				if ((this._OLDPOSTNUMBER != value))
				{
					this._OLDPOSTNUMBER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWPOSTNUMBER", DbType="Int")]
		public System.Nullable<int> NEWPOSTNUMBER
		{
			get
			{
				return this._NEWPOSTNUMBER;
			}
			set
			{
				if ((this._NEWPOSTNUMBER != value))
				{
					this._NEWPOSTNUMBER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDPCConnectionNo", DbType="Int")]
		public System.Nullable<int> OLDPCConnectionNo
		{
			get
			{
				return this._OLDPCConnectionNo;
			}
			set
			{
				if ((this._OLDPCConnectionNo != value))
				{
					this._OLDPCConnectionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWPCConnectionNo", DbType="Int")]
		public System.Nullable<int> NEWPCConnectionNo
		{
			get
			{
				return this._NEWPCConnectionNo;
			}
			set
			{
				if ((this._NEWPCConnectionNo != value))
				{
					this._NEWPCConnectionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCMSTATE", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string PCMSTATE
		{
			get
			{
				return this._PCMSTATE;
			}
			set
			{
				if ((this._PCMSTATE != value))
				{
					this._PCMSTATE = value;
				}
			}
		}
	}
	
	public partial class uspReportTrasnlationOpticalCabinetToNormalResult
	{
		
		private long _RequestID;
		
		private System.Nullable<long> _ToTelephoneNo;
		
		private System.Nullable<long> _FromTelephoneNo;
		
		private string _FirstNameOrTitle;
		
		private string _LastName;
		
		private string _InstallAddress;
		
		private string _InstallPostalCode;
		
		private string _CorrespondenceAddress;
		
		private string _CorrespondencePostalCode;
		
		public uspReportTrasnlationOpticalCabinetToNormalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> ToTelephoneNo
		{
			get
			{
				return this._ToTelephoneNo;
			}
			set
			{
				if ((this._ToTelephoneNo != value))
				{
					this._ToTelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTelephoneNo", DbType="BigInt")]
		public System.Nullable<long> FromTelephoneNo
		{
			get
			{
				return this._FromTelephoneNo;
			}
			set
			{
				if ((this._FromTelephoneNo != value))
				{
					this._FromTelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameOrTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstNameOrTitle
		{
			get
			{
				return this._FirstNameOrTitle;
			}
			set
			{
				if ((this._FirstNameOrTitle != value))
				{
					this._FirstNameOrTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallPostalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InstallPostalCode
		{
			get
			{
				return this._InstallPostalCode;
			}
			set
			{
				if ((this._InstallPostalCode != value))
				{
					this._InstallPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondencePostalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CorrespondencePostalCode
		{
			get
			{
				return this._CorrespondencePostalCode;
			}
			set
			{
				if ((this._CorrespondencePostalCode != value))
				{
					this._CorrespondencePostalCode = value;
				}
			}
		}
	}
	
	public partial class VisitTheSiteResult
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _NewAddress;
		
		private string _OldAddress;
		
		private string _OldPostalCode;
		
		private string _NewPostalCode;
		
		public VisitTheSiteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewAddress", DbType="NVarChar(MAX)")]
		public string NewAddress
		{
			get
			{
				return this._NewAddress;
			}
			set
			{
				if ((this._NewAddress != value))
				{
					this._NewAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldAddress", DbType="NVarChar(MAX)")]
		public string OldAddress
		{
			get
			{
				return this._OldAddress;
			}
			set
			{
				if ((this._OldAddress != value))
				{
					this._OldAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostalCode", DbType="NVarChar(20)")]
		public string OldPostalCode
		{
			get
			{
				return this._OldPostalCode;
			}
			set
			{
				if ((this._OldPostalCode != value))
				{
					this._OldPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostalCode", DbType="NVarChar(20)")]
		public string NewPostalCode
		{
			get
			{
				return this._NewPostalCode;
			}
			set
			{
				if ((this._NewPostalCode != value))
				{
					this._NewPostalCode = value;
				}
			}
		}
	}
	
	public partial class ufnSplitListResult
	{
		
		private System.Nullable<long> _ID;
		
		public ufnSplitListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt")]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class uspReportE1LINKWiringNetworkResult
	{
		
		private long _RequestID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Card;
		
		private string _Shelf;
		
		private string _Rock;
		
		private string _Port;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _CorrespondenceAddress;
		
		public uspReportE1LINKWiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(MAX)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(MAX)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="VarChar(MAX)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this._Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="VarChar(MAX)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rock", DbType="VarChar(MAX)")]
		public string Rock
		{
			get
			{
				return this._Rock;
			}
			set
			{
				if ((this._Rock != value))
				{
					this._Rock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(MAX)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(MAX)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(MAX)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(MAX)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(MAX)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500)")]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(1)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
	}
	
	public partial class uspReportE1WiringNetworkResult
	{
		
		private long _RequestID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Card;
		
		private string _Shelf;
		
		private string _Rock;
		
		private string _Port;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _TelephoneType;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _CorrespondenceAddress;
		
		public uspReportE1WiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(MAX)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(MAX)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="VarChar(MAX)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this._Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="VarChar(MAX)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rock", DbType="VarChar(MAX)")]
		public string Rock
		{
			get
			{
				return this._Rock;
			}
			set
			{
				if ((this._Rock != value))
				{
					this._Rock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(MAX)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(MAX)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(MAX)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(MAX)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="NVarChar(100)")]
		public string TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					this._TelephoneType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(MAX)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500)")]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(1)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
	}
	
	public partial class uspReportFailure117RequestRemaindInNetworkResult
	{
		
		private long _ID;
		
		private int _RowNo;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _CenterName;
		
		private string _CityName;
		
		private string _InsertDate;
		
		private string _ModifyDate;
		
		private string _FullNameModifyUser;
		
		private string _FailureLineStatus;
		
		private string _FailureStatus;
		
		public uspReportFailure117RequestRemaindInNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNo", DbType="Int NOT NULL")]
		public int RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this._RowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500)")]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(50)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="VarChar(10)")]
		public string InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="VarChar(10)")]
		public string ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this._ModifyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNameModifyUser", DbType="NVarChar(511) NOT NULL", CanBeNull=false)]
		public string FullNameModifyUser
		{
			get
			{
				return this._FullNameModifyUser;
			}
			set
			{
				if ((this._FullNameModifyUser != value))
				{
					this._FullNameModifyUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureLineStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FailureLineStatus
		{
			get
			{
				return this._FailureLineStatus;
			}
			set
			{
				if ((this._FailureLineStatus != value))
				{
					this._FailureLineStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureStatus", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FailureStatus
		{
			get
			{
				return this._FailureStatus;
			}
			set
			{
				if ((this._FailureStatus != value))
				{
					this._FailureStatus = value;
				}
			}
		}
	}
	
	public partial class uspReportDayeriWiringNetworkResult
	{
		
		private string _FieldID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _NearestTelephon;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Card;
		
		private string _Shelf;
		
		private string _Rock;
		
		private string _Port;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _TelephoneType;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _UNO;
		
		private string _CorrespondenceAddress;
		
		private string _OldTelephoneNo;
		
		public uspReportDayeriWiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Char(15)")]
		public string FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this._FieldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="NVarChar(20)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(20)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestTelephon", DbType="VarChar(15)")]
		public string NearestTelephon
		{
			get
			{
				return this._NearestTelephon;
			}
			set
			{
				if ((this._NearestTelephon != value))
				{
					this._NearestTelephon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(15)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(15)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="VarChar(15)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this._Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="VarChar(15)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rock", DbType="VarChar(15)")]
		public string Rock
		{
			get
			{
				return this._Rock;
			}
			set
			{
				if ((this._Rock != value))
				{
					this._Rock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(15)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(15)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(15)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(15)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(15)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(15)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TelephoneType
		{
			get
			{
				return this._TelephoneType;
			}
			set
			{
				if ((this._TelephoneType != value))
				{
					this._TelephoneType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(15)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(15)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(15)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNO", DbType="NVarChar(50)")]
		public string UNO
		{
			get
			{
				return this._UNO;
			}
			set
			{
				if ((this._UNO != value))
				{
					this._UNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephoneNo", DbType="VarChar(15)")]
		public string OldTelephoneNo
		{
			get
			{
				return this._OldTelephoneNo;
			}
			set
			{
				if ((this._OldTelephoneNo != value))
				{
					this._OldTelephoneNo = value;
				}
			}
		}
	}
	
	public partial class uspReportDischargeWiringNetworkResult
	{
		
		private string _FieldID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Card;
		
		private string _Shelf;
		
		private string _Rock;
		
		private string _Port;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _UNO;
		
		private string _CorrespondenceAddress;
		
		public uspReportDischargeWiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Char(15)")]
		public string FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this._FieldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="NVarChar(20)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="NVarChar(20)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(MAX)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(MAX)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="VarChar(MAX)")]
		public string Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this._Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="VarChar(MAX)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rock", DbType="VarChar(MAX)")]
		public string Rock
		{
			get
			{
				return this._Rock;
			}
			set
			{
				if ((this._Rock != value))
				{
					this._Rock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(MAX)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(MAX)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(MAX)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(MAX)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(MAX)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(MAX)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNO", DbType="NVarChar(50)")]
		public string UNO
		{
			get
			{
				return this._UNO;
			}
			set
			{
				if ((this._UNO != value))
				{
					this._UNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
	}
	
	public partial class GetTableSchemaResult
	{
		
		private string _TableName;
		
		private string _ColumnName;
		
		private string _DataType;
		
		private object _Description;
		
		private System.Nullable<int> _MaxLength;
		
		private System.Nullable<int> _IsPrimaryKey;
		
		public GetTableSchemaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(128)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this._ColumnName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="NVarChar(128)")]
		public string DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this._DataType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Variant")]
		public object Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLength", DbType="Int")]
		public System.Nullable<int> MaxLength
		{
			get
			{
				return this._MaxLength;
			}
			set
			{
				if ((this._MaxLength != value))
				{
					this._MaxLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimaryKey", DbType="Int")]
		public System.Nullable<int> IsPrimaryKey
		{
			get
			{
				return this._IsPrimaryKey;
			}
			set
			{
				if ((this._IsPrimaryKey != value))
				{
					this._IsPrimaryKey = value;
				}
			}
		}
	}
	
	public partial class Report_VacateSpecialWireWiringNetworkResult
	{
		
		private long _RequestID;
		
		private string _CustomerName;
		
		private string _UrgentTelNo;
		
		private string _MobileNo;
		
		private string _CabinetinputNo;
		
		private string _CabinetNo;
		
		private string _Radif;
		
		private string _Tabagheh;
		
		private string _Etesali;
		
		private string _PersonType;
		
		private string _InstallAddress;
		
		private string _PostalCode;
		
		private string _TelephoneNo;
		
		private string _PostEtesaliNo;
		
		private string _PostNo;
		
		private string _CenterName;
		
		private string _RegionName;
		
		private string _PCM;
		
		private string _CorrespondenceAddress;
		
		private string _PersonType1;
		
		public Report_VacateSpecialWireWiringNetworkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="BigInt NOT NULL")]
		public long RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="VarChar(MAX)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(MAX)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this._MobileNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetinputNo", DbType="VarChar(MAX)")]
		public string CabinetinputNo
		{
			get
			{
				return this._CabinetinputNo;
			}
			set
			{
				if ((this._CabinetinputNo != value))
				{
					this._CabinetinputNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="VarChar(MAX)")]
		public string CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this._CabinetNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radif", DbType="VarChar(MAX)")]
		public string Radif
		{
			get
			{
				return this._Radif;
			}
			set
			{
				if ((this._Radif != value))
				{
					this._Radif = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabagheh", DbType="VarChar(MAX)")]
		public string Tabagheh
		{
			get
			{
				return this._Tabagheh;
			}
			set
			{
				if ((this._Tabagheh != value))
				{
					this._Tabagheh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etesali", DbType="VarChar(MAX)")]
		public string Etesali
		{
			get
			{
				return this._Etesali;
			}
			set
			{
				if ((this._Etesali != value))
				{
					this._Etesali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="VarChar(MAX)")]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX)")]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(MAX)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostEtesaliNo", DbType="VarChar(MAX)")]
		public string PostEtesaliNo
		{
			get
			{
				return this._PostEtesaliNo;
			}
			set
			{
				if ((this._PostEtesaliNo != value))
				{
					this._PostEtesaliNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500)")]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(50)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCM", DbType="VarChar(1)")]
		public string PCM
		{
			get
			{
				return this._PCM;
			}
			set
			{
				if ((this._PCM != value))
				{
					this._PCM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX)")]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType1", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string PersonType1
		{
			get
			{
				return this._PersonType1;
			}
			set
			{
				if ((this._PersonType1 != value))
				{
					this._PersonType1 = value;
				}
			}
		}
	}
	
	public partial class Report_MDFVacateSpecialWireResult
	{
		
		private System.Nullable<long> _PhoneNo;
		
		private string _MDFID;
		
		private string _VerticalRowNo;
		
		private string _VerticalCloumnNo;
		
		private string _BuchtNo;
		
		private string _CabinetNumber;
		
		private string _CabinetInputNumber;
		
		private string _PostNo;
		
		private string _ConnectionNo;
		
		private string _OtherBuchtTypeName;
		
		private string _OtherMDFID;
		
		private string _OtherVerticalRowNo;
		
		private string _OtherVerticalCloumnNo;
		
		private string _OtherBuchtNo;
		
		public Report_MDFVacateSpecialWireResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="BigInt")]
		public System.Nullable<long> PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this._PhoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDFID", DbType="NVarChar(65) NOT NULL", CanBeNull=false)]
		public string MDFID
		{
			get
			{
				return this._MDFID;
			}
			set
			{
				if ((this._MDFID != value))
				{
					this._MDFID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalRowNo", DbType="VarChar(MAX)")]
		public string VerticalRowNo
		{
			get
			{
				return this._VerticalRowNo;
			}
			set
			{
				if ((this._VerticalRowNo != value))
				{
					this._VerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalCloumnNo", DbType="VarChar(MAX)")]
		public string VerticalCloumnNo
		{
			get
			{
				return this._VerticalCloumnNo;
			}
			set
			{
				if ((this._VerticalCloumnNo != value))
				{
					this._VerticalCloumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuchtNo", DbType="VarChar(MAX)")]
		public string BuchtNo
		{
			get
			{
				return this._BuchtNo;
			}
			set
			{
				if ((this._BuchtNo != value))
				{
					this._BuchtNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNumber", DbType="VarChar(MAX)")]
		public string CabinetNumber
		{
			get
			{
				return this._CabinetNumber;
			}
			set
			{
				if ((this._CabinetNumber != value))
				{
					this._CabinetNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetInputNumber", DbType="VarChar(MAX)")]
		public string CabinetInputNumber
		{
			get
			{
				return this._CabinetInputNumber;
			}
			set
			{
				if ((this._CabinetInputNumber != value))
				{
					this._CabinetInputNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostNo", DbType="VarChar(MAX)")]
		public string PostNo
		{
			get
			{
				return this._PostNo;
			}
			set
			{
				if ((this._PostNo != value))
				{
					this._PostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionNo", DbType="VarChar(MAX)")]
		public string ConnectionNo
		{
			get
			{
				return this._ConnectionNo;
			}
			set
			{
				if ((this._ConnectionNo != value))
				{
					this._ConnectionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtTypeName", DbType="NVarChar(50)")]
		public string OtherBuchtTypeName
		{
			get
			{
				return this._OtherBuchtTypeName;
			}
			set
			{
				if ((this._OtherBuchtTypeName != value))
				{
					this._OtherBuchtTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherMDFID", DbType="NVarChar(65) NOT NULL", CanBeNull=false)]
		public string OtherMDFID
		{
			get
			{
				return this._OtherMDFID;
			}
			set
			{
				if ((this._OtherMDFID != value))
				{
					this._OtherMDFID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherVerticalRowNo", DbType="VarChar(MAX)")]
		public string OtherVerticalRowNo
		{
			get
			{
				return this._OtherVerticalRowNo;
			}
			set
			{
				if ((this._OtherVerticalRowNo != value))
				{
					this._OtherVerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherVerticalCloumnNo", DbType="VarChar(MAX)")]
		public string OtherVerticalCloumnNo
		{
			get
			{
				return this._OtherVerticalCloumnNo;
			}
			set
			{
				if ((this._OtherVerticalCloumnNo != value))
				{
					this._OtherVerticalCloumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtNo", DbType="VarChar(MAX)")]
		public string OtherBuchtNo
		{
			get
			{
				return this._OtherBuchtNo;
			}
			set
			{
				if ((this._OtherBuchtNo != value))
				{
					this._OtherBuchtNo = value;
				}
			}
		}
	}
	
	public partial class uspReportTranslationOpticalCabinetToNormalRequestResult
	{
		
		private long _RequestId;
		
		private string _CityName;
		
		private string _CenterName;
		
		private System.DateTime _RequestDate;
		
		private long _OldTelephone;
		
		private long _NewTelephone;
		
		private string _FirstNameOrTitle;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private string _InstallAddress;
		
		private string _InstallPostalCode;
		
		private string _CorrespondencePostalCode;
		
		private string _CorrespondenceAddress;
		
		private int _OldCabinetNumber;
		
		private int _OldInputNumber;
		
		private int _OldPostNumber;
		
		private int _OldConnectionNo;
		
		private int _NewCabinetNumber;
		
		private int _NewInputNumber;
		
		private int _NewPostNumber;
		
		private int _NewConnectionNo;
		
		private int _OldMdfNumber;
		
		private int _OldVerticalColumnNo;
		
		private int _OldVerticalRowNo;
		
		private System.Nullable<long> _OldBuchtNo;
		
		private int _NewMdfNumber;
		
		private int _NewVerticalCloumnNo;
		
		private int _NewVerticalRowNo;
		
		private System.Nullable<long> _NewBuchtNo;
		
		public uspReportTranslationOpticalCabinetToNormalRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="BigInt NOT NULL")]
		public long RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this._RequestId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CenterName
		{
			get
			{
				return this._CenterName;
			}
			set
			{
				if ((this._CenterName != value))
				{
					this._CenterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldTelephone", DbType="BigInt NOT NULL")]
		public long OldTelephone
		{
			get
			{
				return this._OldTelephone;
			}
			set
			{
				if ((this._OldTelephone != value))
				{
					this._OldTelephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTelephone", DbType="BigInt NOT NULL")]
		public long NewTelephone
		{
			get
			{
				return this._NewTelephone;
			}
			set
			{
				if ((this._NewTelephone != value))
				{
					this._NewTelephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameOrTitle", DbType="NVarChar(50)")]
		public string FirstNameOrTitle
		{
			get
			{
				return this._FirstNameOrTitle;
			}
			set
			{
				if ((this._FirstNameOrTitle != value))
				{
					this._FirstNameOrTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InstallAddress
		{
			get
			{
				return this._InstallAddress;
			}
			set
			{
				if ((this._InstallAddress != value))
				{
					this._InstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallPostalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string InstallPostalCode
		{
			get
			{
				return this._InstallPostalCode;
			}
			set
			{
				if ((this._InstallPostalCode != value))
				{
					this._InstallPostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondencePostalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CorrespondencePostalCode
		{
			get
			{
				return this._CorrespondencePostalCode;
			}
			set
			{
				if ((this._CorrespondencePostalCode != value))
				{
					this._CorrespondencePostalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondenceAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorrespondenceAddress
		{
			get
			{
				return this._CorrespondenceAddress;
			}
			set
			{
				if ((this._CorrespondenceAddress != value))
				{
					this._CorrespondenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCabinetNumber", DbType="Int NOT NULL")]
		public int OldCabinetNumber
		{
			get
			{
				return this._OldCabinetNumber;
			}
			set
			{
				if ((this._OldCabinetNumber != value))
				{
					this._OldCabinetNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInputNumber", DbType="Int NOT NULL")]
		public int OldInputNumber
		{
			get
			{
				return this._OldInputNumber;
			}
			set
			{
				if ((this._OldInputNumber != value))
				{
					this._OldInputNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPostNumber", DbType="Int NOT NULL")]
		public int OldPostNumber
		{
			get
			{
				return this._OldPostNumber;
			}
			set
			{
				if ((this._OldPostNumber != value))
				{
					this._OldPostNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldConnectionNo", DbType="Int NOT NULL")]
		public int OldConnectionNo
		{
			get
			{
				return this._OldConnectionNo;
			}
			set
			{
				if ((this._OldConnectionNo != value))
				{
					this._OldConnectionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCabinetNumber", DbType="Int NOT NULL")]
		public int NewCabinetNumber
		{
			get
			{
				return this._NewCabinetNumber;
			}
			set
			{
				if ((this._NewCabinetNumber != value))
				{
					this._NewCabinetNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInputNumber", DbType="Int NOT NULL")]
		public int NewInputNumber
		{
			get
			{
				return this._NewInputNumber;
			}
			set
			{
				if ((this._NewInputNumber != value))
				{
					this._NewInputNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPostNumber", DbType="Int NOT NULL")]
		public int NewPostNumber
		{
			get
			{
				return this._NewPostNumber;
			}
			set
			{
				if ((this._NewPostNumber != value))
				{
					this._NewPostNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewConnectionNo", DbType="Int NOT NULL")]
		public int NewConnectionNo
		{
			get
			{
				return this._NewConnectionNo;
			}
			set
			{
				if ((this._NewConnectionNo != value))
				{
					this._NewConnectionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMdfNumber", DbType="Int NOT NULL")]
		public int OldMdfNumber
		{
			get
			{
				return this._OldMdfNumber;
			}
			set
			{
				if ((this._OldMdfNumber != value))
				{
					this._OldMdfNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldVerticalColumnNo", DbType="Int NOT NULL")]
		public int OldVerticalColumnNo
		{
			get
			{
				return this._OldVerticalColumnNo;
			}
			set
			{
				if ((this._OldVerticalColumnNo != value))
				{
					this._OldVerticalColumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldVerticalRowNo", DbType="Int NOT NULL")]
		public int OldVerticalRowNo
		{
			get
			{
				return this._OldVerticalRowNo;
			}
			set
			{
				if ((this._OldVerticalRowNo != value))
				{
					this._OldVerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBuchtNo", DbType="BigInt")]
		public System.Nullable<long> OldBuchtNo
		{
			get
			{
				return this._OldBuchtNo;
			}
			set
			{
				if ((this._OldBuchtNo != value))
				{
					this._OldBuchtNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMdfNumber", DbType="Int NOT NULL")]
		public int NewMdfNumber
		{
			get
			{
				return this._NewMdfNumber;
			}
			set
			{
				if ((this._NewMdfNumber != value))
				{
					this._NewMdfNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewVerticalCloumnNo", DbType="Int NOT NULL")]
		public int NewVerticalCloumnNo
		{
			get
			{
				return this._NewVerticalCloumnNo;
			}
			set
			{
				if ((this._NewVerticalCloumnNo != value))
				{
					this._NewVerticalCloumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewVerticalRowNo", DbType="Int NOT NULL")]
		public int NewVerticalRowNo
		{
			get
			{
				return this._NewVerticalRowNo;
			}
			set
			{
				if ((this._NewVerticalRowNo != value))
				{
					this._NewVerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewBuchtNo", DbType="BigInt")]
		public System.Nullable<long> NewBuchtNo
		{
			get
			{
				return this._NewBuchtNo;
			}
			set
			{
				if ((this._NewBuchtNo != value))
				{
					this._NewBuchtNo = value;
				}
			}
		}
	}
	
	public partial class Report_ChangeLocationMDFSpecialWireResult
	{
		
		private System.Nullable<int> _OLDOtherVerticalCloumnNo;
		
		private System.Nullable<int> _OLDOtherVerticalRowNo;
		
		private System.Nullable<long> _OLDOtherBuchtNo;
		
		private System.Nullable<int> _NEWOtherVerticalCloumnNo;
		
		private System.Nullable<int> _NEWOtherVerticalRowNo;
		
		private System.Nullable<long> _NEWOtherBuchtNo;
		
		private System.Nullable<long> _PhoneNo;
		
		private string _NEWMDFID;
		
		private System.Nullable<int> _NEWVerticalRowNo;
		
		private System.Nullable<int> _NEWVerticalCloumnNo;
		
		private System.Nullable<long> _NEWBuchtNo;
		
		private System.Nullable<int> _NEWCabinetNumber;
		
		private System.Nullable<int> _NEWCabinetInputNumber;
		
		private System.Nullable<int> _NEWPostNo;
		
		private System.Nullable<int> _NEWConnectionNo;
		
		private string _OtherBuchtTypeName;
		
		private string _OLDMDFID;
		
		private System.Nullable<int> _OLDVerticalRowNo;
		
		private System.Nullable<int> _OLDVerticalCloumnNo;
		
		private System.Nullable<long> _OLDBuchtNo;
		
		private System.Nullable<int> _OLDCabinetNumber;
		
		private System.Nullable<int> _OLDCabinetInputNumber;
		
		private System.Nullable<int> _OLDPostNo;
		
		private System.Nullable<int> _OLDConnectionNo;
		
		private string _OldOtherBuchtTypeName;
		
		private string _FullName;
		
		private string _PersonType;
		
		private string _NationalCodeOrRecordNo;
		
		private string _Gender;
		
		private string _UrgentTelNo;
		
		public Report_ChangeLocationMDFSpecialWireResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDOtherVerticalCloumnNo", DbType="Int")]
		public System.Nullable<int> OLDOtherVerticalCloumnNo
		{
			get
			{
				return this._OLDOtherVerticalCloumnNo;
			}
			set
			{
				if ((this._OLDOtherVerticalCloumnNo != value))
				{
					this._OLDOtherVerticalCloumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDOtherVerticalRowNo", DbType="Int")]
		public System.Nullable<int> OLDOtherVerticalRowNo
		{
			get
			{
				return this._OLDOtherVerticalRowNo;
			}
			set
			{
				if ((this._OLDOtherVerticalRowNo != value))
				{
					this._OLDOtherVerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDOtherBuchtNo", DbType="BigInt")]
		public System.Nullable<long> OLDOtherBuchtNo
		{
			get
			{
				return this._OLDOtherBuchtNo;
			}
			set
			{
				if ((this._OLDOtherBuchtNo != value))
				{
					this._OLDOtherBuchtNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWOtherVerticalCloumnNo", DbType="Int")]
		public System.Nullable<int> NEWOtherVerticalCloumnNo
		{
			get
			{
				return this._NEWOtherVerticalCloumnNo;
			}
			set
			{
				if ((this._NEWOtherVerticalCloumnNo != value))
				{
					this._NEWOtherVerticalCloumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWOtherVerticalRowNo", DbType="Int")]
		public System.Nullable<int> NEWOtherVerticalRowNo
		{
			get
			{
				return this._NEWOtherVerticalRowNo;
			}
			set
			{
				if ((this._NEWOtherVerticalRowNo != value))
				{
					this._NEWOtherVerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWOtherBuchtNo", DbType="BigInt")]
		public System.Nullable<long> NEWOtherBuchtNo
		{
			get
			{
				return this._NEWOtherBuchtNo;
			}
			set
			{
				if ((this._NEWOtherBuchtNo != value))
				{
					this._NEWOtherBuchtNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="BigInt")]
		public System.Nullable<long> PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this._PhoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWMDFID", DbType="NVarChar(65) NOT NULL", CanBeNull=false)]
		public string NEWMDFID
		{
			get
			{
				return this._NEWMDFID;
			}
			set
			{
				if ((this._NEWMDFID != value))
				{
					this._NEWMDFID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWVerticalRowNo", DbType="Int")]
		public System.Nullable<int> NEWVerticalRowNo
		{
			get
			{
				return this._NEWVerticalRowNo;
			}
			set
			{
				if ((this._NEWVerticalRowNo != value))
				{
					this._NEWVerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWVerticalCloumnNo", DbType="Int")]
		public System.Nullable<int> NEWVerticalCloumnNo
		{
			get
			{
				return this._NEWVerticalCloumnNo;
			}
			set
			{
				if ((this._NEWVerticalCloumnNo != value))
				{
					this._NEWVerticalCloumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWBuchtNo", DbType="BigInt")]
		public System.Nullable<long> NEWBuchtNo
		{
			get
			{
				return this._NEWBuchtNo;
			}
			set
			{
				if ((this._NEWBuchtNo != value))
				{
					this._NEWBuchtNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWCabinetNumber", DbType="Int")]
		public System.Nullable<int> NEWCabinetNumber
		{
			get
			{
				return this._NEWCabinetNumber;
			}
			set
			{
				if ((this._NEWCabinetNumber != value))
				{
					this._NEWCabinetNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWCabinetInputNumber", DbType="Int")]
		public System.Nullable<int> NEWCabinetInputNumber
		{
			get
			{
				return this._NEWCabinetInputNumber;
			}
			set
			{
				if ((this._NEWCabinetInputNumber != value))
				{
					this._NEWCabinetInputNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWPostNo", DbType="Int")]
		public System.Nullable<int> NEWPostNo
		{
			get
			{
				return this._NEWPostNo;
			}
			set
			{
				if ((this._NEWPostNo != value))
				{
					this._NEWPostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWConnectionNo", DbType="Int")]
		public System.Nullable<int> NEWConnectionNo
		{
			get
			{
				return this._NEWConnectionNo;
			}
			set
			{
				if ((this._NEWConnectionNo != value))
				{
					this._NEWConnectionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBuchtTypeName", DbType="NVarChar(50)")]
		public string OtherBuchtTypeName
		{
			get
			{
				return this._OtherBuchtTypeName;
			}
			set
			{
				if ((this._OtherBuchtTypeName != value))
				{
					this._OtherBuchtTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDMDFID", DbType="NVarChar(65) NOT NULL", CanBeNull=false)]
		public string OLDMDFID
		{
			get
			{
				return this._OLDMDFID;
			}
			set
			{
				if ((this._OLDMDFID != value))
				{
					this._OLDMDFID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDVerticalRowNo", DbType="Int")]
		public System.Nullable<int> OLDVerticalRowNo
		{
			get
			{
				return this._OLDVerticalRowNo;
			}
			set
			{
				if ((this._OLDVerticalRowNo != value))
				{
					this._OLDVerticalRowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDVerticalCloumnNo", DbType="Int")]
		public System.Nullable<int> OLDVerticalCloumnNo
		{
			get
			{
				return this._OLDVerticalCloumnNo;
			}
			set
			{
				if ((this._OLDVerticalCloumnNo != value))
				{
					this._OLDVerticalCloumnNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDBuchtNo", DbType="BigInt")]
		public System.Nullable<long> OLDBuchtNo
		{
			get
			{
				return this._OLDBuchtNo;
			}
			set
			{
				if ((this._OLDBuchtNo != value))
				{
					this._OLDBuchtNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDCabinetNumber", DbType="Int")]
		public System.Nullable<int> OLDCabinetNumber
		{
			get
			{
				return this._OLDCabinetNumber;
			}
			set
			{
				if ((this._OLDCabinetNumber != value))
				{
					this._OLDCabinetNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDCabinetInputNumber", DbType="Int")]
		public System.Nullable<int> OLDCabinetInputNumber
		{
			get
			{
				return this._OLDCabinetInputNumber;
			}
			set
			{
				if ((this._OLDCabinetInputNumber != value))
				{
					this._OLDCabinetInputNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDPostNo", DbType="Int")]
		public System.Nullable<int> OLDPostNo
		{
			get
			{
				return this._OLDPostNo;
			}
			set
			{
				if ((this._OLDPostNo != value))
				{
					this._OLDPostNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDConnectionNo", DbType="Int")]
		public System.Nullable<int> OLDConnectionNo
		{
			get
			{
				return this._OLDConnectionNo;
			}
			set
			{
				if ((this._OLDConnectionNo != value))
				{
					this._OLDConnectionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldOtherBuchtTypeName", DbType="NVarChar(50)")]
		public string OldOtherBuchtTypeName
		{
			get
			{
				return this._OldOtherBuchtTypeName;
			}
			set
			{
				if ((this._OldOtherBuchtTypeName != value))
				{
					this._OldOtherBuchtTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this._PersonType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCodeOrRecordNo", DbType="NVarChar(50)")]
		public string NationalCodeOrRecordNo
		{
			get
			{
				return this._NationalCodeOrRecordNo;
			}
			set
			{
				if ((this._NationalCodeOrRecordNo != value))
				{
					this._NationalCodeOrRecordNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrgentTelNo", DbType="NVarChar(20)")]
		public string UrgentTelNo
		{
			get
			{
				return this._UrgentTelNo;
			}
			set
			{
				if ((this._UrgentTelNo != value))
				{
					this._UrgentTelNo = value;
				}
			}
		}
	}
	
	public partial class Report_ChangeLocationSpecialWireResult
	{
		
		private string _FullCustomerName;
		
		private long _RequestNo;
		
		private string _InsertDate;
		
		private System.Nullable<long> _TelephoneNo;
		
		private string _NewInstallAddress;
		
		private string _OLDInstallAddress;
		
		public Report_ChangeLocationSpecialWireResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullCustomerName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string FullCustomerName
		{
			get
			{
				return this._FullCustomerName;
			}
			set
			{
				if ((this._FullCustomerName != value))
				{
					this._FullCustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNo", DbType="BigInt NOT NULL")]
		public long RequestNo
		{
			get
			{
				return this._RequestNo;
			}
			set
			{
				if ((this._RequestNo != value))
				{
					this._RequestNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="VarChar(10)")]
		public string InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="BigInt")]
		public System.Nullable<long> TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this._TelephoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInstallAddress", DbType="NVarChar(MAX)")]
		public string NewInstallAddress
		{
			get
			{
				return this._NewInstallAddress;
			}
			set
			{
				if ((this._NewInstallAddress != value))
				{
					this._NewInstallAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLDInstallAddress", DbType="NVarChar(MAX)")]
		public string OLDInstallAddress
		{
			get
			{
				return this._OLDInstallAddress;
			}
			set
			{
				if ((this._OLDInstallAddress != value))
				{
					this._OLDInstallAddress = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
