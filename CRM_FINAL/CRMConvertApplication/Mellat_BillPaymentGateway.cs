//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace Mellat_BillPaymentGateway
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BillPaymentGatewayImplServiceSoapBinding", Namespace = "https://pgws.bpm.bankmellat.ir/bpgwchannel/services")]

    public partial class BillPaymentGatewayImplService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback bpBillPayRequestOperationCompleted;

        private System.Threading.SendOrPostCallback bpBillInquiryRequestOperationCompleted;

        /// <remarks/>
        public BillPaymentGatewayImplService()
        {
            this.Url = "https://pgws.bpm.bankmellat.ir/bpgwchannel/services/bill";
        }

        /// <remarks/>
        public event bpBillPayRequestCompletedEventHandler bpBillPayRequestCompleted;

        /// <remarks/>
        public event bpBillInquiryRequestCompletedEventHandler bpBillInquiryRequestCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.bill.sw.bps.com/", ResponseNamespace = "http://service.bill.sw.bps.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpBillPayRequest([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long billId, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long paymentId, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string localDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string localTime, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string email, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string callBackUrl)
        {
            object[] results = this.Invoke("bpBillPayRequest", new object[] {
                    terminalId,
                    userName,
                    userPassword,
                    billId,
                    paymentId,
                    localDate,
                    localTime,
                    email,
                    callBackUrl});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginbpBillPayRequest(long terminalId, string userName, string userPassword, long billId, long paymentId, string localDate, string localTime, string email, string callBackUrl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("bpBillPayRequest", new object[] {
                    terminalId,
                    userName,
                    userPassword,
                    billId,
                    paymentId,
                    localDate,
                    localTime,
                    email,
                    callBackUrl}, callback, asyncState);
        }

        /// <remarks/>
        public string EndbpBillPayRequest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void bpBillPayRequestAsync(long terminalId, string userName, string userPassword, long billId, long paymentId, string localDate, string localTime, string email, string callBackUrl)
        {
            this.bpBillPayRequestAsync(terminalId, userName, userPassword, billId, paymentId, localDate, localTime, email, callBackUrl, null);
        }

        /// <remarks/>
        public void bpBillPayRequestAsync(long terminalId, string userName, string userPassword, long billId, long paymentId, string localDate, string localTime, string email, string callBackUrl, object userState)
        {
            if ((this.bpBillPayRequestOperationCompleted == null))
            {
                this.bpBillPayRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpBillPayRequestOperationCompleted);
            }
            this.InvokeAsync("bpBillPayRequest", new object[] {
                    terminalId,
                    userName,
                    userPassword,
                    billId,
                    paymentId,
                    localDate,
                    localTime,
                    email,
                    callBackUrl}, this.bpBillPayRequestOperationCompleted, userState);
        }

        private void OnbpBillPayRequestOperationCompleted(object arg)
        {
            if ((this.bpBillPayRequestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpBillPayRequestCompleted(this, new bpBillPayRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.bill.sw.bps.com/", ResponseNamespace = "http://service.bill.sw.bps.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpBillInquiryRequest([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long billId, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long paymentId, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string localDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string localTime, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string email)
        {
            object[] results = this.Invoke("bpBillInquiryRequest", new object[] {
                    terminalId,
                    userName,
                    userPassword,
                    billId,
                    paymentId,
                    localDate,
                    localTime,
                    email});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginbpBillInquiryRequest(long terminalId, string userName, string userPassword, long billId, long paymentId, string localDate, string localTime, string email, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("bpBillInquiryRequest", new object[] {
                    terminalId,
                    userName,
                    userPassword,
                    billId,
                    paymentId,
                    localDate,
                    localTime,
                    email}, callback, asyncState);
        }

        /// <remarks/>
        public string EndbpBillInquiryRequest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void bpBillInquiryRequestAsync(long terminalId, string userName, string userPassword, long billId, long paymentId, string localDate, string localTime, string email)
        {
            this.bpBillInquiryRequestAsync(terminalId, userName, userPassword, billId, paymentId, localDate, localTime, email, null);
        }

        /// <remarks/>
        public void bpBillInquiryRequestAsync(long terminalId, string userName, string userPassword, long billId, long paymentId, string localDate, string localTime, string email, object userState)
        {
            if ((this.bpBillInquiryRequestOperationCompleted == null))
            {
                this.bpBillInquiryRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpBillInquiryRequestOperationCompleted);
            }
            this.InvokeAsync("bpBillInquiryRequest", new object[] {
                    terminalId,
                    userName,
                    userPassword,
                    billId,
                    paymentId,
                    localDate,
                    localTime,
                    email}, this.bpBillInquiryRequestOperationCompleted, userState);
        }

        private void OnbpBillInquiryRequestOperationCompleted(object arg)
        {
            if ((this.bpBillInquiryRequestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpBillInquiryRequestCompleted(this, new bpBillInquiryRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void bpBillPayRequestCompletedEventHandler(object sender, bpBillPayRequestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpBillPayRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal bpBillPayRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void bpBillInquiryRequestCompletedEventHandler(object sender, bpBillInquiryRequestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpBillInquiryRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal bpBillInquiryRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
